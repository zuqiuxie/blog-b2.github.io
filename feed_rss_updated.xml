<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    
    <title>Bin&#39;s Wiki</title>
    <description>读万卷书，行万里路，做个有趣的人</description>
    <link>https://b2.wangbin.org/</link>
    <atom:link href="https://b2.wangbin.org/feed_rss_updated.xml" rel="self" type="application/rss+xml" />

    
    
    <docs>https://github.com/linyuxuanlin/Wiki_MkDocs</docs>
    <language>en-</language>

    
    <pubDate>Mon, 29 May 2023 07:40:25 -0000</pubDate>
    <lastBuildDate>Mon, 29 May 2023 07:40:25 -0000</lastBuildDate>
    <ttl>1440</ttl>

    
    <generator>MkDocs RSS plugin - v1.7.0</generator>

    
    
    <image>
      <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url>
      <title>Bin's Wiki</title>
      <link>https://b2.wangbin.org/</link>
    </image>
    

    
    
    <item>
      <title>Home</title>
      
      
      
      
      <description>&lt;h1&gt;Power&#39;s Wiki&lt;/h1&gt;
&lt;!--  一个不会讲故事的攻城狮，算不上一个很酷的产品汪~--&gt;

&lt;p&gt;&lt;a href=&#34;https://vercel.com/linyuxuanlin/wiki-mkdocs/deployments&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/github/deployments/linyuxuanlin/Wiki_Docusaurus/Production?label=Build&amp;amp;style=flat-square&#34;&gt;{ loading=lazy }&lt;/a&gt;
&lt;a href=&#34;https://github.com/zuqiuxie/blog-b2.github.io&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/github/last-commit/linyuxuanlin/Wiki_Docusaurus?color=FCD734&amp;amp;label=Last%20commit&amp;amp;style=flat-square&#34;&gt;{ loading=lazy }&lt;/a&gt;
&lt;a href=&#34;Contact-and-Subscribe&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/Contact%20%26%20Subscribe-me-34ABE0?&amp;amp;style=flat-square&#34;&gt;{ loading=lazy }&lt;/a&gt;&lt;/p&gt;
&lt;!--
[![badge](https://img.shields.io/badge/dynamic/json?label=GitHub&amp;query=%24.data.totalSubs&amp;url=https%3A%2F%2Fapi.spencerwoo.com%2Fsubstats%2F%3Fsource%3Dgithub%26queryKey%3Dlinyuxuanlin&amp;labelColor=555555&amp;color=282c34&amp;longCache=true?&amp;style=for-the-badge){ loading=lazy }](https://github.com/linyuxuanlin)
[![badge](https://img.shields.io/badge/dynamic/json?color=282c34&amp;labelColor=0084ff&amp;label=ZHIHU&amp;query=%24.data.totalSubs&amp;url=https%3A%2F%2Fapi.spencerwoo.com%2Fsubstats%2F%3Fsource%3Dzhihu%26queryKey%3Dlinyuxuanlin&amp;longCache=true?&amp;style=for-the-badge){ loading=lazy }](https://www.zhihu.com/people/linyuxuanlin)
[![badge](https://img.shields.io/badge/dynamic/json?label=SSPAI&amp;query=%24.data.totalSubs&amp;url=https%3A%2F%2Fapi.spencerwoo.com%2Fsubstats%2F%3Fsource%3Dsspai%26queryKey%3Dpower&amp;color=282c34&amp;labelColor=d71a1b&amp;longCache=true?&amp;style=for-the-badge){ loading=lazy }](https://sspai.com/u/power/)
[![badge](https://img.shields.io/badge/dynamic/json?labelColor=FE7398&amp;label=BILIBILI&amp;query=%24.data.totalSubs&amp;url=https%3A%2F%2Fapi.spencerwoo.com%2Fsubstats%2F%3Fsource%3Dbilibili%26queryKey%3D349536948&amp;color=282c34&amp;longCache=true?&amp;style=for-the-badge){ loading=lazy }](https://space.bilibili.com/349536948)
--&gt;

&lt;blockquote&gt;
&lt;p&gt;读万卷书，行万里路，做个有趣的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hi there~ 欢迎来到我的知识库。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki-power.com/&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/知识库-Wiki-34ABE0?&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://nav.wiki-power.com/&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/友链%20%26%20导航站-Nav-yellow?&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://digest.wiki-power.com/&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/书摘-Digest-green?&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://memos.wiki-power.com/&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/只言片语-Memos-orange?&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://works.wiki-power.com/&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/硬件作品集-Works-a5b0ed?&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为了避免遗忘、便于分享，我在这里收录知识。
请随意浏览～&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/信号完整性-基础概念&#34;&gt;硬件 &amp;amp; 半导体&lt;/a&gt;{ .md-button }
&lt;a href=&#34;/HAL库开发笔记-串口通信&#34;&gt;嵌入式 &amp;amp; 软件开发&lt;/a&gt;{ .md-button }
&lt;a href=&#34;/搭建属于自己的HomeLab&#34;&gt;效率 &amp;amp; 生活&lt;/a&gt;{ .md-button }&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/</guid>
      
    </item>
    
    <item>
      <title>Contact and Subscribe</title>
      
      
      
      
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/linyuxuanlin&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/GitHub-282c34?&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;mailto:admin@wangbin.org&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/Email-f48222?&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;WeChat&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/WeChat-07C160?&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.zhihu.com/people/linyuxuanlin&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/zhihu-0084ff?&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://sspai.com/u/power/&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/SSPAI-C23133?&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://space.bilibili.com/349536948&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/Bilibili-FE7398?&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/sitemap.xml&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/Sitemap-green?&amp;amp;style=flat-square&#34;&gt;{ loading=lazy }&lt;/a&gt;
&lt;a href=&#34;/feed_rss_created.xml&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/RSS-post%20created-pcf?&amp;amp;style=flat-square&#34;&gt;{ loading=lazy }&lt;/a&gt;
&lt;a href=&#34;/feed_rss_updated.xml&#34;&gt;&lt;img alt=&#34;badge&#34; src=&#34;https://img.shields.io/badge/RSS-post%20updated-yellowgreen?&amp;amp;style=flat-square&#34;&gt;{ loading=lazy }&lt;/a&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/Contact-and-Subscribe/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/Contact-and-Subscribe/</guid>
      
    </item>
    
    <item>
      <title>WeChat</title>
      
      
      
      
      <description>&lt;p&gt;My WeChat： dz303241&lt;/p&gt;
&lt;iframe src=&#34;https://www.google.com/maps/d/u/0/embed?mid=1SsA3WcXnJ6hcddVWhedelVBhgeXggbI&amp;ehbc=2E312F&#34; width=&#34;640&#34; height=&#34;480&#34;&gt;&lt;/iframe&gt;</description>
      <link>https://b2.wangbin.org/WeChat/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/WeChat/</guid>
      
    </item>
    
    <item>
      <title>DCVI Alarms</title>
      
      
      
      
      <description>&lt;h2&gt;Mode (0010)&lt;/h2&gt;
&lt;p&gt;The V/I is programmed to force voltage mode, and reached the current clamp; or is programmed to force current mode, and reached the voltage clamp.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;In force voltage mode&lt;/strong&gt;: check if circuit shorted or has a capacitive load.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In force voltage mode&lt;/strong&gt;:  check if circuit opend.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Capture (0016)&lt;/h2&gt;
&lt;p&gt;An alarm occurred during a capture.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Check the operation related to the capture.&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/DCVI_Alarms/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/DCVI_Alarms/</guid>
      
    </item>
    
    <item>
      <title>Pattern Syntax Notes 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;Meanings of Pattern Data Characters&lt;/h2&gt;
&lt;p&gt;Input Drive:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: Drive low.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt;: Drive high.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt;: High voltage (if supported).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt;: Drive ADS (Alternate Data Source) (retrieve data from the ADS).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;: Drive inverse ADS, (retrieve data from the ADS and invert).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Output Compare:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt;: Expect low.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H&lt;/code&gt;: Expect high.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt;: Expect midband.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;: Expect valid.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt;: Mask.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;W&lt;/code&gt;: Window strobe continue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;E&lt;/code&gt;: Expect ADS (read expect data from the ADS).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt;: Expect inverse ADS (read expect data from the ADS and invert).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;: Repeat previous state.&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/Pattern_Syntax_Notes/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/Pattern_Syntax_Notes/</guid>
      
    </item>
    
    <item>
      <title>VBT Syntax - TheExec - Flow</title>
      
      
      
      
      <description>&lt;p&gt;&lt;code&gt;vb
TheExec.Flow&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;TestLimit&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vb
TheExec.Flow.TestLimit(resultVal, lowVal, hiVal, lowCompareSign,
highCompareSign, scaletype, unit, formatStr, TName, compareMode, pinName,
forceVal, forceunit, customUnit, customForceunit, ForceResults, TNum)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Parameters most used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;resultVal&lt;/strong&gt; (required): Which the result value will been written.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lowVal&lt;/strong&gt;, &lt;strong&gt;hiVal&lt;/strong&gt; : The low and high limits. Default is lowVal &amp;lt;= resultVal &amp;lt;= hiVal.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unit&lt;/strong&gt;: The unit of measurement&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unitAmp&lt;/code&gt; &lt;code&gt;unitVolt&lt;/code&gt; &lt;code&gt;unitDb&lt;/code&gt; &lt;code&gt;unitHz&lt;/code&gt; &lt;code&gt;unitTime&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TName&lt;/strong&gt;: A test name to be datalogged. If left blank, test instance&#39;s name will be used.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pinName&lt;/strong&gt;: The pin name to be datalogged.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;forceVal&lt;/strong&gt;, &lt;strong&gt;forceunit&lt;/strong&gt;: The test condition value and unit.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ForceResults&lt;/strong&gt;: Whether to force a pass or fail or to use the limits specified in a flow table.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For an example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vb
    TheExec.Flow.TestLimit  resultVal:=Vout_Measure, _
                            unit:=unitVolt, _
                            Tname:=&#34;Output_Voltage&#34;, _
                            pinName:=vout_pin, _
                            forceval:=vin_pin_voltage, _
                            forceunit:=unitVolt, _
                            forceresults:=tlForceFlow, _
                            lowval:=VOT_LowLimit, _
                            hival:=VOT_HiLimit&lt;/code&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/VBT_Syntax-TheExec-Flow/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/VBT_Syntax-TheExec-Flow/</guid>
      
    </item>
    
    <item>
      <title>VBT Syntax - TheHdw - DCVI 🚧</title>
      
      
      
      
      <description>&lt;p&gt;&lt;code&gt;vb
TheHdw.DCVI&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Pins&lt;/h2&gt;
&lt;p&gt;```vb
.Pins(PinList)&lt;/p&gt;
&lt;p&gt;&#39; thehdw.DCVI.Pins(vin_pin)
&#39; thehdw.DCVI.Pins(PortA)
```&lt;/p&gt;
&lt;h3&gt;Gate&lt;/h3&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/VBT_Syntax-TheHdw-DCVI/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/VBT_Syntax-TheHdw-DCVI/</guid>
      
    </item>
    
    <item>
      <title>VBT Syntax - TheHdw 🚧</title>
      
      
      
      
      <description>&lt;p&gt;&lt;strong&gt;TheHdw&lt;/strong&gt; is an object to accesses properties and methods relating to test system hardware.&lt;/p&gt;
&lt;h2&gt;TheHdw.DCVI&lt;/h2&gt;
&lt;h3&gt;Pins&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vb
TheHdw.DCVI.Pins(PinList)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;TheHdw.PPMU&lt;/h2&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;TheHdw.Digital&lt;/h2&gt;
&lt;h3&gt;ApplyLevelsTiming&lt;/h3&gt;
&lt;p&gt;To load the level and timing data.&lt;/p&gt;
&lt;h4&gt;Usage&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;VB
TheHdw.Digital.ApplyLevelsTiming(ConnectAllPins, LoadLevels, LoadTiming, RelayMode, InitPinsHi, InitPinsLo, InitPinsHiZ, PinLevelsSheet, DCCategory, DCSelector, TimeSetSheet, ACCategory, ACSelector, EdgeSetSheet)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ConnectAllPins&lt;/strong&gt;: Optional Boolean, default as &lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;True&lt;/code&gt;: Connect all device pins.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;False&lt;/code&gt;: Do not connect.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LoadLevels&lt;/strong&gt;: Optional Boolean, default as &lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;True&lt;/code&gt;: Load level values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;False&lt;/code&gt;: Do not Load.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LoadTiming&lt;/strong&gt;: Optional Boolean, default as &lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;True&lt;/code&gt;: Load timing values.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;False&lt;/code&gt;: Do not Load.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RelayMode&lt;/strong&gt;: Optional &lt;code&gt;tlRelayMode&lt;/code&gt;, default as &lt;code&gt;tlUnpowered&lt;/code&gt;. Controls the relays&#39; hot switching.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tlPowered&lt;/code&gt;: Hot switching. Not power down the DUT before setting levels and connecting.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tlUnpowered&lt;/code&gt;: Avoid hot switching. Power down the DUT before setting levels and connecting.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;InitPinsHi&lt;/strong&gt;: Optional String. Set the pins start with high driver state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;InitPinsLo&lt;/strong&gt;: Optional String. Set the pins start with low driver state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;InitPinsHiZ&lt;/strong&gt;: Optional String. Set the pins start with impedance driver state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PinLevelsSheet&lt;/strong&gt;: Optional String. A Pin Levels sheet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DCCategory&lt;/strong&gt;: Optional String.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DCSelector&lt;/strong&gt;: Optional String.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TimeSetSheet&lt;/strong&gt;: Optional String.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ACCategory&lt;/strong&gt;: Optional String.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ACSelector&lt;/strong&gt;: Optional String.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EdgeSetSheet&lt;/strong&gt;: Optional String.&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/VBT_Syntax-TheHdw/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Coding%20Syntax/VBT_Syntax-TheHdw/</guid>
      
    </item>
    
    <item>
      <title>ADC - Dynamic Parameters</title>
      
      
      
      
      <description>&lt;h2&gt;Dynamic Parameters&lt;/h2&gt;
&lt;p&gt;ADC&#39;s dynamic parameters mainly contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Signal to Noise Ratio (SNR)&lt;/li&gt;
&lt;li&gt;Total Harmonic Distortion (THD)&lt;/li&gt;
&lt;li&gt;Signal to Noise and Distortion Ratio (SINAD)&lt;/li&gt;
&lt;li&gt;Inter-modulation Error (IM)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Signal to Noise Ratio (SNR)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Signal to Noise Ratio (SNR)&lt;/strong&gt; of an ADC is defined as the ratio of the Measured Signal Power&#39;s RMS (excluding Harmonic Distortion) to the Noise Power&#39;s RMS:&lt;/p&gt;
&lt;p&gt;$$
SNR(dB)=20log(\frac{V_{Signal(RMS)}}{V_{Noise(RMS)}})
$$&lt;/p&gt;
&lt;p&gt;Since SNR is an ratio of power, $20$ in the equation means the square of the ratio of voltage.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009221450.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Although the Harmonic Distortion is not included in the measurement of SNR, but the Quantization, Thermal and other residual noise in converter are included.&lt;/p&gt;
&lt;h3&gt;Total Harmonic Distortion (THD)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Total Harmonic Distortion (THD)&lt;/strong&gt; of an ADC is defined as the ratio of the fundamental to all the harmonic distortion:&lt;/p&gt;
&lt;p&gt;$$
THD(dB)=20log(\frac{\sqrt{V^2_{2(RMS)}+V^2_{3(RMS)}+...+V^2_{n(RMS)}}}{V_{1(RMS)}})
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009225800.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;How to Test Dynamic Parameters&lt;/h2&gt;
&lt;h3&gt;Test System Setup&lt;/h3&gt;
&lt;p&gt;Test system setup for ADC dynamic parameter tests:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009230212.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Resolution of AC SRC should be at least 2 to 4 bits better than DUT.&lt;/p&gt;
&lt;h3&gt;Tests Concept&lt;/h3&gt;
&lt;p&gt;ADC has a theoretical best ever SNR of:&lt;/p&gt;
&lt;p&gt;$$
SNR = (6.02N + 1.76) dB
$$&lt;/p&gt;
&lt;p&gt;Where $N$ is the number of ADC&#39;s bits.&lt;/p&gt;
&lt;p&gt;Procedure of testing the dynamic parameters of an ADC DUT is listed below.&lt;/p&gt;
&lt;h4&gt;1. Make a continuous input signal with the tester for the ADC to convert&lt;/h4&gt;
&lt;p&gt;It is common practice to ensure that the analog/digital clock are referenced to a common master clock, so that the relationship of the clock sources&#39;s frequency is fixed and synchronized, which making test results highly repeatable.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011122459.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;2. Collect a set of samples with the ADC coherently&lt;/h4&gt;
&lt;p&gt;For AC Source:&lt;/p&gt;
&lt;p&gt;$$
\frac{Fs}{Fi}=\frac{Ns}{Ms}
$$&lt;/p&gt;
&lt;p&gt;Where $Fs$ is the samping rate of AC Source, $Fi$ is signal frequency, $Ns$ is the number of samples (does not have to be a 2x number), $Ms$ is the number of integer cycles (does not have to be odd).&lt;/p&gt;
&lt;p&gt;For Digital Capture:&lt;/p&gt;
&lt;p&gt;$$
\frac{Fs(dut)}{Fi}=\frac{Ncap}{Mc}
$$&lt;/p&gt;
&lt;p&gt;Where $Fs(dut)$ is the ADC sampling rate also the Digital Capture&#39;s sample rate, $Fi$ is the signal frequency, $Ncap$ is the number of samples captured (2x number), $Mc$ is the number of integer cycles (odd).&lt;/p&gt;
&lt;h4&gt;3. Send the collected set of time samples to the DSP to perform DFT / FFT analysis&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011140834.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;?&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011140904.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;4. Analyze the frequency bins of interest using equations or tester algorithms for SNR, THD and compare to specification&lt;/h4&gt;
&lt;h4&gt;5. Make a pass / fail decision based on the results&lt;/h4&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The-Fundamentals-of-Mixed-Signal-Testing_Brian-Lowe&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/ADC-Dynamic_Parameters/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/ADC-Dynamic_Parameters/</guid>
      
    </item>
    
    <item>
      <title>ADC - Static Parameters</title>
      
      
      
      
      <description>&lt;p&gt;Analog to Digital Converter (ADC) is a device to converts analog signals into a sequence of digital data.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011141438.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Though ADC&#39;s ideal transfer function should be a straight line, but actually is a uniform staircase, that the number of steps corresponds to the number of digital output codes. Since analog is continuous and digital is discrete, quantization error will be introduced in the procedure.&lt;/p&gt;
&lt;h2&gt;Static Parameters&lt;/h2&gt;
&lt;p&gt;ADC&#39;s static parameters mainly contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LSB Size&lt;/li&gt;
&lt;li&gt;Full Scale Range (FSR)&lt;/li&gt;
&lt;li&gt;Offset Error&lt;/li&gt;
&lt;li&gt;Gain Error&lt;/li&gt;
&lt;li&gt;Differential Non-Linearity Error (DNE or DNL)&lt;/li&gt;
&lt;li&gt;Integral Non-Linearity Error (INE or INL)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;LSB Size&lt;/h3&gt;
&lt;p&gt;The width of one step is defined as 1 &lt;strong&gt;Least Significant Bit (LSB)&lt;/strong&gt;. The resolution of an ADC is normally expressed as number of bits (digital output code). An ADC with an n-bit resolution has $2^n$ possible digital codes ($2^n$ step levels).&lt;/p&gt;
&lt;p&gt;$$
LSB=\frac{V_{FST}-V_{ZST}}{2^{bits}-2}
$$&lt;/p&gt;
&lt;p&gt;For an ideal ADC, LSB represents all of the each code&#39;s width.&lt;/p&gt;
&lt;h3&gt;Full Scale Range (FSR)&lt;/h3&gt;
&lt;p&gt;For example, for a 3 bit converter, there are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 horizontal steps&lt;/li&gt;
&lt;li&gt;7 transitions&lt;/li&gt;
&lt;li&gt;6 steps between 7 transitions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008151344.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Zero Scale Range Transition Voltage ($V_{ZST}$)&lt;/strong&gt;: Voltage of the analog input signal when the first transition is recorded.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full Scale Range Transition Voltage ($V_{FST}$)&lt;/strong&gt;: Voltage of the analog input signal when the last transition is recorded.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full Scale Range (FSR)&lt;/strong&gt;: Maximum extreme of the analog input signal supplied to the ADC. $FSR = (V_{FST}-V_{ZST}) + 2 LSB$, $V_{FSR(refer to VZS)} = (V_{FST}-0.5LSB)-(V_{ZST}-0.5LSB) + 2 LSB$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Offset Error&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Offset Error&lt;/strong&gt; (Zero-Scale Error) is the difference between ideal and actual offset (initial) points. It is measured from the midpoint of the zero step (ideal to actual) for the ADC.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008154521.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;p&gt;$$
V_{ZS}=V_{ZST}-0.5LSB
$$&lt;/p&gt;
&lt;h3&gt;Gain Error&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Gain Error&lt;/strong&gt; is the difference between ideal and actual gain points on the transfer function (after the offset error has been corrected to zero). It is measured from the midpoint of the full step for the ADC.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008155259.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;p&gt;$$
V_{FS}=V_{FST}-0.5LSB+2LSB
$$&lt;/p&gt;
&lt;h3&gt;Differential Non-Linearity Error (DNL)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Differential Non-Linearity Error (DNL)&lt;/strong&gt; is the difference between an actual step width and an ideal step width (1 LSB). It&#39;s a measure of &#34;small-signal&#34; linearity error, and is measured from the difference in the analog input voltage between 2 adjacent transitions and the device&#39;s average LSB.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008160020.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Equations to describe DNL:&lt;/p&gt;
&lt;p&gt;$$
DNL[n]=CodeWidth_n-LSB_{average}
$$&lt;/p&gt;
&lt;p&gt;$$
DNL=(V_{in2}-V_{in1})-LSB_{average}
$$&lt;/p&gt;
&lt;p&gt;another image to decribe DNL:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008161707.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;If DNL exceeds is too large, one or more codes will be missing and never receive an output.&lt;/p&gt;
&lt;h3&gt;Integral Non-Linearity Error (INL)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Integral Non-Linearity Error (INL)&lt;/strong&gt; is the cumulative effect at any given input of all differential non-linearity values. It is a measure of &#34;large-signal&#34; linearity error. INL at any point along the curve is the deviation of the ideal linearity line.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008163705.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The deviations are measured at the transition points from one step to the next for the ADC. INL is the deviation of the values of the actual step function to the ideal straight line function.&lt;/p&gt;
&lt;p&gt;Equations to describe INL:&lt;/p&gt;
&lt;p&gt;$$
INL[n]=INL_{n-1}+{\frac{DNL_{n-1}+DNL_{n}}{2}}
$$&lt;/p&gt;
&lt;p&gt;$$
INL=[(\frac{BinaryCode}{2^{bits}-1})(V_{FS}-V_{ZS})+V_{offset}]-CodeCentor
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008163911.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;How to Test Static Parameters&lt;/h2&gt;
&lt;h3&gt;Test System Setup&lt;/h3&gt;
&lt;p&gt;Test system setup for ADC static parameter tests:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008184721.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Since the ADC voltage-to-code transfer curve is a many-to-one mapping function:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008185819.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We use linear ramp histogram method (code width measurement) practically. The input ramp is slow enough to give a statistically relevant &#34;number of hits per code&#34;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008190154.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Block diagram of signal setup:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008190612.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Tests Concept&lt;/h3&gt;
&lt;p&gt;Procedure of testing the static parameters of an ADC DUT is listed below.&lt;/p&gt;
&lt;h4&gt;1. Make a ramp wave segment for AC SRC&lt;/h4&gt;
&lt;p&gt;The input ramps goes above and below ±Fs to assure that all codes are covered:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008193036.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;2. Take data between the start (min+1, e.g. 0…01) and the end (max-1, e.g. 1…10) of the ramp. That gives $2^n – 2$ codes&#39; worth of data&lt;/h4&gt;
&lt;p&gt;Voltage applied must be wider than the full-scale range to cover all transitions. 16 steps in-between each code transition is shown below:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008194207.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;for the ideal ADC DUT, 16 output codes are appear in the same times:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008194450.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;However, a real device will have a count more than 16 times for wider codes, and less than 16 times for narrower ones (But sum of the total occurrence should be still $2^{bits}$ times of 16):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008194813.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;3. Calculate for DNL for each step&lt;/h4&gt;
&lt;p&gt;$$
DNL[i]=\frac{Hits[i]-\frac{\sum Hits[i]}{2^n-2}}{\frac{\sum Hits[i]}{2^n-2}}
$$&lt;/p&gt;
&lt;p&gt;Where $Hits[i]$ represents the Actual Output Code Count, and $\frac{\sum Hits[i]}{2^n-2}$ represents the Ideal Output Code Count.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008234157.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;For an example historam graph as shown below:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008234921.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;for DNL&lt;a href=&#34;Code 001&#34;&gt;1&lt;/a&gt;,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Actual Output Code Count = 14&lt;/li&gt;
&lt;li&gt;Idea Output Code Count = (14 +18 +15 + 17+ 17 + 15) / (8 -2 ) = 16.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore DNL[1] (Code 001) = (14-16)/16 * LSB =&amp;gt; -0.125 * LSB.&lt;/p&gt;
&lt;h4&gt;4. Get the max and min DNL&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221008235342.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;5. Calculate for INL for each step&lt;/h4&gt;
&lt;p&gt;INL is the cumulative value of the first DNL to the DNL[i] (except zero and full scale DNL):&lt;/p&gt;
&lt;p&gt;$$
INL[i]=DNL[i]+DNL[i-1]+...+DNL[2]+DNL[1]
$$&lt;/p&gt;
&lt;p&gt;Note that $DNL[0]$ is not used,&lt;/p&gt;
&lt;p&gt;$$
INL[0]=INL[FullScale]=0
$$&lt;/p&gt;
&lt;p&gt;For an example graph below,&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009201547.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;$$
INL[1] = DNL[1] = -0.125 * LSB
$$&lt;/p&gt;
&lt;p&gt;$$
INL[2] = DNL[2] + DNL[1] = 0 * LSB
$$&lt;/p&gt;
&lt;p&gt;$$
INL[3] = DNL[3] + DNL[2] + DNL[1] \
INL[3]= 0.0625 * LSB
$$&lt;/p&gt;
&lt;h4&gt;6. Get the max and min INL&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009201838.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The-Fundamentals-of-Mixed-Signal-Testing_Brian-Lowe&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/ADC-Static_Parameters/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/ADC-Static_Parameters/</guid>
      
    </item>
    
    <item>
      <title>Basics of Fourier Transform 🚧</title>
      
      
      
      
      <description>&lt;p&gt;There are several algorithms for transforming data from the time domain to the frequency domain as below.&lt;/p&gt;
&lt;h2&gt;Fourier Series&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Fourier Series&lt;/strong&gt;（傅里叶级数） is summarized as creating a complex waveform by summing pure sine waves with different amplitudes and frequencies, and to decompose a complex signal into a sum of sinusoids of different amplitudes and frequencies.&lt;/p&gt;
&lt;h3&gt;Dirichlet Conditions&lt;/h3&gt;
&lt;p&gt;Dirichlet Conditions specify a set of conditions that must be met before a signal can be decomposed into a Fourier Series:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The signal is a mathematical function, i.e., one and only one y-point corresponds to each x-point.&lt;/li&gt;
&lt;li&gt;The signal is periodic.&lt;/li&gt;
&lt;li&gt;The area bounded by the signal over one period is finite.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Decompose into a Fourier Series&lt;/h3&gt;
&lt;p&gt;A complex signal that meets the Dirichlet Conditions can be represented by a sum of sinusoids:&lt;/p&gt;
&lt;p&gt;$$
f(t)=a_0+A{\sum_{n=1}^\infty[a_n cos(n \omega_1 t+\phi_n)+b_n sin(n \omega_1 t+\phi_n)]}
$$&lt;/p&gt;
&lt;p&gt;where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$a_0$ is the DC component.&lt;/li&gt;
&lt;li&gt;$A$ is an overall scale factor for all harmonic components.&lt;/li&gt;
&lt;li&gt;$\omega_1$ is the frequency of the fundamental.&lt;/li&gt;
&lt;li&gt;$n$ is an integer multiplier of the fundamental frequency for each harmonic term.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This proves that not only can we sum a series of sine and cosine waves to create any other wave, but also that the frequencies of the sinusoids are integer multiples (harmonics) of a single fundamental frequency.&lt;/p&gt;
&lt;h2&gt;Discrete Fourier Transform (DFT)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Discrete Fourier Transform (DFT)&lt;/strong&gt;: takes amplitude versus time data, and then translates to amplitude versus frequency data.&lt;/p&gt;
&lt;p&gt;Mathematically, the algorithm is a series summation of the product of each sample times a complex number:&lt;/p&gt;
&lt;p&gt;$$
X(b)=\sum_{n=0}^{N-1}x&lt;a href=&#34;cos(2\pi nb/N)-jsin(2\pi nb/N)&#34;&gt;n&lt;/a&gt;
$$&lt;/p&gt;
&lt;p&gt;where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$n$ is one of $N$ samples.&lt;/li&gt;
&lt;li&gt;$N$ is total number of samples.&lt;/li&gt;
&lt;li&gt;$b$ is one of $B$ frequency bins (each bin represents a frequency range of $F_s /N$).&lt;/li&gt;
&lt;li&gt;$j$ is the imaginary operator.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The DFT algorithm uses each sample point in the summation from 0 to N-1 for each analyzed frequency. All N sample points contain information about all B frequencies, thus each of the B frequencies for which information is desired requires a summation of N time sample products. Because of the reasons above, processing a DFT is slow, because $N^2$ calculations are necessary. For example, a 2000 point DFT requires 4 million calculations, often floating point calculations, which are slower than integer calculations.&lt;/p&gt;
&lt;h2&gt;Fast Fourier Transform (FFT)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fast Fourier Transform (FFT)&lt;/strong&gt; remedies the DFT speed problem by skipping over portions of the summations which produce redundant information. Rules for using FFT:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of sample points must be a power of 2 ($2^n$).&lt;/li&gt;
&lt;li&gt;The number of additions and multiplications is: $\frac{N}{2}\log_2 N$.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The-Fundamentals-of-Mixed-Signal-Testing_Brian-Lowe&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/Basics_of_Fourier_Transform/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/Basics_of_Fourier_Transform/</guid>
      
    </item>
    
    <item>
      <title>Basics of Mixed Signal Test</title>
      
      
      
      
      <description>&lt;p&gt;Mixed signal contains both analog and digital signals. Devices processing mixed signal typically include ADCs, DACs, analog switches and multiplexers, sample-and-hold amplifiers, and so on.&lt;/p&gt;
&lt;p&gt;As a part of it, analog signals is signals we use in the real world such as voice or tempurature, it&#39;s continuous in both time and amplitude. To process analog signals into computers, we need to convert them to digital signals, as it&#39;s discrete in both time and amplitude.&lt;/p&gt;
&lt;h2&gt;Sampling Theory&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220929094314.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sampling theory applies to the signal to be periodic, or errors will be introduced.&lt;/p&gt;
&lt;h3&gt;Nyquist Theorem&lt;/h3&gt;
&lt;p&gt;We use &lt;strong&gt;Nyquist Theorem（奈奎斯特定理）&lt;/strong&gt; to gain the minimum sampling frequency when sampling signals:&lt;/p&gt;
&lt;p&gt;$$
F_s≥2F_i
$$&lt;/p&gt;
&lt;p&gt;We must sample at a rate higher than twice the highest frequency of interest, to be able to recreate a signal from its samples and avoid losing information.&lt;/p&gt;
&lt;p&gt;If we sample at a frequency that lower that the Nyquist rate, it will exhibit a phenomenon called &lt;strong&gt;aliasing（混叠）&lt;/strong&gt;(unwanted components) when we try to convert it back to a continuous time signal, and some of the frequencies in the original signal may be lost.&lt;/p&gt;
&lt;p&gt;To minimize aliasing problem, we need to remove the frequency greater than $\frac{F_s}{2}$ of the signal, via the anti-aliasing filter (e.g. low-pass-filter):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220930154335.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Coherent Sampling&lt;/h3&gt;
&lt;p&gt;If a time sample set does not contain a precise integer number of cycles, &lt;strong&gt;spectral leakage（频谱泄露）&lt;/strong&gt; will occur.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coherent sampling（相干采样）&lt;/strong&gt; is to ensure the continuity of sampling and prevent spectral leakage, it guarantees that a sample set (a series of samples which represent the analog signal) has a fixed and well defined relationship between the sample frequency $F_s$, the number of samples $N$, the test signal frequency $F_i$, and the number of test signal periods sampled $M$:&lt;/p&gt;
&lt;p&gt;$$
\frac{M}{N}=\frac{F_i}{F_s}
$$&lt;/p&gt;
&lt;p&gt;The total time required to take all samples is called the &lt;strong&gt;Unit Test Period (UTP)&lt;/strong&gt; and requires $M$ cycles of the test signal, which has frequency $F_i$.&lt;/p&gt;
&lt;p&gt;For an example, if we want to calculate the $F_s$ of continuous repeating sinewave, where $F_i$ is 1kHz, $M=3$ and $N=16$:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220930164712.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;So we can conclude that $F_s=5.333kHz$.&lt;/p&gt;
&lt;p&gt;Important tips of coherent sampling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increasing $M$ and/or $N$ will increase both accuracy and test time.&lt;/li&gt;
&lt;li&gt;$M$ and $N$ needs to be an integer.&lt;/li&gt;
&lt;li&gt;$N$ needs to be a power of 2 when using Fast Fourier Transform (FFT).&lt;/li&gt;
&lt;li&gt;$M$ and $N$ are recommended to be mutually prime（互质）so that each sample gives unique information. Described in the following.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If $M$ and $N$ are not mutually prime ($M=3,N=12$), samples are taken at the same position in every cycle, so there is no new information:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220930170300.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;If $M$ and $N$ aremutually prime ($M=3,N=16$), so they are mutually prime and every sample is discrete, so it gives unique information:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220930170343.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Common Frequency Analysis Algorithms&lt;/h2&gt;
&lt;p&gt;For $N$ time-domain signal samples, there are $N$ frequency-domain signal values, and there are $N/2$ frequency-domain power spectrum values. A typical spectral components example is shown below:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221002145846.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are several parameters for describing spectral components as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Signal To Noise Ratio (SNR)（信噪比）&lt;/li&gt;
&lt;li&gt;Total Harmonic Distortion (THD)（总谐波失真）&lt;/li&gt;
&lt;li&gt;Signal to Noise and Distortion (SINAD)（信纳比）&lt;/li&gt;
&lt;li&gt;Intermodulation Distortion (IM)（互调失真）&lt;/li&gt;
&lt;li&gt;Spurious Free Dynamic Range (SFDR)（无杂散动态范围）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Signal To Noise Ratio (SNR)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Signal To Noise Ratio (SNR)&lt;/strong&gt; is derived by storing the value of the fundamental (signal power) first:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221002151235.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then remove the DC component and harmonics (usually up to 5):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221002151402.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next sum all bins of the remaining power spectrum (the noise power) measured by the RMS value (Root Mean Squared, The analog voltage that is equal to a DC voltage containing the same amount of energy, for a sine wave, the RMS value is 0.707 times the peak value):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221002151646.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ultimately we can conclude that:&lt;/p&gt;
&lt;p&gt;$$
{SNR}(dB)=10log_{10}(\frac{{Fundamental}}{{Noise\ Power}})
$$&lt;/p&gt;
&lt;p&gt;SNR is usually expressed in decibels (dB), and is often a positive value (assuming the Fundamental Power is much larger than the Noise Power).&lt;/p&gt;
&lt;h3&gt;Total Harmonic Distortion (THD)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Total Harmonic Distortion (THD)&lt;/strong&gt; is derived by keeping a running sum of the total harmonic power (usually only the first five harmonics, start at the second harmonic):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221002155148.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;And we can conclude that:&lt;/p&gt;
&lt;p&gt;$$
{THD}(dB)=10log_{10}(\frac{{Harmonic \ Power}}{{Fundamental}})
$$&lt;/p&gt;
&lt;p&gt;THD is often a negative value (assuming the Fundamental Power is much larger than the total Harmonic Power).&lt;/p&gt;
&lt;h3&gt;Signal to Noise and Distortion (SINAD)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Signal to Noise and Distortion (SINAD)&lt;/strong&gt; is the same methodology as computing SNR, but now the power of the harmonics is added into, and only zero out the DC component.&lt;/p&gt;
&lt;p&gt;$$
{SINAD}=\frac{S}{N+D}
$$&lt;/p&gt;
&lt;p&gt;And we can conclued that:&lt;/p&gt;
&lt;p&gt;$$
\because {SNR}=\frac{S}{N}, {THD}=\frac{D}{S}
$$&lt;/p&gt;
&lt;p&gt;$$
\therefore {SNR}^{-1}+{THD}=\frac {N}{S}+\frac {D}{S}=\frac {N+D}{S}={SINAD}^{-1}
$$&lt;/p&gt;
&lt;p&gt;$$
\therefore {SINAD}=({SNR}^{-1}+{THD})^{-1}
$$&lt;/p&gt;
&lt;h3&gt;Intermodulation Distortion (IM)&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221018162800.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Intermodulation Distortion (IM) occurs when two or more signals are used in a non-linear system. The spectrum will not only consist of the original signals, but will also contain the sum and difference of the input signals along with their harmonics.&lt;/p&gt;
&lt;h3&gt;Spurious Free Dynamic Range (SFRD)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Spurious Free Dynamic Range (SFRD)&lt;/strong&gt; is derived by finding the highest element after the fundamental (ignoring the DC component):&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221002161334.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note that the highest element may or may not be a harmonic. So we can conclude that:&lt;/p&gt;
&lt;p&gt;$$
{SFDR}(dB)=10log_{10}(\frac{{Fundamental}}{{Next \ Highest}})
$$&lt;/p&gt;
&lt;p&gt;The Spurious Free Dynamic Range is a positive value (assuming the Fundamental Power is much larger than the next highest Spur Power.&lt;/p&gt;
&lt;h2&gt;Architecture of Generic Mixed Signal Tester&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221006174550.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the generic mixed signal tester, the AWG (AC src) and WD (AC dig) are both connected to the DUT via relay interconnects through the channel board.&lt;/p&gt;
&lt;h3&gt;Arbitrary Waveform Generator (AWG)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Arbitrary Waveform Generator (AWG)&lt;/strong&gt; is a low distortion signal generator. It contains a DAC to generate an analog signal from the digital data.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221006175627.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;LPF (Low Pass Filter) is to smooth the waveform and remove high frequency components. A set of data points for a given waveshape is stored in the waveform source memory, each time a clock occurs, a data point will pass to the DAC.&lt;/p&gt;
&lt;p&gt;Important parameters of AWG:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maximum Peak to Peak Voltage output&lt;/li&gt;
&lt;li&gt;Waveform resolution (DAC resolution)&lt;/li&gt;
&lt;li&gt;Band-width&lt;/li&gt;
&lt;li&gt;Waveform source memory depth&lt;/li&gt;
&lt;li&gt;Output Impedance&lt;/li&gt;
&lt;li&gt;Noise, THD, SNR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Waveform Digitizer (WD)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Waveform Digitizer (WD)&lt;/strong&gt; samples analog signals, and converts them into digital values. It performs the opposite operation to the AWG. It converts analog signal into digital samples that represent the original analog signal.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221006180242.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The low-pass filter limits the bandwidth of the signal in order to remove unwanted frequency components like noise and spurs, also provides anti-aliasing by attenuating spurs that would be aliased into the pass band of the filter during the ADC conversion.&lt;/p&gt;
&lt;p&gt;Important parameters of WD:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maximum Peak to Peak input Voltage range&lt;/li&gt;
&lt;li&gt;Waveform resolution (ADC resolution)&lt;/li&gt;
&lt;li&gt;Band-width&lt;/li&gt;
&lt;li&gt;Waveform capture memory depth&lt;/li&gt;
&lt;li&gt;Input Impedance&lt;/li&gt;
&lt;li&gt;Noise, THD, SNR, spur&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Clock&lt;/h3&gt;
&lt;p&gt;The analog and digital clocks are derived from a system wide reference clock. If there is no clock synchronization signal, the timing offset may lead to incorrect results.&lt;/p&gt;
&lt;h3&gt;Digital Signal Processor (DSP)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Digital Signal Processor (DSP)&lt;/strong&gt; is a specialized microprocessor to performs mathematical operations on arrays of digital numbers. Various algorithms like DFT and FFT are performed on DSP to transform time domain information into the frequency domain.&lt;/p&gt;
&lt;p&gt;The architecture of a DSP is optimized to allow fast multiplication, summing, logarithm calculations, squaring, and square root calculations.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221007142019.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The tester will carry the stored captured signal to the DSP processor through data buses.&lt;/p&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The-Fundamentals-of-Mixed-Signal-Testing_Brian-Lowe&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/Basics_of_Mixed_Signal_Test/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/Basics_of_Mixed_Signal_Test/</guid>
      
    </item>
    
    <item>
      <title>DAC - Dynamic Parameters</title>
      
      
      
      
      <description>&lt;h2&gt;Dynamic Parameters&lt;/h2&gt;
&lt;p&gt;DAC&#39;s dynamic parameters mainly contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Signal to Noise Ratio (SNR)&lt;/li&gt;
&lt;li&gt;Total Harmonic Distortion (THD)&lt;/li&gt;
&lt;li&gt;Signal to Noise and Distortion Ratio (SINAD)&lt;/li&gt;
&lt;li&gt;Inter-modulation Error (IM)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Signal to Noise Ratio (SNR)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Signal to Noise Ratio (SNR)&lt;/strong&gt; of an DAC is defined as the ratio of the Measured Signal Power&#39;s RMS (excluding Harmonic Distortion) to the Noise Power&#39;s RMS:&lt;/p&gt;
&lt;p&gt;$$
SNR(dB)=20log(\frac{V_{Signal(RMS)}}{V_{Noise(RMS)}})
$$&lt;/p&gt;
&lt;p&gt;Since SNR is an ratio of power, $20$ in the equation means the square of the ratio of voltage.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009221450.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Although the Harmonic Distortion is not included in the measurement of SNR, but the Quantization, Thermal and other residual noise in converter are included.&lt;/p&gt;
&lt;h3&gt;Total Harmonic Distortion (THD)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Total Harmonic Distortion (THD)&lt;/strong&gt; of an DAC is defined as the ratio of the fundamental to all the harmonic distortion:&lt;/p&gt;
&lt;p&gt;$$
THD(dB)=20log(\frac{\sqrt{V^2_{2(RMS)}+V^2_{3(RMS)}+...+V^2_{n(RMS)}}}{V_{1(RMS)}}
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009225800.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;How to Test Dynamic Parameters&lt;/h2&gt;
&lt;h3&gt;Test System Setup&lt;/h3&gt;
&lt;p&gt;Test system setup for ADC dynamic parameter tests:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221009230212.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Resolution of AC Digitizer should be at least 2 to 4 bits better than DUT.&lt;/p&gt;
&lt;h3&gt;Tests Concept&lt;/h3&gt;
&lt;p&gt;Procedure of testing the dynamic parameters of an DAC is listed below.&lt;/p&gt;
&lt;h4&gt;1.Make a continuous input digital data signal (of a Sine wave) with the tester for the DAC to convert&lt;/h4&gt;
&lt;p&gt;It is common practice to ensure that the analog/digital clock are referenced to a common master clock, so that the relationship of the clock sources&#39;s frequency is fixed and synchronized, which making test results highly repeatable.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011195204.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;2.Coherently collect a set of samples with the DAC&lt;/h4&gt;
&lt;p&gt;For Digital Source:&lt;/p&gt;
&lt;p&gt;$$
\frac{Fs(dut)}{Fi}=\frac{N}{M}
$$&lt;/p&gt;
&lt;p&gt;Where $Fs(dut)$ is the samping rate of Digital Source, $Fi$ is signal frequency, $N$ is the number of samples, $M$ is the number of integer cycles.&lt;/p&gt;
&lt;p&gt;For AC_Digital Capture:&lt;/p&gt;
&lt;p&gt;$$
\frac{Fs}{Fi}=\frac{Ncap}{Mc}
$$&lt;/p&gt;
&lt;p&gt;Where $Fs$ is the DAC sampling rate also the Digital Capture&#39;s sample rate, $Fi$ is the signal frequency, $Ncap$ is the number of samples captured (2x number), $Mc$ is the number of integer cycles (odd).&lt;/p&gt;
&lt;h4&gt;3.Send the collected set of time samples to the DSP to perform DFT / FFT analysis&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011140834.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011140904.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;4.Analyze the frequency bins of interest using equations or tester algorithms for SNR, THD and compare to specification&lt;/h4&gt;
&lt;h4&gt;5.Make a pass / fail decision based on the results&lt;/h4&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The-Fundamentals-of-Mixed-Signal-Testing_Brian-Lowe&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/DAC-Dynamic_Parameters/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/DAC-Dynamic_Parameters/</guid>
      
    </item>
    
    <item>
      <title>DAC - Static Parameters</title>
      
      
      
      
      <description>&lt;p&gt;Digital to Analog Converter (ADC) is a device to converts a sequence of digital input data into analog signals.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011141644.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Static Parameters&lt;/h2&gt;
&lt;p&gt;DAC&#39;s static parameters mainly contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zero Scale Output&lt;/li&gt;
&lt;li&gt;Full Scale Range (FSR)&lt;/li&gt;
&lt;li&gt;LSB Size&lt;/li&gt;
&lt;li&gt;Offset Error&lt;/li&gt;
&lt;li&gt;Gain Error&lt;/li&gt;
&lt;li&gt;Differential Non-Linearity Error (DNE or DNL)&lt;/li&gt;
&lt;li&gt;Integral Non-Linearity Error (INE or INL)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011144045.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Zero Scale Output&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Zero Scale Output&lt;/strong&gt; is the measured output value when the zero/null level digital input code is presented to the DUT.&lt;/p&gt;
&lt;h3&gt;Full Scale Range (FSR)&lt;/h3&gt;
&lt;p&gt;Range of DAC output voltage between the minimum ($V_{ZS}$) and maximum ($V_{FS}$) analog outputs is called &lt;strong&gt;Full Scale Range (FSR)&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011142249.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;LSB Size&lt;/h3&gt;
&lt;p&gt;Average change in voltage when in between the input codes is defined as LSB:&lt;/p&gt;
&lt;p&gt;$$
LSB=\frac{FSR_{measured}}{2^{bits}-1}
$$&lt;/p&gt;
&lt;h3&gt;Offset Error&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Offset Error&lt;/strong&gt; (Zero-Scale Error) is the voltage difference between ideal and actual offset (initial) points.&lt;/p&gt;
&lt;p&gt;$$
OffsetError=V_{ZS(Actual)}-V_{ZS(ideal)}
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011144415.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Gain Error&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Gain Error&lt;/strong&gt; is the voltage difference between ideal and actual gain points on the transfer function.&lt;/p&gt;
&lt;p&gt;$$
GainError=FSR_{Ideal}-FSR_{Actual}
$$&lt;/p&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;p&gt;$$
FSR_{Ideal}=V_{FS(ideal)}-V_{ZS(ideal)}
$$&lt;/p&gt;
&lt;p&gt;$$
FSR_{Actual}=V_{FS(Actual)}-V_{ZS(Actual)}
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011144925.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Differential Non-Linearity Error (DNL)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Differential Non-Linearity Error (DNL)&lt;/strong&gt; is the difference in the output voltage at a specific, compared to the output at the previous input, then minus one device LSB:&lt;/p&gt;
&lt;p&gt;$$
DNL=(V_{in2}-V_{in1})-LSB_{average}
$$&lt;/p&gt;
&lt;p&gt;where $V_{in2}$ is the voltage of the upper transition, $V_{in1}$ is the lower.&lt;/p&gt;
&lt;p&gt;DNL is a measure of &#34;small-signal&#34; linearity error. Measurement of DNL is made from one step to the next, not each step to the ideal value.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011153556.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Integral Non-Linearity Error (INL)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Integral Non-Linearity Error (INL)&lt;/strong&gt; is the cumulative effect of all differential non-linearity values.It is a measure of &#34;large-signal&#34; linearity error. INL at any point along the curve is the deviation of the ideal linearity line.&lt;/p&gt;
&lt;p&gt;$$
ExpectedOutput[i]=FSR*InputCode[i]+OffsetError
$$&lt;/p&gt;
&lt;p&gt;$$
INL[i]=\frac{ActualOutput[i]-ExpectedOutput[i]}{LSB_{average}}
$$&lt;/p&gt;
&lt;p&gt;Also, INL can also be expressed as a function of DNL:&lt;/p&gt;
&lt;p&gt;$$
INL[i]=\sum_{n=1}^{n=i}DNL[n]
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011184739.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;How to Test Static Parameters&lt;/h2&gt;
&lt;h3&gt;Test System Setup&lt;/h3&gt;
&lt;p&gt;Test system setup for DAC static parameter tests:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011185006.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Block diagram of signal setup:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011185447.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Tests Concept&lt;/h3&gt;
&lt;p&gt;Procedure of testing the static parameters of an DAC DUT is listed below.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011185739.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;1. Measure the output voltage by applying the digital data inputs from Zero Scale to Full Scale&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221011185711.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;2. Calculate DNL for each input code&lt;/h4&gt;
&lt;p&gt;$$
DNL[i]=\frac{OutputMeasured[i]-OutputMeasured[i-1]-LSB_{average}}{LSB_{average}}
$$&lt;/p&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;p&gt;$$
LSB_{average}=\frac{OutputMeasured[n]-OutputMeasured[0]}{2^{bits}-1}
$$&lt;/p&gt;
&lt;h4&gt;3. Get the max and min DNL&lt;/h4&gt;
&lt;h4&gt;4. Calculate for INL for each step&lt;/h4&gt;
&lt;h4&gt;5. Get the max and min INL&lt;/h4&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The-Fundamentals-of-Mixed-Signal-Testing_Brian-Lowe&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/DAC-Static_Parameters/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/DAC-Static_Parameters/</guid>
      
    </item>
    
    <item>
      <title>Troubleshooting of ADC and DAC</title>
      
      
      
      
      <description>&lt;h2&gt;Why AC Source should be 2-4 bits more resolution than the ADC under test?&lt;/h2&gt;
&lt;p&gt;As an often used definition of ENOB:&lt;/p&gt;
&lt;p&gt;$$
ENOB=\frac{SINAD-1.76}{6.02}
$$&lt;/p&gt;
&lt;p&gt;So if the ENOB of DAC (in AC Source) get lower, the SINAD will become lower too, means that the noise and distortions will increase relatively, which will affect the accuracy of measurement.&lt;/p&gt;
&lt;p&gt;Another point is, the resolution of AC Source lower than 2-4 bits will induce higher harmonic distortions, the digital signal at the output of the ADC is deteriorated by both DAC&#39;s and ADC&#39;s harmonic distortions, and the amplitude of 2nd-harmonic (for an example) could be summed. Cause AC Source with higher resolution will bring lower harmonic distortions, the test output results will become more accurate.&lt;/p&gt;
&lt;p&gt;Refer to this article: &lt;a href=&#34;https://www.hindawi.com/journals/vlsi/2008/482159/&#34;&gt;ADC Production Test Technique Using Low-Resolution Arbitrary Waveform Generator&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Are there other ways to improve measurement accuracy with the AC input in the test of ADC?&lt;/h2&gt;
&lt;p&gt;Reducing the slope of the input ramp wave can improve measurement accuracy.&lt;/p&gt;
&lt;h2&gt;What to do with high base noise in the test of ADC?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Increase the number of samples (N) and the number of test signal periods sampled (M), both will also result in more test time.&lt;/li&gt;
&lt;li&gt;Increase sampling frequency (Fs).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It&#39;s not possible to distinguish between noise and harmonics if only sample only 1 period of signal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有这条公式吗？噪声精度=采样频率/M&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;How to measure the gain error of ADC practically?&lt;/h2&gt;
&lt;p&gt;Histogram method is used practically to measure the gain error, because the theoretical transition edge is hard to detect.&lt;/p&gt;
&lt;h2&gt;Do we need an AC Digitizer with 2-4 bits more resolution in the test of the DAC?&lt;/h2&gt;
&lt;p&gt;No, it&#39;s no necessary for a very high resolution AC Digitizer. AC Digitizer that satisfied Nyquist resolution will meet the test standard.&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/Troubleshooting_of_ADC_and_DAC/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Mixed%20Signal%20Test/Troubleshooting_of_ADC_and_DAC/</guid>
      
    </item>
    
    <item>
      <title>Continuity Test</title>
      
      
      
      
      <description>&lt;p&gt;Continuity test contains open/short test and power pin short test. The former checks the signal pins, while the latter checks the power pin.&lt;/p&gt;
&lt;h2&gt;Open/Short Continuity Test&lt;/h2&gt;
&lt;p&gt;Open/short continuity test is to confirm the electronical contact between tester and DUT, and whether if short-circuit existed to other pins or to ground.&lt;/p&gt;
&lt;h3&gt;Test Method&lt;/h3&gt;
&lt;p&gt;Open/short continuity test is performed with testing the protection diodes (diodes to VDD and to GND). Usually use PPMU with VBT code (also can be tested using PE and functional pattern).&lt;/p&gt;
&lt;h4&gt;Test through GND protection diode&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220909003924.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Force 0V to all other pins that are not tested (include power pin).&lt;/li&gt;
&lt;li&gt;Force a small negative current (-100uA) on the Pin Under Test (with voltage clamp).&lt;/li&gt;
&lt;li&gt;Meaure voltage on the Pin Under Test：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than max spec(&amp;gt;-0.2V)&lt;/strong&gt;: FAIL (Short)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Midband(-1.5V~-0.2V&lt;/strong&gt;): PASS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than min spec(&amp;lt;-1.5V)&lt;/strong&gt;: FAIL (Open)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Test through VDD protection diode&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220909004139.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Force 0V to all other pins that are not tested (include power pin).&lt;/li&gt;
&lt;li&gt;Force a small positive current (+100uA) on the Pin Under Test (with voltage clamp).&lt;/li&gt;
&lt;li&gt;Meaure voltage on the Pin Under Test：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than max spec(&amp;gt;1.5V)&lt;/strong&gt;: FAIL (Short)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Midband(0.2V~1.5V)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than min spec(&amp;lt;0.2V)&lt;/strong&gt;: FAIL (Open)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Power Pin Short Test&lt;/h2&gt;
&lt;p&gt;Power pin short test is to check if there is a short-circuit from VDD to GND pin, which will cause damagement to DUT or tester. Power pin short test always run immediately after open/short continuity test, and when it fails, device power will be shut off and the DUT will be rejected.&lt;/p&gt;
&lt;h3&gt;Test Method&lt;/h3&gt;
&lt;p&gt;Power Pin Short Test is performed by applying a small voltage to VDD, and measure the current into it, to check if a short-circuit existed. Usually use DCVI with VBT code.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220910155805.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply a small voltage to VDD (100mV) (with current clamp).&lt;/li&gt;
&lt;li&gt;Force all other pins to 0V with PPMU.&lt;/li&gt;
&lt;li&gt;Measure current flowing into VDD pin:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than max spec(&amp;gt;20uA)&lt;/strong&gt;: FAIL (Short)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Midband(-1uA~20uA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than min spec(&amp;lt;-1uA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fundamentals Of Digital Semiconductor Testing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Continuity_Test/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Continuity_Test/</guid>
      
    </item>
    
    <item>
      <title>DC Parameters</title>
      
      
      
      
      <description>&lt;p&gt;Testing DC parameters is essentially measuring the resistivity of the silicon. They can be tested DC method, with DCVI/PPMU forcing current then measuring voltage, or forcing voltage then measuring current. Will compare the measured value with the spec value out of the tester, then conclude a test result with PASS or FAIL. Items can be tested under DC method are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/DC-IDD_Test&#34;&gt;&lt;strong&gt;Power Supply Current Test (IDD)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gross IDD Test&lt;/li&gt;
&lt;li&gt;Static IDD Test&lt;/li&gt;
&lt;li&gt;Dynamic IDD Test&lt;/li&gt;
&lt;li&gt;Quiescent IDD Test (IDDQ)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/DC-Leakage_Test&#34;&gt;&lt;strong&gt;Leakage Test&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Input Leakage Test (IIL &amp;amp; IIH)&lt;/li&gt;
&lt;li&gt;Output Tristate Leakage Test (IOZL &amp;amp; IOZH)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/DC-Level_Threshold_Test&#34;&gt;&lt;strong&gt;Level Threshold Test&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Output Level Threshold Test (VOL/IOL &amp;amp; VOH/IOH)&lt;/li&gt;
&lt;li&gt;Input Level Threshold Test (VIL &amp;amp; VIH)&lt;/li&gt;
&lt;li&gt;Optional tests&lt;/li&gt;
&lt;li&gt;Input Clamp (VI)&lt;/li&gt;
&lt;li&gt;Output Short-circuit Current (IOS) Test&lt;/li&gt;
&lt;li&gt;Resistive Inputs Test&lt;/li&gt;
&lt;li&gt;Output Fanout Test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DC parameters can also be tested with digital functional method, will be compared with the spec value by voltage comparator inside the PE (Pin Electronic) during functional test procedure, and conclude a Go/No-Go test result without specific values.&lt;/p&gt;
&lt;p&gt;Metions that current is defined to positive when flow into DUT, and negative when flow outside of DUT.&lt;/p&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fundamentals Of Digital Semiconductor Testing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/DC_Parameters/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/DC_Parameters/</guid>
      
    </item>
    
    <item>
      <title>Digital Functional Test 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fundamentals Of Digital Semiconductor Testing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Drive and Compare Timing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;D0 or Drive On: Start of cycle for each channel&lt;/li&gt;
&lt;li&gt;D1 or Drive Data: Start of drive pulse for each channel&lt;/li&gt;
&lt;li&gt;D2 or Drive Return: End of drive pulse for each channel&lt;/li&gt;
&lt;li&gt;D3 or Drive Off: Time of I/O switch&lt;/li&gt;
&lt;li&gt;R0 or Compare Start (On): Start of compare window for each channel (window strobe)&lt;/li&gt;
&lt;li&gt;R1 or Compare End (Off): End of compare window for each channel (window strobe) or edge strobe&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Troubleshooting of Digital Functional Debug&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Reduce test frequency.&lt;/li&gt;
&lt;li&gt;View the actual waveform, modify the position of comparison.&lt;/li&gt;
&lt;li&gt;Repeat pattern lines for more times in prevent of the influence of setup time.&lt;/li&gt;
&lt;li&gt;Use Shmoo method to analyze.&lt;/li&gt;
&lt;li&gt;Switching the order of test execution, in prevent of the interaction between tests.&lt;/li&gt;
&lt;li&gt;Pay attention to the Pin Electronic Driver Mode
. Vt, Hi-Z, Largeswing-VT1K or Smallswing-VT?&lt;ul&gt;
&lt;li&gt;Hi-Z: the balance bridge will be used for driving, and VCOM will be used for current loads.&lt;/li&gt;
&lt;li&gt;Vt: directly connect to Vt level through a 50Ω resistance. If the DUT output is running at a high speed, using the VT results in fewer reflections seen by the comparator.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Check if TDR is calibrated.&lt;/li&gt;
&lt;li&gt;Defects with pattern itself.&lt;/li&gt;
&lt;/ol&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Digital_Functional_Test/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Digital_Functional_Test/</guid>
      
    </item>
    
    <item>
      <title>IDD Test</title>
      
      
      
      
      <description>&lt;p&gt;Power supply current (IDD) indicates the current flows from Drain to Drain in a CMOS circuit (named ICC in TTL circuit, means Collector to Collector). IDD can be equivalent as:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220910234238.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Static IDD Test&lt;/h2&gt;
&lt;p&gt;Static IDD is a measurement of current from DUT&#39;s VDD pin, when the DUT is in static state (the DUT is not active during the test). The value of static IDD indicates the lowest current consumption of the DUT, which is important for battery operated devices, also help to indicate marginal defects.&lt;/p&gt;
&lt;h3&gt;Test Method&lt;/h3&gt;
&lt;p&gt;Static IDD test is performed with applying a voltage of VDDmax and measuring the current value, while the DUT is preconditioned to its lowest current consumption logic state.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220911201659.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition DUT to its lowest current consumption logic state.&lt;/li&gt;
&lt;li&gt;Measure the current flowing into VDD pin:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;10uA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;10uA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Dynamic IDD Test&lt;/h2&gt;
&lt;p&gt;Dynamic IDD is a measurement of current from DUT&#39;s VDD pin, when the DUT is constantly performing some function. Dynamic IDD is also important for battery operated devices.&lt;/p&gt;
&lt;h3&gt;Test Method&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220911201603.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Static IDD test is performed with applying a voltage of VDDmax and measuring the current value, while the DUT is preconditioned to a continuously working state.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition DUT to a continuously working state.&lt;/li&gt;
&lt;li&gt;Measure the current flowing into VDD pin:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;50mA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;50mA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Quiescent IDD Test (IDDQ)&lt;/h2&gt;
&lt;p&gt;Quiescent IDD is a measurement of IDD in the quiescent states (the circuit is not switching and inputs are held at static values). As processors shrink , the defect of leakage current becomes much more higher, and IDDQ test may detect minor defects within the core of the circuit that could not other wise be detected.&lt;/p&gt;
&lt;h3&gt;Test Method&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220911213042.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition DUT to a certain working state (toggle certain function part to on/off such as Bluetooth and Wi-Fi).&lt;/li&gt;
&lt;li&gt;Measure the current flowing into VDD pin:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;Repeat to test with different working states.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fundamentals Of Digital Semiconductor Testing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/IDD_Test/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/IDD_Test/</guid>
      
    </item>
    
    <item>
      <title>Leakage Test</title>
      
      
      
      
      <description>&lt;p&gt;Leakage test contains input leakage test (IIL &amp;amp; IIH) and output tristate leakage test (IOZL &amp;amp; IOZH).&lt;/p&gt;
&lt;h2&gt;Input Leakage Test (IIL &amp;amp; IIH)&lt;/h2&gt;
&lt;p&gt;Input leakage occurs in a input pin&#39;s buffer circuit. IIH is the leakage path from input pin to GND when the DUT is driven to &#34;1&#34;, and IIL is the leakage path from VDD to input pin when driven to &#34;0&#34;:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220911215421.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Actually, the measurement of IIL is the resistance from input pin to VDD, and IIH is the resistance from input pin to GND. Input leakage test is to ensure the pin&#39;s input buffer will not source or sink more unwanted current than specified.&lt;/p&gt;
&lt;h3&gt;Test Method (Serial)&lt;/h3&gt;
&lt;p&gt;Serial input leakage test (IIL &amp;amp; IIH) is performed with applying a voltage of VDDmax, and force the specific input pin to VDDmax (for IIH) or 0V (for IIL), while other input pins are forced to oppisite side of the Pin under Test.&lt;/p&gt;
&lt;h4&gt;IIL Test (Serial)&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220911225521.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Force VDDmax to all input pins except for the Pin under Test.&lt;/li&gt;
&lt;li&gt;Force 0V to the Pin under Test, and measure the current flow out:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;-10uA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;-10uA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;Repeat to test next pin.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;IIH Test (Serial)&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912113044.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Force 0V to all input pins except for the Pin under Test.&lt;/li&gt;
&lt;li&gt;Force VDDmax to the Pin under Test, and measure the current flow into:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;10uA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;10uA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;Repeat to test next pin.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Test Method (Parallel)&lt;/h3&gt;
&lt;p&gt;Since serial method can identify the leakage between input pins, but it&#39;s too inefficient. Parallel test method is more commonly used actually. PPMU is used in parallel method, to drive all input pins to VDDmax (for IIH) or 0V (for IIL) and measure the current of per input pin.&lt;/p&gt;
&lt;p&gt;The only disadvantage of parallel method is pin to pin leakage will not be detected, because all the pins are forced to the same voltage level at the same time.&lt;/p&gt;
&lt;h2&gt;Output Tristate Leakage Test (IOZL &amp;amp; IOZH)&lt;/h2&gt;
&lt;p&gt;Tristate also named as High-Z or floating state, indicates appear to be high impedance externally of DUT&#39;s pin.&lt;/p&gt;
&lt;p&gt;Output tristate leakage occurs in HIGH or LOW voltage level is applied on the DUT&#39;s output pin, while the pin is preconditioned to be disabled. IOZL means the current flow out when the LOW level is applied, and IOZH means the current flow into when the HIGH level is applied.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912120527.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Essentially, IOZL indicates the resistance from an output pin to VDD when disabled, and IOZH indicates the resistance to GND. The test insures the pin will not source or sink more unwanted current than specified.&lt;/p&gt;
&lt;p&gt;Additionally, a control input (enable signal) is required in this test , to controls the specific output pin to LOW, HIGH or High-Z (disable) state.&lt;/p&gt;
&lt;h3&gt;Test Method (Serial)&lt;/h3&gt;
&lt;h4&gt;IOZL Test (Serial)&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912121730.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition the specific out pin to Hi-Z (disable) state.&lt;/li&gt;
&lt;li&gt;Force 0V to the Pin under Test, and measure the current flow out:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;-10uA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;-10uA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;Repeat to test next pin.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;IOZH Test (Serial)&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912122050.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmax to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition the specific out pin to Hi-Z (disable) state.&lt;/li&gt;
&lt;li&gt;Force VDDmax to the Pin under Test, and measure the current flow into:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;10uA)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;10uA)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;Repeat to test next pin.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Test Method (Parallel)&lt;/h3&gt;
&lt;p&gt;Parallel method is more commonly used actually with PPMU, to drive all output pins to VDDmax (for IOZH) or 0V (for IOZL) and measure the current of per output pin.&lt;/p&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fundamentals Of Digital Semiconductor Testing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Leakage_Test/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Leakage_Test/</guid>
      
    </item>
    
    <item>
      <title>Level Threshold Test 🚧</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912163403.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Level threshold test includes Output Level Threshold (VOL &amp;amp; VOH) and Input Level Threshold (VIL &amp;amp; VIH). They are originated from typical TTL and CMOS level threshold:&lt;/p&gt;
&lt;p&gt;|                       |  VCC                      | VOL          | VOH       | VIL      | VIH          | GND |
| :---------        | :---- | :-------        | :---------------| :---------- | :------        | :---- |
|  TTL (5V)          | 5.00V                    | 0.40V     | 2.40V       | 0.80V           | 2.00V                  | 0.00V   |
|  LVTTL (3.3V)   | 3.30V                        | 0.40V    | 2.40V      | 0.80V         | 1.50V                   | 0.00V
|  CMOS (5V)     | 5.00V                 | 0.50V (0.1 VCC)          | 4.50V (0.9 VCC)       | 1.50V (0.3 VCC)| 3.50V (0.7 VCC)| 0.00V   |
|  CMOS (3.3V)  | 3.30V            | 0.33V (0.1 VCC)      | 2.97V (0.9 VCC)   | 0.99V (0.3 VCC)  | 2.31V (0.7 VCC)  | 0.00V   |
|  CMOS (2.5V)  | 2.50V                      | 0.40V      | 2.00V  | 0.70V       | 1.70V             | 0.00V   |
|  CMOS (1.8V)  | 1.80V                          | 0.45V      | 1.35V | 0.63V      | 1.170V         | 0.00V   |&lt;/p&gt;
&lt;h2&gt;Output Level Threshold Test (VOL/IOL &amp;amp; VOH/IOH)&lt;/h2&gt;
&lt;p&gt;VOL represents the maximum output voltage when output LOW voltage level, IOL represents the maximum &lt;strong&gt;sinking&lt;/strong&gt; current capability in LOW output state. They actually measures the resistance of the output pin when provide the logic &lt;code&gt;0&lt;/code&gt;, insures it can provide current of IOL without exceeding the voltage of VOL, examining the capability of sink current and stay in a correct logic state.&lt;/p&gt;
&lt;p&gt;VOH represents the minimum output voltage when output HIGH voltage level, IOH represents the maximum &lt;strong&gt;source&lt;/strong&gt; current capability in HIGH output state.They actually measures the resistance of the output pin when provide the logic &lt;code&gt;1&lt;/code&gt;, insures it can provide current of IOH without less than the voltage of VOH, examining the capability of source current and stay in a correct logic state.&lt;/p&gt;
&lt;h3&gt;Test Method (Serial)&lt;/h3&gt;
&lt;h4&gt;VOL/IOL Test (Serial)&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912172403.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmin to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition specific output pin to logic &#39;0&#39;.&lt;/li&gt;
&lt;li&gt;Force IOLmax to the Pin under Test (flow into DUT), and measure the voltage on it:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;0.4V)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;0.4V)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;Repeat to test with different output pins.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;VOH/IOH Test (Serial)&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220912172445.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apply VDDmin to VDD pin (with current clamp).&lt;/li&gt;
&lt;li&gt;Precondition specific output pin to logic &#39;1&#39;.&lt;/li&gt;
&lt;li&gt;Force IOHmax to the Pin under Test (flow out of DUT), and measure the voltage on it:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher than spec value(&amp;gt;2.4V)&lt;/strong&gt;: PASS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lower than spec value(&amp;lt;2.4V)&lt;/strong&gt;: FAIL&lt;/li&gt;
&lt;li&gt;Repeat to test with different output pins.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Input Level Threshold Test(VIL &amp;amp; VIH)&lt;/h2&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fundamentals Of Digital Semiconductor Testing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fundamentals of Testing Using ATE&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Level_Threshold_Test/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/ATE%20Test%20Fundamental/Level_Threshold_Test/</guid>
      
    </item>
    
    <item>
      <title>CPR - Fundamental</title>
      
      
      
      
      <description>&lt;p&gt;&lt;strong&gt;CPR&lt;/strong&gt; represents of &lt;strong&gt;Core Power Reduction&lt;/strong&gt;, an &lt;strong&gt;adaptive power management technology&lt;/strong&gt; that determine the optimal product voltage, allow closed loop compensation of DC voltage, temperature variation, process（制程） and aging degradation（老化退化）, to optimize device power and performance,&lt;/p&gt;
&lt;p&gt;CPR core consists of one controller, and a number of sensors embedded into the SoC, to control the VDD level of a chip. The sensors consists of multiple ring oscillators, to estimate the running speed of the chip. Then the controller provide a VDD modification command result to the PMIC, which can be programmed with software.&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/Block%20Fundamental/CPR-Fundamental/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/Block%20Fundamental/CPR-Fundamental/</guid>
      
    </item>
    
    <item>
      <title>半导体测试基础 - AC 参数测试</title>
      
      
      
      
      <description>&lt;p&gt;AC 测试确保 DUT 的时特性序满足其规格需求。&lt;/p&gt;
&lt;h2&gt;基本 AC 参数&lt;/h2&gt;
&lt;h3&gt;建立时间（Setup Time）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094845.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;建立时间指的是在参考信号（图中为 &lt;code&gt;WE&lt;/code&gt;）发生变化（取中间值 1.5V）前，为了确保能被正确读取，数据（图中为 &lt;code&gt;DATA IN&lt;/code&gt;）必须提前保持稳定不变的最短时间。在最小建立时间之前，数据可以随意变化，但如果超过了最小建立时间（保持稳定得太晚），就有可能无法被识别，导致错误。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter | Description              | Min | Max | Unit |
| --------- | ------------------------ | --- | --- | ---- |
| $t_{SD}$  | Data Set-Up to Write End | 11  |     | ns   |&lt;/p&gt;
&lt;h3&gt;保持时间（Hold Time）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094858.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;保持时间指的是参考信号（图中为 &lt;code&gt;WE&lt;/code&gt;）发生变化（到达一定电压阈值）后，为了确保无误，数据（图中为 &lt;code&gt;DATA IN&lt;/code&gt;）必须保持稳定持续的最短时间（或者说在时钟信号触发前多久要保持稳定电平）。如果保持时间太短，数据有概率不能被正确识别。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter | Description              | Min | Max | Unit |
| --------- | ------------------------ | --- | --- | ---- |
| $t_{HD}$  | Data Hold from Write End | 1   |     | ns   |&lt;/p&gt;
&lt;h3&gt;传播时延（Propagation Delay）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094910.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;传播时延指的是一个信号的传输和另一个相关信号的传输之间的时间间隔。大多时候测量的是输入信号（图中为 &lt;code&gt;ADDR&lt;/code&gt;）发生变化，到相应输出（图中为 &lt;code&gt;DATA OUT&lt;/code&gt;）反应之间的时间间隔（从输入端到输出端所需的时间）。它保证了输出信号可在输入信号出现后多久内出现。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter | Description           | Min | Max | Unit |
| --------- | --------------------- | --- | --- | ---- |
| $t_{AA}$  | Address to Data Valid |     | 15  | ns   |&lt;/p&gt;
&lt;h3&gt;最小脉宽（Minimum Pulse Widths）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094924.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最小脉宽通常包含最小低脉冲宽度和最小高脉冲宽度，用于确保脉冲定时时的最小可操作的值。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter | Description             | Min | Max | Unit |
| --------- | ----------------------- | --- | --- | ---- |
| $t_{WL}$  | Minimum clock low time  | 20  |     | ns   |
| $t_{WH}$  | Minimum clock high time | 25  |     | ns   |&lt;/p&gt;
&lt;h3&gt;最大频率（Maximum Frequency）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094934.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最大工作频率通俗地讲，就是设备可运行的最大速度。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter | Description             | Min | Max  | Unit |
| --------- | ----------------------- | --- | ---- | ---- |
| $f_{MAX}$ | Maximum clock frequency |     | 22.2 | MHz  |&lt;/p&gt;
&lt;h3&gt;输出使能时间（Output Enable Time）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094941.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;指的是引脚从高阻状态（关断失能）切换到有效驱动电平（高低电平）状态所需的时间，确保输出 Buffer 可以在规定的时间内改变引脚状态。测量时计算从控制信号发出到检测到开关输出的时间间隔。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter | Description          | Min | Max | Unit |
| --------- | -------------------- | --- | --- | ---- |
| $t_{DOE}$ | OE LOW to Data Valid |     | 10  | ns   |&lt;/p&gt;
&lt;h3&gt;输出失能时间（Output Disable Time）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220809094948.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;指的是引脚从有效驱动电平（高低电平）状态切换到高阻状态（关断失能）所需的时间，确保输出 Buffer 可以在规定的时间内改变引脚状态。测量时计算从控制信号发出到检测到开关输出的时间间隔。在规格书中的表示如下：&lt;/p&gt;
&lt;p&gt;| Parameter  | Description           | Min | Max | Unit |
| ---------- | --------------------- | --- | --- | ---- |
| $t_{HZOE}$ | OE High to Data Valid |     | 8   | ns   |&lt;/p&gt;
&lt;h2&gt;时序参数&lt;/h2&gt;
&lt;h3&gt;读取周期时序（Read Cycle Timing）&lt;/h3&gt;
&lt;p&gt;一个 256 x 4 静态 RAM 的读取周期示例：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220731190300.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| Parameter  | Description               | Min | Max | Unit |
| ---------- | ------------------------- | --- | --- | ---- |
| $t_{RC}$   | Read Cycle Time           | 15  |     | ns   |
| $t_{AA}$   | Address to Data Valid     |     | 15  | ns   |
| $t_{ACS}$  | Chip Select to Data Valid |     | 10  | ns   |
| $t_{DOE}$  | OE LOW to Data Valid      |     | 10  | ns   |
| $t_{HZCS}$ | Chip Select to High Z     |     | 8   | ns   |
| $t_{HZOE}$ | OE HIGH to High Z         |     | 8   | ns   |
| $t_{LZCS}$ | Chip Select to Low Z      | 2   |     | ns   |
| $t_{LZOE}$ | OE LOW to Low             | 2   |     | ns   |&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先由 $t_{RC}$ 参数确定写入周期的长度。&lt;/li&gt;
&lt;li&gt;确定哪个信号控制读取的功能。在上图的示例中，RAM 的数据输出是由 OE 的下降沿控制的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;写入周期时序（Write Cycle Timing）&lt;/h3&gt;
&lt;p&gt;一个 256 x 4 静态 RAM 的写入周期示例：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220731190328.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| Parameter  | Description                   | Min | Max | Unit |
| ---------- | ----------------------------- | --- | --- | ---- |
| $t_{WC}$   | Write Cycle Time              | 15  |     | ns   |
| $t_{HZWE}$ | WE LOW to High Z              |     | 8   | ns   |
| $t_{LZWE}$ | WE HIGH to Low Z              | 2   |     | ns   |
| $t_{PWE}$  | WE Pulse Width                | 11  |     | ns   |
| $t_{SD}$   | Data Set-Up to Write End      | 11  |     | ns   |
| $t_{HD}$   | Data Hold from Write End      | 1   |     | ns   |
| $t_{SA}$   | Address Set-Up to Write Start | 2   |     | ns   |
| $t_{HA}$   | Address Hold from Write End   | 2   |     | ns   |
| $t_{SCS}$  | CS LOW to Write End           | 11  |     | ns   |
| $t_{AW}$   | Address Set-Up to Write End   | 13  |     | ns   |&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先由 $t_{WC}$ 参数确定写入周期的长度。&lt;/li&gt;
&lt;li&gt;确定哪个信号控制写入的功能。在上图的示例中，RAM 的数据读入是由 WE 的上升沿控制的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《The Fundamentals Of Digital Semiconductor Testing》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-AC%E5%8F%82%E6%95%B0%E6%B5%8B%E8%AF%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-AC%E5%8F%82%E6%95%B0%E6%B5%8B%E8%AF%95/</guid>
      
    </item>
    
    <item>
      <title>半导体测试基础 - DC 参数测试</title>
      
      
      
      
      <description>&lt;p&gt;DC 参数测试，测的主要是器件上单个引脚的一些特性。对大多数的 DC 参数来说，实质上是在测半导体的电阻率，而解释电阻率用的是欧姆定律。如需验证 DC 测试流程的可行性，也可以借电阻器来等效 DUT，以排除 DUT 之外的问题。比方说，在芯片规格书里出现的参数 VOL：&lt;/p&gt;
&lt;p&gt;| Parameter | Description        | Test Conditions        | Min | Max | Units |
| --------- | ------------------ | ---------------------- | --- | --- | ----- |
| VOL       | Output LOW Voltage | VDD = Min, IOL = 8.0mA |     | 0.4 | V     |&lt;/p&gt;
&lt;p&gt;我们可以看出，VOL 最大值为 0.4V，IOL 为 8mA，即当输出逻辑低电平的情况下，必须是在不大于 0.4V 的电压下产生 8mA 的电流，所以我们可以得出，这个器件的最大电阻不超过 50Ω。所以，可以借用不大于 50Ω 的电阻替代 DUT，以验证测试流程。我们的目的是把问题聚焦在 DUT 上，而非 DUT 以外的问题。&lt;/p&gt;
&lt;h2&gt;IDD &amp;amp; Gross IDD&lt;/h2&gt;
&lt;p&gt;IDD 表示的是 CMOS 电路中从漏极（D）到漏极（D）的电流（I），如果是 TTL 电路则称为 ICC（从集电极到集电极的电流）。Gross IDD 指的是流入 VDD 管脚的总电流（在 Wafer Probe 或成品阶段都可测试）。IDD 是看芯片总电流会不会超标，一般要看最低功耗和最大工频下的电流。&lt;/p&gt;
&lt;p&gt;测试 Gross IDD 是为了判断能否继续测 DUT。通常这个测试紧接 OS 测试，是 DUT 通电后的第一个测试。如果 Gross IDD 测试不通过（如电流过大），那就不能接着测下去了。&lt;/p&gt;
&lt;p&gt;在 Gross IDD 测试阶段时，还不知道预处理是否可以正常进行，所以需要放宽 IDD 规范。待 Gross IDD 测试通过之后进行预处理程序，才可以准确定义出 IDD 规范电流。&lt;/p&gt;
&lt;p&gt;Gross IDD 测试需要先通过重置，以将所有输入引脚设低 / 高电平，通常 VIL 设置为 0V、VIH 设置为 VDD，所有输出引脚空载（防止悬空产生漏电流，使 IDD 变大）。测试的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728162655.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;需要注意的事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要设置电流钳，防止电流过大损坏测试设备。&lt;/li&gt;
&lt;li&gt;如果出现负电流，也代表测试不通过。&lt;/li&gt;
&lt;li&gt;如果测试发生错误，可以先排除是测试设备的问题，不加芯片空着 socket 跑测试，其电流应该是 0，否则意味着 DUT 以外的设备也在消耗电流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;IDD 测试 - 静态法&lt;/h3&gt;
&lt;p&gt;静态 IDD 测试，测量的是流入 VDD 引脚的总电流一般需要 DUT 运行在最低功耗的模式下。静态 IDD 与 Gross IDD 测试的区别是，Gross IDD 还没有预处理程序，只是一种粗测，而静态 IDD 测试是已有预处理模式，通过预处理后再进行的测试。&lt;/p&gt;
&lt;p&gt;举个例子，下表是一个 IDD 参数样本：&lt;/p&gt;
&lt;p&gt;| Parameter  | Description          | Test Conditions                   | Min | Max | Units |
| ---------- | -------------------- | --------------------------------- | --- | --- | ----- |
| IDD Static | Power Supply Current | VDD = 5.25V, inputs = VDD, Iout=0 |     | +22 | µA    |&lt;/p&gt;
&lt;p&gt;IDD 静态测试的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728162341.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用测试矢量将 DUT 设置为消耗电流最少、保持在静态的状态。&lt;/li&gt;
&lt;li&gt;检测引脚电流值&lt;/li&gt;
&lt;li&gt;高于 IDD Spec：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试时，通常需要在上电与采样之间加延时，让寄生电容充满电，避免造成干扰。&lt;/p&gt;
&lt;p&gt;如果需要测试不同逻辑下的静态电流，可以测 IDDQ 参数，增加测试覆盖率（IDDQ 是测某个静止逻辑状态下的电流，比如说开一部分 MOS 管进行某个状态下的测试）。&lt;/p&gt;
&lt;h3&gt;IDD 测试 - 动态法&lt;/h3&gt;
&lt;p&gt;IDD 动态测试的目的，是测试 DUT 在 &lt;strong&gt;动态执行功能&lt;/strong&gt; 时（通常为 DUT 最大工频）消耗的电流，确保其不会超过标称值。&lt;/p&gt;
&lt;p&gt;举个例子，下表是一个动态 IDD 参数样本：&lt;/p&gt;
&lt;p&gt;| Parameter   | Description          | Test Conditions                             | Min | Max | Units |
| ----------- | -------------------- | ------------------------------------------- | --- | --- | ----- |
| IDD Dynamic | Power Supply Current | VDD = 5.25V（commercial）, f=f_max（66MHz） |     | +18 | mA    |&lt;/p&gt;
&lt;p&gt;测试的示意图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728171447.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程与静态法相似。&lt;/p&gt;
&lt;h2&gt;VOL/IOL &amp;amp; VOH/IOH&lt;/h2&gt;
&lt;p&gt;VOL 表示低电平（L）输出（O）时的最高电压（V）限制（不会被识别成逻辑 1）。IOL 表示低电平（L）输出（O）时灌电流（I，sink）的驱动能力。它们共同衡量的是引脚 Buffer 在输出低电平时的阻抗，保证在适当输出的电压下能吸收恒定的电流值。&lt;/p&gt;
&lt;p&gt;VOH 表示高电平（H）输出（O）时的最低电压（V）限制（不会被识别成逻辑 0）。IOL 表示高电平（H）输出（O）时拉电流（I，source）的驱动能力。它们共同衡量的是 Buffer 在输出高电平时的阻抗，保证在适当输出的电压下能输出恒定的电流值。&lt;/p&gt;
&lt;p&gt;举个例子，下表是 256 x 4 Static RAM 的 VOL/IOL &amp;amp; VOH/IOH 参数：&lt;/p&gt;
&lt;p&gt;| Parameter | Description         | Test Conditions           | Min | Max | Units |
| --------- | ------------------- | ------------------------- | --- | --- | ----- |
| VOL       | Output LOW Voltage  | VDD = 4.75V, IOL = 8.0mA  |     | 0.4 | V     |
| VOH       | Output HIGH Voltage | VDD = 4.75V, IOH = -5.2mA | 2.4 |     | V     |&lt;/p&gt;
&lt;p&gt;对 VOL/IOL &amp;amp; VOH/IOH 的测试，主要是验证当施加拉或灌电流时，VOL/VOH 是否处于正确的电平（在输出一定的电流下能不能达到电平阈值）。测试方法有静态法与动态法。&lt;strong&gt;静态法是对引脚施加电流，再逐一测电压；动态法是在功能测试中提供 VREF，形成动态负载电流再测电压的。&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;VOL/IOL 测试 - 串行静态法&lt;/h3&gt;
&lt;p&gt;使用串行静态法测量 VOL/IOL 的测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728150542.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要先通过预处理，将待测引脚设置为低电平输出。&lt;/li&gt;
&lt;li&gt;向引脚施加恒定的 IOH，等待 1-5 毫秒再测量（在 PMU 设 delay）。&lt;/li&gt;
&lt;li&gt;检测引脚电压&lt;/li&gt;
&lt;li&gt;高于 VOL（+0.4V）：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IOL 是一个正电流值，因为它是从 PMU 流向 DUT。&lt;/li&gt;
&lt;li&gt;因为施加的是恒流，所以需要设置电压钳，如果测出电压比钳位电压还低，有可能是逻辑设成了高电平，触发了对电源保护二极管正偏。&lt;/li&gt;
&lt;li&gt;VDDmin 参数表示能使 DUT 正常进行测试的最小供电电压，再小将无法得出准确的测试结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;VOH/IOH 测试 - 串行静态法&lt;/h3&gt;
&lt;p&gt;使用串行静态法测量 VOH/IOH 的测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728143124.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要先通过预处理，将待测引脚设置为高电平输出。&lt;/li&gt;
&lt;li&gt;向引脚施加恒定的 IOH，等待 1-5 毫秒再测量（在 PMU 设 delay）。&lt;/li&gt;
&lt;li&gt;检测引脚电压&lt;/li&gt;
&lt;li&gt;低于 VOH（+2.4V）：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为 IOL 是从 PMU 流向 DUT，所以它是一个负值。&lt;/li&gt;
&lt;li&gt;因为施加的是恒流，所以需要设置电压钳，如果测出电压比钳位电压还高，有可能是引脚逻辑设成了低电平，触发了对地保护二极管正偏。&lt;/li&gt;
&lt;li&gt;VDDmin 参数表示能使 DUT 正常进行测试的最小供电电压，再小将无法得出准确的测试结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;IIL/IIH&lt;/h2&gt;
&lt;p&gt;IIL 指的是输入引脚（I）逻辑为低电平（L）时，允许的最大拉电流（I，source，从外部经引脚往 DUT 的 VSS 漏），用来看引脚对电源的漏电流会不会超标，也是看隔离的程度，IIH 指的是输入引脚（I）逻辑为高电平（H）时，允许的最大灌电流（I，sink，从 DUT 的 VDD 经引脚往外漏）。举个例子，下表是 256 x 4 Static RAM 的 IIL 和 IIH 参数：&lt;/p&gt;
&lt;p&gt;| Parameter | Description        | Test Conditions        | Min | Max | Units |
| --------- | ------------------ | ---------------------- | --- | --- | ----- |
| IIL, IIH  | Input Load Current | Vss ≤ Vin ≤ VDD(5.25V) | -10 | +10 | µA    |&lt;/p&gt;
&lt;p&gt;IIL 衡量的是输入引脚到 VDD 的电阻值；IIH 衡量的是输入引脚到 VSS 的电阻值。该测试是为了确保输入阻抗满足设计需求、输入电流不会超标。IIL/IIH 可用串行 / 并行 / 合并法测试，也可用功能测试的方法。串行法对引脚一个一个测试，准确但相对耗时间。&lt;/p&gt;
&lt;p&gt;另外，IIL/IIH 测试通常仅能在纯输入引脚上执行。如果遇到双向引脚，则需要加输出负载，将其电平稳定拉高或拉低，避免在保护器件上产生电流，影响测试结果。&lt;/p&gt;
&lt;h3&gt;IIL/IIH 测试 - 串行静态法&lt;/h3&gt;
&lt;p&gt;使用串行法测试输入引脚 IIL 的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729100620.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要供 VDDmax（最差情况）的电源给 DUT。&lt;/li&gt;
&lt;li&gt;将 DUT 所有输入引脚设高电平（VIH）。&lt;/li&gt;
&lt;li&gt;使用 PMU 将单个输入引脚拉低到 VSS。&lt;/li&gt;
&lt;li&gt;等待 1~5 微秒，检测电流值。&lt;/li&gt;
&lt;li&gt;低于 IIL（-10µA）：Fail（灌进 DUT 的电流超标）&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用串行法测试输入引脚 IIH 的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729100739.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要供 VDDmax 的电源给 DUT。&lt;/li&gt;
&lt;li&gt;将 DUT 所有输入引脚设低电平（VIL）。&lt;/li&gt;
&lt;li&gt;使用 PMU 将单个输入引脚拉高到 VDDmax。&lt;/li&gt;
&lt;li&gt;等待 1~5 微秒，检测电流值。&lt;/li&gt;
&lt;li&gt;高于 IIH（+10µA）：Fail（流出 DUT 的电流超标）&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;IIL/IIH 测试 - 并行静态法&lt;/h3&gt;
&lt;p&gt;在一些测试系统上，能对漏电流进行并行测量（Parallel Test Method）。并行测漏电流是用多个 PMU 对多个 pin 分别进行测量，所有输入引脚都被强制拉高，并且同时并行测量每个引脚的电流，随后将测试结果与标称值做比较得出结论。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729103317.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要供 VDDmax 的电源给 DUT。&lt;/li&gt;
&lt;li&gt;使用多个 PMU 对每个输入引脚强制拉高到 VDDmax（测 IIH）。&lt;/li&gt;
&lt;li&gt;等待 1~5 微秒，检测电流，对比得出结论。&lt;/li&gt;
&lt;li&gt;随后再拉低至 VSS，重复以上步骤测 IIL。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;并行法的特点是可以同时测量每个引脚单个电流，快速完成 IIL/IIH 测试；缺点是输入引脚间的泄露更难检测到，因为所有输入都保持在相同的水平。&lt;/p&gt;
&lt;h3&gt;IIL/IIH 测试 - 合并静态法&lt;/h3&gt;
&lt;p&gt;合并测试（Ganged Method）指的是将所有输入引脚合并为一个引脚，用一个 PMU 测漏电流的总和。测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729104449.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;组合测试方法与以上类似。其电流总限额是单个引脚的标称值，如果测试结果超限，则必须换回串行测试重测，这种测试对 CMOS 器件（高阻抗输入）测试效果比较好。&lt;/p&gt;
&lt;h2&gt;IOZL/IOZH&lt;/h2&gt;
&lt;p&gt;高阻电流 IOZ 指输出引脚（O）高阻态（Z）下的漏电流（I）。其中，IOZL 指引脚低电平（L）状态时的漏电流；IOZH 指高电平（H）状态时的漏电流。用来看引脚关断时漏电流会不会超标。&lt;/p&gt;
&lt;p&gt;此参数是确保 &lt;strong&gt;双向或高阻输出引脚能正常关断（输出高阻态）&lt;/strong&gt;。IOZL 测的是输出高阻状态时，引脚对 VDD 的阻值；IOZH 测的是引脚对 VSS 的阻值。通常在规格书内是这么表示的：&lt;/p&gt;
&lt;p&gt;| Parameter | Description           | Test Conditions                         | Min  | Max  | Units |
| --------- | --------------------- | --------------------------------------- | ---- | ---- | ----- |
| IOZ       | Output Current High-Z | VSS ≤ Vout ≤VDD(5.25V), Output Disabled | -2.0 | +2.0 | µA    |&lt;/p&gt;
&lt;h3&gt;IOZL/IOZH 测试 - 串行静态法&lt;/h3&gt;
&lt;p&gt;串行静态测试 IOZL/IOZH 的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220807202447.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先需要给器件供 VDD 的电源。&lt;/li&gt;
&lt;li&gt;将器件引脚预设为高阻状态，使用 PMU 强制将引脚拉高 / 拉低。&lt;/li&gt;
&lt;li&gt;测量引脚的电流值&lt;/li&gt;
&lt;li&gt;低于 -IOZ（-2µA）：Fail&lt;/li&gt;
&lt;li&gt;高于 +IOZ（+2µA）：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;串行测试的优点是可以准确测量单个引脚的电流值，缺点是慢。另外，此测试需要设置钳位电流。&lt;/p&gt;
&lt;h3&gt;IOZL/IOZH 测试 - 并行静态法&lt;/h3&gt;
&lt;p&gt;并行静态法即多个 PMU 同时对多个引脚进行，此处不多赘述，其优点是快。&lt;/p&gt;
&lt;h2&gt;VI（Input Clamp，输入电压钳）&lt;/h2&gt;
&lt;p&gt;输入电压钳 VI 指的是当在 TTL 器件（非 CMOS）输入引脚（I）上施加负电流（抽取电流）时，在引脚上测得的电压（V）。此测试的目的是 &lt;strong&gt;验证三极管发射极和地之间钳位二极管的完整性&lt;/strong&gt;。它在规格书上是这样表示的：&lt;/p&gt;
&lt;p&gt;| Parameter | Description         | Test Conditions        | Min | Max  | Units |
| --------- | ------------------- | ---------------------- | --- | ---- | ----- |
| VI        | Input Clamp Voltage | VCC = Min, Iin = -18mA |     | +1.5 | V     |&lt;/p&gt;
&lt;h3&gt;VI 测试 - 串行静态法&lt;/h3&gt;
&lt;p&gt;串行静态法测 VI，测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729145425.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要确保这是个 TTL 器件的输入引脚，然后供 VCCmin 的电源。&lt;/li&gt;
&lt;li&gt;在设置了电压钳后，使用 PMU 抽取 -15mA~-20mA 的电流。&lt;/li&gt;
&lt;li&gt;测量引脚上的电压值&lt;/li&gt;
&lt;li&gt;低于 VI（-1.5V）：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;IOS（短路输出电流）&lt;/h2&gt;
&lt;p&gt;短路输出电流表示的是当输出引脚（O）在短路条件（S）下产生的电流（I）。目的是 &lt;strong&gt;衡量当引脚输出高电平，但被短路至零电压时的输出阻抗，确保在最坏的负载条件下，输出电流也不会太大&lt;/strong&gt;；也表示了 DUT 引脚可提供容性负载充电的最大瞬时电流，可据此计算上升时间。IOS 在规格书中是这样表示的：&lt;/p&gt;
&lt;p&gt;| Parameter | Description                  | Test Conditions                                                                  | Min | Max | Units |
| --------- | ---------------------------- | -------------------------------------------------------------------------------- | --- | --- | ----- |
| IOS       | Output Short Circuit Current | Vout = 0V, VDD = 5.25V, *Short only 1 output at a time for no longer than 1 sec | -85 | -30 | mA    |&lt;/p&gt;
&lt;h3&gt;IOS 测试 - 串行静态法&lt;/h3&gt;
&lt;p&gt;测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729152549.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;供 VDDmax 的电源，对器件预处理，使得引脚输出高电平。&lt;/li&gt;
&lt;li&gt;用 PMU 将引脚拉低至 0V，测量输出电流并与标称值对比，得出结论。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在对 IOS 的测试中，需要有合理的逻辑以避免热切换。需要首先将 PMU 设置为强制零电流的电压测量模式，连接到 DUT 输出，测量并保存 DUT 的 VOH 电压，随后断开连接并设定 PMU 为拉高至刚刚的 VOH 电压，然后重新连接 DUT（此时两端电压都是 VOH），随后再让 PMU 拉低为 0V，测量电流值。测量完成后，PMU 要恢复拉高到 VOH 才能断开连接。这样可以确保继电器在开关切换时，两端的电压是一致的。&lt;/p&gt;
&lt;p&gt;导致测试不通过的因素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;超过上限值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;输出阻抗太高，导致电流绝对值不足。&lt;/li&gt;
&lt;li&gt;夹具本身有电阻。&lt;/li&gt;
&lt;li&gt;没有经过正确的预处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低于下限值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;输出阻抗太低，导致电流绝对值过大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Resistive Inputs（上下拉阻性输入）&lt;/h2&gt;
&lt;p&gt;有些输入引脚可能有主动上拉、下拉结构，需要保证 &lt;strong&gt;输入 Buffer 的上下拉电阻路径正常&lt;/strong&gt;。只能串行测试，因为不同引脚内部上下拉结构可能不一样。引脚结构的示意图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729130655.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Output Fanout（输出扇出能力）&lt;/h2&gt;
&lt;p&gt;扇出（Fanout）能力是指输出引脚根据其电压电流参数，驱动多个输入引脚的能力。也就是 &lt;strong&gt;引脚的带驱能力，是衡量一个输出引脚可以带得动多少个输入引脚的指标&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729132621.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图，这个 TTL 输出可以拉高大约 17 个输入引脚，或者拉低 30 个输入引脚。在规格书中，引脚的参数会这样表示出来：&lt;/p&gt;
&lt;p&gt;| Parameter | Description             | Test Conditions           | Min  | Max | Units |
| --------- | ----------------------- | ------------------------- | ---- | --- | ----- |
| VOH       | Output HIGH Voltage     | VCC = 4.75V, IOH = -2.6mA | 2.4  |     | V     |
| VOL       | Output LOW Voltage      | VCC = 4.75V, IOH = 24mA   |      | 0.4 | V     |
| IIL       | Input LOW Load Current  | Vin = 0.4V                | -800 |     | µA    |
| IIH       | Input HIGH Load Current | Vin = 2.4V                |      | 150 | µA    |&lt;/p&gt;
&lt;p&gt;扇出能力在 TTL 和 CMOS 器件之间差别很大，因为 CMOS 输入阻抗高，所以理论上一个 CMOS 输出可驱动任意多个 CMOS 输入。但 CMOS 输入引脚有寄生电容，连接越多输入，电容越大，在高低电平切换时会存在电容充放电效应，产生延时。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《The Fundamentals Of Digital Semiconductor Testing》&lt;/li&gt;
&lt;li&gt;《DC Test Theory》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-DC%E5%8F%82%E6%95%B0%E6%B5%8B%E8%AF%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-DC%E5%8F%82%E6%95%B0%E6%B5%8B%E8%AF%95/</guid>
      
    </item>
    
    <item>
      <title>半导体测试基础 - OS 测试</title>
      
      
      
      
      <description>&lt;p&gt;开路与短路测试（OS，Open-Short Test，也称连续性或接触测试），用于 &lt;strong&gt;验证测试系统与器件所有引脚的电接触性，且不会与其他引脚、与电源（地）发生短路&lt;/strong&gt;。OS 测试能快速检测出 DUT 是否存在电性物理缺陷，如引脚短路、bond wire 缺失、引脚的静电损坏、以及制造缺陷等；也能检测出与测试配件有关的问题，如 ProbeCard 或器件的 Socket 接触有问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OS 测试的过程是借用对 VDD 和对地保护二极管进行的&lt;/strong&gt;。一般有两种测试方法，一种是用 PMU 灌入电流测电压；一种是用功能测试的方法提供 VREF，形成动态负载电流再测电压的。&lt;/p&gt;
&lt;h3&gt;OS 测试 - 静态法&lt;/h3&gt;
&lt;p&gt;串行 / 并行静态法测试 OS，实际上就是灌入电流测电压，因为这个电流会让上下某个保护二极管发生正偏，所以可以通过检测正偏压降来测出开短路异常。&lt;strong&gt;施加正电流使对电源二极管正偏&lt;/strong&gt; 的测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220805165031.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 DUT 所有引脚（包括电源和地）接地。&lt;/li&gt;
&lt;li&gt;PMU 给引脚施加电流（约 100µA）。&lt;/li&gt;
&lt;li&gt;检测引脚电压&lt;/li&gt;
&lt;li&gt;高于 VOH（+1.5V）：Fail（Open）&lt;/li&gt;
&lt;li&gt;低于 VOL（+0.2V）：Fail（Short）&lt;/li&gt;
&lt;li&gt;其他区间（正偏电压，比如 0.65V）：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;施加负电流使对地二极管正偏&lt;/strong&gt; 的测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728142155.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 DUT 所有引脚（包括电源和地）接地。&lt;/li&gt;
&lt;li&gt;PMU 给引脚施加电流（约 -100µA）。&lt;/li&gt;
&lt;li&gt;检测引脚电压&lt;/li&gt;
&lt;li&gt;高于 VOH（-0.2V）：Fail（Short）&lt;/li&gt;
&lt;li&gt;低于 VOL（-1.5V）：Fail（Open）&lt;/li&gt;
&lt;li&gt;其他区间（正偏后的压降约 -0.65V）：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因 PMU 提供的是恒流，所以需要设置电压钳，以钳制住开路引脚测试时产生的电压，否则电压会无穷大。如果钳制电压设置为 3V，那么当一个引脚为开路时，其测试结果就是 3V。&lt;/p&gt;
&lt;p&gt;这种方法仅限于测试信号 IO 引脚，不能用于测试电源引脚。电源引脚虽然也可在开路条件下进行测试，但因其内部结构不同，需要设定不同的测试限度。&lt;/p&gt;
&lt;p&gt;综上，OS 静态测试的特点是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;串行法一次只测一个引脚，步骤简单但效率低，适用于引脚少的 DUT。&lt;/li&gt;
&lt;li&gt;并行法需要测试系统有 PPMU，缺点是检测不出相邻引脚短路，解决方法是分两次测试（比如第一次测 1357 引脚，第二次测 2468 引脚）。&lt;/li&gt;
&lt;li&gt;施加电流，测量电压。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《The Fundamentals Of Digital Semiconductor Testing》&lt;/li&gt;
&lt;li&gt;《DC Test Theory》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-OS%E6%B5%8B%E8%AF%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-OS%E6%B5%8B%E8%AF%95/</guid>
      
    </item>
    
    <item>
      <title>半导体测试基础 - 功能测试</title>
      
      
      
      
      <description>&lt;p&gt;功能测试（Functional Test）主要是验证逻辑功能，是运用测试矢量和测试命令来进行的一种测试，相比于纯 DC 测试而言，组合步骤相对复杂且耦合度高。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220807004113.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在功能测试阶段时，测试系统会以周期为单位，将测试矢量输入 DUT，提供预测的结果并与输出的数据相比较，如果实际的结果与测试矢量预测值不相符，则认为不通过。&lt;/p&gt;
&lt;h2&gt;基本概念&lt;/h2&gt;
&lt;h3&gt;测试矢量（Test Vectors）&lt;/h3&gt;
&lt;p&gt;测试矢量也称测试模式（Test Pattern），可以理解为器件被设计逻辑功能的输入输出真值表。Test Vectors 强调时序，一般是一系列输入输出的组合。一般用 0/1 表示输入低 / 高电平，用 L/H/Z 表示输出低电平 / 高电平 / 高阻态，用 X 表示既无输入也无输出。&lt;/p&gt;
&lt;h2&gt;总功能测试&lt;/h2&gt;
&lt;h2&gt;各种参数的功能测试法&lt;/h2&gt;
&lt;h3&gt;OS 测试 - 功能测试法&lt;/h3&gt;
&lt;p&gt;开短路不属于功能，但也可以用功能测试的方法进行测试，关闭 PMU 和 Driver，用 Current Load 和 Voltage Receiver 进行测试。测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220802192823.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将除待测引脚外的所有引脚接地（电源和信号引脚）。&lt;/li&gt;
&lt;li&gt;定义 VOL/VOH（比如 0.2V/1.5V）。&lt;/li&gt;
&lt;li&gt;将待测引脚设置为输出模式，并关断此引脚（高阻 Z）。&lt;/li&gt;
&lt;li&gt;提供 VREF（3V），形成动态负载电流（约 400µA），检测引脚上的电压&lt;/li&gt;
&lt;li&gt;高于 VOH（+1.5V）：Fail（Open）&lt;/li&gt;
&lt;li&gt;低于 VOL（+0.2V）：Fail（Short）&lt;/li&gt;
&lt;li&gt;高阻态（正偏后的压降约 0.65V）：Pass&lt;/li&gt;
&lt;li&gt;复位引脚状态，接着测下一个引脚。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本测试的矢量模式示例如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00000   /* cycle 1 将所有引脚接地 */
Z0000   /* cycle 2 测试第 1 个引脚的保护二极管 */
0Z000   /* cycle 3 测试第 2 个引脚的保护二极管 */
00Z00   /* cycle 4 测试第 3 个引脚的保护二极管 */
000Z0   /* cycle 5 测试第 4 个引脚的保护二极管 */
0000Z   /* cycle 6 测试第 5 个引脚的保护二极管 */
/* 下一个周期将会被单独执行 */
ZZZZZ   /* cycle 7 关断所有引脚并测试它们 */&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;正常引脚电压变化与采样的示意图如下。采样窗口设置在 0.9µs、持续时长 0.01µs 是为了让电压上升到稳定再采样：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220803011219.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来测对地保护二极管。只需要测是否开路（如果由短路的情况，那必然过不了前面的测试）。功能测试法测对地二极管的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220803012747.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这次的矢量测试，只需跑一次前面的第 7 个周期（&lt;code&gt;ZZZZZ&lt;/code&gt;），即可并行测试所有对地二极管。&lt;/p&gt;
&lt;p&gt;（拉低引脚和地用的是 DPS；如果 Fail Open 的话，测出来的电压是 VREF 而非钳位电压，不要跟 DC 方法搞混了。）&lt;/p&gt;
&lt;h3&gt;VOL/IOL &amp;amp; VOL/IOH 测试 - 功能测试法&lt;/h3&gt;
&lt;p&gt;测试示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220805151754.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;供电 VDDmin（？？）。&lt;/li&gt;
&lt;li&gt;设置 VREF（量程中间值），将形成动态负载电流。&lt;/li&gt;
&lt;li&gt;执行功能测试，监控引脚的电压&lt;/li&gt;
&lt;li&gt;低于 VOH Spec 或高于 VOL Spec：Fail&lt;/li&gt;
&lt;li&gt;高于 VOL Spec：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;VIL/VIH 测试 - 功能测试法&lt;/h3&gt;
&lt;p&gt;VIL/VIH 是看 DUT 能不能正常识别输入的逻辑。用功能测试法测 VIL/VIH 的示意图如下（假设此芯片左边是输入引脚，右边是输出，输入输出逻辑电平同相）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220803202212.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;用功能测试法测 VIL/VIH 的流程是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要供 VDDmax 的电源给 DUT。&lt;/li&gt;
&lt;li&gt;按照 VIL/VIH 标称值给引脚输入电压，让其他的参数满足一定余量。&lt;/li&gt;
&lt;li&gt;执行功能测试，监控输出引脚的电压&lt;/li&gt;
&lt;li&gt;低于 VOH Spec：Fail&lt;/li&gt;
&lt;li&gt;高于 VOL Spec：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;li&gt;供 VDDmin 的电源给 DUT，并重复以上的流程。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果遇到测试不通过的情况，如果不能定位到错误所在，可以先给多一点余量，排除因其他因素导致的问题。比如给 VIL 最优低电平（0V），给 VIH 最优高电平（VDD），看看是否能按流程通过测试，随后再逐步赋 VIH/VIL 原始值以排除问题。&lt;/p&gt;
&lt;h3&gt;IOZL/IOZH 测试 - 功能测试法&lt;/h3&gt;
&lt;p&gt;使用功能测试法测试 IOZL/IOZH 的示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220805153515.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给 DUT 供电 VDD，设置比较器的值为 VOL/VOH。&lt;/li&gt;
&lt;li&gt;设置 VREF，形成动态负载电流，测引脚电压&lt;/li&gt;
&lt;li&gt;高于 VOH Spec：Fail&lt;/li&gt;
&lt;li&gt;低于 VOL Spec：Fail&lt;/li&gt;
&lt;li&gt;其他区间：Pass&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《The Fundamentals Of Digital Semiconductor Testing》&lt;/li&gt;
&lt;li&gt;《DC Test Theory》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
      
    </item>
    
    <item>
      <title>半导体测试基础 - 基本概念</title>
      
      
      
      
      <description>&lt;p&gt;随着芯片集成度越来越高，手动测试已无法满足需求，因此要用到自动化测试设备（ATE，Automated Test Equipment）。因为现在的芯片原来越复杂，普通的 Bench 测试没法满足需求。ATE 可检测集成电路功能之完整性，是集成电路生产制造最终的流程，确保产品质量。芯片测试算是半导体产业链上游里面最末端的一个组成部分。受测试的器件主要分几类：储器、数字电路、模拟电路和混合信号电路。&lt;/p&gt;
&lt;p&gt;ATE 内部有很多子系统，包括提供高低电平的驱动电路、可编程的电流负载、检测输出电压的比较器、PMU 连接电路、高速电流比较器、高速开关等。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220805163322.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出，测试系统主要由输入、输出和动态负载三部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;输入部分&lt;/strong&gt;：给 DUT 提供 VIL/VIH 电压。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出部分&lt;/strong&gt;：将 DUT 的输出电压与 VOL/VOH 作比较。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态负载&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;通过加载 IOL/IOH 电流，得到输出电压，与 VOL/VOH 作比较。&lt;/li&gt;
&lt;li&gt;直接将输出电流与 ILow/IHigh 作比较（一般高端机台才有）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试最基础的是测 DC 和 AC 参数。DC 参数用的方法可以是 Static，就是用 PE 卡的 Driver 和 PMU，然后 Force V Measure I 或 Force I Measure V ；也可以用 Functional 的方法，就是 Current Load 和 Voltage Comparator，然后跑 Pattern 来测试。&lt;/p&gt;
&lt;h2&gt;信号的输入与输出&lt;/h2&gt;
&lt;p&gt;信号是如何生成并输入 DUT 的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220807005511.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;信号是如何从 DUT 读出并测试的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220807005517.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;输入信号的格式&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220806184824.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RZ（Return to Zero）&lt;/strong&gt;：归零码，在一个周期内用二进制传输数据位，当数据位脉冲结束后，需要维持低电平。这种编码能同时传输时钟与数据信号，但因为一部分带宽被归零占用，所以传输效率相对不高。上升下降沿的位置可受 Edge Timing 控制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RO（Return to One）&lt;/strong&gt;：归一码，与 RZ 相反，需要维持在高电平。上升下降沿的位置可受 Edge Timing 控制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NRZ（Non Return to Zero）&lt;/strong&gt;：不归零码与 RZ 的区别是它不必归零，所以一个周期可以全部用来传输数据，带宽利用率 100%。如果传输低速异步数据，可以不加时钟线，但要约定通信波特率（如 UART）；传输高速同步数据，需要另外配时钟线。NRZ 不受 Edge Timing 的控制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNRZ（Delayed Non Return to Zero）&lt;/strong&gt;：延时不归零码是 NRZ 加了时间延迟的波形。延时的时间受 Edge Timing 控制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SBC（Surrounded By Complement ）&lt;/strong&gt;：补码环绕相当于 RZ 和 RO 的叠加。它每个周期内最多可以有 3 个边沿，在 T0 时反转数据，延迟一定时间后表现为预设的值，维持一定时间后又反转回去。SBC 多用于建立 / 保持信号的控制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ZD（Impedance Drive）&lt;/strong&gt;：阻抗驱动用于控制引脚开启或关断（高阻态）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;时钟信号通常使用 RZ/RO 格式，上升沿有效的信号（如片选 CS 或读 READ）常使用 RZ 格式；下降沿有效的信号（如输出始能 OE 常使用 RO 格式；拥有建立和保持时间要求的数据信号常使用 SBC 格式；其他的输入信号则可以使用 NRZ 或 DNRZ 格式。&lt;/p&gt;
&lt;h3&gt;输出信号格式&lt;/h3&gt;
&lt;h4&gt;高低电平输出&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220806200604.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;引脚输出高低电平逻辑时，高电平必须至少要比 VOH 高，低电平至少比 VOL 低。&lt;/p&gt;
&lt;h4&gt;高阻态输出&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220806201343.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DUT 引脚由外部负载将电压拉到 VOL 与 VOH 之间，不能输出电压电流。&lt;/p&gt;
&lt;h4&gt;负载电流输出&lt;/h4&gt;
&lt;p&gt;DUT 有些引脚可以输出负载电流。如果测试系统有可编程电流负载就可以直接测试，如果没有就可能要外加电阻测试。负载电流输出需要在 VOL/VOH 达标的情况下输出指定的 IOL/IOH 电流。&lt;/p&gt;
&lt;h2&gt;常用术语解释&lt;/h2&gt;
&lt;h3&gt;晶圆、晶粒与封装&lt;/h3&gt;
&lt;p&gt;芯片设计制造的流程：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220726161704.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;晶圆（Wafer），晶粒（Die，复数 Dice，也称裸片）与封装后的芯片（Package Device）的关系如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220726162316.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;经过测试和墨点标示的晶圆：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220729161745.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;CP 测试与 FT 测试&lt;/h3&gt;
&lt;p&gt;CP（Chip Probe）测试是芯片还在 Wafer 阶段时，就通过探针卡扎到芯片管脚上对芯片进行性能及功能测试。FT（Final Test）是芯片在封装完成以后进行的最终测试。&lt;/p&gt;
&lt;h3&gt;测试设备术语&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DUT（Device Under Test）&lt;/strong&gt;：待测设备，外部信号通过 DUT 的引脚对其进行测试。也称为 UUT（Device Under Test）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DPS（Device Power Supplies）&lt;/strong&gt;：为 DUT 直接提供电压与电流的设备。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PMU（Precision Measurement Unit）&lt;/strong&gt;：精密测量单元，用于精确测量器件的直流特性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PPMU（Per Pin Measurement Unit）&lt;/strong&gt;：每个引脚上都有 PMU 用于测量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DIB（Device Interface Board）&lt;/strong&gt;：设备接口板，也称 LOAD board。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PIB（Probe Interface Board）&lt;/strong&gt;：探针接口板，用于 Wafer Probe。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PDP（Prober docking plate）&lt;/strong&gt;：探针台对接板。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PROBE CARD&lt;/strong&gt;：带探针的 PCB，用于 Wafer Probe。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BINNING&lt;/strong&gt;：根据测试结果对 DUT 进行筛选。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MANIPULATOR&lt;/strong&gt;：支撑测试头并允许其向多个方向移动的结构。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HANDLER&lt;/strong&gt;：全称 IC pick up and place handler，自动分选机，用于将 DUT 放置在测试头插座中的机械。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PROBER&lt;/strong&gt;：探针台，在测试探针下移动晶片的机械单元。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;测试中的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VCC&lt;/strong&gt;：对 TTL 器件的供电。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VDD&lt;/strong&gt;：对 CMOS 器件的供电。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ICC&lt;/strong&gt;：对 TTL 器件的驱动电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDD&lt;/strong&gt;：对 CMOS 器件的驱动电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VSS&lt;/strong&gt;：提供电源回流路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GND&lt;/strong&gt;：参考电平，在单电源供电设备上常等价于 VSS。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDD&lt;/strong&gt;：从 CMOS 设备中消耗的电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ICC&lt;/strong&gt;：从 TTL 设备中消耗的电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VIH&lt;/strong&gt;：高电平输入时的最低电压限制（不会被识别成 0）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VIL&lt;/strong&gt;：低电平输入时的最高电压限制（不会被识别成 1）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VOH&lt;/strong&gt;：高电平输出时的最低电压限制（不会被识别成 0）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VOL&lt;/strong&gt;：低电平输出时的最高电压限制（不会被识别成 1）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IIH&lt;/strong&gt;：输入引脚逻辑为高电平时，允许的最大灌电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IIL&lt;/strong&gt;：输入引脚逻辑为低电平时，允许的最大漏电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IOH&lt;/strong&gt;：输出引脚逻辑为高电平时，驱动 / 拉电流（source）的大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IOL&lt;/strong&gt;：输出引脚逻辑为低电平时，灌电流（sink）的大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IOZH&lt;/strong&gt;：输出引脚逻辑为高电平且处于高阻状态时，允许通过的最大电流。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IOZL&lt;/strong&gt;：输出引脚逻辑为低电平且处于高阻状态时，允许通过的最大电流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Propagation Delay&lt;/strong&gt;：从信号输入到输出信号发生改变的时间间隔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rise Time&lt;/strong&gt;：从高电平的 10% 上升到 90% 所需的时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fall Time&lt;/strong&gt;：与上面相反。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;热切换（Hot Switching）&lt;/h3&gt;
&lt;p&gt;热切换也称带电流切换，指的是继电器在 &lt;strong&gt;电流在流动时&lt;/strong&gt; 进行开关切换（可以有电压，两边电压保持一致即可）。这样可能会使继电器的寿命变短，或损坏继电器，需要通过编程来避免这样的情况。&lt;/p&gt;
&lt;h3&gt;闩锁效应（Latch-up）&lt;/h3&gt;
&lt;p&gt;当对某个引脚施加过高的电压时，导致 CMOS 器件中出现大电流，造成局部电路受损甚至烧毁。&lt;/p&gt;
&lt;h3&gt;固定型故障（Stuck-At Fault）&lt;/h3&gt;
&lt;p&gt;固定型故障（SAF）指的是信号引脚由于制造缺陷（defect），被固定在了 0/1/Z 电平的状态，从而造成了故障。&lt;/p&gt;
&lt;h3&gt;Binning&lt;/h3&gt;
&lt;p&gt;Binning 是根据测试结果对 DUT 进行筛选分组，举个例子：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728223700.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hard Binning 指的是使用 Handler 一类的机器分类为两堆；Soft Binning 指的是在软件内记录区分不良品，不在物理上分类。&lt;/p&gt;
&lt;p&gt;Binning 的过程至少需要有两个 bin，以区分某个测试结果通过或者不通过。&lt;/p&gt;
&lt;h3&gt;测试流程（Program Flow）&lt;/h3&gt;
&lt;p&gt;测试流程的设计对整个测试而言十分重要。比如说某些 DC 测试需要预处理（设定特定的设备逻辑，例如功能测试），少了预处理将导致后续步骤的结果毫无意义。&lt;/p&gt;
&lt;p&gt;测试流程的设计需要考虑很多因素：测试量的大小、需要测试哪些参数、怎么去进行 Binning 等待。通常会使用流程图来呈现，确保测试流程满足需求。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220728131317.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本测试项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;接触 / 连续性测试（Contact/Continuity Test）&lt;/strong&gt;：检查器件引脚中开路 / 短路问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直流特性测试（DC PARAMETRICS TEST）&lt;/strong&gt;：验证设备 DC 电流和电压参数，包括 IDD。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字功能测试（DIGITAL FUNCTIONAL TEST）&lt;/strong&gt;：测试 DUT 的逻辑功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;交流时序测试（AC TIMING TEST）&lt;/strong&gt;：验证 AC 规格，包括输出信号质量和信号时序参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混合信号测试（MIXED SIGNAL TEST）&lt;/strong&gt;：验证 DUT 的模拟和数字电路的逻辑。&lt;/li&gt;
&lt;li&gt;其他的测试项：射频器件（RF Devices）、汽车器件（Automotive Devices）、存储器件（Memory Devices）、电源管理器件（Power Management Devices）、RFID 器件、高速数字器件（High Speed Digital devices）等的测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《The Fundamentals Of Digital Semiconductor Testing》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pdf.dfcfw.com/pdf/H3_AP201803301115267697_1.pdf&#34;&gt;半导体设备系列研究三 - 半导体检测设备：芯与屏相融，光与电交汇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhµAnlan.zhihu.com/p/125519142&#34;&gt;闩锁效应（Latch-up）详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eefocus.com/ansonguo/blog&#34;&gt;https://www.eefocus.com/ansonguo/blog?p=1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E5%8D%8A%E5%AF%BC%E4%BD%93%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      
    </item>
    
    <item>
      <title>CubeMX 与 CubeIDE 避坑</title>
      
      
      
      
      <description>&lt;h2&gt;项目名称路径不能是中文&lt;/h2&gt;
&lt;p&gt;如题，新建项目的名称与路径，都必须是英文的，不然可能会出现奇奇怪怪的错误。&lt;/p&gt;
&lt;h2&gt;默认关闭调试端口&lt;/h2&gt;
&lt;p&gt;问题描述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检测到 ST-Link，却检测不到板子，提示 &lt;code&gt;No target connected&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;首次能成功下载，第二次及以后就不行了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CubeMX 把调试端口给关了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法（本次）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用 &lt;strong&gt;STM32 ST-LINK Utility&lt;/strong&gt; 工具，刷出厂程序救回来&lt;/li&gt;
&lt;li&gt;或者用 &lt;a href=&#34;https://www.jianshu.com/p/cea16b641c3d&#34;&gt;&lt;strong&gt;这篇文章&lt;/strong&gt;&lt;/a&gt; 提供的方法（通过 Keil）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法（长远）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 CubeMX 的 SYS 设置中，将 Debug 选项更改为 Serial Wire（SW）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200531162352.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;STM32CubeIDE 中文注释乱码&lt;/h2&gt;
&lt;p&gt;如果代码是从 Keil 导入的，需要先确保原本的编码是 GB2312。&lt;/p&gt;
&lt;p&gt;依次点击菜单栏 - &lt;code&gt;Window&lt;/code&gt; - &lt;code&gt;Preferences&lt;/code&gt; - &lt;code&gt;General&lt;/code&gt; - &lt;code&gt;Apperance&lt;/code&gt; - &lt;code&gt;Colors and Fonts&lt;/code&gt; - &lt;code&gt;C/C++&lt;/code&gt; - &lt;code&gt;Editor&lt;/code&gt; - &lt;code&gt;C/C++ Editor Text Font&lt;/code&gt;，点击右侧的 &lt;code&gt;Edit&lt;/code&gt;，确认字体支持中文（如微软雅黑），并确认脚本为 &lt;code&gt;中文 GB2312&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果还是没有解决，那么可以在左侧文件树中，右键项目名称，点击最后的属性 &lt;code&gt;Properties&lt;/code&gt;，将 &lt;code&gt;Resource&lt;/code&gt; 面板中的字体编码改为 &lt;code&gt;GBK&lt;/code&gt;（如果没得选，直接输入即可），保存即可解决。&lt;/p&gt;
&lt;h2&gt;STM32CubeIDE 汉化&lt;/h2&gt;
&lt;p&gt;打开链接 &lt;strong&gt;&lt;a href=&#34;http://mirrors.ustc.edu.cn/eclipse/technology/babel/update-site/&#34;&gt;http://mirrors.ustc.edu.cn/eclipse/technology/babel/update-site/&lt;/a&gt;&lt;/strong&gt; ，点选到最新的数据目录下（比如我可选的是 &lt;code&gt;mirrors.ustc.edu.cn/eclipse/technology/babel/update-site/&lt;/code&gt;），复制此地址链接。&lt;/p&gt;
&lt;p&gt;在 STM32CubeIDE 菜单栏选择 &lt;code&gt;Help&lt;/code&gt; - &lt;code&gt;Install New Software&lt;/code&gt;，点击 &lt;code&gt;Add&lt;/code&gt;，在 &lt;code&gt;Name&lt;/code&gt; 栏填入 &lt;code&gt;language&lt;/code&gt;；&lt;code&gt;Location&lt;/code&gt; 栏填入刚刚复制的链接，然后点击添加，在弹出来的界面选择简体中文语言包，安装后按提示重启软件即可。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/cea16b641c3d&#34;&gt;STM32 调试器配置异常导致的问题与解决方法（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wct3344142/article/details/104142863&#34;&gt;STM32cubeIDE 环境配置安装-汉化-主题设置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/CubeMX%E4%B8%8ECubeIDE%E9%81%BF%E5%9D%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/CubeMX%E4%B8%8ECubeIDE%E9%81%BF%E5%9D%91/</guid>
      
    </item>
    
    <item>
      <title>C 与 STM32 代码规范</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/docs/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83V3.0.pdf&#34;&gt;代码规范 V3.0.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/C%E4%B8%8ESTM32%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/C%E4%B8%8ESTM32%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</guid>
      
    </item>
    
    <item>
      <title>C 与 STM32 常用宏定义</title>
      
      
      
      
      <description>&lt;p&gt;在嵌入式开发中，有些通用的宏定义，可以让项目兼容性和可移植性更佳。&lt;/p&gt;
&lt;h2&gt;防止头文件被重复定义&lt;/h2&gt;
&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;ifndef COMDEF_H&lt;/h1&gt;
&lt;h1&gt;define COMDEF_H&lt;/h1&gt;
&lt;p&gt;//头文件内容&lt;/p&gt;
&lt;h1&gt;endif&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;自定义数据类型&lt;/h2&gt;
&lt;p&gt;自定义一些类型，防止由于各种平台和编译器的不同，而产生的类型字节数差异。这样也方便移植。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
typedef unsigned char boolean; /* Boolean value type. */
typedef unsigned long int uint32; /* Unsigned 32 bit value */
typedef unsigned short uint16; /* Unsigned 16 bit value */
typedef unsigned char uint8; /* Unsigned 8 bit value */
typedef signed long int int32; /* Signed 32 bit value */
typedef signed short int16; /* Signed 16 bit value */
typedef signed char int8; /* Signed 8 bit value */&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;获取指定地址上的一个字或字节&lt;/h2&gt;
&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;define MEM_B( x ) ( &lt;em&gt;( (byte &lt;/em&gt;) (x) ) )&lt;/h1&gt;
&lt;h1&gt;define MEM_W( x ) ( &lt;em&gt;( (word &lt;/em&gt;) (x) ) )&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;获取最大 / 最小值&lt;/h2&gt;
&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;define MAX( x, y ) ( ((x) &amp;gt; (y)) ? (x) : (y) )&lt;/h1&gt;
&lt;h1&gt;define MIN( x, y ) ( ((x) &amp;lt; (y)) ? (x) : (y) )&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;返回数组元素的个数&lt;/h2&gt;
&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;define ARR_SIZE( a ) ( sizeof( (a) ) / sizeof( (a[0]) ) )&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;将首字母转换为大写&lt;/h2&gt;
&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;define UPCASE( c ) ( ((c) &amp;gt;= &#39;a&#39; &amp;amp;&amp;amp; (c) &amp;lt;= &#39;z&#39;) ? ((c) - 0x20) : (c) )&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;判断字符是否为十进制&lt;/h2&gt;
&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;define DECCHK( c ) ((c) &amp;gt;= &#39;0&#39; &amp;amp;&amp;amp; (c) &amp;lt;= &#39;9&#39;)&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;判断字符是否为十六进制&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;c
#define HEXCHK( c ) ( ((c) &amp;gt;= &#39;0&#39; &amp;amp;&amp;amp; (c) &amp;lt;= &#39;9&#39;) ||\
((c) &amp;gt;= &#39;A&#39; &amp;amp;&amp;amp; (c) &amp;lt;= &#39;F&#39;) ||\
((c) &amp;gt;= &#39;a&#39; &amp;amp;&amp;amp; (c) &amp;lt;= &#39;f&#39;) )&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4YPwxtBX6Qdlz9fGKvSCUg&#34;&gt;嵌入式工程师常用的宏定义&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/C%E4%B8%8ESTM32%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/C%E4%B8%8ESTM32%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - CAN 通信 🚧</title>
      
      
      
      
      <description>&lt;p&gt;本篇基于自研 RobotCtrl 开发套件，单片机内核为 STM32F407ZET6，CAN 通信使用 TJA1050 芯片，原理图及详细介绍请见 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;回环测试简单步骤&lt;/h2&gt;
&lt;h3&gt;CubeMX 内配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;根据所用的 CAN 硬件，在左侧栏点开 &lt;code&gt;CAN1&lt;/code&gt; 或 &lt;code&gt;CAN2&lt;/code&gt; 页面，勾选 &lt;code&gt;Activated&lt;/code&gt;，在参数页面，配置这些参数：&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;Prescaler (for Time Quantum)&lt;/code&gt; 设置为 &lt;code&gt;6&lt;/code&gt;，&lt;code&gt;Time Quanta in Bit Segment 1&lt;/code&gt; 和 &lt;code&gt;Time Quanta in Bit Segment 2&lt;/code&gt; 都设置为 &lt;code&gt;3 Times&lt;/code&gt;，这个组合将比特率设置为 1Mbps（最高）。&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;ReSynchronization Jump Width&lt;/code&gt; 配置为 &lt;code&gt;1 Time&lt;/code&gt; ，这是重新同步时可调整的最大步长。&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;Operating Mode&lt;/code&gt; 配置为 &lt;code&gt;Loopback&lt;/code&gt;，用于回环测试。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;NVIC Settings&lt;/code&gt; 标签页，开启 &lt;code&gt;CANx RX0 interrupts&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;代码内配置&lt;/h3&gt;
&lt;p&gt;在项目下创建 &lt;code&gt;can.c&lt;/code&gt;，设置筛选器，这里配置的是列表模式，筛选了拓展 ID &lt;code&gt;0x2233&lt;/code&gt; 和标准 ID &lt;code&gt;0&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```c title=&#34;can.c&#34;/&lt;em&gt;
 * 函数名：CAN_Filter_Config
 * 描述  ：CAN的过滤器 配置
 * 输入  ：无
 * 输出  : 无
 * 调用  ：内部调用
 &lt;/em&gt;/
static void CAN_Filter_Config(void) {
    CAN_FilterTypeDef CAN_FilterTypeDef;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/*CAN筛选器初始化*/
CAN_FilterTypeDef.FilterBank = 0;                       //筛选器组0
CAN_FilterTypeDef.FilterMode = CAN_FILTERMODE_IDLIST;   //工作在列表模式
CAN_FilterTypeDef.FilterScale = CAN_FILTERSCALE_32BIT;  //筛选器位宽为单个32位。
/* 使能筛选器，按照标志的内容进行比对筛选，扩展ID不是如下的就抛弃掉，是的话，会存入FIFO0。 */

CAN_FilterTypeDef.FilterIdHigh = ((((uint32_t) 0x2233 &amp;lt;&amp;lt; 3) | CAN_ID_EXT
        | CAN_RTR_DATA) &amp;amp; 0xFFFF0000) &amp;gt;&amp;gt; 16;        //要筛选的ID高位
CAN_FilterTypeDef.FilterIdLow = (((uint32_t) 0x2233 &amp;lt;&amp;lt; 3) | CAN_ID_EXT
        | CAN_RTR_DATA) &amp;amp; 0xFFFF; //要筛选的ID低位
CAN_FilterTypeDef.FilterMaskIdHigh = 0;     //第二个ID的高位
CAN_FilterTypeDef.FilterMaskIdLow = 0;          //第二个ID的低位
CAN_FilterTypeDef.FilterFIFOAssignment = CAN_FILTER_FIFO0;  //筛选器被关联到FIFO0
CAN_FilterTypeDef.FilterActivation = ENABLE;            //使能筛选器
HAL_CAN_ConfigFilter(&amp;amp;hcan1, &amp;amp;CAN_FilterTypeDef);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
```&lt;/p&gt;
&lt;h3&gt;测试&lt;/h3&gt;
&lt;p&gt;打开设备管理器查看设备是否已经显示，如果没有发现设备，或有黄色的感叹号，请到 ST 官网下载驱动 &lt;a href=&#34;https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-utilities/stsw-stm32102.html&#34;&gt;&lt;strong&gt;STM32 Virtual COM Port Driver&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果安装了驱动还是未能正常识别，可尝试在 CubeMX - &lt;code&gt;Project Manager&lt;/code&gt; - &lt;code&gt;Project&lt;/code&gt; - &lt;code&gt;Linker Settings&lt;/code&gt;，将 &lt;code&gt;Minimum Heap Size&lt;/code&gt; 调整为 &lt;code&gt;0x600&lt;/code&gt; 或更高。&lt;/p&gt;
&lt;p&gt;打开串口工具（波特率任意），可发现发送任意字符，将返回相同字符。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_45209978/article/details/119850600&#34;&gt;STM32CubeMX 与 HAL 库学习--简单的 CAN 回环测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-CAN%E9%80%9A%E4%BF%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-CAN%E9%80%9A%E4%BF%A1/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - DMA</title>
      
      
      
      
      <description>&lt;p&gt;DMA（Direct Memory Access，直接存储器访问）允许不同速度的硬件装置直接沟通，而不需要依赖于 CPU 的大量中断负载。&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;h3&gt;DMA 是什么&lt;/h3&gt;
&lt;p&gt;DMA 提供外设 / 存储器或存储器 / 存储器之间的高速数据传输，其过程中无需占用 CPU 资源。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210404153423.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，STM32F4 系列有两个 DMA 控制器，共 12 通道（DMA1 有 7 个，DMA2 有 5 个）。DMA 控制器与 Cortex-M3 核心共享系统的数据总线。&lt;/p&gt;
&lt;p&gt;简单地理解，当 CPU 懒得把一大串数据转移到另一个地方，或者说它还有更重要的事情要做的时候，就可以把这个任务丢给 DMA 去干，DMA 干完 / 出问题了跟 CPU 说一声就行。&lt;/p&gt;
&lt;h3&gt;DMA 的使用场景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;串口通讯&lt;/strong&gt;：最常见的使用情况，当有大量数据从串口读入或者写入的时候，让 DMA 处理。这样可以将 CPU 解放出来，让 CPU 处理更重要的事情。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ADC&lt;/strong&gt;：一般在需要 ADC 时的通道扫描模式下，可以用 DMA 处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SD 卡读写&lt;/strong&gt;：需要往 SD 卡里面读写大量数据的时候，一般也用 DMA 来处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;DMA 的传输方向&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2P&lt;/strong&gt;（Peripheral to Peripheral，从外设到外设）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2M&lt;/strong&gt;（Peripheral to Memory，从外设到内存）：一般用于传感器通过串口发送读数回单片机。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M2P&lt;/strong&gt;（Memory to Peripheral，从内存到外设）：一般用于单片机通过串口发送数据到执行器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M2M&lt;/strong&gt;（Memory to Memory，从内存到内存）：MCU 内部的数据转移，常见于 Buffer 之间互相转移数据，或者从 Buffer 读写数据。只有 DMA2 能够进行 M2M 操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;DMA 的传输模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DMA_Mode_Normal&lt;/strong&gt;：正常模式。任务完成后就停止 DMA，如果还需使用，要再次手动启动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DMA_Mode_Circular&lt;/strong&gt;： 循环传输模式。当传输结束时，硬件自动会将传输数据量寄存器进行重装，进行下一轮的数据传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;常用的 DMA 函数参考&lt;/h3&gt;
&lt;h4&gt;串口 DMA 发送数据&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;c
HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;功能：串口通过 DMA 发送指定长度的数据。&lt;br&gt;
参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UART_HandleTypeDef *huart&lt;/strong&gt;：UATR 的别名（如 : UART_HandleTypeDef huart1 -&amp;gt; huart1）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*pData&lt;/strong&gt;：需要发送的数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;：发送的字节数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
HAL_UART_Transmit_DMA(&amp;amp;huart1, (uint8_t *)Senbuff, sizeof(Senbuff));  //串口发送 Senbuff 数组&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;串口 DMA 接收数据&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;c
HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;功能：串口通过 DMA 接收指定长度的数据。&lt;br&gt;
参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UART_HandleTypeDef *huart&lt;/strong&gt;：UATR 的别名（如 : UART_HandleTypeDef huart1 -&amp;gt; huart1）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*pData&lt;/strong&gt;：需要存放接收数据的数组&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;：接收的字节数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
HAL_UART_Receive_DMA(&amp;amp;huart1, (uint8_t *)Recbuff, sizeof(Recbuff));  //串口接收，存放到 Recbuff 数组&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;串口 DMA 恢复函数&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;c
HAL_UART_DMAResume(&amp;amp;huart1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;作用：恢复 DMA 的传输&lt;br&gt;
返回值：0（正在恢复）；1（已经完成恢复）&lt;/p&gt;
&lt;h2&gt;DMA 串口传输实验&lt;/h2&gt;
&lt;h3&gt;在 CubeMX 内配置 DMA&lt;/h3&gt;
&lt;p&gt;串口部分的配置请跳转文章 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 串口通信&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;配置完 USART 引脚和 NVIC 中断后，切换到 &lt;code&gt;DMA Settings&lt;/code&gt; 标签页，按照下图进行配置：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210404165541.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击 &lt;code&gt;Add&lt;/code&gt; 添加通道（USART1_RX 与 USART1_TX）&lt;/li&gt;
&lt;li&gt;将两个的优先级都设置为 &lt;code&gt;Medium&lt;/code&gt;（中优先级）&lt;/li&gt;
&lt;li&gt;DMA 传输模式为 &lt;code&gt;Normal&lt;/code&gt;（正常模式）&lt;/li&gt;
&lt;li&gt;DMA 内存地址自增，每次增加一个 Byte（字节）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随后，在 &lt;code&gt;System Core&lt;/code&gt; 标签页找到 &lt;code&gt;DMA&lt;/code&gt;，增加一个 &lt;code&gt;MEMTOMEM&lt;/code&gt; 栏目，如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210404170002.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;在代码内配置 DMA&lt;/h3&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN Init &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;uint8_t Senbuff[] = &#34;Serial Output Message by DMA \r\n&#34;;  // 自定义发送的字符串&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END Init &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE BEGIN 3 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;HAL_UART_Transmit_DMA(&amp;amp;huart1, (uint8_t *)Senbuff, sizeof(Senbuff));
HAL_Delay(1000);&lt;/p&gt;
&lt;p&gt;}
/&lt;em&gt; USER CODE END 3 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;烧录程序，打开串口助手，即可看见循环发送的自定义数组。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://alchemicronin.github.io/posts/90d72de/#4-0-%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE&#34;&gt;进阶篇 IV [DMA]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/as480133937/article/details/104827639&#34;&gt;【STM32】HAL 库 STM32CubeMX 教程十一 ---DMA (串口 DMA 发送接收)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-DMA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-DMA/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - GPIO</title>
      
      
      
      
      <description>&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;p&gt;GPIO 是 &lt;strong&gt;通用输入输出端口&lt;/strong&gt;（General Purpose Input Output）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200615205256.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;拿 F103C8T6 芯片举个例子（上图），除了有颜色的引脚（电源和某些功能引脚）之外的，都叫 GPIO. 可见其通用程度。&lt;/p&gt;
&lt;p&gt;GPIO 的功能是输入 / 输出电信号。我们来看看它的内部结构：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200615211744.jpg&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最右边的 I/O 引脚 ，就是实物芯片的引脚。上下的 &lt;code&gt;保护二极管&lt;/code&gt; 在一定程度上可防止外部不正常电压经引脚烧毁芯片。&lt;/li&gt;
&lt;li&gt;红色虚线框内是输入功能（芯片读取外部信号）。两个带开关的上拉 / 下拉电阻，是用来实现上下拉输入功能的。如果两个开关都不闭合，我们则称其为浮空输入（上不顶天下不着地，没有参考电平）。这三种输入模式读出来的都是数字量（高 / 低电平）。此外，还有模拟输入功能，顾名思义就是直接读取引脚上的模拟量。（复用功能输入我们后面再提及）。&lt;/li&gt;
&lt;li&gt;蓝色虚线框内是输出功能。输出有 4 种模式：推挽、开漏、复用推挽、复用开漏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;输入输出模式&lt;/h3&gt;
&lt;p&gt;输入模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;浮空输入&lt;/strong&gt;：既不上拉也不下拉， STM32 复位之后的默认模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上拉输入&lt;/strong&gt;：闭合上拉电阻的开关，使参考电平永远保持在高位，当输入信号为低电平时就触发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下拉输入&lt;/strong&gt;：闭合下拉电阻的开关，使参考电平永远保持在低位，当输入信号为高电平时就触发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模拟输入&lt;/strong&gt;：这个模式下，既不上拉也不下拉，也不经过 TTL 触发器，STM32 直接读取引脚上的模拟信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输出模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开漏输出&lt;/strong&gt;：开漏指的是开下方的 N-MOS 管的漏极（上面的引脚），这个模式仅仅用到下方的 N-MOS 管。我们知道，MOS 管是电压控的元器件。理解为水龙头，给 N-MOS 的栅极（左边的引脚）输入低电平信号时，N-MOS 就导通。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;推挽输出&lt;/strong&gt;：推挽有两种模式，第一种是同时给两个 MOS 管的栅极通低电平，此时 P-MOS 导通而 N-MOS 截止，电流从 VDD 流向外部引脚，引脚呈高电平。第二种则相反，同时给两个 MOS 管的栅极通高电平，此时 P-MOS 截止而 N-MOS 导通，电流从外部引脚流向内部的 GND，引脚呈低电平。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复用开漏&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复用推挽&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;常用的 GPIO 函数参考&lt;/h3&gt;
&lt;p&gt;读取 GPIO 状态，返回高 / 低电平：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
GPIO_PinState HAL_GPIO_ReadPin(GPIOx, GPIO_Pin);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;写 GPIO 状态，写入高 / 低电平：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
HAL_GPIO_WritePin(GPIOx, GPIO_Pin, PinState);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;翻转 GPIO 电平：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
HAL_GPIO_TogglePin(GPIOx, GPIO_Pin);&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;点亮 LED&lt;/h2&gt;
&lt;p&gt;在进行下一步实验之前，需要在 CubeMX 里配置串口下载、时钟等各类参数。&lt;br&gt;
此处不再赘述，请跳转文章 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 环境配置&lt;/strong&gt;&lt;/a&gt; 中的方法进行配置。&lt;/p&gt;
&lt;h3&gt;在 CubeMX 内配置 GPIO&lt;/h3&gt;
&lt;p&gt;将 LED 相应的 GPIO 口设置为输出，并设置初始电平。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205150422.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对应到我的板子上，就需要把 &lt;code&gt;PD4&lt;/code&gt; 和 &lt;code&gt;PI3&lt;/code&gt; 这两个 GPIO 设置为输出（&lt;code&gt;GPIO_Output&lt;/code&gt;）。&lt;br&gt;
如果想要上电就点亮，那么根据电路原理图，将初始电位设置为低（&lt;code&gt;Low&lt;/code&gt;）。&lt;/p&gt;
&lt;h3&gt;在代码内配置 GPIO&lt;/h3&gt;
&lt;p&gt;如果配置之无误的话，上电即可点亮两颗用户 LED.&lt;br&gt;
如果要添加闪灯效果，只需要在主循环的用户代码区域内添加几行代码：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 3 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;HAL_Delay(500);
HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_4);
HAL_GPIO_TogglePin(GPIOI, GPIO_PIN_3);&lt;/p&gt;
&lt;p&gt;}
/&lt;em&gt; USER CODE END 3 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205151322.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;即可实现闪灯效果。&lt;/p&gt;
&lt;h2&gt;按键控灯&lt;/h2&gt;
&lt;p&gt;在学习了 GPIO 的输出后，我们用按键来学习 GPIO 的输入模式。&lt;/p&gt;
&lt;h3&gt;在 CubeMX 内配置 GPIO&lt;/h3&gt;
&lt;p&gt;按照上面的方法配置 LED 所属的 GPIO 端口后，根据板载按键的原理图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205150422.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;将按键所属的 GPIO（&lt;code&gt;PI8&lt;/code&gt;）设置为输入（&lt;code&gt;GPIO_Input&lt;/code&gt;）。根据原理图，选择内部上拉（&lt;code&gt;Pull-up&lt;/code&gt;）。生成代码。&lt;/p&gt;
&lt;h3&gt;在代码内配置 GPIO&lt;/h3&gt;
&lt;p&gt;在主循环的用户代码区域内添加如下代码：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 3 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;if(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin)==0)
{
    HAL_Delay(100);
    if(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin)==0)
    {
        HAL_GPIO_WritePin(LED1_GPIO_Port,LED1_Pin,GPIO_PIN_RESET);
    }
}else{
    HAL_GPIO_WritePin(LED1_GPIO_Port,LED1_Pin,GPIO_PIN_SET);
}&lt;/p&gt;
&lt;p&gt;}
/&lt;em&gt; USER CODE END 3 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;即可实现按下按键开灯，松开按键关灯的效果。&lt;/p&gt;
&lt;p&gt;有许多人搞不清楚 &lt;code&gt;GPIO_PIN_SET&lt;/code&gt; 和 &lt;code&gt;GPIO_PIN_RESET&lt;/code&gt; 是什么意思。其实这两个变量的功能仅仅为设置 GPIO 引脚高 / 低电平。具体灯是开是关，还得看电路原理图。&lt;/p&gt;
&lt;p&gt;另外，&lt;code&gt;HAL_Delay(100);&lt;/code&gt; 的功能是代码消除按键抖动。不过 &lt;code&gt;HAL_Delay()&lt;/code&gt; 函数用的是轮询，会占用资源导致卡机，下一篇文章我们将用硬件中断来解决这个缺陷。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/as480133937/article/details/98947162&#34;&gt;【STM32】STM32CubeMX 教程二 -- 基本使用 (新建工程点亮 LED 灯)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43892323/article/details/104343933&#34;&gt;STM32CubeMX 实战教程（二）—— 按键点个灯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-GPIO/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-GPIO/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - I2C 通信（MPU6050）</title>
      
      
      
      
      <description>&lt;p&gt;本篇基于自研 RobotCtrl 开发套件，单片机内核为 STM32F407ZET6，使用 MPU6050 模组讲解 HAL 库 I2C 通信的方式，开发套件原理图及详细介绍请见 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;h3&gt;I2C 通信&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026174634.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;I2C 通信的基本原理可跳转文章 &lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-I2C&#34;&gt;&lt;strong&gt;通信协议 - I2C&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;MPU6050 模组&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220404145145.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;模组的引脚定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCC：3.3V~5V&lt;/li&gt;
&lt;li&gt;GND：地&lt;/li&gt;
&lt;li&gt;SCL：I2C 时钟 / SPI 时钟&lt;/li&gt;
&lt;li&gt;SDA：I2C 数据 / SPI 数据输入&lt;/li&gt;
&lt;li&gt;XDA：给 I2C 设备提供主时钟&lt;/li&gt;
&lt;li&gt;AD0：I2C 器件地址选择位 / SPI 数据输出&lt;/li&gt;
&lt;li&gt;INT：中断引脚&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;带卡尔曼滤波的 MPU6050 库&lt;/h3&gt;
&lt;p&gt;这里我们调用带卡尔曼滤波的 MPU6050 库：&lt;a href=&#34;https://github.com/leech001/MPU6050&#34;&gt;&lt;strong&gt;leech001/MPU6050&lt;/strong&gt;&lt;/a&gt;，将下载的 &lt;code&gt;mpu6050.c&lt;/code&gt; 和 &lt;code&gt;mpu6050.h&lt;/code&gt; 拷贝至项目文件夹下，并在 STM32CubeIDE/Keil 内将其添加到项目中：&lt;/p&gt;
&lt;p&gt;```c title=&#34;mpu6050.h&#34;&lt;/p&gt;
&lt;h1&gt;ifndef INC_GY521_H_&lt;/h1&gt;
&lt;h1&gt;define INC_GY521_H_&lt;/h1&gt;
&lt;h1&gt;endif /&lt;em&gt; INC_GY521_H_ &lt;/em&gt;/&lt;/h1&gt;
&lt;h1&gt;include &lt;stdint.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &#34;i2c.h&#34;&lt;/h1&gt;
&lt;p&gt;// MPU6050 structure
typedef struct
{&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int16_t Accel_X_RAW;
int16_t Accel_Y_RAW;
int16_t Accel_Z_RAW;
double Ax;
double Ay;
double Az;

int16_t Gyro_X_RAW;
int16_t Gyro_Y_RAW;
int16_t Gyro_Z_RAW;
double Gx;
double Gy;
double Gz;

float Temperature;

double KalmanAngleX;
double KalmanAngleY;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;} MPU6050_t;&lt;/p&gt;
&lt;p&gt;// Kalman structure
typedef struct
{
    double Q_angle;
    double Q_bias;
    double R_measure;
    double angle;
    double bias;
    double P[2][2];
} Kalman_t;&lt;/p&gt;
&lt;p&gt;uint8_t MPU6050_Init(I2C_HandleTypeDef *I2Cx);&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_Accel(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct);&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_Gyro(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct);&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_Temp(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct);&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_All(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct);&lt;/p&gt;
&lt;p&gt;double Kalman_getAngle(Kalman_t *Kalman, double newAngle, double newRate, double dt);
```&lt;/p&gt;
&lt;p&gt;```c title=&#34;mpu6050.c&#34;&lt;/p&gt;
&lt;h1&gt;include &lt;math.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &#34;mpu6050.h&#34;&lt;/h1&gt;
&lt;h1&gt;define RAD_TO_DEG 57.295779513082320876798154814105&lt;/h1&gt;
&lt;h1&gt;define WHO_AM_I_REG 0x75&lt;/h1&gt;
&lt;h1&gt;define PWR_MGMT_1_REG 0x6B&lt;/h1&gt;
&lt;h1&gt;define SMPLRT_DIV_REG 0x19&lt;/h1&gt;
&lt;h1&gt;define ACCEL_CONFIG_REG 0x1C&lt;/h1&gt;
&lt;h1&gt;define ACCEL_XOUT_H_REG 0x3B&lt;/h1&gt;
&lt;h1&gt;define TEMP_OUT_H_REG 0x41&lt;/h1&gt;
&lt;h1&gt;define GYRO_CONFIG_REG 0x1B&lt;/h1&gt;
&lt;h1&gt;define GYRO_XOUT_H_REG 0x43&lt;/h1&gt;
&lt;p&gt;// Setup MPU6050&lt;/p&gt;
&lt;h1&gt;define MPU6050_ADDR 0xD0&lt;/h1&gt;
&lt;p&gt;const uint16_t i2c_timeout = 100;
const double Accel_Z_corrector = 14418.0;&lt;/p&gt;
&lt;p&gt;uint32_t timer;&lt;/p&gt;
&lt;p&gt;Kalman_t KalmanX = {
    .Q_angle = 0.001f,
    .Q_bias = 0.003f,
    .R_measure = 0.03f};&lt;/p&gt;
&lt;p&gt;Kalman_t KalmanY = {
    .Q_angle = 0.001f,
    .Q_bias = 0.003f,
    .R_measure = 0.03f,
};&lt;/p&gt;
&lt;p&gt;uint8_t MPU6050_Init(I2C_HandleTypeDef *I2Cx)
{
    uint8_t check;
    uint8_t Data;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// check device ID WHO_AM_I

HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, WHO_AM_I_REG, 1, &amp;amp;check, 1, i2c_timeout);

if (check == 104) // 0x68 will be returned by the sensor if everything goes well
{
    // power management register 0X6B we should write all 0&#39;s to wake the sensor up
    Data = 0;
    HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &amp;amp;Data, 1, i2c_timeout);

    // Set DATA RATE of 1KHz by writing SMPLRT_DIV register
    Data = 0x07;
    HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &amp;amp;Data, 1, i2c_timeout);

    // Set accelerometer configuration in ACCEL_CONFIG Register
    // XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 -&amp;gt; � 2g
    Data = 0x00;
    HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &amp;amp;Data, 1, i2c_timeout);

    // Set Gyroscopic configuration in GYRO_CONFIG Register
    // XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 -&amp;gt; � 250 �/s
    Data = 0x00;
    HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &amp;amp;Data, 1, i2c_timeout);
    return 0;
}
return 1;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_Accel(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct)
{
    uint8_t Rec_Data[6];&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Read 6 BYTES of data starting from ACCEL_XOUT_H register

HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 6, i2c_timeout);

DataStruct-&amp;gt;Accel_X_RAW = (int16_t)(Rec_Data[0] &amp;lt;&amp;lt; 8 | Rec_Data[1]);
DataStruct-&amp;gt;Accel_Y_RAW = (int16_t)(Rec_Data[2] &amp;lt;&amp;lt; 8 | Rec_Data[3]);
DataStruct-&amp;gt;Accel_Z_RAW = (int16_t)(Rec_Data[4] &amp;lt;&amp;lt; 8 | Rec_Data[5]);

/*** convert the RAW values into acceleration in &#39;g&#39;
     we have to divide according to the Full scale value set in FS_SEL
     I have configured FS_SEL = 0. So I am dividing by 16384.0
     for more details check ACCEL_CONFIG Register              ****/

DataStruct-&amp;gt;Ax = DataStruct-&amp;gt;Accel_X_RAW / 16384.0;
DataStruct-&amp;gt;Ay = DataStruct-&amp;gt;Accel_Y_RAW / 16384.0;
DataStruct-&amp;gt;Az = DataStruct-&amp;gt;Accel_Z_RAW / Accel_Z_corrector;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_Gyro(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct)
{
    uint8_t Rec_Data[6];&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Read 6 BYTES of data starting from GYRO_XOUT_H register

HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, GYRO_XOUT_H_REG, 1, Rec_Data, 6, i2c_timeout);

DataStruct-&amp;gt;Gyro_X_RAW = (int16_t)(Rec_Data[0] &amp;lt;&amp;lt; 8 | Rec_Data[1]);
DataStruct-&amp;gt;Gyro_Y_RAW = (int16_t)(Rec_Data[2] &amp;lt;&amp;lt; 8 | Rec_Data[3]);
DataStruct-&amp;gt;Gyro_Z_RAW = (int16_t)(Rec_Data[4] &amp;lt;&amp;lt; 8 | Rec_Data[5]);

/*** convert the RAW values into dps (�/s)
     we have to divide according to the Full scale value set in FS_SEL
     I have configured FS_SEL = 0. So I am dividing by 131.0
     for more details check GYRO_CONFIG Register              ****/

DataStruct-&amp;gt;Gx = DataStruct-&amp;gt;Gyro_X_RAW / 131.0;
DataStruct-&amp;gt;Gy = DataStruct-&amp;gt;Gyro_Y_RAW / 131.0;
DataStruct-&amp;gt;Gz = DataStruct-&amp;gt;Gyro_Z_RAW / 131.0;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_Temp(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct)
{
    uint8_t Rec_Data[2];
    int16_t temp;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Read 2 BYTES of data starting from TEMP_OUT_H_REG register

HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, TEMP_OUT_H_REG, 1, Rec_Data, 2, i2c_timeout);

temp = (int16_t)(Rec_Data[0] &amp;lt;&amp;lt; 8 | Rec_Data[1]);
DataStruct-&amp;gt;Temperature = (float)((int16_t)temp / (float)340.0 + (float)36.53);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;void MPU6050_Read_All(I2C_HandleTypeDef &lt;em&gt;I2Cx, MPU6050_t &lt;/em&gt;DataStruct)
{
    uint8_t Rec_Data[14];
    int16_t temp;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Read 14 BYTES of data starting from ACCEL_XOUT_H register

HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, i2c_timeout);

DataStruct-&amp;gt;Accel_X_RAW = (int16_t)(Rec_Data[0] &amp;lt;&amp;lt; 8 | Rec_Data[1]);
DataStruct-&amp;gt;Accel_Y_RAW = (int16_t)(Rec_Data[2] &amp;lt;&amp;lt; 8 | Rec_Data[3]);
DataStruct-&amp;gt;Accel_Z_RAW = (int16_t)(Rec_Data[4] &amp;lt;&amp;lt; 8 | Rec_Data[5]);
temp = (int16_t)(Rec_Data[6] &amp;lt;&amp;lt; 8 | Rec_Data[7]);
DataStruct-&amp;gt;Gyro_X_RAW = (int16_t)(Rec_Data[8] &amp;lt;&amp;lt; 8 | Rec_Data[9]);
DataStruct-&amp;gt;Gyro_Y_RAW = (int16_t)(Rec_Data[10] &amp;lt;&amp;lt; 8 | Rec_Data[11]);
DataStruct-&amp;gt;Gyro_Z_RAW = (int16_t)(Rec_Data[12] &amp;lt;&amp;lt; 8 | Rec_Data[13]);

DataStruct-&amp;gt;Ax = DataStruct-&amp;gt;Accel_X_RAW / 16384.0;
DataStruct-&amp;gt;Ay = DataStruct-&amp;gt;Accel_Y_RAW / 16384.0;
DataStruct-&amp;gt;Az = DataStruct-&amp;gt;Accel_Z_RAW / Accel_Z_corrector;
DataStruct-&amp;gt;Temperature = (float)((int16_t)temp / (float)340.0 + (float)36.53);
DataStruct-&amp;gt;Gx = DataStruct-&amp;gt;Gyro_X_RAW / 131.0;
DataStruct-&amp;gt;Gy = DataStruct-&amp;gt;Gyro_Y_RAW / 131.0;
DataStruct-&amp;gt;Gz = DataStruct-&amp;gt;Gyro_Z_RAW / 131.0;

// Kalman angle solve
double dt = (double)(HAL_GetTick() - timer) / 1000;
timer = HAL_GetTick();
double roll;
double roll_sqrt = sqrt(
    DataStruct-&amp;gt;Accel_X_RAW * DataStruct-&amp;gt;Accel_X_RAW + DataStruct-&amp;gt;Accel_Z_RAW * DataStruct-&amp;gt;Accel_Z_RAW);
if (roll_sqrt != 0.0)
{
    roll = atan(DataStruct-&amp;gt;Accel_Y_RAW / roll_sqrt) * RAD_TO_DEG;
}
else
{
    roll = 0.0;
}
double pitch = atan2(-DataStruct-&amp;gt;Accel_X_RAW, DataStruct-&amp;gt;Accel_Z_RAW) * RAD_TO_DEG;
if ((pitch &amp;lt; -90 &amp;amp;&amp;amp; DataStruct-&amp;gt;KalmanAngleY &amp;gt; 90) || (pitch &amp;gt; 90 &amp;amp;&amp;amp; DataStruct-&amp;gt;KalmanAngleY &amp;lt; -90))
{
    KalmanY.angle = pitch;
    DataStruct-&amp;gt;KalmanAngleY = pitch;
}
else
{
    DataStruct-&amp;gt;KalmanAngleY = Kalman_getAngle(&amp;amp;KalmanY, pitch, DataStruct-&amp;gt;Gy, dt);
}
if (fabs(DataStruct-&amp;gt;KalmanAngleY) &amp;gt; 90)
    DataStruct-&amp;gt;Gx = -DataStruct-&amp;gt;Gx;
DataStruct-&amp;gt;KalmanAngleX = Kalman_getAngle(&amp;amp;KalmanX, roll, DataStruct-&amp;gt;Gx, dt);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;double Kalman_getAngle(Kalman_t *Kalman, double newAngle, double newRate, double dt)
{
    double rate = newRate - Kalman-&amp;gt;bias;
    Kalman-&amp;gt;angle += dt * rate;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Kalman-&amp;gt;P[0][0] += dt * (dt * Kalman-&amp;gt;P[1][1] - Kalman-&amp;gt;P[0][1] - Kalman-&amp;gt;P[1][0] + Kalman-&amp;gt;Q_angle);
Kalman-&amp;gt;P[0][1] -= dt * Kalman-&amp;gt;P[1][1];
Kalman-&amp;gt;P[1][0] -= dt * Kalman-&amp;gt;P[1][1];
Kalman-&amp;gt;P[1][1] += Kalman-&amp;gt;Q_bias * dt;

double S = Kalman-&amp;gt;P[0][0] + Kalman-&amp;gt;R_measure;
double K[2];
K[0] = Kalman-&amp;gt;P[0][0] / S;
K[1] = Kalman-&amp;gt;P[1][0] / S;

double y = newAngle - Kalman-&amp;gt;angle;
Kalman-&amp;gt;angle += K[0] * y;
Kalman-&amp;gt;bias += K[1] * y;

double P00_temp = Kalman-&amp;gt;P[0][0];
double P01_temp = Kalman-&amp;gt;P[0][1];

Kalman-&amp;gt;P[0][0] -= K[0] * P00_temp;
Kalman-&amp;gt;P[0][1] -= K[0] * P01_temp;
Kalman-&amp;gt;P[1][0] -= K[1] * P00_temp;
Kalman-&amp;gt;P[1][1] -= K[1] * P01_temp;

return Kalman-&amp;gt;angle;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;};
```&lt;/p&gt;
&lt;p&gt;可以看到，在设置了 I2C 的地址后，在 &lt;code&gt;MPU6050_Init&lt;/code&gt; 函数内初始化，并在其余的函数中操作读取各个数值。&lt;/p&gt;
&lt;h2&gt;使用 I2C 读取 MPU6050 返回的信息&lt;/h2&gt;
&lt;h3&gt;在 CubeMX 内配置 I2C 总线&lt;/h3&gt;
&lt;p&gt;在 CubeMX 左侧功能分类栏选择 &lt;code&gt;通信&lt;/code&gt; - &lt;code&gt;I2Cx&lt;/code&gt;，将 I2C 的选项设置从 &lt;code&gt;disable&lt;/code&gt; 更改为 &lt;code&gt;I2C&lt;/code&gt;，并在弹出的配置界面配置参数（默认即可）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220403190116.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;在代码内配置 I2C 读取 MPU6050 返回的信息&lt;/h3&gt;
&lt;p&gt;首先，在 &lt;code&gt;main.c&lt;/code&gt; 中调用 MPU6050 的库：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN Includes &lt;/em&gt;/&lt;/p&gt;
&lt;h1&gt;include &#34;mpu6050.h&#34;&lt;/h1&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END Includes &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;接着，实例化对象：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN PV &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;MPU6050_t MPU6050;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END PV &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;在主函数里面初始化，完毕时才继续执行程序：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;while (MPU6050*Init(&amp;amp;hi2c1) == 1);&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 2 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;在 while 循环内读取库计算出来的变量，并给一定的延时缓冲：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE BEGIN 3 &lt;/em&gt;/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    MPU6050_Read_All(&amp;amp;hi2c1, &amp;amp;MPU6050);
    HAL_Delay(100);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 3 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;执行了这条语句，就能读出 MPU6050 结构体内的变量，比如&lt;code&gt;MPU6050.KalmanAngleX&lt;/code&gt;（X 轴滤波后角度）。MPU6050 结构体的元素及类型如下：&lt;/p&gt;
&lt;p&gt;```c
typedef struct
{&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int16_t Accel_X_RAW;
int16_t Accel_Y_RAW;
int16_t Accel_Z_RAW;
double Ax;
double Ay;
double Az;

int16_t Gyro_X_RAW;
int16_t Gyro_Y_RAW;
int16_t Gyro_Z_RAW;
double Gx;
double Gy;
double Gz;

float Temperature;

double KalmanAngleX;
double KalmanAngleY;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;} MPU6050_t;
```&lt;/p&gt;
&lt;p&gt;可以在配置串口后，通过以下语句输出变量：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
printf(&#34;XAngle: %.2f°\t&#34;, MPU6050.KalmanAngleX);&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/leech001/MPU6050&#34;&gt;leech001/MPU6050&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-I2C&#34;&gt;通信协议 - I2C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-I2C%E9%80%9A%E4%BF%A1%EF%BC%88MPU6050%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-I2C%E9%80%9A%E4%BF%A1%EF%BC%88MPU6050%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - TIM 基本定时器</title>
      
      
      
      
      <description>&lt;p&gt;在 STM32 中，有基本定时器、通用定时器和高级定时器这三类定时器，用于处理各类周期任务。在本篇文章中，我将对基本定时器展开详细介绍。&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;p&gt;我们常用的定时器分基本、通用和高级定时器三类，在 STM32F4 系列单片机上，其对应关系如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本定时器&lt;/li&gt;
&lt;li&gt;TIM6&lt;/li&gt;
&lt;li&gt;TIM7&lt;/li&gt;
&lt;li&gt;通用定时器&lt;/li&gt;
&lt;li&gt;TIM2-TIM5&lt;/li&gt;
&lt;li&gt;TIM9-TIM14&lt;/li&gt;
&lt;li&gt;高级定时器&lt;/li&gt;
&lt;li&gt;TIM1&lt;/li&gt;
&lt;li&gt;TIM8&lt;/li&gt;
&lt;li&gt;（SysTick 定时器）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常，我们拿基本定时器当计时器用，拿通用定时器输出 PWM 信号用。&lt;/p&gt;
&lt;h3&gt;基本定时器的特性&lt;/h3&gt;
&lt;p&gt;在 STM32F4 系列单片机上，TIM6 和 TIM7 这两个基本定时器的特性如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;挂载在 APB1 总线上&lt;/li&gt;
&lt;li&gt;16 位自动重载递增计数器&lt;/li&gt;
&lt;li&gt;16 位可编程预分频器，用于对计数器时钟频率进行分频（即运行时修改），分频系数介于 1 和 65536 之间&lt;/li&gt;
&lt;li&gt;用于触发 DAC 的同步电路&lt;/li&gt;
&lt;li&gt;发生计数器上溢更新事件时会生成中断 / DMA 请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;常用的定时器函数参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Init()&lt;/strong&gt;：初始化定时器时基单元&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_DeInit()&lt;/strong&gt;：禁用定时器，与初始化相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_MspInit()&lt;/strong&gt;：MSP 初始化函数，定时器初始化时会自动调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_MspDeInit()&lt;/strong&gt;：与上一个相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Start()&lt;/strong&gt;：开启定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Stop()&lt;/strong&gt;：停止定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Start_IT()&lt;/strong&gt;：以中断模式开启定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Stop_IT()&lt;/strong&gt;：关闭中断模式的定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Start_DMA()&lt;/strong&gt;：以 DMA 模式开启定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Stop_DMA()&lt;/strong&gt;：关闭 DMA 模式的定时器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;用基本定时器使 LED 定时闪烁&lt;/h2&gt;
&lt;p&gt;本次实验是用基本定时器实现计时功能，让 LED 0.5 秒变换一次开关状态。&lt;/p&gt;
&lt;h3&gt;在 CubeMX 内配置基本定时器&lt;/h3&gt;
&lt;p&gt;首先，我们打开 Clock Configuratgion 时钟树配置页面，找到并记下最右侧 APB1 Timer clocks 的数值：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210407152250.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是因为，STM32F4 系列的 TIM2-TIM7，TIM12-TIM14 是挂载在低速 APB1 总线上，而 TIM1，TIM8-TIM11 是挂载在高速 APB2 总线上，我们这里用到基本定时器 TIM6，所以要看 APB1 的速率（这里经过分频倍频后是 90 MHz）。&lt;/p&gt;
&lt;p&gt;接着，我们找到侧边栏 Timer 中找到 TIM6，先勾选 &lt;code&gt;Activated&lt;/code&gt; 激活定时器，并在下方配置以下的参数：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210407173136.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;各参数的含义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prescaler&lt;/strong&gt;（预分频系数）：8999&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Counter Mode&lt;/strong&gt;（计数模式）：Up（从 0 开始向上计数至预分频系数后溢出）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Counter Period&lt;/strong&gt;（计时周期 / 装载值）：4999&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto-reload preload&lt;/strong&gt;（是否自动重装载）：Enable（溢出时会自动重装初值）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为我这里用的时钟源为 90 MHz，因此将预分频系数设置为 8999（也就是 9000 分频），分频后为 10 kHz（90 MHz/9000）。装载值设置为 4999（每周期计数 5000 次），所以得到 500 ms 一个周期。&lt;/p&gt;
&lt;p&gt;接着我们在其 NVIC 标签页，对中断进行使能：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210407155959.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;在代码内配置基本定时器&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;main.c&lt;/code&gt; 中开启定时器：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;HAL_TIM_Base_Start_IT(&amp;amp;htim6);&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 2 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;stm32f4xx_it.c&lt;/code&gt; 中添加回调函数：&lt;/p&gt;
&lt;p&gt;```c title=&#34;stm32f4xx_it.c&#34;
/&lt;em&gt; USER CODE BEGIN 1 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
    if(htim-&amp;gt;Instance == TIM6)
    {
        HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
    }&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 1 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;关于 LED 的配置，可以参考前面的文章 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-GPIO&#34;&gt;&lt;strong&gt;HAL 库开发笔记-GPIO&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下载烧录，可以看到 LED 按我们预设的 500 ms 周期切换开关状态（也就是每 500 ms 发生溢出并产生一个上溢事件，我们在回调函数中对 LED 灯进行了翻转操作）。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43892323/article/details/104534920&#34;&gt;STM32CubeMX 实战教程（四）—— 基本定时器（还是点灯）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alchemicronin.github.io/posts/fd31d369/&#34;&gt;进阶篇 VI [Timer &amp;amp; PWM]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-TIM%E5%9F%BA%E6%9C%AC%E5%AE%9A%E6%97%B6%E5%99%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-TIM%E5%9F%BA%E6%9C%AC%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - TIM 通用定时器</title>
      
      
      
      
      <description>&lt;p&gt;在上一篇文章中，简单介绍了 STM32F4 的三类定时器，也详细讲解了基本定时器。在本篇文章中，我们将继续介绍通用定时器。&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;p&gt;在 STM32F4 中，通用定时器有 TIM2-TIM5，TIM9-TIM14。&lt;/p&gt;
&lt;h3&gt;通用定时器的特性&lt;/h3&gt;
&lt;p&gt;在 STM32F4 中，通用定时器的特性如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16/32 位递增、递减和递增 / 递减自动重载计数器&lt;/li&gt;
&lt;li&gt;16 位可编程预分频器，用于对计数器时钟频率进行分频（分频系数为 1-65536）&lt;/li&gt;
&lt;li&gt;4 个独立通道，分别可用于：&lt;/li&gt;
&lt;li&gt;输入捕获&lt;/li&gt;
&lt;li&gt;输出比较&lt;/li&gt;
&lt;li&gt;PWM 生成（边沿和中心对齐模式）&lt;/li&gt;
&lt;li&gt;单脉冲模式输出&lt;/li&gt;
&lt;li&gt;使用外部信号控制定时器且可实现多个定时器互连的同步电路&lt;/li&gt;
&lt;li&gt;发生如下事件时生成中断 / DMA 请求：&lt;/li&gt;
&lt;li&gt;更新：计数器上溢 / 下溢、计数器初始化（通过软件或内部 / 外部触发）&lt;/li&gt;
&lt;li&gt;触发事件（计数器启动、停止、初始化或通过内部 / 外部触发计数）&lt;/li&gt;
&lt;li&gt;输入捕获&lt;/li&gt;
&lt;li&gt;输出比较&lt;/li&gt;
&lt;li&gt;支持定位用增量（正交）编码器和霍尔传感器电路&lt;/li&gt;
&lt;li&gt;外部时钟触发输入或逐周期电流管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;常用的定时器函数参考&lt;/h3&gt;
&lt;p&gt;以下是常用的定时器函数参考，与基本定时器的函数相同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Init()&lt;/strong&gt;：初始化定时器时基单元&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_DeInit()&lt;/strong&gt;：禁用定时器，与初始化相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_MspInit()&lt;/strong&gt;：MSP 初始化函数，定时器初始化时会自动调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_MspDeInit()&lt;/strong&gt;：与上一个相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Start()&lt;/strong&gt;：开启定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Stop()&lt;/strong&gt;：停止定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Start_IT()&lt;/strong&gt;：以中断模式开启定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Stop_IT()&lt;/strong&gt;：关闭中断模式的定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Start_DMA()&lt;/strong&gt;：以 DMA 模式开启定时器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HAL_TIM_Base_Stop_DMA()&lt;/strong&gt;：关闭 DMA 模式的定时器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;用通用定时器输出 1 kHz/50% 占空比的 PWM&lt;/h2&gt;
&lt;p&gt;本次实验使用通用定时器输出 1 kHz，50% 占空比的 PWM 信号，可用示波器显示输出的波形。&lt;/p&gt;
&lt;h3&gt;在 CubeMX 内配置通用定时器&lt;/h3&gt;
&lt;p&gt;首先，我们打开 Clock Configuratgion 时钟树配置页面，因通用定时器挂载在挂载在高速 APB2 总线上，所以我们找到并记下 APB2 Timer clocks 的时钟频率（180 MHz）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210627133951.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着，我们找到侧边栏 Timer 中找到 TIM8，设置通道 1（&lt;code&gt;Channel 1&lt;/code&gt;）为 PWM 生成（&lt;code&gt;PWM Generation CH1&lt;/code&gt;），为了能生成 1 kHz 频率的 PWM 方波，我们需要在下方配置以下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prescaler&lt;/strong&gt;（预分频系数）：180-1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Counter Mode&lt;/strong&gt;（计数模式）：Up（从 0 开始向上计数至预分频系数后溢出）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Counter Period&lt;/strong&gt;（计时周期 / 装载值）：1000-1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto-reload preload&lt;/strong&gt;（是否自动重装载）：Enable（溢出时会自动重装初值）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210627153422.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此处选用的时钟源为 180 MHz，因此将预分频系数设置为 180-1 = 179，分频后为 1 MHz，将装载值设置为 1000-1 = 9999，所以得到 1 kHz 的频率。&lt;/p&gt;
&lt;h3&gt;在代码内配置基本定时器&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;main.c&lt;/code&gt; 中开启定时器：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;HAL_TIM_PWM_Start(&amp;amp;htim8,TIM_CHANNEL_1);&lt;/p&gt;
&lt;p&gt;// 设置占空比为 500（500 Hz/1 kHz=50%）
__HAL_TIM_SetCompare(&amp;amp;htim8,TIM_CHANNEL_1,500);&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 2 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;编译并烧录，用示波器可以看出波形：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210627154737.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43892323/article/details/104776035&#34;&gt;STM32CubeMX 实战教程（五）—— 通用定时器（PWM 输出）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-TIM%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-TIM%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - USB 通信 🚧</title>
      
      
      
      
      <description>&lt;p&gt;本篇基于自研 RobotCtrl 开发套件，单片机内核为 STM32F407ZET6，USB_Slave 引脚为 &lt;code&gt;PA11&lt;/code&gt; 和 &lt;code&gt;PA12&lt;/code&gt;，原理图及详细介绍请见 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;回环测试简单步骤&lt;/h2&gt;
&lt;h3&gt;CubeMX 内配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;配置为外部高速时钟（HSE）。&lt;/li&gt;
&lt;li&gt;配置时钟树，确保时钟树末端 &lt;code&gt;48MHz Clocks (MHz)&lt;/code&gt; 为 48MHz。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;USB_OTG_FS&lt;/code&gt; 页面，将 &lt;code&gt;Mode&lt;/code&gt; 配置为 &lt;code&gt;Device_Only&lt;/code&gt;，默认引脚是 &lt;code&gt;PA11&lt;/code&gt; 和 &lt;code&gt;PA12&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;USB_DEVICE&lt;/code&gt; 页面，将 &lt;code&gt;Class For FS IP&lt;/code&gt; 配置为 &lt;code&gt;Commmunication Device Class (Virtual Port Com)&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;代码内配置&lt;/h3&gt;
&lt;p&gt;实现数据回环功能，只需要在 &lt;code&gt;usbd_cdc_if.c&lt;/code&gt; 文件的 &lt;code&gt;CDC_Receive_FS&lt;/code&gt; 函数内添加一行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c title=&#34;usbd_cdc_if.c&#34;
CDC_Transmit_FS(Buf,*Len); // 返回相同数据&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;测试&lt;/h3&gt;
&lt;p&gt;打开设备管理器查看设备是否已经显示，如果没有发现设备，或有黄色的感叹号，请到 ST 官网下载驱动 &lt;a href=&#34;https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-utilities/stsw-stm32102.html&#34;&gt;&lt;strong&gt;STM32 Virtual COM Port Driver&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果安装了驱动还是未能正常识别，可尝试在 CubeMX - &lt;code&gt;Project Manager&lt;/code&gt; - &lt;code&gt;Project&lt;/code&gt; - &lt;code&gt;Linker Settings&lt;/code&gt;，将 &lt;code&gt;Minimum Heap Size&lt;/code&gt; 调整为 &lt;code&gt;0x600&lt;/code&gt; 或更高。&lt;/p&gt;
&lt;p&gt;打开串口工具（波特率任意），可发现发送任意字符，将返回相同字符。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/yxy244/article/details/102620249&#34;&gt;STM32 使用 CubeMX HAL 库快速生成 USBVCP 虚拟串口工程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-USB%E9%80%9A%E4%BF%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-USB%E9%80%9A%E4%BF%A1/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - 串口通信</title>
      
      
      
      
      <description>&lt;p&gt;本篇基于自研 RobotCtrl 开发套件，单片机内核为 STM32F407ZET6，RS-232 通信使用 SP3232EEN 芯片，原理图及详细介绍请见 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;p&gt;串口通信的基本原理请跳转文章 &lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1&#34;&gt;&lt;strong&gt;通信协议-串口通信&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;串口通讯实验&lt;/h2&gt;
&lt;p&gt;在进行下一步实验之前，需要在 CubeMX 里配置串口下载、时钟等各类参数。&lt;br&gt;
具体步骤请跳转文章 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 环境配置&lt;/strong&gt;&lt;/a&gt; 中的方法进行配置。&lt;/p&gt;
&lt;h3&gt;在 CubeMX 内配置串口&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210207100329.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据原理图，我们用来进行通讯实验的串口是 &lt;code&gt;USART1&lt;/code&gt; ，即 &lt;code&gt;PA9&lt;/code&gt; &lt;code&gt;PA10&lt;/code&gt; 引脚。那么，我们首先需要在 CubeMX 内将这两个引脚配置为 &lt;code&gt;USART1&lt;/code&gt; 的发送和接受功能，然后点击左侧 USART1 标签页，将模式（Mode）设为异步（Asynchronous），并在下方修改波特率（Baud Rate）等参数：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210207100941.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;参数详情如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;波特率设置&lt;/strong&gt;（Baud Rate）：没有哪种波特率最好，根据实际情况进行修改，要与串口调试助手上一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据位数&lt;/strong&gt;（Word Length）：如果使能了奇偶校验，那么实际数据将在该位数上减一。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;校验&lt;/strong&gt;（Parity）：可选择奇偶校验或不校验。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;停止位&lt;/strong&gt;（Stop Bits）：额外一位或两位用于作为发送或接收完毕信号位。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据方向&lt;/strong&gt;（Data Direction）：可选择仅发送，仅接收或收发模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过采样&lt;/strong&gt;（Over Sampling）：8 倍或 16 倍采样率可以有效防止数据出错。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，在 NVIC 标签页使能 USART1 的串口中断，如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210207104641.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;在代码内配置串口&lt;/h3&gt;
&lt;p&gt;首先需要在 &lt;code&gt;stm32f4xx_it.c&lt;/code&gt; 末尾添加如下代码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c title=&#34;stm32f4xx_it.c&#34;
/* USER CODE BEGIN 1 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
    if(huart-&amp;gt;Instance==USART1)
    {
        HAL_UART_Receive_IT(huart, &amp;amp;aRxBuffer, 1); // 接收并写入 aRxBuffer
        HAL_UART_Transmit(huart, &amp;amp;aRxBuffer, 10, 0xFFFF); // 把接收到的 aRxBuffer 发回去
    }
}
/* USER CODE END 1 */&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;Buffer&lt;/code&gt; 是在 &lt;code&gt;main.c&lt;/code&gt; 中定义的 uint8_t 类型全局变量。这里每接受的一个字节后就产生中断，将该字节数据返回并重新开启中断。我们需要分别在 &lt;code&gt;main.c&lt;/code&gt; 和 &lt;code&gt;stm32f4xx_it.c&lt;/code&gt; 中定义它：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; Private variables -----------------------------------------------------------&lt;/em&gt;/
/&lt;em&gt; USER CODE BEGIN PV &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;uint8_t aTxBuffer[] = &#34;USART TEST\r\n&#34;; //用于发送的字符串
uint8_t aRxBuffer[20]; //用于接收的字符串&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END PV &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;```c title=&#34;stm32f4xx_it.c&#34;
/&lt;em&gt; Private variables -----------------------------------------------------------&lt;/em&gt;/
/&lt;em&gt; USER CODE BEGIN PV &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;extern uint8_t aTxBuffer;
extern uint8_t aRxBuffer;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END PV &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;另外，在 &lt;code&gt;main.c&lt;/code&gt; 中，我们需要在串口初始化后、主循环前，添加接收中断开启函数：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;HAL_UART_Receive_IT(&amp;amp;huart1, (uint8_t *)aRxBuffer, 1); // 接收中断开启函数&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 2 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;也可以发送一条初始化消息，代表串口已启动：&lt;/p&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;HAL_UART_Transmit(&amp;amp;huart1, (uint8_t*) aTxBuffer, sizeof(aTxBuffer) - 1, 0xFFFF); // 发上一次自定义的 aTxBuffer&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 2 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;如果需要对 printf 进行重定向（把 printf 函数用在 STM32 中做串口输出功能），请参考 &lt;a href=&#34;https://wiki-power.com/STM32CubeIDE%E4%B8%B2%E5%8F%A3%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%88printf%EF%BC%89%E5%8F%8A%E8%BE%93%E5%87%BA%E6%B5%AE%E7%82%B9%E5%9E%8B&#34;&gt;&lt;strong&gt;STM32CubeIDE 串口重定向（printf）及输出浮点型&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;下载验证&lt;/h3&gt;
&lt;p&gt;程序烧录成功后，我们打开串口助手，配置对应的端口和波特率。&lt;/p&gt;
&lt;p&gt;连上串口后，会先打印一行 &lt;code&gt;aTxBuffer&lt;/code&gt; 的内容，然后将会把接收到的 &lt;code&gt;aRxBuffer&lt;/code&gt; 回传打印出来。如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210403232628.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43892323/article/details/105339949&#34;&gt;STM32CubeMX 实战教程（六）—— 串口通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alchemicronin.github.io/posts/b4c69a89/#1-0-%E4%BB%80%E4%B9%88%E6%98%AFUART%E5%92%8CUSART%EF%BC%9F%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%E5%98%9B%EF%BC%9F&#34;&gt;进阶篇 III [UART &amp;amp; USART]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/147414331&#34;&gt;STM32 非阻塞 HAL_UART_Receive_IT 解析与实际应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/geek_monkey/article/details/89165040&#34;&gt;HAL 库教程 6：串口数据接收&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - 以太网通信（LwIP） 🚧</title>
      
      
      
      
      <description>&lt;p&gt;以下是基于 &lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.1.14.16.57314534365ZlN&amp;amp;id=569068950037&amp;amp;ns=1&amp;amp;abbucket=4#detail&#34;&gt;&lt;strong&gt;反客 STM32F407 主控核心板&lt;/strong&gt;&lt;/a&gt; 与 &lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.1.14.1.38df5bd3YTS6rE&amp;amp;id=12873819988&amp;amp;ns=1&amp;amp;abbucket=4#detail&#34;&gt;&lt;strong&gt;DP83848 以太网 PHY 模块&lt;/strong&gt;&lt;/a&gt; 的教程。&lt;/p&gt;
&lt;h2&gt;硬件&lt;/h2&gt;
&lt;p&gt;DP83848 接口为 RMII，DP83848 可支持 10M/100M 的线速，板载 50MHz 无源晶振。&lt;/p&gt;
&lt;p&gt;| STM32 主控  | DP83848 模块 |
| ----------- | ------------ |
| ETH_REF_CLK | PA1          |
| ETH_MDIO    | PA2          |
| ETH_MDC     | PC1          |
| ETH_CRS_DV  | PA7          |
| ETH_RXD0    | PC4          |
| ETH_RXD1    | PC5          |
| ETH_TX_EN   | PB11         |
| ETH_TXD0    | PB12         |
| ETH_TXD1    | PB13         |&lt;/p&gt;
&lt;h2&gt;软件&lt;/h2&gt;
&lt;h3&gt;CubeMX 内配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;RCC：HSE 选择外部晶振&lt;/li&gt;
&lt;li&gt;SYS&lt;/li&gt;
&lt;li&gt;DEBUG：SW&lt;/li&gt;
&lt;li&gt;GPIO&lt;/li&gt;
&lt;li&gt;PA15：&lt;code&gt;USER_BTN&lt;/code&gt;, Input, Pull-up&lt;/li&gt;
&lt;li&gt;PC13：&lt;code&gt;LED_GREEN&lt;/code&gt;, Output Push Pull, level High&lt;/li&gt;
&lt;li&gt;PC14：&lt;code&gt;LED_BLUE&lt;/code&gt;, Output Push Pull, level High&lt;/li&gt;
&lt;li&gt;PC15：&lt;code&gt;LED_RED&lt;/code&gt;, Output Push Pull, level High&lt;/li&gt;
&lt;li&gt;ETH&lt;/li&gt;
&lt;li&gt;Mode：RMII&lt;/li&gt;
&lt;li&gt;Advanced Parameters&lt;ul&gt;
&lt;li&gt;PHY：DP83848_PHY_ADDRESS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LWIP&lt;/li&gt;
&lt;li&gt;Key Options&lt;ul&gt;
&lt;li&gt;勾选 Show Advanced Parameters&lt;/li&gt;
&lt;li&gt;确保 LWIP_NETIF_LINK_CALLBACK 为 Enable（一般默认）&lt;/li&gt;
&lt;li&gt;xLWIP_LOOPIF_MULTICAST：Enabled&lt;/li&gt;
&lt;li&gt;xLWIP_MULTICAST_TX_OPTIONS：Enabled&lt;/li&gt;
&lt;li&gt;xLWIP_NETIF_STATUS_CALLBACK：Enabled&lt;/li&gt;
&lt;li&gt;xLWIP_NETIF_EXT_STATUS_CALLBACK：Enabled&lt;/li&gt;
&lt;li&gt;xLWIP_SO_RCVBUF：Enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Genetal Settings&lt;ul&gt;
&lt;li&gt;xLWIP_IGMP：Enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;时钟树配置：按照板载晶振（此板为 8M）配置。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220702145310.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;添加功能代码&lt;/h3&gt;
&lt;p&gt;```c title=&#34;main.c&#34;
/&lt;em&gt; USER CODE BEGIN PV &lt;/em&gt;/
extern struct netif gnetif;
/&lt;em&gt; USER CODE END PV &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE BEGIN 0 &lt;/em&gt;/
void ethernetif_notify_conn_changed(struct netif &lt;em&gt;netif) {
    /&lt;/em&gt; NOTE : This is function could be implemented in user file
     when the callback is needed,
     &lt;em&gt;/
    if (netif_is_link_up(netif)) {
        HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_RESET);
        HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
    } else {
        HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_SET);
        HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_RESET);
    }
}
/&lt;/em&gt; USER CODE END 0 */&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE BEGIN 2 &lt;/em&gt;/
ethernetif_notify_conn_changed(&amp;amp;gnetif);
/&lt;em&gt; USER CODE END 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE BEGIN 3 &lt;/em&gt;/
MX_LWIP_Process();
}
/&lt;em&gt; USER CODE END 3 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c title=&#34;lwip.c&#34;
/* USER CODE BEGIN 4_3 */
ethernetif_set_link(&amp;amp;gnetif);
if (netif_is_link_up(&amp;amp;gnetif) &amp;amp;&amp;amp; !netif_is_up(&amp;amp;gnetif)) {
    netif_set_up(&amp;amp;gnetif);
    dhcp_start(&amp;amp;gnetif);
}
/* USER CODE END 4_3 */&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;调试&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;查看连接到此电脑的设备 IP：&lt;code&gt;arp -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过插拔确定 STM32 的 IP 地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ping [ip 地址] (-t)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;热插拔网线会出现 &lt;code&gt;传输失败，常见故障&lt;/code&gt;，稍等即可自动重新建立连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.naver.com/eziya76/221852430347&#34;&gt;STM32 HAL Ethernet initialization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;```
本篇基于自研 RobotCtrl 开发套件，单片机内核为 STM32F407ZET6，以太网 PHY 芯片为 LAN8720A，原理图及详细介绍请见 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;LwIP 是 轻型（Light Weight）IP 协议，不管有没有操作系统的支持，都可以运行。LwIP 实现的重点是在保持 TCP 协议主要功能的基础上减少对 RAM 的占用，它只需十几 KB 的 RAM 和 40K 左右的 ROM 就可以运行，这使 LwIP 协议栈适合在低端的嵌入式系统中使用。&lt;/p&gt;
&lt;p&gt;LwIP 提供了三种编程接口，分别为 RAW/Callback API、NETCONN API、SOCKETAPI。它们的易用性从左到右依次提高，而执行效率从左到右依次降低。可以权衡利弊选择适合自己的 API 进行开发。在本文中，使用 Raw API，调用以下的函数：&lt;/p&gt;
&lt;p&gt;| API 函数       | 说明                                     |
| -------------- | ---------------------------------------- |
| udp_new        | 创建新的 UDP PCB                         |
| udp_remove     | 移除 UDP PCB 并释放相关资源              |
| udp_bind       | UDP PCB 与本地 IP 地址和端口绑定         |
| udp_connect    | 建立 UDP PCB 远程 IP 地址和端口          |
| udp_disconnect | 移除 UDP PCB 远程 IP 和端口              |
| udp_send       | 发送 UDP 数据                            |
| udp_recv       | 注册回调函数，当收到新数据报时即对其调用 |&lt;/p&gt;
&lt;h2&gt;CubeMX 内配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;RCC&lt;/code&gt; 页面内为 HSE 选择外部晶振。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;ETH&lt;/code&gt; 页面内配置 PHY 模式为&lt;code&gt;RMII&lt;/code&gt;，并配置以下参数：&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;Parameter Setting&lt;/code&gt; 标签页下，将 &lt;code&gt;PHY Address&lt;/code&gt; 配置为 &lt;code&gt;0&lt;/code&gt;（根据 PHYAD0 管脚配置决定的）。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;Advanced Parameter&lt;/code&gt; 标签页下，根据 LAN8720A 的芯片手册，将 &lt;code&gt;PHY special control/status register Offset&lt;/code&gt; 配置为 &lt;code&gt;31&lt;/code&gt;； &lt;code&gt;PHY Speed mask&lt;/code&gt; 配置为 &lt;code&gt;0x0004&lt;/code&gt;； &lt;code&gt;PHY Duplex mask&lt;/code&gt; 配置为 &lt;code&gt;0x0010&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;LWIP&lt;/code&gt; 页面内开启使能，并配置以下参数：&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;General Settings&lt;/code&gt; 标签页下，将 &lt;code&gt;LWIP_DHCP (DHCP Module)&lt;/code&gt; 配置为 &lt;code&gt;Disabled&lt;/code&gt;（使用静态 IP）； &lt;code&gt;IP_ADDRESS&lt;/code&gt; 配置为 &lt;code&gt;192.168.001.100&lt;/code&gt;； &lt;code&gt;NETMASK_ADDRESS&lt;/code&gt; 配置为 &lt;code&gt;255.255.255.000&lt;/code&gt;；&lt;code&gt;GATEWAY_ADDRESS&lt;/code&gt; 配置为 &lt;code&gt;192.168.001.001&lt;/code&gt;；&lt;code&gt;LWIP_UDP (UDP Module)&lt;/code&gt; 和 &lt;code&gt;LWIP_TCP (TCP Module)&lt;/code&gt; 配置为 &lt;code&gt;Enabled&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.st.com/en/embedded-software/stsw-stm32070.html&#34;&gt;LwIP TCP/IP stack demonstration for STM32F4x7 microcontrollers (AN3966)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.st.com/resource/en/user_manual/um1713-developing-applications-on-stm32cube-with-lwip-tcpip-stack-stmicroelectronics.pdf&#34;&gt;Developing applications on STM32Cube with LwIP TCP/IP stack (UM1713)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/54zorb/stm32-lwip&#34;&gt;54zorb/stm32-lwip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;```&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%BB%A5%E5%A4%AA%E7%BD%91%E9%80%9A%E4%BF%A1%EF%BC%88LwIP%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%BB%A5%E5%A4%AA%E7%BD%91%E9%80%9A%E4%BF%A1%EF%BC%88LwIP%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - 外部中断</title>
      
      
      
      
      <description>&lt;p&gt;上一篇文章我们提到，用轮询的方法消除按键抖动、检测输入，有可能会消耗过多的系统资源并导致卡机，也有可能会错过检测。这就是为什么我们需要使用中断了。&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;h3&gt;轮询与中断&lt;/h3&gt;
&lt;p&gt;什么是轮询和中断？以取外卖举个例子，轮询就是每分钟我都要去一趟门口，看看外卖小哥来了没。那么这段时间我做不了别的事情了，就光盯着外卖；但假如外卖小哥在我恰好离开门口的时候送到了，那么就错过了外卖。相反的，中断就是让外卖小哥来的时候打个电话，我搁下手中的活去拿外卖，这样我既能够安心干活，又不怕错过外卖。&lt;/p&gt;
&lt;h3&gt;外部中断&lt;/h3&gt;
&lt;p&gt;中断分外部（Interrupt）和内部（Exception）。外部中断由外部外设来打断 MCU，内部中断由内部的软件程序自行打断 MCU.&lt;/p&gt;
&lt;h3&gt;NVIC&lt;/h3&gt;
&lt;p&gt;NVIC 全称为 Nested Vectored Interrupt Controller，翻译过来就是 &lt;strong&gt;嵌套向量中断控制器&lt;/strong&gt; 。它主要有三个参数，分别是：中断使能，抢占优先级，响应优先级。（优先级数值越小，优先级越高）&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210206121058.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中断使能&lt;/strong&gt;：指的就是是否开启中断。如果开启中断，那么当满足中断触发条件的时候，会跳到中断服务程序运行；否则不理会中断服务程序，继续运行主程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抢占优先级&lt;/strong&gt;：用于判断一个中断是否可以打断另一个中断的服务程序，抢先运行。举个例子，条件触发了 A 中断，A 中断的服务程序正在运行中，此时条件触发了 B 中断。此时如果 B 中断的抢占优先级比 A 的高，那么 A 的服务程序就会被打断，先去执行 B 的服务程序，执行完之后再继续执行 A，这也称为中断嵌套。如果 B 的抢占优先级不比 A 高，那还是乖乖先执行完 A，再去执行 B.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;响应优先级&lt;/strong&gt;：如果抢占优先相同的几个中断同时被触发，那么响应优先级高的最先运行。&lt;/p&gt;
&lt;p&gt;欲判断中断的优先级，首先要先比较的是抢占优先级。抢占优先级相同的情况下，响应优先高的中断优先级别高。如果两个优先级都一样，那么就要根据中断向量表来确定。&lt;/p&gt;
&lt;h3&gt;中断回调函数参考&lt;/h3&gt;
&lt;p&gt;配置了 GPIO 中断和 NVIC 优先级之后，在 &lt;code&gt;stm32f4xx_it.c&lt;/code&gt; 文件末尾重写中断回调函数即可实现功能。&lt;/p&gt;
&lt;p&gt;```c
/&lt;em&gt; USER CODE BEGIN 1 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 1 &lt;/em&gt;/
```&lt;/p&gt;
&lt;h2&gt;外部中断按键控灯&lt;/h2&gt;
&lt;p&gt;在进行下一步实验之前，需要在 CubeMX 里配置串口下载、时钟等各类参数。&lt;br&gt;
具体步骤请跳转文章 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 环境配置&lt;/strong&gt;&lt;/a&gt; 中的方法进行配置。&lt;/p&gt;
&lt;h3&gt;在 CubeMX 内配置中断&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205150422.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，LED 还是按照上一篇文章的方法，配置为输出；按键因为是低电平触发，也就是在按下的一瞬间会产生一个下降沿，所以引脚应该配置为下降沿触发的中断。&lt;/p&gt;
&lt;p&gt;在我的板子上，就是将 &lt;code&gt;PI8&lt;/code&gt; 配置为 &lt;code&gt;GPIO_EXTI8&lt;/code&gt; 模式（外部中断，挂载在中断线 8 上的），并配置为下降沿触发，根据原理图，选择内部上拉（Pull-up）。如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210403222304.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210206131409.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着，点击跳转 NVIC 标签页面，使能我们配置的中断：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210206134916.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外，要把抢占优先级降低一位（从 0 变为 1，原因下文会解释）。&lt;/p&gt;
&lt;h3&gt;在代码内配置中断&lt;/h3&gt;
&lt;p&gt;只需要在 &lt;code&gt;stm32f4xx_it.c&lt;/code&gt; 末尾添加如下代码：&lt;/p&gt;
&lt;p&gt;```c title=&#34;stm32f4xx_it.c&#34;
/&lt;em&gt; USER CODE BEGIN 1 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
    if(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == 0)
    {
        HAL_Delay(100);
        if(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == 0)
        {
            HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
        }
    }
}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 1 &lt;/em&gt;/
```&lt;/p&gt;
&lt;p&gt;这段代码的作用是重写中断的回调函数，增加用按键切换灯开关的功能。但是这里的 &lt;code&gt;HAL_Delay()&lt;/code&gt; 延时函数有坑，因为其来源是 SysTick 定时器（在固定时间间隔内产生中断），所以就有所属的中断优先级。在上面配置 NVIC 的图中可以看出，SysTick 和我们配置的中断抢占优先级都是 0，所以便无法在外部中断触发时接着触发 SysTick 了。所以，我们要把外部中断的抢占优先级改低（由 0 改为 1）。&lt;/p&gt;
&lt;p&gt;编译上传后即可通过按下按键，切换 LED 灯的亮灭状态了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://alchemicronin.github.io/posts/ff6aca34/&#34;&gt;进阶篇 II [Interrupt]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43892323/article/details/104383560?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&#34;&gt;STM32CubeMX 实战教程（三）—— 外部中断（中断及 HAL_Delay 函数避坑）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/</guid>
      
    </item>
    
    <item>
      <title>HAL 库开发笔记 - 环境配置</title>
      
      
      
      
      <description>&lt;p&gt;注：本教程基于反客的 STM32F429IGT6 板子。&lt;/p&gt;
&lt;h2&gt;软件安装&lt;/h2&gt;
&lt;h3&gt;Keil MDK&lt;/h3&gt;
&lt;p&gt;详见文章 &lt;a href=&#34;https://wiki-power.com/KeilMDK%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97&#34;&gt;&lt;strong&gt;Keil MDK 配置指南&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Java Runtime Environment&lt;/h3&gt;
&lt;p&gt;这是 STM32CubeMX 所需要的 Java 环境，从 &lt;a href=&#34;https://www.java.com/en/download/&#34;&gt;&lt;strong&gt;官网链接&lt;/strong&gt;&lt;/a&gt; 下载安装即可。&lt;/p&gt;
&lt;h3&gt;STM32CubeMX&lt;/h3&gt;
&lt;p&gt;从 &lt;a href=&#34;https://my.st.com/content/my_st_com/zh/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-configurators-and-code-generators/stm32cubemx.license=1611899126599.product=STM32CubeMX.version=6.1.1.html&#34;&gt;&lt;strong&gt;官网链接&lt;/strong&gt;&lt;/a&gt; 下载并安装 STM32CubeMX。&lt;/p&gt;
&lt;h2&gt;项目的配置&lt;/h2&gt;
&lt;h3&gt;初始化&lt;/h3&gt;
&lt;p&gt;新建项目，选择芯片后先保存。&lt;/p&gt;
&lt;h3&gt;配置 SYS&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Pinout &amp;amp; Configurations&lt;/code&gt; - &lt;code&gt;System Core&lt;/code&gt; - &lt;code&gt;SYS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt;Debug&lt;/code&gt; 选项改为 &lt;code&gt;Serial Wire&lt;/code&gt;（原因详见文章 &lt;a href=&#34;https://wiki-power.com/CubeMX与CubeIDE避坑&#34;&gt;&lt;strong&gt;CubeMX 与 CubeIDE 避坑&lt;/strong&gt;&lt;/a&gt;）&lt;/p&gt;
&lt;h3&gt;配置 RCC&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Pinout &amp;amp; Configurations&lt;/code&gt; - &lt;code&gt;System Core&lt;/code&gt; - &lt;code&gt;RCC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;按照板子的情况设置就行了。&lt;/p&gt;
&lt;p&gt;举个例子，参照板子原理图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205205030.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt;HSE&lt;/code&gt; 和 &lt;code&gt;LSE&lt;/code&gt; 的选项都设置为外部晶振就可以了：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205205140.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;配置时钟树&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;Clock Configuration&lt;/code&gt; 界面进行配置。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210205205550.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据上图的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据板载外部晶振的参数，填入最左侧两个频率的值&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;HSE&lt;/code&gt; ，因为外部晶振频率和精度都比内部的高&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;PLLCLK&lt;/code&gt; ，使用 PLL 锁相环倍频得到高频率&lt;/li&gt;
&lt;li&gt;填入 &lt;code&gt;HCKL&lt;/code&gt; 的值，一般根据下方提示的最大频率填写，填写后按回车，便可自动计算分频倍频数&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;配置项目管理选项&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210130095224.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210130095239.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;HAL 库与标准库的区别&lt;/h2&gt;
&lt;p&gt;为了增加可移植性，HAL 库相比标准库多了 &lt;strong&gt;句柄、MSP 函数、Callback 函数&lt;/strong&gt; 这三个功能，具体可参见文末引用链接中的内容。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/as480133937/article/details/98845509&#34;&gt;【STM32】系统时钟 RCC 详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.notion.so/2-RCC-770c0c454f954408a3956257aa0fb523&#34;&gt;板子初始化，RCC 时钟树完整配置的方式和详细过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ffcjKtl7JdRibLRNGquGXA&#34;&gt;STM32 HAL 的超全知识总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qkj0fQS5NrCXmbppKEhaAg&#34;&gt;清晰了，STM32 HAL 的超全知识总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      
    </item>
    
    <item>
      <title>Keil MDK 配置指南</title>
      
      
      
      
      <description>&lt;h2&gt;1. 下载&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;进入 Keil 官网下载页面：&lt;/strong&gt; &lt;a href=&#34;https://www.keil.com/demo/eval/arm.htm&#34;&gt;https://www.keil.com/demo/eval/arm.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如图填写相关信息并点击 &lt;code&gt;Submit&lt;/code&gt; 按钮：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564402348383.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;点击下载安装包：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564402469518.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;2. 安装&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;打开下载完成的安装包，按如下步骤操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405005991.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405034468.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405123578.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405166784.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405201092.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405260737.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装芯片包（我们需要 STM32 F1 和 F4 系列）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405574756.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564405648731.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;3. 破解&lt;/h2&gt;
&lt;p&gt;点击下载 &lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software/KEIL_Lic.exe&#34;&gt;&lt;strong&gt;破解器&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关闭 MDK，右键以管理员身份打开：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564406135091.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开菜单栏 - File - License Management ：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564406171844.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;复制这一串 &lt;code&gt;CID&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564406230209.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在破解器中粘贴，并在 &lt;code&gt;Target&lt;/code&gt; 下拉框中选择 &lt;code&gt;Arm&lt;/code&gt; ，然后点击 &lt;code&gt;Generate&lt;/code&gt; 生成激活码：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564406292113.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;拷贝激活码，到 MDK 中粘贴，后点击 &lt;code&gt;Add LIC&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1564406431978.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/w5862338/article/details/50984536&#34;&gt;Keil 保护视力背景颜色设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/sudaroot/article/details/88095269&#34;&gt;keil 代码格式化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software-development/global.prop&#34;&gt;个人界面配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/KeilMDK%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/KeilMDK%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>Lora 通信 - 基于正点原子 ATK-LORA-01 模块</title>
      
      
      
      
      <description>&lt;p&gt;ATK-LORA-01 一款体积小、微功率、低功耗、高性能远距离 LORA 无线串口模块。模块设计是采用高效的 ISM 频段射频 SX1278 扩频芯片，模块的工作频率在 410Mhz~441Mhz，以 1Mhz 频率为步进信道，共 32 个信道。可通过 AT 指令在线修改串口速率，发射功率，空中速率，工作模式等各种参数，并且支持固件升级功能。&lt;/p&gt;
&lt;h2&gt;模块基本参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;工作频率：410-441 MHz，32 个信道&lt;/li&gt;
&lt;li&gt;工业频段：出厂默认 433Mhz 免申请频段&lt;/li&gt;
&lt;li&gt;无线速率：6 级可调（0.3、1.2、2.4、4.8、9.6、19.2Kbps）&lt;/li&gt;
&lt;li&gt;通信方式：串口 TTL，UART 串口，8N1、8E1、8O1，从 1200-115200 共 8 种波特率（默认 9600、8N1）&lt;/li&gt;
&lt;li&gt;发射功率：100mW（20dB），4 级可调（0-3），每一级增减约 3dBm&lt;/li&gt;
&lt;li&gt;工作电压：3.3-5V&lt;/li&gt;
&lt;li&gt;工作电流：2.3uA-118mA&lt;/li&gt;
&lt;li&gt;发射：118ma（20dbm 100mw 电压 5V）&lt;/li&gt;
&lt;li&gt;接收：17ma（模式 0、模式 1），最低约 2.3uA（模式 2+2S 唤醒）&lt;/li&gt;
&lt;li&gt;工作温度：-40~85℃&lt;/li&gt;
&lt;li&gt;接收灵敏度达-136dBm，传输距离 3000 米&lt;/li&gt;
&lt;li&gt;双 512 环形 FIFO&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;接口定义&lt;/h2&gt;
&lt;p&gt;| 名称 | IO 模式        | 说明                                                                              |
| ---- | -------------- | --------------------------------------------------------------------------------- |
| MD0  | 输入           | 配置进入参数配置；上电时与 AUX 引脚配合进入固件升级模式                           |
| AUX  | ① 输出；② 输入 | ① 用于指示模块工作状态，用户唤醒外部 MCU；② 上电时与 MD0 引脚配合进入固件升级模式 |
| RXD  | 输入           | TTL 串口输入，连接到外部 TXD 输出引脚                                             |
| TXD  | 输出           | TTL 串口输出，连接到外部 RXD 输入引脚                                             |
| GND  |                | 接地                                                                              |
| VCC  |                | DC3.3~5V 电源输入                                                                 |&lt;/p&gt;
&lt;p&gt;注意事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;模块的引脚电平是 3.3V，与 5V 的单片机通信需要做电平转换适配&lt;/li&gt;
&lt;li&gt;无线串口模块为 TTL 电平，请与 TTL 电平的 MCU 进行连接&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;模式配置&lt;/h2&gt;
&lt;p&gt;MD0 与 AUX 引脚有两个功能，根据两者配合进入不同状态。模块在初次上电时，AUX 引脚为输入状态模式，若 MD0 与 AUX 引脚同时接入 3.3V TTL 高电平，并且保持 1 秒时间（引脚电平不变），则模块会进入固件升级模式，等待固件升级。否则进入无线通信模式（AUX 引脚会变回输出状态模式，用于指示模块的工作状态）&lt;/p&gt;
&lt;p&gt;MD0、AUX 引脚内部下拉，悬空为低电平。拉高为 3.3V TTL 高电平&lt;/p&gt;
&lt;p&gt;| 功能         | 介绍                    | 进入方法                            |
| ------------ | ----------------------- | ----------------------------------- |
| 配置功能     | 模块参数配置（AT 指令） | 上电后，AUX 悬空，MD0 拉高          |
| 通信功能     | 用于无线通信            | 上电后，AUX 悬空，MD0 悬空          |
| 固件升级功能 | 用于固件升级            | 上电后，AUX 拉高，MD0 拉高，保持 1s |&lt;/p&gt;
&lt;p&gt;无线通信模式下，AUX 引脚为输出，用于指示模块的工作状态。&lt;/p&gt;
&lt;h2&gt;功能配置&lt;/h2&gt;
&lt;p&gt;在“配置功能”下，串口需设置 ASDASD：波特率“115200”、停止位“1”、数据位“8”、奇偶校验位“无”，通过 AT 指令设置模块的工作参数。通过配置软件，参考以下 AT 指令表：&lt;/p&gt;
&lt;p&gt;| 指令        | 作用                         |
| ----------- | ---------------------------- |
| AT          | 测试模块响应情况             |
| AT+MODEL?   | 查询设备型号                 |
| AT+CGMR?    | 获取软件版本号               |
| AT+UPDATE   | 查询设备是否处于固件升级模式 |
| ATE1        | 指令回显                     |
| ATE0        | 指令不回显                   |
| AT+RESET    | 模块复位（重启）             |
| AT+DEFAULT  | 恢复出厂设置                 |
| AT+FLASH=   | 参数保存                     |
| AT+ADDR=?   | 查询设备配置地址范围         |
| AT+ADDR?    | 查询设备地址                 |
| AT+ADDR=    | 配置设备地址                 |
| AT+TPOWER=? | 查询发射功率配置范围         |
| AT+TPOWER?  | 查询发射功率                 |
| AT+TPOWER=  | 配置发射功率                 |
| AT+CWMODE=? | 查询配置工作模式范围         |
| AT+CWMODE?  | 查询工作模式                 |
| AT+CWMODE=  | 配置工作模式                 |
| AT+TMODE=?  | 查询配置发送状态范围         |
| AT+TMODE?   | 查询发送状态                 |
| AT+TMODE=   | 配置发送状态                 |
| AT+WLRATE=? | 查询无线速率和信道配置范围   |
| AT+WLRATE?  | 查询无线速率和信道           |
| AT+WLRATE=  | 配置无线速率和信道           |
| AT+WLTIME=? | 查询配置休眠时间范围         |
| AT+WLTIME?  | 查询休眠时间                 |
| AT+WLTIME=  | 配置休眠时间                 |
| AT+UART=?   | 查询串口配置范围             |
| AT+UART?    | 查询串口配置                 |
| AT+UART=    | 配置串口                     |&lt;/p&gt;
&lt;p&gt;当退出配置功能（MD0=0），模块会重新配置参数，在配置过程中，AUX 保持高电平，完成后输出低电平，模块返回空闲状态。&lt;/p&gt;
&lt;h2&gt;休眠时间&lt;/h2&gt;
&lt;p&gt;休眠时间对接收方来说是监听间隔的时间；对发射方来说，是持续发射唤醒码的时间。当模块工作模式在“唤醒模式”时，会在用户数据前自动添加配置休眠时间的唤醒码，当模块工作模式在“省电模式”时，以配置的休眠时间为监听间隔的时间。&lt;/p&gt;
&lt;h2&gt;设备模式&lt;/h2&gt;
&lt;h3&gt;一般模式（模式 0）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;发射：模块接收来自串口的用户数据，模块发射无线数据包长度为 58 字节，当用户输入数据达到 58 字节时，模块将启动无线发射，此时用户可以继续输入需要发射的数据，当用户需要传输的字节小于 58 字节时，模块等待 1 个字节时间，若无用户数据继续输入则认为数据终止，此时模块将所有数据都包经无线发出，当模块开始发送第一包用户数据时，AUX 引脚将输出高电平，当模块把所有数据通过 RF 芯片并启动发射后，AUX 输出低电平。此时表明最后一包无线数据已经发射完毕，用户可以继续输入长达 512 字节的数据，通过一般模式 发出的数据包，只能被处于一般模式、唤醒模式的接收模块收到。&lt;/li&gt;
&lt;li&gt;接收：模块一直打开无线接收功能，可以接收来自一般模式、唤醒模式发出的数据包。收到数据包后，模块 AUX 输出高电平，2-3ms 延迟后，开始将无线数据通过串口 TXD 引脚发出，所有无线数据都通过串口输出后，模块将 AUX 引脚输出低电平。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;唤醒模式（模式 1）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;发射：模块启动数据包发射的条件与 AUX 功能等于一般模式，唯一不同的是：模块会在每个数据包前自动添加唤醒码（休眠时间），唤醒码的长度取决于用户参数中设置的休眠时间。唤醒码的目的是用于唤醒工作省电模式的接收模块。所以，唤醒模式发射的数据可以被一般模式、1、2 接收到。&lt;/li&gt;
&lt;li&gt;接收：与一般模式相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;省电模式（模式 2）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;发射：模块处于休眠状态，串口将关闭，无法接收来自外部 MCU 的串口数据，所以该模式不具有无线发射的功能。&lt;/li&gt;
&lt;li&gt;接收：在省电模式下，要求发射方必须工作在唤醒模式，无线模块定时监听唤醒码，一旦收到有效的唤醒码后，模块将持续处于接收状态，在等待整个有效数据包接收接收完毕，然后模块将 AUX 输出高电平，并延迟 2-3ms 后，打开串口将收到的无线数据通过 TXD 发出，完毕后将 AUX 输出低电平。无线模块将继续进制“休眠-监听”的工作状态，通过设置不同的唤醒时间，模块具有不同的接收响应延迟和功耗，用户需要在通讯延迟时间和平均功耗之间取得一个平衡点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;信号强度模式（模式 3）&lt;/h3&gt;
&lt;p&gt;信号强度模式可查看通讯双方的信号强度，评估双方的通信质量提供参考。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发射：与一般模式相同。&lt;/li&gt;
&lt;li&gt;接收：输出信号强度的信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220118110058.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;SNR：信噪比（越大越稳定），RSSI：接收信号的强度指示（越大越稳定）&lt;/p&gt;
&lt;h2&gt;通信方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;透明传输：例如 A 设备发 5 字节数据 AA BB CC DD EE 到 B 设备，B 设备就收到数据 AA BB CC DD EE。（透明传输，针对设备相同地址、相同的通信信道之间通信，用户数据可以是字符或 16 进制数据形式）。&lt;/li&gt;
&lt;li&gt;点对点&lt;/li&gt;
&lt;li&gt;点对多&lt;/li&gt;
&lt;li&gt;广播监听&lt;/li&gt;
&lt;li&gt;定向传输：例如 A 设备（地址为：0x1400，信道为 0x17（23 信道 433Mhz））需要向 B 设备（地址为 0x1234，信道为 0x10（16 信道、426Mhz））发送数据 AA BB CC，其通信格式为：12 34 10 AA BB CC，其中 1234 为模块 B 的地址，10 为信道，则模块 B 可以收到 AA BB CC。同理，如果 B 设备需要向 A 设备发送数据 AA BB CC，其通信格式为：14 00 17 AA BB CC，则 A 设备可以收到 AA BB CC。（定向传输，可实现设备间地址和通信信道不同之间通信，数据格式为 16 进制，发送格式：高位地址+低位地址+信道+用户数据）。&lt;/li&gt;
&lt;li&gt;点对多&lt;/li&gt;
&lt;li&gt;广播监听&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广播与数据监听：将模块地址设置为 0xFFFF，可以监听相同信道上的所有模块的数据传输；发送的数据，可以被相同信道上任意地址的模块收到，从而起到广播和监听的作用。&lt;/p&gt;
&lt;h2&gt;透明传输方式&lt;/h2&gt;
&lt;h3&gt;点对点&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220118110614.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地址相同、信道相同、无线速率（非串口波特率）相同的两个模块，一个模块发送，另外一个模块接收（必须是：一个发，一个收）。&lt;/li&gt;
&lt;li&gt;每个模块都可以做发送/接收。&lt;/li&gt;
&lt;li&gt;数据完全透明，所发即所得。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;|          | 发送模块 | 接收模块 |
| -------- | -------- | -------- |
| 个数     | 1        | 1        |
| 传输内容 | 数据     | 数据     |&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;设备 A、B 地址都为 0x1234，信道都为 0x12，速率相同。&lt;br&gt;
设备 A 发送：AA BB CC DD&lt;br&gt;
设备 B 接收：AA BB CC DD&lt;/p&gt;
&lt;p&gt;透传的方式很简单，把 Lora 模块当串口用就行，设备 A 通过串口发数据，设备 B 就可以从串口接收到，反之如此。&lt;/p&gt;
&lt;h3&gt;点对多&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220118110709.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地址相同、信道相同、无线速率（非串口波特率）相同的模块，任意一个模块发送，其他模块都可以接收到。&lt;/li&gt;
&lt;li&gt;每个模块都可以做发送/接收.&lt;/li&gt;
&lt;li&gt;数据完全透明，所发即所得。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;|          | 发送模块 | 接收模块 |
| -------- | -------- | -------- |
| 个数     | 1        | N        |
| 传输内容 | 数据     | 数据     |&lt;/p&gt;
&lt;p&gt;与点对点的区别是，接收模块可以多个。&lt;/p&gt;
&lt;p&gt;例如：
设备 A~F 地址为 0x1234，信道为 0x12，速率相同。&lt;br&gt;
设备 A 发送：AA BB CC DD&lt;br&gt;
设备 B~F 接收：AA BB CC DD&lt;/p&gt;
&lt;h3&gt;广播监听&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220118110853.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块地址为 0xFFFF，则该模块处于广播监听模式，发送的数据可以被相同速率和信道的其他所有模块接收到（广播）；同时，可以监听相同速率和信道上所有模块的数据传输（监听）。&lt;/li&gt;
&lt;li&gt;广播监听无需地址相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;|          | 发送模块 | 接收模块 |
| -------- | -------- | -------- |
| 个数     | 1        | N        |
| 传输内容 | 数据     | 数据     |&lt;/p&gt;
&lt;p&gt;与点对多的区别是，地址可以不同。&lt;/p&gt;
&lt;p&gt;例如：
设备 A 地址为 0xFFFF，设备 B~F 地址不全部一样，设备 B 与 C 地址为 0x1234，设备 D、E、F 地址为 0x5678。设备 A~F 速率全部相同。&lt;br&gt;
广播：&lt;br&gt;
设备 A 广播：AA BB CC DD&lt;br&gt;
设备 B~F 接收：AA BB CC DD&lt;br&gt;
监听：&lt;br&gt;
设备 B 向 C 发送：AA BB CC DD&lt;br&gt;
设备 A 监听：AA BB CC DD&lt;br&gt;
设备 D 向 E、F 发送：11 22 33 44&lt;br&gt;
设备 A 监听：11 22 33 44&lt;/p&gt;
&lt;h2&gt;定向传输方式&lt;/h2&gt;
&lt;h3&gt;点对点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;模块发送时可修改地址和信道，用户可以指定数据发送到任意地址和信道。&lt;/li&gt;
&lt;li&gt;可以实现组网和中继功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;|          | 发送模块       | 接收模块 |
| -------- | -------------- | -------- |
| 个数     | 1              | 1        |
| 传输内容 | 地址+信道+数据 | 数据     |&lt;/p&gt;
&lt;p&gt;与点对点透传的区别是，模块地址可变，信道可变，但速率仍然相同。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220118111903.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;
设备 A 地址 0X1234，信道 0X17；&lt;br&gt;
设备 B 地址 0xABCD，信道 0X01；&lt;br&gt;
设备 C 地址 0X1256，信道 0x13。&lt;/p&gt;
&lt;p&gt;设备 A 发送：AB CD 01 AA BB CC DD&lt;br&gt;
设备 B 接收：AA BB CC DD&lt;br&gt;
设备 C 接收：无&lt;/p&gt;
&lt;p&gt;设备 A 发送：12 56 13 AA BB CC DD&lt;br&gt;
设备 B 接收：无&lt;br&gt;
设备 C 接收：AA BB CC DD&lt;/p&gt;
&lt;h4&gt;无代码测试&lt;/h4&gt;
&lt;p&gt;准备 2 个 USB 转 TTL，2 个 LoRa 模块。分别接在 USB 转 TTL 上（电源、共地、TX/RX 对接），将两个 LoRa 的 MD0 接 VCC 后，插入电脑 USB，打开配置软件，配置以下参数：&lt;/p&gt;
&lt;p&gt;设备 A：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般模式&lt;/li&gt;
&lt;li&gt;定向传输&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;波特率：115200（必须是 115200）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;校验位：无&lt;/li&gt;
&lt;li&gt;空中速率：19.2k&lt;/li&gt;
&lt;li&gt;休眠时间：1s&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块地址：0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通信信道：0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;发射功率：20dBm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设备 B：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般模式&lt;/li&gt;
&lt;li&gt;定向传输&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;波特率：115200（必须是 115200）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;校验位：无&lt;/li&gt;
&lt;li&gt;空中速率：19.2k&lt;/li&gt;
&lt;li&gt;休眠时间：1s&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块地址：65534&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通信信道：10&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;发射功率：20dBm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置后，点击 &lt;code&gt;保存配置&lt;/code&gt;，&lt;strong&gt;拔掉 MD0 再断电&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;将两个模块重新上电，打开配置软件，&lt;strong&gt;收发都勾选 &lt;code&gt;HEX&lt;/code&gt;（16 进制）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 A 的发送区填入 &lt;code&gt;FF FE 0A 11 12 13 14&lt;/code&gt;，点击发送，就能在 B 的接收区收到 &lt;code&gt;11 12 13 14&lt;/code&gt; 了；或者在 B 的发送区填入 &lt;code&gt;00 00 00 11 12 13&lt;/code&gt;，就能在 A 的接收区收到 &lt;code&gt;11 12 13&lt;/code&gt; 了。&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;FF FE&lt;/code&gt; 是 B 地址 65534 的 16 进制数，信道是 10（16 进制数就是 &lt;code&gt;0A&lt;/code&gt;），发送的内容数据是 &lt;code&gt;11 12 13 14&lt;/code&gt;。同理，B 发出的数据包含 A 的地址 &lt;code&gt;00 00&lt;/code&gt;，信道 &lt;code&gt;00&lt;/code&gt;，内容 &lt;code&gt;11 12 13&lt;/code&gt;。发送数据的格式是 &lt;strong&gt;高位地址 + 低位地址 + 信道 + 用户数据&lt;/strong&gt;。&lt;/p&gt;
&lt;h4&gt;使用代码测试&lt;/h4&gt;
&lt;p&gt;点对点定传仅仅是比点对点透传多了地址字节。可以这样定义：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c title=&#34;main.c&#34;
/* USER CODE BEGIN PV */
uint8_t B_Addr[2] = { 0xFF, 0xFE };
uint8_t B_Chan[1] = { 0x0A };
/* USER CODE END PV */&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置了串口的代码（HAL 库环境）后，在每次发送数据之前发送地址字节：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c title=&#34;main.c&#34;
HAL_UART_Transmit(&amp;amp;huart1, B_Addr, 2, 0xFFFF);
HAL_UART_Transmit(&amp;amp;huart1, B_Chan, 1, 0xFFFF);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样，接收的设备（B 设备）就能接收到 A 发出的一帧数据（不含地址字节）。&lt;/p&gt;
&lt;h3&gt;广播监听&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220118112544.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块地址为 0xFFFF，则该模块处于广播监听模式，发送的数据可以被具有相同速率和信道的其他所有模块接收到（广播）；同时，可以监听相同速率和信道上所有模块的数据传输（监听）；&lt;/li&gt;
&lt;li&gt;广播监听无需地址相同。&lt;/li&gt;
&lt;li&gt;信道地址可设置。当地址为 0xFFFF 时，为广播模式；为其他时，为定向传输模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;|          | 发送模块         | 接收模块 |
| -------- | ---------------- | -------- |
| 个数     | 1                | N        |
| 传输内容 | 0xFFFF+信道+数据 | 数据     |&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;设备 A 地址 0xFFFF 信道 0x12；&lt;br&gt;
设备 B、C 地址 0x1234，信道 0x13；&lt;br&gt;
设备 D 地址 0xAB00，信道 0x01；&lt;br&gt;
设备 E 地址 0xAB01，信道 0x12；&lt;br&gt;
设备 F 地址 0xAB02，信道 0x12；&lt;/p&gt;
&lt;p&gt;设备 A 广播：FF FF 13 AA BB CC DD&lt;br&gt;
设备 B、C 接收：AA BB CC DD&lt;/p&gt;
&lt;p&gt;设备 A 发送：AB 00 01 11 22 33 44&lt;br&gt;
只有设备 D 接收：11 22 33 44&lt;/p&gt;
&lt;p&gt;设备 E 发送：AB 02 12 66 77 88 99&lt;br&gt;
设备 F 接收：66 77 88 99&lt;br&gt;
设备 A 监听：66 77 88 99&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openedv.com/docs/modules/iot/atk-lora-01.html&#34;&gt;LORA 模块 ATK-LORA-01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1D44y1t7bn&#34;&gt;正点原子 LORA 模块 ATK-LORA 使用教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openedv.com/thread-309019-1-1.html&#34;&gt;【正点原子产品资料】LORA 模块 ATK-LORA-01 资料下载和技术讨论链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openedv.com/forum.php?mod=viewthread&amp;amp;tid=288951&#34;&gt;两个 LORA 模块工作在一般模式定向传输数据的测试方法（使用上位机测试）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openedv.com/forum.php?mod=viewthread&amp;amp;tid=328190&amp;amp;highlight=ATK-LORA-01&#34;&gt;ATK-LORA-01 无线串口模块只接收到 00&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/Lora%E9%80%9A%E4%BF%A1-%E5%9F%BA%E4%BA%8E%E6%AD%A3%E7%82%B9%E5%8E%9F%E5%AD%90ATK-LORA-01%E6%A8%A1%E5%9D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/Lora%E9%80%9A%E4%BF%A1-%E5%9F%BA%E4%BA%8E%E6%AD%A3%E7%82%B9%E5%8E%9F%E5%AD%90ATK-LORA-01%E6%A8%A1%E5%9D%97/</guid>
      
    </item>
    
    <item>
      <title>STM32CubeIDE 串口重定向（printf）及输出浮点型</title>
      
      
      
      
      <description>&lt;h2&gt;重定向 printf 至串口&lt;/h2&gt;
&lt;p&gt;```c title=&#34;usart.c&#34;
/&lt;em&gt; USER CODE BEGIN 0 &lt;/em&gt;/&lt;/p&gt;
&lt;h1&gt;include &#34;stdio.h&#34;&lt;/h1&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 0 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE BEGIN 1 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;//_write 函数在 syscalls.c 中， 使用 &lt;strong&gt;weak 定义， 所以可以直接在其他文件中定义 _write 函数
__attribute&lt;/strong&gt;((weak)) int _write(int file, char &lt;em&gt;ptr, int len)
{
    int DataIdx;
    for (DataIdx = 0; DataIdx &amp;lt; len; DataIdx++)
    {
          while ((USART1-&amp;gt;SR &amp;amp; 0X40) == 0); //等待发送完毕
          USART1-&amp;gt;DR = (uint8_t) &lt;/em&gt;ptr++;
    }
    return len;
}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; USER CODE END 1 &lt;/em&gt;/
```&lt;/p&gt;
&lt;h2&gt;STM32CubeIDE 串口输出浮点型&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 STM32CubeIDE 侧栏选中工程，右键选择 &lt;code&gt;Properties&lt;/code&gt; - &lt;code&gt;C/C++ Build&lt;/code&gt; - &lt;code&gt;Settings&lt;/code&gt; - &lt;code&gt;MCU GCC Linker&lt;/code&gt; - &lt;code&gt;Miscellaneous&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;Other flags&lt;/code&gt; 栏添加一个项目，填 &lt;code&gt;-u_printf_float&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;重新编译即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;HAL_UART_Receive_IT 乱码问题&lt;/h2&gt;
&lt;p&gt;将 &lt;code&gt;HAL_UART_Transmit(&amp;amp;huart1, (uint8_t *)aRxBuffer, 10,0xFFFF);&lt;/code&gt; 的字长（&lt;code&gt;10&lt;/code&gt;）改为 &lt;code&gt;1&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.51cto.com/u_15353042/3751177&#34;&gt;STM32CubeIDE 实现 printf 重定向输出到串口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_42980638/article/details/98359026&#34;&gt;STM32CubeIDE 之 printf 重定向及串口（uart）输出浮点型数据的修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shequ.stmicroelectronics.cn/forum.php?mod=viewthread&amp;amp;tid=615546&#34;&gt;再次质疑 HAL_UART_Receive_IT函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/STM32CubeIDE%E4%B8%B2%E5%8F%A3%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%88printf%EF%BC%89%E5%8F%8A%E8%BE%93%E5%87%BA%E6%B5%AE%E7%82%B9%E5%9E%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/STM32CubeIDE%E4%B8%B2%E5%8F%A3%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%88printf%EF%BC%89%E5%8F%8A%E8%BE%93%E5%87%BA%E6%B5%AE%E7%82%B9%E5%9E%8B/</guid>
      
    </item>
    
    <item>
      <title>STM32 的启动模式</title>
      
      
      
      
      <description>&lt;p&gt;STM32 提供了 BOOT1 与 BOOT0 引脚，可以通过设置引脚的状态，以选择上电复位后的启动模式。&lt;/p&gt;
&lt;p&gt;以下为三种启动模式：&lt;/p&gt;
&lt;h2&gt;1. 从主闪存存储器启动&lt;/h2&gt;
&lt;p&gt;| BOOT0 | BOOT1 |
| :---: | :---: |
|  低   | 任意  |&lt;/p&gt;
&lt;p&gt;从片上 Flash 存储器启动（就是参数为 64K / 128K / 256K 的 Flash），一般正常情况下是这样配置的。&lt;/p&gt;
&lt;h2&gt;2. 从系统存储器启动&lt;/h2&gt;
&lt;p&gt;| BOOT0 | BOOT1 |
| :---: | :---: |
|  高   |  低   |&lt;/p&gt;
&lt;p&gt;使用串口 / ISP 下载程序时，需要配置这种模式。&lt;/p&gt;
&lt;h2&gt;3. 从内置 SRAM 启动&lt;/h2&gt;
&lt;p&gt;| BOOT0 | BOOT1 |
| :---: | :---: |
|  高   |  高   |&lt;/p&gt;
&lt;p&gt;从内置 SRAM 启动，用途有两个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于反复下载调试时，提高效率（因为下载到 Flash 相对慢）。需要注意的是，断电程序将丢失&lt;/li&gt;
&lt;li&gt;用于解除芯片的读保护功能 / 擦除 Flash 恢复出厂&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;补充&lt;/h2&gt;
&lt;p&gt;以上图表中 &lt;code&gt;高&lt;/code&gt; &lt;code&gt;低&lt;/code&gt; 表示接 10K 电阻上拉 / 下拉，而非直连 VCC / GND&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200603134417.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Creative_Team/article/details/79315876&#34;&gt;STM32 BOOT0、BOOT1 的配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_34349320/article/details/86231081?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&#34;&gt;STM32 BOOT 模式配置以及作用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>ATTiny85 调试记录</title>
      
      
      
      
      <description>&lt;h2&gt;Bootloader&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
P:\Arduino\hardware\tools\avr/bin/avrdude -C &#34;P:\Arduino\hardware\tools\avr/etc/avrdude.conf&#34; -v -pattiny85 -carduino -PCOM4 -b119200 -Uflash:w:D:\t85_default.hex:i -U lfuse:w:0xE1:m -U hfuse:w:0xDD:m -U efuse:w:0xFE:m&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Arduino 作为 ISP 下载器&lt;/h2&gt;
&lt;p&gt;|    Attiny     | Arduino |
| :-----------: | :-----: |
| Pin 1（PB5）  |   D10   |
| Pin 4 （GND） |   GND   |
| Pin 5 （PB0） |   D11   |
| Pin 6 （PB1） |   D12   |
| Pin 7 （PB2） |   D13   |
| Pin 8 （VCC） |   5V    |&lt;/p&gt;
&lt;p&gt;先给 Arduino 烧 ISP 程序：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200426144425.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开 IDE 首选项，在附加开发板地址中填写：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://raw.githubusercontent.com/damellis/attiny/ide-1.6.x-boards-manager/package_damellis_attiny_index.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开开发板管理器：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200426144642.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;搜索并安装（可能需要代理）：
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200426144732.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;烧录时注意选对芯片型号、时钟速率（Internal 16 MHz）、Arduino 所在的端口，注意编程器选择 &lt;code&gt;Arduino as ISP&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200426144834.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Argon_Ghost/article/details/103637870?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4&amp;amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4&#34;&gt;基于 ATTiny85 的 digispark Arduino 最小系统的自制教程（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Argon_Ghost/article/details/103859931&#34;&gt;基于 ATTiny85 的 digispark Arduino 最小系统的自制教程（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/73336394&#34;&gt;Digispark USB 开发板把玩笔记（一）：认识这块小巧、便宜、多功能的 Arduino 兼容板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://digistump.com/wiki/digispark/tutorials/connecting&#34;&gt;Connecting and Programming Your Digispark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://iremo-tw.blogspot.com/2018/03/attiny85-micronucleus-bootloader.html&#34;&gt;Attiny85 Micronucleus bootloader 燒錄&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/55e86b4e0194&#34;&gt;ATtiny85 制作迷你小游戏机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.sina.com.cn/s/blog_6566538d0102w6qk.html&#34;&gt;DigiSpark ATtiny85 8 脚 Arduino AVR ISP 编程的那点事儿 BootLoader 熔丝&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://digistump.com/wiki/digispark/quickref&#34;&gt;Quick Reference Frequently requested info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/ATTiny85%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/ATTiny85%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/</guid>
      
    </item>
    
    <item>
      <title>FreeRTOS 开发笔记 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freertos.org/&#34;&gt;FreeRTOS(Official Website)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amobbs.com/forum.php?mod=attachment&amp;amp;aid=NDE1MDY4fDZkYTVmZjIzfDE2NTUxMTY4NjB8MHw1NjkzMTMw&#34;&gt;STM32F429 FreeRTOS 开发手册 | 正点原子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;下载安装&lt;/h2&gt;
&lt;p&gt;首先，跳转官方下载页面 &lt;a href=&#34;https://www.freertos.org/a00104.html&#34;&gt;&lt;strong&gt;Download FreeRTOS&lt;/strong&gt;&lt;/a&gt; 下载最新的安装器。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/FreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/FreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>PlatformIO — 一站式嵌入式开发工具</title>
      
      
      
      
      <description>&lt;p&gt;—— 搭建一站式开发环境，替代 Keil / Arduino IDE&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200531112801.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;PlatformIO 是一个强大的一站式工具，来看看它的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨平台，仅需 Python 环境（意味着可以在 Windows/MacOS/Linux 上使用）&lt;/li&gt;
&lt;li&gt;在 VSCode 内可作为插件安装使用（终于可以抛弃 Keil 了）&lt;/li&gt;
&lt;li&gt;强大的生态：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/boards/index.html#boards&#34;&gt;&lt;strong&gt;800+ 常用的开发板&lt;/strong&gt;&lt;/a&gt;：你能买到的通用开发板，这儿基本上都有&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/platforms/index.html#platforms&#34;&gt;&lt;strong&gt;35+ 开发平台&lt;/strong&gt;&lt;/a&gt;：覆盖 Atmel AVR（Arduino）/ ESP / NXP / 8051 / PIC32 / FPGA / FreeRTOS / ARM（STM32） 等等&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/frameworks/index.html#frameworks&#34;&gt;&lt;strong&gt;20+ 框架&lt;/strong&gt;&lt;/a&gt;：Arduino / CMSIS / STM32Cube 等等&lt;/li&gt;
&lt;li&gt;带编译 / 下载 / 调试 / 串口监视器功能，且支持各式各样的编译器 / 调试器&lt;/li&gt;
&lt;li&gt;提供各式各样的功能库&lt;/li&gt;
&lt;li&gt;代码自动补全、语法检查、多项目管理、适配主题&lt;/li&gt;
&lt;li&gt;远程开发功能（未尝试）&lt;/li&gt;
&lt;li&gt;单元测试（未尝试）&lt;/li&gt;
&lt;li&gt;命令行和 GUI 环境都有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总之，是时候抛弃各类 IDE（如 Arduino IDE / Keil / IAR），享受一条龙服务了。&lt;/p&gt;
&lt;h2&gt;下载安装&lt;/h2&gt;
&lt;p&gt;首先，确保你的电脑有 VSCode（VSCode 的下载安装可以跳转 &lt;a href=&#34;https://wiki-power.com/VSCode生产力指南-环境配置&#34;&gt;&lt;strong&gt;这篇文章&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;拓展&lt;/code&gt; （&lt;code&gt;Ctrl + Shift + X&lt;/code&gt;） 内搜索并安装 &lt;code&gt;Python&lt;/code&gt; 和 &lt;code&gt;PlatformIO IDE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200531113916.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;插件安装成功后，点击 &lt;code&gt;重新加载&lt;/code&gt; 启动插件，然后泡一杯咖啡，待其自动安装核心组件 &lt;code&gt;platformIO-core&lt;/code&gt;（首次安装时间可能会比较长）&lt;/p&gt;
&lt;p&gt;安装完成后，单击侧边栏相关的按钮，即可启动 PlatformIO.&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://platformio.org/&#34;&gt;PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/index.html&#34;&gt;PlatformIO Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ussserrr/stm32pio#requirements&#34;&gt;ussserrr/stm32pio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/49cfa03d6164&#34;&gt;用 VS Code 作为 STM32 开发平台（platformIO）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.smslit.top/2019/08/24/platformio-stm32-cubemx/&#34;&gt;PlatformIO IDE(VSCode) - stm32cube 框架的工程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/PlatformIO%E2%80%94%E4%B8%80%E7%AB%99%E5%BC%8F%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/PlatformIO%E2%80%94%E4%B8%80%E7%AB%99%E5%BC%8F%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</guid>
      
    </item>
    
    <item>
      <title>PlatformIO 搭配 CubeMX 食用</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;在 &lt;a href=&#34;https://wiki-power.com/PlatformIO—一站式嵌入式开发工具&#34;&gt;&lt;strong&gt;上一篇文章&lt;/strong&gt;&lt;/a&gt; 中，我们可以看到，PlatformIO 用起来比 Keil 优雅多了。&lt;br&gt;
众所周知，STM32 打开方式中，HAL 库比标准库更方便易用（配合神器 CubeMX），但 PlatformIO 官方对 CubeMX 的兼容不是特别完美（需通过 Python 中间件来进行代码转换）&lt;/p&gt;
&lt;p&gt;在这篇文章中，我将介绍一种独特的方法，让 PlatformIO 配合 CubeMX 食用起来更加美味。&lt;/p&gt;
&lt;h2&gt;初始化项目&lt;/h2&gt;
&lt;p&gt;太长不看：我把以下步骤创建的项目文件夹放在 &lt;a href=&#34;https://github.com/linyuxuanlin/Template_of_PlatformIO_with_CubeMX&#34;&gt;&lt;strong&gt;这个仓库&lt;/strong&gt;&lt;/a&gt;，直接克隆即可。&lt;/p&gt;
&lt;h3&gt;CubeMX 的初始化操作&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;新建项目&lt;/li&gt;
&lt;li&gt;选择 MCU 型号&lt;/li&gt;
&lt;li&gt;配置 Pinout &amp;amp; Configuration&lt;/li&gt;
&lt;li&gt;配置 RCC（选外部 / 内部时钟，视情况可略）&lt;/li&gt;
&lt;li&gt;配置 SYS（将 DEBUG 选项由 &lt;code&gt;No Debug&lt;/code&gt; 修改为 &lt;code&gt;Serial Wire&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;配置 Clock Configuration&lt;/li&gt;
&lt;li&gt;配置 Project Manager&lt;/li&gt;
&lt;li&gt;Project 页面&lt;ol&gt;
&lt;li&gt;填写项目名称 （Project Name） e.g. &lt;code&gt;Template_of_PlatformIO_with_CubeMX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改项目路径 （Project Location） e.g. &lt;code&gt;D:/Desktop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将工具链（Toolchain / IDE）修改为 &lt;code&gt;Other Toolchains&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Code Generator 页面&lt;ol&gt;
&lt;li&gt;将软件包选项（STM32Cube Firmware Library Package）选择为 &lt;code&gt;Copy only the necessary library files&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在文件生成选项（Generated files）勾选 &lt;code&gt;Generate peripheral initialization as a pair of &#39;.c/.h&#39; files per peripheral&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;终于配置完成了，我们点击右上角 &lt;code&gt;Generate Code&lt;/code&gt; 生成代码吧。&lt;/p&gt;
&lt;h3&gt;PlatformIO 的初始化操作&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开 PlatformIO 的主页&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;New Project&lt;/code&gt; 新建工程&lt;/li&gt;
&lt;li&gt;填写工程的名字。注意：一定要与 CubeMX 中配置的相同！（e.g. &lt;code&gt;Template_of_PlatformIO_with_CubeMX&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;选择板子 / MCU 型号。这儿可以直接选择 MCU 的型号（e.g. STM32F103C8），也可以直接选择版型（e.g. BluePill F103C8）。注意：一定要与 CubeMX 中配置的相同！&lt;/li&gt;
&lt;li&gt;代码框架 &lt;code&gt;Framework&lt;/code&gt; 选择 &lt;code&gt;STM32Cube&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将路径 &lt;code&gt;Location&lt;/code&gt; 下 &lt;code&gt;Use default location&lt;/code&gt; 取消掉，我们自定义路径。注意：一定要与 CubeMX 中配置的相同！（e.g. &lt;code&gt;D:/Desktop&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;打开项目中 &lt;code&gt;platformio.ini&lt;/code&gt; 文件，添加如下几行：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ini
   [platformio]
   include_dir=Inc
   src_dir=Src&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里是因为 PlatformIO 与 CubeMX 默认生成的框架文件夹不一样，为了兼容性，我们顺从 CubeMX.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以将项目中的 &lt;code&gt;include&lt;/code&gt; 文件夹删了。而因为 Windows 文件命名不区分大小写，所以 &lt;code&gt;src&lt;/code&gt; 文件夹顺理成章变为 &lt;code&gt;Src&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;尽情享用吧！&lt;/h3&gt;
&lt;p&gt;项目中， &lt;code&gt;.c&lt;/code&gt; 存放于 &lt;code&gt;Src&lt;/code&gt; 文件夹中，&lt;code&gt;.h&lt;/code&gt; 在 &lt;code&gt;Inc&lt;/code&gt; 中。&lt;br&gt;
只要在 &lt;code&gt;/* USER CODE BEGIN */&lt;/code&gt; 与 &lt;code&gt;/* USER CODE END */&lt;/code&gt; 之间的代码，后续从 CubeMX 生成的过程中，都将得以保留，不会被覆盖掉。&lt;/p&gt;
&lt;p&gt;PlatformIO 可以用快捷键 &lt;code&gt;Ctrl + Alt + B&lt;/code&gt; 编译，用 &lt;code&gt;Ctrl + Alt + U&lt;/code&gt; 编译并上传，按 &lt;code&gt;F5&lt;/code&gt; 开启调试。&lt;/p&gt;
&lt;p&gt;接下来的探索，就是 HAL 库的学习了。未完待续 ~&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.strongerhuang.com/STM32Cube/STM32CubeMX/STM32CubeMX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B03_%E5%88%9B%E5%BB%BA%E5%B9%B6%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E5%B7%A5%E7%A8%8B.html&#34;&gt;STM32CubeMX 系列教程 03_创建并生成代码工程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.strongerhuang.com/STM32Cube/STM32CubeMX/STM32CubeMX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B06_Project%20Manager%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%E5%99%A8%E8%AF%A6%E7%BB%86%E8%AF%B4%E6%98%8E.html&#34;&gt;STM32CubeMX 系列教程 06_Project Manager 工程管理器详细说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/49cfa03d6164&#34;&gt;用 VS Code 作为 STM32 开发平台（PlatformIO）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/PlatformIO%E6%90%AD%E9%85%8DCubeMX%E9%A3%9F%E7%94%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/PlatformIO%E6%90%AD%E9%85%8DCubeMX%E9%A3%9F%E7%94%A8/</guid>
      
    </item>
    
    <item>
      <title>SWD 与 JTAG 的区别与联系</title>
      
      
      
      
      <description>&lt;p&gt;众所周知，SWD 和 JTAG 是单片机下载程序与调试的常用接口。其共同之处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;供电电压范围&lt;/strong&gt;: 1.2 V - 5.5 V&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时钟速率&lt;/strong&gt;: 可配置高达 10 MHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SWO 跟踪捕获&lt;/strong&gt;: 数据速率高达 50 Mbit/s（UART/NRZ 模式）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隔离电压&lt;/strong&gt;: 1 kV&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;热插拔&lt;/strong&gt;：支持&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;JTAG&lt;/h2&gt;
&lt;p&gt;JTAG，全名为 Joint Test Action Group（联合测试行动小组）。截至本文最新的标准为 IEEE Standard 1149.1-1990.&lt;/p&gt;
&lt;p&gt;其拓扑图（菊花链）如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210209191921.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;JTAG 一般使用 5 个引脚：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TDI&lt;/strong&gt;（Test Data In）：串行输入引脚&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TDO&lt;/strong&gt;（Test Data Out）：串行输出引脚&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCK&lt;/strong&gt;（Test Clock）：时钟引脚，一般附加 100k 下拉电阻&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TMS&lt;/strong&gt;（Test Mode Select）：模式选择（控制信号）引脚&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TRST&lt;/strong&gt;（Test Reset）：复位引脚&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JTAG 的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不限于 ARM 系列芯片&lt;/li&gt;
&lt;li&gt;具有更多用于编程，调试和生产测试的用途&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;SWD&lt;/h2&gt;
&lt;p&gt;全称为 Serial Wire Debug（串行线调试），是 ARM 专门设计的协议，仅支持 ARM（所以在 ARM 系列单片机中性能表现较佳）。&lt;/p&gt;
&lt;p&gt;SWD 一般使用 2 个引脚：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SWDIO&lt;/strong&gt;（Serial Wire Data Input Output）：串行数据输入输出引脚&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SWCLK&lt;/strong&gt;（Serial Wire Clock）：串行线时钟引脚&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SWD 的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用引脚更少，只需 SWDIO 和 SWCLK 两个引脚&lt;/li&gt;
&lt;li&gt;SWD 具有特殊功能，例如打印调试信息&lt;/li&gt;
&lt;li&gt;与 JTAG 相比，SWD 在速度上具有更好的整体性能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;JTAG 与 SWD 的兼容性&lt;/h2&gt;
&lt;p&gt;一般来说，单片机板子上会有以下这些烧录座，可同时兼容 JTAG 与 SWD：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210210122923.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210210123714.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCK 兼容 SWCLK&lt;/li&gt;
&lt;li&gt;TMS 兼容 SWDIO&lt;/li&gt;
&lt;li&gt;（TDO 兼容 SWO）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选用 SWD 而非 JTAG 的理由：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电路原理图设计需要足够简单，且可以在没有 JTAG 功能的情况下进行测试&lt;/li&gt;
&lt;li&gt;PCB 在尺寸方面有限制，SWD 可以节省空间&lt;/li&gt;
&lt;li&gt;MCU 已经没有多余的引脚给 JTAG 用了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/MW57t266yvv6TOweeFEUVA&#34;&gt;下载调试接口 SWD 和 JTAG 的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://southlife.tistory.com/107&#34;&gt;Cortex JTAG，SWD Debug Port Sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.keil.com/support/man/docs/ulinkplus/ulinkplus_jtagswd_interface.htm&#34;&gt;JTAG/SWD Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/JTAG&#34;&gt;JTAG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/SWD%E4%B8%8EJTAG%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/SWD%E4%B8%8EJTAG%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/</guid>
      
    </item>
    
    <item>
      <title>T-Clock 桌上小钟</title>
      
      
      
      
      <description>&lt;h2&gt;准备材料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;NodeMCU&lt;/strong&gt;：基于 ESP8266&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OLED&lt;/strong&gt;：128x64 分辨率，I2C 接口（SPI 请见参考链接）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;接线&lt;/h2&gt;
&lt;p&gt;| OLED | NodeMCU |
| :--: | :-----: |
| GND  |   GND   |
| VCC  |  3.3V   |
| SCL  |   D1    |
| SDA  |   D2    |&lt;/p&gt;
&lt;h2&gt;例程&lt;/h2&gt;
&lt;h3&gt;API 配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;a href=&#34;https://www.seniverse.com/&#34;&gt;&lt;strong&gt;心知天气&lt;/strong&gt;&lt;/a&gt; 注册账户&lt;/li&gt;
&lt;li&gt;在控制台内添加新产品（选择免费版即可）&lt;/li&gt;
&lt;li&gt;复制 API 私钥&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;包含库文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_SSD1306&#34;&gt;&lt;strong&gt;Adafruit_SSD1306.h&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;最终例程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/T-Clock/tree/master/Software/Codes/Weather_Clock_OLED_I2C&#34;&gt;&lt;strong&gt;T-Clock/Software/Codes/Weather_Clock_OLED_I2C&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：需将 WiFi 名称及密码、城市、私钥改为你自己的。&lt;br&gt;
如果编译出现错误，且错误信息定位在 &lt;code&gt;#error(&#34;Height incorrect, please fix Adafruit_SSD1306.h!&#34;);&lt;/code&gt;，则需打开库文件 &lt;code&gt;Adafruit_SSD1306.h&lt;/code&gt;，将 &lt;code&gt;#define SSD1306_128_32&lt;/code&gt; 改为 &lt;code&gt;#define SSD1306_128_64&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注：定制硬件项目正在路上~&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/T-Clock桌上小钟（旧）&#34;&gt;T-Clock 桌上小钟（旧）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.seniverse.com/&#34;&gt;心知天气&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/av89935868/?spm_id_from=333.788.b_636f6d6d656e74.4&#34;&gt;ESP8266 接入心知天气 API【程序＋详细讲解】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/av88920975/&#34;&gt;ESP8266 ＋ OLED = 网络时钟和未来 3 日天气预报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/young_people_only_love_her/My_ESP8266/tree/master/%E5%BF%83%E7%9F%A5%E5%A4%A9%E6%B0%94&#34;&gt;My_ESP8266/心知天气&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.electronicwings.com/nodemcu/oled-graphic-display-interfacing-with-nodemcu&#34;&gt;OLED Graphic Display Interfacing with NodeMCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_SSD1306&#34;&gt;adafruit/Adafruit_SSD1306&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/T-Clock%E6%A1%8C%E4%B8%8A%E5%B0%8F%E9%92%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/T-Clock%E6%A1%8C%E4%B8%8A%E5%B0%8F%E9%92%9F/</guid>
      
    </item>
    
    <item>
      <title>一个舵机的自我修养</title>
      
      
      
      
      <description>&lt;p&gt;如何把一个舵机改装成 360° 连转舵机，以及用代码解决杂音？&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-04cbc8eb7ac10ddc.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;一般来说，舵机只能转 180°（网上也有卖也有连转舵机，只是价格贵了一截）。如果想用舵机来作为小车的驱动，可以把它改为连转舵机。&lt;/p&gt;
&lt;h2&gt;改装 360° 舵机&lt;/h2&gt;
&lt;h3&gt;1. 准备工作&lt;/h3&gt;
&lt;p&gt;工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;螺丝刀&lt;/li&gt;
&lt;li&gt;热熔胶枪&lt;/li&gt;
&lt;li&gt;斜口钳&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. 拆开舵机&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-7bc137198ac65914.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-ce45e1ce8a869ed2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意记住每个齿轮的位置。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-f81faeac715a89f7.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;3. 修改齿轮&lt;/h3&gt;
&lt;p&gt;把最大的齿轮拣出来，用斜口钳把后面凸起的地方剪掉。 &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-2fab2f9620b5efb2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;找一只比轴的直径大一点的螺丝刀，给这个齿轮扩大一下内径，使它能在轴上自由转动。 &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-b5de55e257df450e.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;4. 封电位器&lt;/h3&gt;
&lt;p&gt;在做这一步之前，我们必须先把舵机&lt;strong&gt;回到中位&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-3f7127da4c2c8d88.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;找一块 Arduino 板子，给它烧进一段让舵机回到中位的程序：&lt;/p&gt;
&lt;p&gt;```cpp
//by Lin&lt;/p&gt;
&lt;h1&gt;include &lt;Servo.h&gt;&lt;/h1&gt;
&lt;p&gt;Servo myservo;
void setup() {
  myservo.attach(9);//舵机连接 Arduino 的 D9
}&lt;/p&gt;
&lt;p&gt;void loop() {
  myservo.write(90); //让舵机回到中位
}
```&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-41374b07e5f87b06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，接上舵机，你会发现它一直在转。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-04e91993e3d57d4d.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;把右边的轴来回转几圈，找到一个让电机停下来的位置（把这里的电位器调到中间的值。 &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-964d07b3c4c304d4.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;给电位器上胶，封死它。注意，这时候不要不小心把轴给转动了，如果这样，就得重新返回第三步了。&lt;/p&gt;
&lt;h3&gt;5. 组装&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2218072-d0aec7a2cb430e4c.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;把齿轮组装回去，注意不要弄错齿轮位置。 把螺丝锁上，你就得到了一个 360° 连转舵机。&lt;/p&gt;
&lt;h3&gt;6. 调试&lt;/h3&gt;
&lt;p&gt;烧入以下代码：&lt;/p&gt;
&lt;p&gt;```cpp&lt;/p&gt;
&lt;h1&gt;include &lt;Servo.h&gt;&lt;/h1&gt;
&lt;p&gt;Servo myservo;
int pos = 0;
void setup() {
  myservo.attach(9);
  }
void loop() {
  for (pos = 0; pos &amp;lt;= 180; pos += 1) {
    // in steps of 1 degree
    myservo.write(pos);
    delay(15);
  }
  for (pos = 180; pos &amp;gt;= 0; pos -= 1) {
    myservo.write(pos);
    delay(15);
  }
}
```&lt;/p&gt;
&lt;p&gt;舵机状态：舵机加速—减速—反方向加速—减速。.....&lt;/p&gt;
&lt;h2&gt;消除杂音&lt;/h2&gt;
&lt;h3&gt;背景&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在使用舵机完成相关物联设备制作的时候，经常会遇到，&lt;strong&gt;舵机已经到达指定位置，但是仍然会有响声&lt;/strong&gt;。不胜其烦，@张世博想出了一个方法，就是在舵机供电线路上串一个继电器，在不需要转动的情况下， Arduino 控制继电器断电。但是这个方法会增加硬件成本，而且增加代码复杂度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;解决方案&lt;/h3&gt;
&lt;p&gt;在需要舵机工作时，使用 &lt;code&gt;attach()&lt;/code&gt; 函数，在舵机工作完毕后，使用 &lt;code&gt;detach()&lt;/code&gt; 函数。&lt;/p&gt;
&lt;p&gt;```cpp
{
    servo.attach(9);
    servo.write(pos);
    delay(250);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//断开舵机连接，防止发出声音
servo.detach();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
```&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：这只是一种类型的舵机，对结构不太相同的金属舵机，该如何改装？&lt;br&gt;
A：可以参考一下 &lt;a href=&#34;https://www.geek-workshop.com/thread-14885-1-1.html&#34;&gt;改装成连续旋转的伺服舵机&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzUzODg2NA==&amp;amp;mid=2652149326&amp;amp;idx=1&amp;amp;sn=1760691e14cd110345f1847658acefd3&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=1003cUr6AYjfze46sYqMbGmP#rd&#34;&gt;舵机的更多玩法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.vvzero.com/2018/04/13/servo-without-ringing-by-software/&#34;&gt;解决舵机滋滋响的简单软件方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.geek-workshop.com/thread-14885-1-1.html&#34;&gt;改装成连续旋转的伺服舵机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.guokr.com/article/5292/&#34;&gt;DIYer 修炼：舵机知识扫盲&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E4%B8%80%E4%B8%AA%E8%88%B5%E6%9C%BA%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E4%B8%80%E4%B8%AA%E8%88%B5%E6%9C%BA%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/</guid>
      
    </item>
    
    <item>
      <title>大疆 N3 飞控 - 参考资料</title>
      
      
      
      
      <description>&lt;h2&gt;资料及软件下载&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dji.com/cn/n3/info#downloads&amp;quot;&#34;&gt;N3 Downloads&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;基础知识&lt;/h2&gt;
&lt;p&gt;硬件组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主控器（双 IMU、数据记录仪和气压计），其中 CAN1 连接 GNSS-Compass 模块和 DJI 设备，CAN2 连接 SDK 设备；M1 - M8 连接飞行器电调，且可通过 iESC 端口与 DJI 智能电调通信。&lt;/li&gt;
&lt;li&gt;GNSS-Compass 模块，含 GPS / GLONASS 双模接收机和指南针。&lt;/li&gt;
&lt;li&gt;电源管理模块（PMU）。&lt;/li&gt;
&lt;li&gt;LED 模块。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;飞行模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P：定位模式，使用 GPS 模块或视觉定位系统以实现飞行器精确悬停。&lt;/li&gt;
&lt;li&gt;A：姿态模式，不使用 GNSS 与视觉定位系统，仅提供姿态增稳，若 GPS 卫星信号良好可实现返航。&lt;/li&gt;
&lt;li&gt;S：运动模式，基于自动定位模式，增加感度，姿态角最大可 45°&lt;/li&gt;
&lt;li&gt;G：迟缓模式，此模式下飞机运动较为迟缓，建议新手使用。&lt;/li&gt;
&lt;li&gt;M：手动，不使用 GNSS 与视觉定位系统，没有姿态增稳，无姿态角度限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返航功能：智能 / 低电压 / 失控返航&lt;/p&gt;
&lt;p&gt;保护功能：失控保护 / 低电压保护 / 高度距离限制 / 特殊区域飞行限制 / 输出动力缺失保护（六旋翼以上才有用） / 动力保护 / 内置双 IMU / 内置数据记录仪 / 航向锁定 / 返航锁定&lt;/p&gt;
&lt;p&gt;飞行特性：因硬件而差异，最大抗风 10 m/s，悬停精度垂直 ±0.5 m，水平 ± 1.5 m，最大偏航角速度 150 °/s&lt;/p&gt;
&lt;h2&gt;硬件安装&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/UTOOLS1574661666661.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;主控器朝上并与机身平行，推荐方向朝向机头（若是别的方向，要在软件里设置），尽量安装在飞行器重心。&lt;/p&gt;
&lt;p&gt;LED 模块可装在机身侧下方，方便飞行时观察状态。&lt;/p&gt;
&lt;p&gt;PMU 模块要注意散热。&lt;/p&gt;
&lt;h2&gt;硬件调试&lt;/h2&gt;
&lt;h3&gt;指南针校准&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;快速拨动 3 次 P / A 模式切换开关，此时黄灯常亮，进入校准状态。&lt;/li&gt;
&lt;li&gt;水平旋转飞行器 360°，此时绿灯常亮。&lt;/li&gt;
&lt;li&gt;使飞行器机头朝下，水平转 360°。&lt;/li&gt;
&lt;li&gt;此时灯正常闪烁，完成校准。若红灯闪烁，则需重新校准。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;参数设置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基础感度（俯仰 / 横滚 / 航向）：尽可能大，但也不要太大，太大会反馈过度，在悬停状态下高频抖动；反之如果太小则造成响应时间变长（可以类比游戏的网络延迟）且晃动。&lt;/li&gt;
&lt;li&gt;油门：尽可能大，但过大起降过快，不安全；过小则会造成起降过慢，且影响上面几个参数。&lt;/li&gt;
&lt;li&gt;动力带宽：因不同飞机而异，过小会造成响应慢、&lt;strong&gt;悬停状态下高频抖动&lt;/strong&gt;（不够力）；过大则修正过度，&lt;strong&gt;回中时出现慢速晃动&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;刹车：&lt;/li&gt;
&lt;li&gt;姿态灵敏度（刹车 / 姿态）：姿态灵敏度越小则姿态命令跟随遥控器指令越慢，姿态响应更加平缓；刹车灵敏度描述刹车的快慢程度，越小则刹车过程越平缓且 &lt;strong&gt;刹车距离越长&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;姿态感度：过大则姿态响应更加迅猛，越小则响应迟缓&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E5%A4%A7%E7%96%86N3%E9%A3%9E%E6%8E%A7-%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E5%A4%A7%E7%96%86N3%E9%A3%9E%E6%8E%A7-%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</guid>
      
    </item>
    
    <item>
      <title>如何读写单个 bit</title>
      
      
      
      
      <description>&lt;p&gt;```c&lt;/p&gt;
&lt;h1&gt;define BitVal(data,y) ( (data&amp;gt;&amp;gt;y) &amp;amp; 1)             // Return Data.Y value&lt;/h1&gt;
&lt;h1&gt;define SetBit(data,y)    data |= (1 &amp;lt;&amp;lt; y)          // Set Data.Y to 1&lt;/h1&gt;
&lt;h1&gt;define ClearBit(data,y)  data &amp;amp;= ~(1 &amp;lt;&amp;lt; y)         // Clear Data.Y to 0&lt;/h1&gt;
&lt;h1&gt;define TogleBit(data,y)     (data ^=BitVal(y))     // Togle Data.Y value&lt;/h1&gt;
&lt;h1&gt;define Togle(data)   (data =~data )                // Togle Data value&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/11815894/how-to-read-write-arbitrary-bits-in-c-c&#34;&gt;How to read/write arbitrary bits in C/C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E5%A6%82%E4%BD%95%E8%AF%BB%E5%86%99%E5%8D%95%E4%B8%AAbit/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E5%A6%82%E4%BD%95%E8%AF%BB%E5%86%99%E5%8D%95%E4%B8%AAbit/</guid>
      
    </item>
    
    <item>
      <title>转义字符</title>
      
      
      
      
      <description>&lt;p&gt;| 转义序列 | 字符                                       |
| -------- | ------------------------------------------ |
| &lt;code&gt;\b&lt;/code&gt;     | 退格符                                     |
| &lt;code&gt;\f&lt;/code&gt;     | 换页符                                     |
| &lt;code&gt;\n&lt;/code&gt;     | 换行符                                     |
| &lt;code&gt;\r&lt;/code&gt;     | 回车符                                     |
| &lt;code&gt;\t&lt;/code&gt;     | 制表符                                     |
| &lt;code&gt;\unnnn&lt;/code&gt; | Unicode 字符                               |
| &lt;code&gt;\xnn&lt;/code&gt;   | ASCII 字符，字符代码由十六进制数字 nn 指定 |
| &lt;code&gt;\&#39;&lt;/code&gt;     | 单引号                                     |
| &lt;code&gt;\&#34;&lt;/code&gt;     | 双引号                                     |
| &lt;code&gt;\\&lt;/code&gt;     | 单个反斜杠字符                             |&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dianziwang.net/thread-41585-1-1.html&#34;&gt;flash 中重要转义字符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</guid>
      
    </item>
    
    <item>
      <title>麦轮小车</title>
      
      
      
      
      <description>&lt;p&gt;—— 如何造一辆可遥控的麦克纳姆轮小车。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/car2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;嵌入式系统的课程要求我们设计小车底盘，于是我造了一辆麦克纳姆轮的小车。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;原理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;麦克纳姆轮：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;麦轮驱动的特点是可以全方向平滑移动，适应狭小/不利转弯的地形；缺点是功率损耗大、贵、加工难、维护麻烦，寿命也相较短。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转向原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/麦轮.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;元件清单&lt;/h2&gt;
&lt;p&gt;| 名称                             | 参考链接                                                                                                |
| :------------------------------- | :------------------------------------------------------------------------------------------------------ |
| 麦克纳姆轮小车底盘（带 TT 电机） | &lt;a href=&#34;https://item.taobao.com/item.htm?spm=a1z09.2.0.0.38a72e8dxRlUyK&amp;amp;id=568708608416&amp;amp;_u=52dvbet6405e&#34;&gt;链接&lt;/a&gt; |
| Arduino UNO                      | 无                                                                                                      |
| L293D 电机驱动                   | 无                                                                                                      |
| HC-06 蓝牙                       | 无                                                                                                      |
| 9g 舵机                          | 无                                                                                                      |
| HC-SR04 超声波                   | 无                                                                                                      |
| 11.1V 锂电池                     | 无                                                                                                      |&lt;/p&gt;
&lt;h2&gt;代码实现&lt;/h2&gt;
&lt;p&gt;小车主控用的是 Arduino UNO.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;项目文件：&lt;/strong&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/My-Arduino-projects/tree/master/麦轮小车&#34;&gt;My-Arduino-projects / 麦轮小车&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L293D 库文件：&lt;/strong&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/My-Arduino-projects/raw/master/麦轮小车/AFMotor.rar&#34;&gt;AFMotor.rar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;```cpp
//by YX Lin&lt;/p&gt;
&lt;h1&gt;include &lt;AFMotor.h&gt; //L293D 驱动库文件&lt;/h1&gt;
&lt;h1&gt;include &lt;Servo.h&gt;//舵机库文件&lt;/h1&gt;
&lt;h1&gt;define SR04_Trig 11&lt;/h1&gt;
&lt;h1&gt;define SR04_Echo 12&lt;/h1&gt;
&lt;p&gt;int distance = 0;
int delay_time = 300;
int micro_delay_time = 100;
int pos = 0;
int motor_speed = 200;&lt;/p&gt;
&lt;p&gt;AF_DCMotor motor1(1);
AF_DCMotor motor2(4);
AF_DCMotor motor3(3);
AF_DCMotor motor4(2);&lt;/p&gt;
&lt;p&gt;Servo myservo;&lt;/p&gt;
&lt;p&gt;void setup() {
  Serial.begin(9600);
  myservo.attach(2);
  motor1.setSpeed(motor_speed);
  motor2.setSpeed(motor_speed);
  motor3.setSpeed(motor_speed);
  motor4.setSpeed(motor_speed);
  pinMode(SR04_Trig, OUTPUT);
  pinMode(SR04_Echo, INPUT);
  //serve();
}
void loop() {
  if (Serial.available()) {
    Serial.println(&#34;Hello&#34;);
    char x = Serial.read();
    if (x == &#39;W&#39;) move_forward();
    if (x == &#39;S&#39;) move_backward();
    if (x == &#39;D&#39;) move_right();
    if (x == &#39;A&#39;) move_left();
    if (x == &#39;E&#39;) right_front();
    if (x == &#39;Q&#39;) left_front();
    if (x == &#39;C&#39;) rotate_right();
    if (x == &#39;Z&#39;) rotate_left();
    if (x == &#39;X&#39;) off();&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (x == &#39;F&#39;) serve();
if (x == &#39;V&#39;)sr04(); //超声波测距

Serial.println(&#34;ok&#34;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
  delay(5);
}&lt;/p&gt;
&lt;p&gt;void move_forward() {
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
  delay(delay_time);
  off();
}
void move_backward() {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  delay(delay_time);
  off();
}&lt;/p&gt;
&lt;p&gt;void move_right() {
  motor1.run(FORWARD);
  motor2.run(BACKWARD);
  motor3.run(FORWARD);
  motor4.run(BACKWARD);
  delay(delay_time);
  off();
}
void move_left() {
  motor1.run(BACKWARD);
  motor2.run(FORWARD);
  motor3.run(BACKWARD);
  motor4.run(FORWARD);
  delay(delay_time);
  off();
}
void right_front() {
  motor1.run(FORWARD);
  motor2.run(RELEASE);
  motor3.run(FORWARD);
  motor4.run(RELEASE);
  delay(delay_time);
  off();
}
void left_front() {
  motor1.run(RELEASE);
  motor2.run(FORWARD);
  motor3.run(RELEASE);
  motor4.run(FORWARD);
  delay(delay_time);
  off();
}
void rotate_right() {
  motor1.run(FORWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(FORWARD);
  delay(micro_delay_time);
  off();
}
void rotate_left() {
  motor1.run(BACKWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(BACKWARD);
  delay(micro_delay_time);
  off();
}
void off() {
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
}
void serve() {
  for (pos = 0; pos &amp;lt;= 180; pos += 5) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable &#39;pos&#39;
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  for (pos = 180; pos &amp;gt;= 0; pos -= 5) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable &#39;pos&#39;
    delay(15);                       // waits 15ms for the servo to reach the position
  }
}
void sr04() {
  digitalWrite(SR04_Trig, LOW); //给 Trig 发送一个低电平
  delayMicroseconds(2);    //等待 2 微妙
  digitalWrite(SR04_Trig, HIGH); //给 Trig 发送一个高电平
  delayMicroseconds(10);    //等待 10 微妙
  digitalWrite(SR04_Trig, LOW); //给 Trig 发送一个低电平
  distance = ((float(pulseIn(SR04_Echo, HIGH)) * 17 ) / 100); //把回波时间换算成毫米，并减去距离差值&lt;/p&gt;
&lt;p&gt;if (distance &amp;lt; 9999 &amp;amp;&amp;amp; distance &amp;gt; 0) {
    Serial.print(&#34;测距：&#34;);
    Serial.println(distance);
  } else {
    Serial.println(&#34;距离过大&#34;);
  }
}
```&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蓝牙遥控：&lt;/strong&gt;下载 &lt;a href=&#34;https://github.com/linyuxuanlin/My-Arduino-projects/raw/master/麦轮小车/Arduino%20bluetooth%20controller.apk&#34;&gt;Arduino bluetooth controller&lt;/a&gt; 这个 App，按代码设置相应的键位，就可以遥控了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/蓝牙.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：项目后期有跟进吗？ A：有，我打算寒假把代码移植到 STM32 上面，并实现用 PS2 手柄遥控。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;小车总体能实现基本功能，但蓝牙的遥控有距离限制，也无法做得相对平滑。靠以后的算法慢慢优化了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/car1.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/20282234&#34;&gt;麦克纳姆轮浅谈&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E9%BA%A6%E8%BD%AE%E5%B0%8F%E8%BD%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/%E9%BA%A6%E8%BD%AE%E5%B0%8F%E8%BD%A6/</guid>
      
    </item>
    
    <item>
      <title>3D 打印：ABS 与 PLA 的区别</title>
      
      
      
      
      <description>&lt;p&gt;3D 打印中，该如何合理选择 ABS 和 PLA 材料？&lt;/p&gt;
&lt;h2&gt;ABS 材料&lt;/h2&gt;
&lt;p&gt;ABS（丙烯腈 - 丁二烯 - 苯乙烯共聚物），是相对传统的 3D 打印用料。&lt;/p&gt;
&lt;h3&gt;打印温度&lt;/h3&gt;
&lt;p&gt;使用 ABS 打印时，一般将打印机喷头温度设置为 210~240℃，热床温度为 80℃ 以上。另外，ABS 的软化温度为 105℃。&lt;/p&gt;
&lt;h3&gt;打印性能&lt;/h3&gt;
&lt;p&gt;ABS 打印时很顺滑，但遇冷收缩，可能会造成翘边脱落等问题。&lt;/p&gt;
&lt;h3&gt;强度&lt;/h3&gt;
&lt;p&gt;ABS 强度高，且因为弹性佳，即使承受压力也只会弯曲，一般不会折断。&lt;/p&gt;
&lt;h3&gt;气味&lt;/h3&gt;
&lt;p&gt;ABS 在打印时会产生异味。最好使用封闭式打印机，或是保持室内通风，避免过量吸入气体。&lt;/p&gt;
&lt;h3&gt;使用场景&lt;/h3&gt;
&lt;p&gt;相对来说，ABS 适用于经常碰撞、需要韧度、相对高温的场景。&lt;/p&gt;
&lt;p&gt;缺点是，没有热床的打印机不能使用 ABS 进行打印，因为打印时可能会翘边脱落；通风不好的房间尽量也别用。&lt;/p&gt;
&lt;h2&gt;PLA 材料&lt;/h2&gt;
&lt;p&gt;PLA（通常指聚乳酸）为生物分解性塑料，部分甚至可达到食用级别标准。&lt;/p&gt;
&lt;h3&gt;打印温度&lt;/h3&gt;
&lt;p&gt;使用 PLA 打印时，一般将打印机喷头温度设置为 180~200℃，热床非必须但建议使用，温度设为 60℃。另外，PLA 的软化温度为 60℃。&lt;/p&gt;
&lt;h3&gt;打印性能&lt;/h3&gt;
&lt;p&gt;相较于 ABS，PLA 在打印时很容易堵喷头（因为 PLA 熔化后容易附着和延展），但不会产生翘边脱落的情况。&lt;/p&gt;
&lt;h3&gt;强度&lt;/h3&gt;
&lt;p&gt;PLA 弹性和强度都会差一些，不过打印时可以通过设置填充和壁厚来解决。&lt;/p&gt;
&lt;h3&gt;使用场景&lt;/h3&gt;
&lt;p&gt;PLA 相对环保（因为其可降解），相对便宜，不易翘边，打印时不会产生异味。&lt;/p&gt;
&lt;p&gt;PLA 不适用的场景是高温和碰撞。60℃ 以上的高温和磕碰会让打印成品变形或折断。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wp.huangshiyang.com/3d%e6%89%93%e5%8d%b0%e5%85%a5%e9%97%a8%e5%bf%85%e8%af%bb%ef%bc%9aabs%e4%b8%8epla%ef%bc%8c%e7%94%a8%e5%93%aa%e4%b8%aa%e5%a5%bd%ef%bc%9f&#34;&gt;3D 打印入门必读：ABS 与 PLA，用哪个好？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/3D%E6%89%93%E5%8D%B0%EF%BC%9AABS%E4%B8%8EPLA%E7%9A%84%E5%8C%BA%E5%88%AB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/3D%E6%89%93%E5%8D%B0%EF%BC%9AABS%E4%B8%8EPLA%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      
    </item>
    
    <item>
      <title>Altium Designer 安装库文件</title>
      
      
      
      
      <description>&lt;ol&gt;
&lt;li&gt;将库文件全部 &lt;strong&gt;拷贝&lt;/strong&gt; 至软件对应的 &lt;strong&gt;Shared\Library&lt;/strong&gt; 文件夹下；&lt;/li&gt;
&lt;li&gt;打开 Altium Designer ，在右侧面板点击 &lt;strong&gt;Components&lt;/strong&gt; 页面，点击右上角 &lt;strong&gt;三条杠&lt;/strong&gt; 标志，点击 &lt;strong&gt;File-based Library Preferences&lt;/strong&gt; 选项，点击 &lt;strong&gt;已安装&lt;/strong&gt; 页面，点击 &lt;strong&gt;安装&lt;/strong&gt; 按钮，安装对应的库文件；&lt;/li&gt;
&lt;li&gt;几种特殊情况：&lt;/li&gt;
&lt;li&gt;嘉立创集成库的路径位于 &lt;strong&gt;JLCSMT_LIB\Project Outputs for Miscellaneous Devices LC&lt;/strong&gt; 文件夹内；&lt;/li&gt;
&lt;li&gt;若第三方库文件非 &lt;strong&gt;集成库（.IntLib）&lt;/strong&gt;，而是 &lt;strong&gt;原理图库（SchLib）&lt;/strong&gt; 或 &lt;strong&gt;封装库（PcbLib）&lt;/strong&gt; 的形式，则需 &lt;strong&gt;同时安装&lt;/strong&gt; 以上两个文件。此时需要在安装库文件时弹出的路径选择窗口右侧点击下拉框切换 &lt;strong&gt;All Files(*.*)&lt;/strong&gt; 通配符，否则只能看到 &lt;strong&gt;.Intlib&lt;/strong&gt; 格式的文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/AltiumDesigner%E5%AE%89%E8%A3%85%E5%BA%93%E6%96%87%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/AltiumDesigner%E5%AE%89%E8%A3%85%E5%BA%93%E6%96%87%E4%BB%B6/</guid>
      
    </item>
    
    <item>
      <title>CentOS 配置 Oh My Zsh</title>
      
      
      
      
      <description>&lt;h2&gt;查看当前 Shell&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Shell
echo $SHELL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般情况下会返回 &lt;code&gt;bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;安装 zsh&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
yum install -y zsh&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;切换默认 Shell 为 zsh&lt;/h2&gt;
&lt;p&gt;需要在 root 用户下运行此命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
chsh -s /bin/zsh&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;安装 git&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
yum install -y git&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;安装 Oh My Zsh&lt;/h2&gt;
&lt;h3&gt;自动&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&#34;
或
sh -c &#34;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;手动&lt;/h3&gt;
&lt;p&gt;如果无法通过上面的方式安装（可能因为墙），则可通过以下方式手动安装：&lt;/p&gt;
&lt;p&gt;下载源码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;复制配置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;修改 Oh My Zsh 主题&lt;/h2&gt;
&lt;p&gt;列出所有主题：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
ls ~/.oh-my-zsh/themes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改主题：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
vim ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将默认主题是 &lt;code&gt;ZSH_THEME=&#34;robbyrussell&#34;&lt;/code&gt; 修改为自己喜欢的即可。&lt;/p&gt;
&lt;h2&gt;重启生效&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
reboot&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/4ce7d511bc13&#34;&gt;centos7 安装 zsh 配置 oh-my-zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/556ff130fc65&#34;&gt;CentOs 安装 oh my zsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/CentOS%E9%85%8D%E7%BD%AEOhMyZsh/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/CentOS%E9%85%8D%E7%BD%AEOhMyZsh/</guid>
      
    </item>
    
    <item>
      <title>Doxygen 注释规范</title>
      
      
      
      
      <description>&lt;h2&gt;文件头标注展开目录&lt;/h2&gt;
&lt;p&gt;```c
/&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;*
 *   Copyright (C) 2018 by Doxygen C Comment                                *
 *                                                                          *
 *   This file is part of Box.                                              *
 *                                                                          *
 *   Box is free software: you can redistribute it and/or modify it         *
 *   under the terms of the GNU Lesser General Public License as published  *
 *   by the Free Software Foundation, either version 3 of the License, or   *
 *   (at your option) any later version.                                    *
 *                                                                          *
 *   Box is distributed in the hope that it will be useful,                 *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
 *   GNU Lesser General Public License for more details.                    *
 *                                                                          *
 *   You should have received a copy of the GNU Lesser General Public       *
 *   License along with Box.  If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.   *
 &lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;****/&lt;/p&gt;
&lt;p&gt;/*&lt;em&gt;
 * @file doxygen_c.h
 * @author someone
 * @date 2018.1.4
 * @brief doxygen 规范的 C 文件注释规范文档，可以换行，
 * 所有 brief 同
 *
 * @details 对该文档的详细说明和解释，可以换行，
 * 所有详细说明同
 &lt;/em&gt;/&lt;/p&gt;
&lt;h1&gt;include &#34;hearder.h&#34;&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;结构体、枚举类型标注展开目录&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;c
/**
 * @brief 简要说明
 *
 * @details 详细说明
 */
typedef enum BoxEnum_enum {
  BOXENUM_FIRST,  /**&amp;lt; Some documentation for first. */
  BOXENUM_SECOND, /**&amp;lt; Some documentation for second. */
  BOXENUM_ETC     /**&amp;lt; Etc. */
} BoxEnum;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;函数头注释展开目录&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;c
/**
 * @brief 函数简要说明，可以换行
 *
 * @details 对函数的详细说明和解释，可以换行
 *
 * @note 注意事项内容
 *
 * @param index 说明文字
 * @param cent 说明文字
 *
 * @return 描述函数返回的内容
 * @retval 1 测试成功
 * @retval -1 测试失败
 */
bool Test(int index, char *cent);&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;变量注释展开目录&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;c
int element = 0; /**&amp;lt; 变量简单说明 */&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/**
 * @brief 变量简要说明
 *
 * @details 变量详细说明
 */
unsigned int variable = 0;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;宏注释展开目录&lt;/h2&gt;
&lt;p&gt;```c
/*&lt;em&gt;
 * @brief 宏简要说明
 *
 * @details 宏详细说明
 &lt;/em&gt;/&lt;/p&gt;
&lt;h1&gt;define variable 10&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.liuguogy.com/archives/doxygen-c-brief-annotation.html&#34;&gt;基于 Doxygen 的 C 语言简要注释规范&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Doxygen%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Doxygen%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83/</guid>
      
    </item>
    
    <item>
      <title>GitHub 改 Host</title>
      
      
      
      
      <description>&lt;h2&gt;问题&lt;/h2&gt;
&lt;p&gt;错误：&lt;code&gt;curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;原因&lt;/h2&gt;
&lt;p&gt;国内 DNS 污染。&lt;/p&gt;
&lt;h2&gt;解决&lt;/h2&gt;
&lt;p&gt;在本机的 host 文件中添加：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;199.232.68.133 raw.githubusercontent.com
199.232.68.133 user-images.githubusercontent.com
199.232.68.133 avatars2.githubusercontent.com
199.232.68.133 avatars1.githubusercontent.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Host 路径:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows: &lt;code&gt;C:\Windows\System32\drivers\etc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;补一点 Linux 下的操作方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开终端&lt;/li&gt;
&lt;li&gt;输入命令：&lt;code&gt;vi /etc/hosts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;A&lt;/code&gt; 切换到编辑模式&lt;/li&gt;
&lt;li&gt;在末尾添加上面的几句 Host 指向&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;Esc&lt;/code&gt; 退出编辑，按 &lt;code&gt;:wq&lt;/code&gt; 保存并退出&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;拓展&lt;/h2&gt;
&lt;h3&gt;查询域名的 IP&lt;/h3&gt;
&lt;p&gt;使用 &lt;a href=&#34;https://www.ipaddress.com/&#34;&gt;&lt;strong&gt;IPAddress&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yangshun.win/blogs/2b7abf4f/#%E4%BF%AE%E6%94%B9-host&#34;&gt;添加 Host 加速访问 github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/GitHub%E6%94%B9Host/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/GitHub%E6%94%B9Host/</guid>
      
    </item>
    
    <item>
      <title>Git 配置代理</title>
      
      
      
      
      <description>&lt;h2&gt;问题来源&lt;/h2&gt;
&lt;p&gt;国内 &lt;code&gt;git clone&lt;/code&gt; 与 &lt;code&gt;git pull&lt;/code&gt; 速度太慢。&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;h3&gt;1. 代理软件内设置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在代理软件内勾选 &lt;code&gt;允许来自局域网的连接&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;记下端口号（例如：1080）&lt;/li&gt;
&lt;li&gt;开启 &lt;code&gt;全局模式&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;2. 给 Git 全局配置 http 代理&lt;/h3&gt;
&lt;p&gt;```shell
git config --global http.proxy http://127.0.0.1:【端口号】
git config --global https.proxy https://127.0.0.1:【端口号】&lt;/p&gt;
&lt;h1&gt;例如：&lt;/h1&gt;
&lt;p&gt;git config --global http.proxy http://127.0.0.1:10808
git config --global https.proxy https://127.0.0.1:10808&lt;/p&gt;
&lt;h1&gt;如果上面的不生效，则试试走 socks5 端口：&lt;/h1&gt;
&lt;p&gt;git config --global http.proxy socks5://127.0.0.1:【端口号】
git config --global https.proxy socks5://127.0.0.1:【端口号】&lt;/p&gt;
&lt;h1&gt;如果只对 GitHub 进行代理，对国内的仓库不影响（不熟悉配置文件不建议使用）：&lt;/h1&gt;
&lt;p&gt;git config --global http.https://github.com.proxy https://127.0.0.1:【端口号】
git config --global https.https://github.com.proxy https://127.0.0.1:【端口号】&lt;/p&gt;
&lt;h1&gt;只对 GitLab 进行代理，对国内的仓库不影响（不熟悉配置文件不建议使用）：&lt;/h1&gt;
&lt;p&gt;git config --global https.https://https://gitlab.com.proxy https://127.0.0.1:1080
```&lt;/p&gt;
&lt;p&gt;Ubuntu 下配置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git config --global http.https://github.com.proxy socks5://127.0.0.1:10808&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;查看配置文件的路径&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git config –list –show-origin&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;恢复&lt;/h3&gt;
&lt;p&gt;如果不想用代理，可以用以下的方法恢复：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git config --global --unset http.proxy
git config --global --unset https.proxy&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://c.lanmit.com/czxt/Linux/16965.html&#34;&gt;&lt;strong&gt;征服 git clone 与 git pull 的龟速提交&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Git%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Git%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/</guid>
      
    </item>
    
    <item>
      <title>MSI 主板开启虚拟化的方法</title>
      
      
      
      
      <description>&lt;h2&gt;重启进入 BIOS&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cmd
shutdown.exe /r /o&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;重启后，点击 &lt;code&gt;疑难解答（Troubleshoot）&lt;/code&gt; - &lt;code&gt;自定义设置（Advanced options）&lt;/code&gt; - &lt;code&gt;UEFI 固件设置（UEFI Firmware Settings）&lt;/code&gt;，进入主板 BIOS&lt;/p&gt;
&lt;h2&gt;找到相关设置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;F7&lt;/code&gt; 进入高级选项&lt;/li&gt;
&lt;li&gt;依次点击 &lt;code&gt;OC&lt;/code&gt; - &lt;code&gt;CPU 特征（CPU Features）&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;找到 &lt;code&gt;SVM Mode / Intel Virtualization（视 CPU 而定）&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;修改设置&lt;/h2&gt;
&lt;p&gt;把 &lt;code&gt;Disabled（禁用）&lt;/code&gt; 修改为 &lt;code&gt;Enabled（启用）&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;保存退出&lt;/h2&gt;
&lt;p&gt;按 &lt;code&gt;F10&lt;/code&gt; 保存并退出&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/34223088&#34;&gt;如何进入 BIOS？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mumu.163.com/20181108/25905_784199.html&#34;&gt;微星（MSI）电脑、主板开启 VT 的方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/MSI%E4%B8%BB%E6%9D%BF%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E6%96%B9%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/MSI%E4%B8%BB%E6%9D%BF%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      
    </item>
    
    <item>
      <title>Node.js 和 npm 的安装与卸载（MacOS）</title>
      
      
      
      
      <description>&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://nodejs.cn/download/&#34;&gt;http://nodejs.cn/download/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;卸载&lt;/h2&gt;
&lt;p&gt;通过 &lt;code&gt;homebrew&lt;/code&gt; 安装的：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
brew uninstall node&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;.pkg&lt;/code&gt; 安装包安装的：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo rm -rf /usr/local/{bin/{node,npm},lib/node_modules/npm,lib/node,share/man/*/node.*}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;疑难解答&lt;/h2&gt;
&lt;p&gt;Q：MacOS 修改用户名后，提示权限不足：&lt;code&gt;EACCES: permission denied&lt;/code&gt; A：&lt;code&gt;sudo npm install -g appium --unsafe-perm=true --allow-root&lt;/code&gt; ，以非安全模式运行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Node.js%E5%92%8Cnpm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD%EF%BC%88MacOS%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Node.js%E5%92%8Cnpm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD%EF%BC%88MacOS%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>VS Code 的便携模式</title>
      
      
      
      
      <description>&lt;p&gt;VS Code 原生支持便携模式，不过拓展设置等资源还是储存在本机默认位置。本教程将介绍 VS Code 完全便携化的方法。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&#34;https://code.visualstudio.com/#alt-downloads&#34;&gt;&lt;strong&gt;下载页面&lt;/strong&gt;&lt;/a&gt; 下载 &lt;code&gt;.zip&lt;/code&gt; 形式的 VS Code。&lt;/p&gt;
&lt;p&gt;解压后先别打开软件，在软件根目录内创建 &lt;code&gt;data&lt;/code&gt; 文件夹，并在其中创建 &lt;code&gt;tmp&lt;/code&gt; 目录（可选，用于保存 TMP 数据）。&lt;/p&gt;
&lt;p&gt;再打开软件就可以了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.2dm.top/2018/12/29/vscode%E4%BE%BF%E6%90%BA%E5%BC%8F%E6%A8%A1%E5%BC%8F/&#34;&gt;vscode 便携式模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/VSCode%E7%9A%84%E4%BE%BF%E6%90%BA%E6%A8%A1%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/VSCode%E7%9A%84%E4%BE%BF%E6%90%BA%E6%A8%A1%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>Vue.js 小技巧</title>
      
      
      
      
      <description>&lt;h2&gt;去除 url 中的 &lt;code&gt;#&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;/strong&gt;：使用 Vue.js 搭建的项目，url 中会包含 &lt;code&gt;#&lt;/code&gt;，影响观感。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在项目中全局搜索 &lt;code&gt;const router = new VueRouter({})&lt;/code&gt; 函数&lt;/li&gt;
&lt;li&gt;在函数内添加语句：&lt;code&gt;mode: &#39;history&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/zhuzhenwei918/p/6892066.html&#34;&gt;如何去除 vue 项目中的 # --- History 模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Vue.js%E5%B0%8F%E6%8A%80%E5%B7%A7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Vue.js%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      
    </item>
    
    <item>
      <title>Windows 常用命令</title>
      
      
      
      
      <description>&lt;h2&gt;Win+R 常用命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;control&lt;/code&gt; 控制面板&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regedit&lt;/code&gt; 注册表编辑器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eventvwr&lt;/code&gt; 事件查看器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mmc&lt;/code&gt; Microsoft 管理控制台&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpedit.msc&lt;/code&gt; 组策略&lt;/li&gt;
&lt;li&gt;&lt;code&gt;devmgmt.msc&lt;/code&gt; 设备管理器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diskmgmt.msc&lt;/code&gt; 磁盘管理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;services.msc&lt;/code&gt; 服务&lt;/li&gt;
&lt;li&gt;&lt;code&gt;certmgr.msc&lt;/code&gt; 证书&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taskschd.msc&lt;/code&gt; 计划任务程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wf.msc&lt;/code&gt; 高级安全 Windows 防火墙&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%windir%\explorer.exe shell:::{4234d49b-0245-4df3-b780-3893943456e1}&lt;/code&gt; 打开 Applications 目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://canwdev.github.io/pages/278ffc/&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      
    </item>
    
    <item>
      <title>npm 和 Yarn 换源加速国内访问</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;npm 和 Yarn 默认源地址在国外，国内访问速度慢。&lt;br&gt;
以下命令查看当前使用的镜像源：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
yarn config get registry&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;使用软件 cgr 快速切换 npm 和 Yarn 的镜像源。&lt;/p&gt;
&lt;h3&gt;安装 cgr&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
npm install -g cgr&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;列出当前可用的镜像源&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cgr ls&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;选择一个镜像源进行切换（淘宝）&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cgr use taobao&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;测试访问速度&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cgr test taobao&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learnku.com/articles/15976/yarn-accelerate-and-modify-mirror-source-in-china&#34;&gt;yarn 国内加速，修改镜像源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/cgr&#34;&gt;cgr -- change registry | yarn &amp;amp; npm registry manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/npm%E5%92%8CYarn%E6%8D%A2%E6%BA%90%E5%8A%A0%E9%80%9F%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/npm%E5%92%8CYarn%E6%8D%A2%E6%BA%90%E5%8A%A0%E9%80%9F%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AE/</guid>
      
    </item>
    
    <item>
      <title>使用 VS Code 进行远程开发</title>
      
      
      
      
      <description>&lt;p&gt;—— 将 VS Code 作为 SSH 工具，连接远程服务器进行开发。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;尝试了各类 SSH 工具，最终还是回到界面好看又强大的 VS Code.&lt;br&gt;
本篇文章仅记录以供日后参考用，部分内容未详细展开说明。更多教程请参考文末链接。&lt;/p&gt;
&lt;p&gt;VS Code 基础配置篇：&lt;a href=&#34;https://wiki-power.com/VSCode生产力指南-环境配置&#34;&gt;&lt;strong&gt;VS Code 生产力指南 - 环境配置&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;配置扩展&lt;/h2&gt;
&lt;p&gt;点击安装扩展：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh&#34;&gt;&lt;strong&gt;Remote - SSH&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击左下角 &lt;code&gt;Remote&lt;/code&gt; 按钮即可使用。&lt;/p&gt;
&lt;h2&gt;其他配置&lt;/h2&gt;
&lt;h3&gt;VS Code 无法监视大型工作区的文件变化&lt;/h3&gt;
&lt;p&gt;运行此命令查看当前限制：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
cat /proc/sys/fs/inotify/max_user_watches&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; 文件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo vim /etc/sysctl.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;增加如下代码，将此限制增加到最大值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
fs.inotify.max_user_watches=524288&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存，启用设置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo sysctl -p&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;无法使用自定义的用户名登录&lt;/h3&gt;
&lt;p&gt;在 VS Code 的设置中找到 &lt;code&gt;Remote.SSH: Config File&lt;/code&gt;，填写覆盖值为 &lt;code&gt;C:\Users\你需要的用户名\.ssh\config&lt;/code&gt;，并在本地创建相应的配置文件即可。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/64849549&#34;&gt;VSCode Remote 体验 | 远程 Linux 环境开发真香&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.deadnine.com/somehow/2019/0208/1481.html&#34;&gt;VSCode 报警处理：VisualStudioCode 无法监视这个大型工作区的文件变化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E4%BD%BF%E7%94%A8VSCode%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E4%BD%BF%E7%94%A8VSCode%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/</guid>
      
    </item>
    
    <item>
      <title>使用 gitignore 忽略特殊文件</title>
      
      
      
      
      <description>&lt;p&gt;有些文件我们不想纳入 Git 版本管理，也不希望它们总出现在未跟踪列表，例如 node_modules、一些开发依赖、编译日志等等。&lt;/p&gt;
&lt;p&gt;这时，我们可以创建一个 &lt;code&gt;.gitignore&lt;/code&gt; 文件，列出需要忽略的清单。&lt;/p&gt;
&lt;h2&gt;规范&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;空行或者以注释符号 &lt;code&gt;#&lt;/code&gt; 开头的行会被忽略&lt;/li&gt;
&lt;li&gt;标准的glob模式匹配&lt;/li&gt;
&lt;li&gt;匹配模式最后跟反斜杠（/）说明要忽略的是目录&lt;/li&gt;
&lt;li&gt;要忽略指定模式以外的文件和目录，可以在模式前加上 &lt;code&gt;!&lt;/code&gt; 取反&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;示例&lt;/h2&gt;
&lt;p&gt;```gitignore&lt;/p&gt;
&lt;h1&gt;此行为注释，将被 Git 忽略&lt;/h1&gt;
&lt;h1&gt;忽略所有 .a 格式的文件&lt;/h1&gt;
&lt;p&gt;*.a&lt;/p&gt;
&lt;h1&gt;不忽略 lib.a&lt;/h1&gt;
&lt;p&gt;!lib.a&lt;/p&gt;
&lt;h1&gt;忽略根目录下的 TODO 文件&lt;/h1&gt;
&lt;p&gt;/TODO&lt;/p&gt;
&lt;h1&gt;忽略 build 文件夹&lt;/h1&gt;
&lt;p&gt;build/&lt;/p&gt;
&lt;h1&gt;忽略 doc 目录下的所有 txt 文件（不包含次级目录）&lt;/h1&gt;
&lt;p&gt;doc/*.txt&lt;/p&gt;
&lt;h1&gt;忽略doc目录下的所有 txt 文件（包含所有次级目录）&lt;/h1&gt;
&lt;p&gt;doc/*&lt;em&gt;/&lt;/em&gt;.txt
```&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/zxhfighter/6320b9a08698bb8703ee&#34;&gt;zxhfighter/git-ignore.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/github/gitignore&#34;&gt;github/gitignore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E4%BD%BF%E7%94%A8gitignore%E5%BF%BD%E7%95%A5%E7%89%B9%E6%AE%8A%E6%96%87%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E4%BD%BF%E7%94%A8gitignore%E5%BF%BD%E7%95%A5%E7%89%B9%E6%AE%8A%E6%96%87%E4%BB%B6/</guid>
      
    </item>
    
    <item>
      <title>删除 GitHub 仓库中某个文件夹</title>
      
      
      
      
      <description>&lt;h2&gt;问题来源&lt;/h2&gt;
&lt;p&gt;在本地仓库上传到 GitHub 时，忘记忽略某个文件夹，直接 push 到远程仓库了。&lt;br&gt;
如何在保留本地文件夹的同时，删除 GitHub 仓库中的文件夹？&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
git pull origin master        # 先将远程仓库里面的项目拉取下来
dir                           # 查看有哪些文件夹
git rm -r --cached target     # 删除名字为 target 的文件夹
git commit -m &#39;删除了 target&#39;  # 添加操作说明并提交&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wudinaniya/article/details/77508229&#34;&gt;删除 GitHub 中某个文件夹&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%88%A0%E9%99%A4GitHub%E4%BB%93%E5%BA%93%E4%B8%AD%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%88%A0%E9%99%A4GitHub%E4%BB%93%E5%BA%93%E4%B8%AD%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      
    </item>
    
    <item>
      <title>卡片式写作</title>
      
      
      
      
      <description>&lt;p&gt;普通的大纲式写作容易出现「文思枯竭」的情况，最典型的例子是交论文前一晚的挣扎。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;认知隧道（cognitive tunnel）概念：
全部的注意力都聚焦在当下那件紧急的事情上，变得特别狭窄和受限，此时容易忽略全局的信息，看不到整体。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而卡片式写作像编程中的函数封装一样，注重底层封装，一层一层往上抽象，当需要的时候可以直接调用。
这样一来，不仅方便复用（不重复造轮子），卡片在碰撞的同时，也会产生新的火花。&lt;/p&gt;
&lt;h2&gt;方式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;长期收集&lt;/strong&gt;：将平时看到的、想到的 ideas 记录下来，每个主题单独产生一张卡片。&lt;br&gt;
工具：Notable 笔记 + 坚果云同步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阶段分享&lt;/strong&gt;： 挑选每个阶段记录的卡片，不做二次修改，整合发布为公众号文章「碎片精选：第 n 期」&lt;br&gt;
工具：公众号平台&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;项目成文&lt;/strong&gt;：写固定主题的文章时，可以融进相关的卡片，并进行二次加工成文。或卡片随机拼凑，产生新的思维火花。&lt;br&gt;
工具：个人网站&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA==&amp;amp;mid=2653540173&amp;amp;idx=1&amp;amp;sn=5b1e1f667a261bcc4888e682d7fbf1e1&amp;amp;scene=21##wechat_redirect&#34;&gt;你一写长文章就焦虑拖延？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA==&amp;amp;mid=2653540684&amp;amp;idx=1&amp;amp;sn=36a64c276264680fa54f060970118f94&amp;amp;chksm=f389bb9bc4fe328d4bc245718e086a40b9ba27ace93e967bc9de281d06802264f88f8a8b60dd&amp;amp;token=1659679493&amp;amp;lang=zh_CN&amp;amp;scene=21##wechat_redirect&#34;&gt;如何高效写长文？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/x2BMqr6n4t4ezW4sTTNqzg&#34;&gt;如何高效实践卡片式写作？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%8D%A1%E7%89%87%E5%BC%8F%E5%86%99%E4%BD%9C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%8D%A1%E7%89%87%E5%BC%8F%E5%86%99%E4%BD%9C/</guid>
      
    </item>
    
    <item>
      <title>如何为公众号文章增加特效</title>
      
      
      
      
      <description>&lt;p&gt;我们时常可以看到一些加了特技的公众号文章，举个例子：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIwOTA2MzYwNA==&amp;amp;mid=2247495476&amp;amp;idx=1&amp;amp;sn=3b7adb89a724b504ba07df76a5524ba9&amp;amp;chksm=977b34efa00cbdf9d14f4c19028fabd256a2e5fc918918c5d33a34b359573d0f5e1f6c2c7316&amp;amp;scene=38##wechat_redirect&#34;&gt;你以为它只是相册？其实它是科技宝藏。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它们是如何实现在文字内嵌入动画效果的呢？&lt;/p&gt;
&lt;p&gt;可以参考一下这份教程：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://wechat-svg.projects.linwise.com/&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200310182440.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wechat-svg.projects.linwise.com/&#34;&gt;在微信公众号文章里使用 svg 动画与交互&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E4%B8%BA%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E5%A2%9E%E5%8A%A0%E7%89%B9%E6%95%88/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E4%B8%BA%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E5%A2%9E%E5%8A%A0%E7%89%B9%E6%95%88/</guid>
      
    </item>
    
    <item>
      <title>如何从乐曲中分离音轨</title>
      
      
      
      
      <description>&lt;p&gt;来自法国的音乐流媒体公司 Deezer 开源了一个音轨分离软件 spleeter，只需输入一段命令就可以将音乐的人声和各种乐器声分离，支持 mp3、wav、ogg 等常见音频格式。&lt;/p&gt;
&lt;p&gt;spleeter 还支持 GPU 加速。如果在 GPU 上运行，会比实时分解速度快 100 倍，也就是说分解一首 5 分钟的歌曲只需要 3 秒。&lt;/p&gt;
&lt;p&gt;spleeter 在 GitHub 上线仅仅一周，就收获了 2.4K 星，在 Hacker News 上也有 1000 + 的热度。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226183140.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;spleeter 最多可以分离出人声、鼓、贝斯、钢琴及其他乐曲这 5 个音轨，&lt;/p&gt;
&lt;p&gt;软件使用方法请点击下方链接获取。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIzNjc1NzUzMw==&amp;amp;mid=2247532681&amp;amp;idx=3&amp;amp;sn=c7bc26f0213fa0312a786fa2fd465f5b&amp;amp;chksm=e8d0f7fbdfa77eed70625a42c2ad800574fe301952a444cb3dd35673e53ea3e752e8bf49c2ba&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0226sB3EJ9huMA0id2uBucus&amp;amp;sharer_sharetime=1582712814438&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=978925f044652b73b66c4df54323f27d8f5109365d82bdd9f7e6d4a616679c8d9e6375c8c749d7439727c84f8725549aa2e6f5ec7d67f9d0f997654aaa3fb044d7fdc7f1e5ce534ca1f5e79222d48b3e&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=AwWV8jvw4L2hSmy%2BVK7JL7k%3D&amp;amp;pass_ticket=%2B%2Fs5mqUBkUbYMJV1cZ6LLdT4rpwnoGiQAvz1QyQpMhfrKWb9GbpDgnop6Filiqkd&#34;&gt;最好用的音轨分离软件 spleeter：处理一首歌仅几秒，上线一周收获 2.4k 星 | 附实测&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;deezer/spleeter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E4%BB%8E%E4%B9%90%E6%9B%B2%E4%B8%AD%E5%88%86%E7%A6%BB%E9%9F%B3%E8%BD%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E4%BB%8E%E4%B9%90%E6%9B%B2%E4%B8%AD%E5%88%86%E7%A6%BB%E9%9F%B3%E8%BD%A8/</guid>
      
    </item>
    
    <item>
      <title>如何在 Linux 下使用微信</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200311141406.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DoChat（盒装微信）是一款适用于 Linux 桌面的容器化微信。&lt;/p&gt;
&lt;p&gt;主要特色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装便捷，一行 shell 命令即可启动&lt;/li&gt;
&lt;li&gt;支持汉字输入&lt;/li&gt;
&lt;li&gt;Ctrl+V 粘贴图片到微信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行条件：Ubuntu Linux 桌面并安装 Docker&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200311141459.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/huan/docker-wechat&#34;&gt;huan/docker-wechat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%BE%AE%E4%BF%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%BE%AE%E4%BF%A1/</guid>
      
    </item>
    
    <item>
      <title>如何快速删除 node_modules</title>
      
      
      
      
      <description>&lt;p&gt;全局安装 &lt;code&gt;rimraf&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
npm install rimraf -g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;切换到包含 &lt;code&gt;node_modules&lt;/code&gt; 文件夹的根目录，运行一下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
rimraf node_modules&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等等就好了。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4node_modules/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4node_modules/</guid>
      
    </item>
    
    <item>
      <title>如何快速制作一个启动盘</title>
      
      
      
      
      <description>&lt;p&gt;—— 制作一个启动盘，只需一步到位。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ventoy.net/cn/index.html&#34;&gt;&lt;strong&gt;Ventoy&lt;/strong&gt;&lt;/a&gt; 是一个开源的启动盘制作工具。优势如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用简单。将系统镜像（.iso 文件）拷进 U 盘即可。&lt;/li&gt;
&lt;li&gt;多系统&lt;/li&gt;
&lt;li&gt;可以一次放进多个镜像，自动创建包含多个系统的启动菜单&lt;/li&gt;
&lt;li&gt;目前已测试过支持包括主流 Windows、服务器版 Windows、Debian、Ubuntu、CentOS、RHEL、Deepin，VMware ESXi 等 202 个系统&lt;/li&gt;
&lt;li&gt;支持超过 4GB 的 ISO 文件&lt;/li&gt;
&lt;li&gt;直接从 ISO 文件启动，无需解开&lt;/li&gt;
&lt;li&gt;快速 （拷贝文件有多快就有多快）&lt;/li&gt;
&lt;li&gt;不影响 U 盘日常普通使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;下载安装&lt;/h2&gt;
&lt;p&gt;可在软件仓库的 &lt;a href=&#34;https://github.com/ventoy/Ventoy/releases&#34;&gt;&lt;strong&gt;Release&lt;/strong&gt;&lt;/a&gt; 页面下载软件。&lt;/p&gt;
&lt;p&gt;下载完成后，打开压缩包内的 &lt;code&gt;Ventoy2Disk.exe&lt;/code&gt; 并选择 U 盘，点击 &lt;code&gt;Install&lt;/code&gt; 安装即可。&lt;/p&gt;
&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;直接把镜像文件拷贝进 U 盘就行了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://telegra.ph/Ventoy---%E5%BC%80%E6%BA%90-U-%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C%E5%B7%A5%E5%85%B7%E6%94%AF%E6%8C%81%E5%90%AF%E5%8A%A8%E5%A4%9A%E4%B8%AA%E7%B3%BB%E7%BB%9F%E8%BF%98%E8%83%BD%E5%BD%93%E6%99%AE%E9%80%9A-U-%E7%9B%98%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6WinLinux---%E5%B0%8F%E4%BC%97%E8%BD%AF%E4%BB%B6-04-30&#34;&gt;Ventoy - 开源 U 盘启动盘制作工具，支持启动多个系统，还能当普通 U 盘保存文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%90%AF%E5%8A%A8%E7%9B%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%90%AF%E5%8A%A8%E7%9B%98/</guid>
      
    </item>
    
    <item>
      <title>如何打印出手写效果的文字</title>
      
      
      
      
      <description>&lt;p&gt;参考视频：&lt;a href=&#34;https://www.bilibili.com/video/av87409493/?spm_id_from=333.788.videocard.0&#34;&gt;https://www.bilibili.com/video/av87409493/?spm_id_from=333.788.videocard.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要是以下几个步骤：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用手写字库&lt;/strong&gt;：使用数位板，自己创建字库，或直接使用别人的字库。&lt;br&gt;
&lt;strong&gt;使用 Word 宏代码&lt;/strong&gt;：随机调节字体大小、行间距。&lt;br&gt;
&lt;strong&gt;人工处理&lt;/strong&gt;：制造涂改痕迹、纸张做旧、用喷墨打印机将墨迹渗透到背面。&lt;/p&gt;
&lt;p&gt;此方法适用于大量重复内容抄写（抄写课文），或开卷考试只允许携带手写资料的情况。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E6%89%93%E5%8D%B0%E5%87%BA%E6%89%8B%E5%86%99%E6%95%88%E6%9E%9C%E7%9A%84%E6%96%87%E5%AD%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E6%89%93%E5%8D%B0%E5%87%BA%E6%89%8B%E5%86%99%E6%95%88%E6%9E%9C%E7%9A%84%E6%96%87%E5%AD%97/</guid>
      
    </item>
    
    <item>
      <title>如何批量拉取 Git 仓库更新</title>
      
      
      
      
      <description>&lt;p&gt;仓库一多，逐个手动拉取就会变得很麻烦。使用本文的方法，可以对 Git 仓库进行批量拉取操作。&lt;/p&gt;
&lt;h2&gt;步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;新建脚本文件 &lt;code&gt;pull-master.sh&lt;/code&gt;，并将以下代码粘贴进去：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```shell title=&#34;pull-master.sh&#34;&lt;/p&gt;
&lt;h1&gt;!/bin/bash&lt;/h1&gt;
&lt;p&gt;function showMsg()
 {
   echo -e &#34;\033[32m$1\033[0m&#34;
 }&lt;/p&gt;
&lt;p&gt;function getdir(){
    for element in &lt;code&gt;ls $1&lt;/code&gt;
    do
        dir_or_file=$1&#34;/&#34;$element
        if [ -d $dir_or_file ]
        then
            cd $1&#34;/&#34;$element
            showMsg &#39;git pull &#39;$element
            git pull
        else
            echo $dir_or_file
        fi
    done
}
root_dir=&#34;【包含多个仓库的路径】&#34;
getdir $root_dir
```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;【包含多个仓库的路径】&lt;/code&gt; 替换为你的路径，例如 &lt;code&gt;C:\repos&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;运行命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;shell
sh pull-master.sh
或
./pull-master.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或直接双击 &lt;code&gt;pull-master.sh&lt;/code&gt; 运行&lt;/p&gt;
&lt;h2&gt;定时执行&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;搜索并打开 &lt;code&gt;任务计划程序&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;创建任务&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;常规&lt;/code&gt; 标签页内填写名称&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;触发器&lt;/code&gt; 标签页内设置周期&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;操作&lt;/code&gt; 标签页内新建操作，填写 &lt;code&gt;程序或脚本&lt;/code&gt;（例如 &lt;code&gt;F:\pull-master.sh&lt;/code&gt;），添加参数（例如 &lt;code&gt;pull-master.sh&lt;/code&gt;），起始于（例如 &lt;code&gt;F:\&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;测试运行，如果没问题即可。（如不成功可参考 &lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software-development/Pull-Git-Repo.xml&#34;&gt;&lt;strong&gt;Pull-Git-Repo.xml&lt;/strong&gt;&lt;/a&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;在群晖 NAS 上部署&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;将脚本（比如我是 &lt;code&gt;github-pull.sh&lt;/code&gt;）放在 NAS 上任意路径&lt;/li&gt;
&lt;li&gt;修改 &lt;code&gt;github-pull.sh&lt;/code&gt; 内 &lt;code&gt;root_dir&lt;/code&gt; 的路径，比如我改为 &lt;code&gt;&#34;/volume1/projects&#34;&lt;/code&gt;，也就是你放 Git 仓库的地方&lt;/li&gt;
&lt;li&gt;&lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;任务计划&lt;/code&gt; - &lt;code&gt;新增&lt;/code&gt; - &lt;code&gt;计划的任务&lt;/code&gt; - &lt;code&gt;用户定义的脚本&lt;/code&gt;，在 &lt;code&gt;计划&lt;/code&gt; 和 &lt;code&gt;任务设置&lt;/code&gt; 标签页配置周期运行时间，和运行脚本的命令（比如 &lt;code&gt;bash /volume1/stash/permanent/github-pull.sh&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;可在 &lt;code&gt;设置&lt;/code&gt; 内配置输出结果，后选择任务，点击 &lt;code&gt;运行&lt;/code&gt;，可测试运行，可打开配置的输出路径看运行结果&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果每次都需要输入密码，可以输入以下命令（需提前开启用户家目录）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git config –global credential.helper store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这会在本地生成一个文本，上边记录账号和密码。&lt;br&gt;
接下来遇到要输入密码时，只需再输入一次，以后就不用重新输入了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/42e8da5eb0af&#34;&gt;批量 git pull 小脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_39618730/article/details/113024998&#34;&gt;git 批量 pull_shell 脚本 -- 多个代码库批量 pull 最新 master 代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_40463753/article/details/84976977&#34;&gt;Windows 定时执行 shell 脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E6%8B%89%E5%8F%96Git%E4%BB%93%E5%BA%93%E6%9B%B4%E6%96%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E6%8B%89%E5%8F%96Git%E4%BB%93%E5%BA%93%E6%9B%B4%E6%96%B0/</guid>
      
    </item>
    
    <item>
      <title>如何用 Markdown 写公众号文章</title>
      
      
      
      
      <description>&lt;p&gt;在 Markdown 介绍文章 &lt;a href=&#34;https://wiki-power.com/%E4%BD%BF%E7%94%A8Markdown%E8%BF%9B%E8%A1%8C%E9%AB%98%E6%95%88%E5%86%99%E4%BD%9C&#34;&gt;&lt;strong&gt;使用 Markdown 进行高效写作&lt;/strong&gt;&lt;/a&gt; 中，我们得以见识 Markdown 用于排版的便捷性。假如我想用它来写微信公众号，该怎么操作呢？&lt;/p&gt;
&lt;p&gt;我们都知道，微信公众号用的是富文本编辑器，是无法直接解析 Markdown 语法的。但我们可以自己先将 Markdown 解析为富文本，再粘贴进公众号文章的编辑界面。&lt;/p&gt;
&lt;h2&gt;MD2WeChat&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://md2wechat.wiki-power.com/&#34;&gt;&lt;strong&gt;MD2WeChat&lt;/strong&gt;&lt;/a&gt; 是我根据开源项目 &lt;a href=&#34;https://github.com/lyricat/wechat-format&#34;&gt;lyricat/wechat-format&lt;/a&gt; 定制的一个网页工具，可以很方便地将 Markdown 语法解析为富文本：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://md2wechat.wiki-power.com/&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210216125752.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将 Markdown 语法的文章粘贴到左栏，并在右栏点击一键复制，粘贴进公众号的编辑器即可。&lt;/p&gt;
&lt;p&gt;注：因公众号文章中不允许有外部链接，所以外链会被自动加脚注，并在底部附上。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lyricat/wechat-format&#34;&gt;lyricat/wechat-format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/</guid>
      
    </item>
    
    <item>
      <title>如何高效制作幻灯片</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;准备一场演讲，通常我们的流程是：
1. 用 PowerPoint 制作幻灯片
2. 用 U 盘将 .ppt 文件拷贝至演讲用的电脑上
3. 开始演讲&lt;/p&gt;
&lt;p&gt;这其中存在以下几个问题：
1. 幻灯片的制作复杂，让我们不得不将注意力集中于样式，而非内容上
2. 演讲用的 PPT 版本不同，可能会出现不兼容的情况
3. 用 U 盘拷贝的方式不优雅，而且可能传播病毒&lt;/p&gt;
&lt;p&gt;如果有一个新的流程，可以让你像写大纲一般制作 PPT，不纠结于样式；演讲时空着手上台，打开一个网址，就能展示出你要讲的 PPT，是不是很吸引眼球？&lt;/p&gt;
&lt;h2&gt;用 Reveal.js 制作幻灯片&lt;/h2&gt;
&lt;p&gt;Reveal.js 是一个使用 HTML 制作 PPT 的框架，制做演示文稿时，你就是在制作一个网页。&lt;br&gt;
你可以直接下载整个仓库 &lt;a href=&#34;https://github.com/hakimel/reveal.js&#34;&gt;&lt;strong&gt;hakimel/reveal.js&lt;/strong&gt;&lt;/a&gt; 并直接编辑 &lt;code&gt;index.html&lt;/code&gt;. 随后将 &lt;code&gt;index.html&lt;/code&gt; 拖进浏览器，即可播放幻灯片。&lt;/p&gt;
&lt;p&gt;推荐使用 Visual Studio Code，配合 Live Server 插件，能够实时预览：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200228194307.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Reveal.js 的语法可以参考 &lt;a href=&#34;https://revealjs.com/&#34;&gt;&lt;strong&gt;官方文档&lt;/strong&gt;&lt;/a&gt; 。&lt;/p&gt;
&lt;h2&gt;在线演示&lt;/h2&gt;
&lt;p&gt;我们可以将幻灯片托管至 GitHub Pages， 实现在线演示。  &lt;/p&gt;
&lt;p&gt;具体的操作方法是，将整个项目文件夹同步至 GitHub， 并开启 Pages 功能（可以绑定自己的域名）。然后就可以直接访问网址，实现在线演示 PPT 了。&lt;/p&gt;
&lt;p&gt;假如用于演示的电脑无网络连接，你仍然可以拷贝整个项目文件夹，使用演示电脑的浏览器直接播放幻灯片。&lt;/p&gt;
&lt;p&gt;你可以访问 &lt;a href=&#34;https://slides.wiki-power.com/&#34;&gt;https://slides.wiki-power.com/&lt;/a&gt; 查看我创建的在线幻灯片。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200203144149.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://revealjs.com/&#34;&gt;REVEAL.JS - THE HTML PRESENTATION FRAMEWORK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js&#34;&gt;hakimel/reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA==&amp;amp;mid=2653540643&amp;amp;idx=1&amp;amp;sn=109613b8eea57eb7589fd9ca2bf56a8b&amp;amp;chksm=f389bbf4c4fe32e29c1ef0cb5cc14de75dec73abf6e43568d4cb437f6133d129378112631f15&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1582828892161&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=113f64ecf669c05f5a4d2e2852665c055c2450ffa0d0edd2be1ada7647e3a09828048a2aeeb2f46f0668254bd54d09470c1319a2e4d57bf6771460f4d5c833bd5e66e6cd5d3bd2ec209683cb408c2c53&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=AwoQ%2FVXFAgH6janLC6ZV2hA%3D&amp;amp;pass_ticket=z4ox3f8nl73K2MPu0EBLLe%2FAru4MK%2B7c3EfDVNQbWWoZL0WujjMAwkBNocQsOmu8&#34;&gt;如何用 Github 免费在线播放你的幻灯？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/40657&#34;&gt;Reveal.js：把你的 Markdown 文稿变成 PPT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%88%B6%E4%BD%9C%E5%B9%BB%E7%81%AF%E7%89%87/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%88%B6%E4%BD%9C%E5%B9%BB%E7%81%AF%E7%89%87/</guid>
      
    </item>
    
    <item>
      <title>定制 SublimeText3</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Sublime Text&lt;/strong&gt; 是一款非常强大的文本编辑器。由于下学期有 Python 相关课程，而 Pycharm 等工具的 UI 有些难看。我想尝试把 Sublime Text 打造为 Python 开发利器。&lt;/p&gt;
&lt;p&gt;定制后的效果图：&lt;br&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/ST3效果.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://www.jianguoyun.com/p/Da9TMr0Q-OOjBxif86sB&#34;&gt;极简部署&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;下载 &lt;code&gt;Consolas-with-Yahei&lt;/code&gt; 字体，解压安装&lt;/li&gt;
&lt;li&gt;下载&lt;strong&gt;由我定制&lt;/strong&gt;的 &lt;a href=&#34;https://www.jianguoyun.com/p/Da9TMr0Q-OOjBxif86sB&#34;&gt;&lt;strong&gt;Sublime Text 3&lt;/strong&gt;&lt;/a&gt;（不保证更新）&lt;/li&gt;
&lt;li&gt;直接运行 &lt;code&gt;.exe&lt;/code&gt; 文件，详细参数配置请见下文&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;详细配置&lt;/h2&gt;
&lt;h3&gt;软件下载及安装&lt;/h3&gt;
&lt;p&gt;Sublime Text 3 可从 &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;官网&lt;/a&gt; 下载（推荐下载 &lt;a href=&#34;https://download.sublimetext.com/Sublime%20Text%20Build%203176%20x64.zip&#34;&gt;&lt;strong&gt;免安装版本&lt;/strong&gt;&lt;/a&gt;） 软件可以免费使用，但有时候会弹出付费提示。经提醒，已将序列号从文章中删除。需要可以联系我。&lt;/p&gt;
&lt;h3&gt;包管理器及插件安装&lt;/h3&gt;
&lt;p&gt;安装包管理器：&lt;code&gt;Preferences -&amp;gt; Install Package Control&lt;/code&gt;，之后可用快捷键 &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; 快速调出包管理器界面。&lt;/p&gt;
&lt;p&gt;安装插件：调出 &lt;code&gt;Package Control&lt;/code&gt; 界面，输入 &lt;code&gt;Install Package&lt;/code&gt; ，回车，耐心等待，在稍后弹出的界面里搜索所需插件并点击安装。对于未发布插件，可直接选择 &lt;code&gt;Preference -&amp;gt; Browser packages&lt;/code&gt; ，打开存放插件的文件夹，把插件直接放进去即可。&lt;/p&gt;
&lt;p&gt;卸载插件：调出 &lt;code&gt;Package Control&lt;/code&gt; 界面，输入 &lt;code&gt;remove package&lt;/code&gt; .&lt;/p&gt;
&lt;h3&gt;适配中文&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;汉化：用 &lt;code&gt;Package Control&lt;/code&gt; 搜索 &lt;code&gt;ChineseLocalizations&lt;/code&gt; ，点击安装。&lt;/li&gt;
&lt;li&gt;中文输入问题：下载 &lt;a href=&#34;https://github.com/zcodes/IMESupport/archive/master.zip&#34;&gt;IMESupport&lt;/a&gt;，解压到插件安装目录，重启 Sublime ，解决中文输入时输入框不跟随的问题。&lt;/li&gt;
&lt;li&gt;中文字体：下载 &lt;code&gt;Consolas-with-Yahei&lt;/code&gt; ，解压安装，在用户设置里替换为 &lt;code&gt;&#34;font_face&#34;: &#34;Consolas-with-Yahei&#34;,&lt;/code&gt; .&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;主题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我使用的暗色主题：用 &lt;code&gt;Package Control&lt;/code&gt; 搜索 &lt;code&gt;Spacegray&lt;/code&gt; 和 &lt;code&gt;Afterglow&lt;/code&gt; ，在用户设置里替换为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&#34;color_scheme&#34;: &#34;Packages/Theme - Spacegray/base16-ocean.dark.tmTheme&#34;,
&#34;theme&#34;: &#34;Afterglow-green.sublime-theme&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;细节调整&lt;/h3&gt;
&lt;p&gt;在用户设置里可添加如下代码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&#34;word_wrap&#34;: &#34;true&#34;, // 被遮挡自动换行
&#34;fold_buttons&#34;: true, // 开启代码折叠
&#34;fade_fold_buttons&#34;: true, // 折叠按钮自动隐藏
&#34;tab_size&#34;: 4, // tab 缩进位数
&#34;margin&#34;: 4, // 缩进
&#34;tabs_small&#34;: true, // 使标签栏变小
&#34;trim_trailing_white_space_on_save&#34;: true, // 自动移除行尾多余空格
&#34;ensure_newline_at_eof_on_save&#34;: true, // 文件末尾自动保留一个空行，C 语言可用&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;推荐插件&lt;/h3&gt;
&lt;p&gt;以下插件可用 &lt;code&gt;Package Control&lt;/code&gt; 直接安装。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;StyleToken&lt;/strong&gt;：显示代码所代表的颜色（RGB） &lt;strong&gt;FileHeader&lt;/strong&gt;：自定义文件模板 打开 &lt;code&gt;Preferences -&amp;gt; Package Settings -&amp;gt; FileHeader -&amp;gt; Settings - User&lt;/code&gt; ，把 &lt;code&gt;Default&lt;/code&gt; 里的内容拷贝到 &lt;code&gt;User&lt;/code&gt; , 并修改个人信息如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{
    &#34;Default&#34;: {
        &#34;author&#34;: &#34;linyuxuanlin&#34;,
        &#34;email&#34;: &#34;824676271@qq.com&#34;,
        &#34;website&#34;: &#34;yxrct.com&#34;
    }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;Preferences -&amp;gt; Browse Packages... -&amp;gt; FileHeader -&amp;gt; template -&amp;gt; header 或 body&lt;/code&gt; 中修改模板内容。 效果：&lt;br&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/ST3 模板效果。png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;运行 Python&lt;/h3&gt;
&lt;p&gt;由于自带编译器没有用户输入，所以这里需要一个插件：&lt;code&gt;SublimeREPL&lt;/code&gt;. 直接 用 &lt;code&gt;Package Control&lt;/code&gt; 安装，并在 &lt;code&gt;Preferences —&amp;gt; Key Buildings -&amp;gt; User&lt;/code&gt; 下添加快捷键唤醒：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[
    { &#34;keys&#34;: [&#34;f5&#34;], &#34;caption&#34;: &#34;SublimeREPL:Python&#34;,
                      &#34;command&#34;: &#34;run_existing_window_command&#34;, &#34;args&#34;:
                      {
                           &#34;id&#34;: &#34;repl_python_run&#34;,
                           &#34;file&#34;: &#34;config/Python/Main.sublime-menu&#34;
                      }
    },
]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之后，在 Python 代码里可直接按 &lt;code&gt;F5&lt;/code&gt; 运行。&lt;/p&gt;
&lt;h3&gt;自动格式化代码&lt;/h3&gt;
&lt;p&gt;安装 &lt;code&gt;Python PEP8 Autoformat&lt;/code&gt; 插件，在 &lt;code&gt;Key Buildings&lt;/code&gt; 中加入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{ &#34;keys&#34;: [&#34;alt+r&#34;], &#34;command&#34;: &#34;pep8_autoformat&#34; },&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;便可用 &lt;code&gt;Alt + R&lt;/code&gt; 格式化 Python 代码。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;颜值即生产力。Sublime Text 不止支持 Python，几乎所有的文件格式都可以用它打开编辑。调教得当的话，在一个极简、强大的界面下敲代码，想想也是挺浪漫的。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sheyilin.com/2015/05/sublime_text_3_tiao_jiao_ni_de_si_ren_li_qi_1/&#34;&gt;Sublime Text 3 调教你的私人利器（上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/afei__/article/details/82890493&#34;&gt;Sublime Text 自动生成文件头部注释（版权信息）：FileHeader 插件的使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%AE%9A%E5%88%B6SublimeText3/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%AE%9A%E5%88%B6SublimeText3/</guid>
      
    </item>
    
    <item>
      <title>开启 Chrome（Edge）多线程下载</title>
      
      
      
      
      <description>&lt;h2&gt;如何开启&lt;/h2&gt;
&lt;p&gt;在地址栏输入链接并回车：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chrome：&lt;code&gt;chrome://flags/#enable-parallel-downloading&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edge：&lt;code&gt;edge://flags/#enable-parallel-downloading&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;code&gt;Parallel downloading&lt;/code&gt; 选项的 &lt;code&gt;Default&lt;/code&gt; 改为 &lt;code&gt;Enabled&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iplaysoft.com/chrome-parallel-download.html&#34;&gt;一招加速浏览器下载 20 倍！免费开启 Chrome / Edge “隐藏” 自带的多线程下载功能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%BC%80%E5%90%AFChrome%EF%BC%88Edge%EF%BC%89%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%BC%80%E5%90%AFChrome%EF%BC%88Edge%EF%BC%89%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD/</guid>
      
    </item>
    
    <item>
      <title>正则表达式实用语句</title>
      
      
      
      
      <description>&lt;p&gt;匹配某一字符串（&lt;code&gt;string&lt;/code&gt;）的所在行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;^(.*)string(.*)\n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;手机号码（严谨）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^1((3[\d])|(4[5,6,7,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[\d])|(9[1,8,9]))\d{8}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;手机号码（宽松）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^1[3-9]\d{9}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国内座机电话：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^\d{3}-\d{8}|\d{4}-\d{7}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;座机电话（包括港澳台）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^(\d{3}-\d{8})|(\d{4}-\d{7})|(852|853|886-\d{7,8})$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;电子邮箱：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[a-zA-Z0-9.!#$%&amp;amp;&#39;*+/=?^_`{|}~-]+@[a-zA-Z0-9](https://github.com/wqjiao/regular-set/blob/master?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](https://github.com/wqjiao/regular-set/blob/master?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;身份证号码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^\d{6}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;护照（包含香港、澳门）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/(^[EeKkGgDdSsPpHh]\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\d{7}$)/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;车牌号（新能源 + 非新能源）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF](https://github.com/wqjiao/regular-set/blob/master/[A-HJ-NP-Z0-9])[0-9]{4})))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;新能源车牌号：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF][A-HJ-NP-Z0-9][0-9]{4}))$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;非新能源车牌号：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;车架号：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[A-Z0-9]{17}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发动机号：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[A-Z0-9]{6,17}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;中国邮政编码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\d{4}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;允许字母数字下划线组合：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[a-zA-Z0-9_]{6,16}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;汉字：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[\u4E00-\u9FA5]+$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;英文：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[a-zA-Z]+$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数字：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^\d{1,}$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;小数：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^\d+\.\d+$/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不能包含汉字：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/^[^\u4E00-\u9FA5]*$/&lt;/code&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AE%9E%E7%94%A8%E8%AF%AD%E5%8F%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AE%9E%E7%94%A8%E8%AF%AD%E5%8F%A5/</guid>
      
    </item>
    
    <item>
      <title>用 Vercel 加速 Pages 服务</title>
      
      
      
      
      <description>&lt;p&gt;前一段时间，我的博客（托管在 GitHub Pages）被墙了。因为受众大多是国内用户，所以问题很大。&lt;br&gt;
一般来说，解决方法只有买服务器 / 迁移到 OSS. 但方法都偏复杂，也费钱。
恰巧碰上了这个神器 Vercel. 于是又可以愉快地写博客了。&lt;/p&gt;
&lt;h2&gt;Vercel 的优势&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;免费自定义域名，支持 HTTPS&lt;/li&gt;
&lt;li&gt;提供 Serverless 服务&lt;/li&gt;
&lt;li&gt;提供 Google Cloud 与 AWS 节点，有香港与台湾节点，国内访问速度还可以&lt;/li&gt;
&lt;li&gt;免费额度有 20 GB，够用&lt;/li&gt;
&lt;li&gt;不限站点与 Serverless API 数量&lt;/li&gt;
&lt;li&gt;Serverless 支持 Node.js，Go，Python，Ruby&lt;/li&gt;
&lt;li&gt;支持 now.sh CLI，GitHub，GitLab，Bitbucket 导入 / 部署&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;用法&lt;/h2&gt;
&lt;p&gt;因配置步骤不复杂，所以只以文字进行简要的说明。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用 GitHub 账号直接登录&lt;/li&gt;
&lt;li&gt;导入站点（直接导入 GitHub Repo）&lt;/li&gt;
&lt;li&gt;配置部署指令（VuePress 平台可放空）&lt;/li&gt;
&lt;li&gt;配置输出路径（VuePress 是 &lt;code&gt;docs/.vuepress/dist&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;要在设置里面把生产分支设为 &lt;code&gt;gh-pages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;绑定域名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;注意&lt;/h2&gt;
&lt;p&gt;每次 commit message 要写超过 1 个字符，否则不会部署。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wivwiv.com/post/zeit-use-guide/&#34;&gt;ZEIT (Vercel) now.sh 免费部署博客网站，支持 Serverless Python Go Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%94%A8Vercel%E5%8A%A0%E9%80%9FPages%E6%9C%8D%E5%8A%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%94%A8Vercel%E5%8A%A0%E9%80%9FPages%E6%9C%8D%E5%8A%A1/</guid>
      
    </item>
    
    <item>
      <title>用 reveal.js 制作幻灯片</title>
      
      
      
      
      <description>&lt;h2&gt;快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;下一张幻灯片：&lt;strong&gt;空格&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;方向选择幻灯片：&lt;strong&gt;方向键&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;总览视图：&lt;strong&gt;Esc&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;演讲者视图：&lt;strong&gt;S&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;暂停演讲 / 黑屏：&lt;strong&gt;V/B/.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PDF 导出&lt;/h2&gt;
&lt;p&gt;在地址后加 &lt;code&gt;?print-pdf&lt;/code&gt;，例如 &lt;code&gt;http://localhost:8000/?print-pdf&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考语法&lt;/h2&gt;
&lt;h3&gt;图片&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;html
&amp;lt;img
  data-src=&#34;&#34;
  style=&#34;
              width: px;
              margin: 0 auto 1rem auto;
              background: transparent;
            &#34;
/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
align=&#34;left&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;文字&lt;/h3&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p style=&#34;white-space: pre-line;&#34;&gt;&lt;small&gt; &lt;/small&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3&gt;视频&lt;/h3&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;&lt;section
  data-transition=&#34;slide&#34;
  data-background=&#34;#EAB547&#34;
  data-background-transition=&#34;zoom&#34;
&gt;
  &lt;video data-src=&#34;&#34;&gt;&lt;/video&gt;
&lt;/section&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://revealjs.com/&#34;&gt;reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%94%A8reveal.js%E5%88%B6%E4%BD%9C%E5%B9%BB%E7%81%AF%E7%89%87/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%94%A8reveal.js%E5%88%B6%E4%BD%9C%E5%B9%BB%E7%81%AF%E7%89%87/</guid>
      
    </item>
    
    <item>
      <title>用群晖自带反向代理实现 HTTPS 访问</title>
      
      
      
      
      <description>&lt;p&gt;首先，你需要一个外部访问群晖的 IP 或域名，并且已经申请了 SSL 证书。详细说明可跳转文章 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E4%BA%8Eacme.sh%E8%87%AA%E5%8A%A8%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89&#34;&gt;&lt;strong&gt;使用 acme.sh 自动申请域名证书（群晖 Docker）&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;配置反向代理&lt;/h2&gt;
&lt;p&gt;依次打开 &lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;登录门户&lt;/code&gt; - &lt;code&gt;高级&lt;/code&gt; - &lt;code&gt;反向代理服务器&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;以 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E4%BA%8EBitwarden%E6%90%AD%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89&#34;&gt;&lt;strong&gt;使用 Bitwarden 搭建密码管理器（群晖 Docker）&lt;/strong&gt;&lt;/a&gt;
我们新增名称为 &lt;code&gt;bitwarden&lt;/code&gt; 的反代服务。按照下图填写配置：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210503213004.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;来源&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;协议&lt;/code&gt;：选择 &lt;code&gt;HTTPS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;主机名&lt;/code&gt;：填写外部访问的域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;端口&lt;/code&gt;：填写外部访问的端口&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;启用 HSTS&lt;/code&gt;（强制跳转 HTTPS）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;目的地&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;协议&lt;/code&gt;：选择 &lt;code&gt;HTTP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;主机名&lt;/code&gt;：填写 &lt;code&gt;localhost&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;端口&lt;/code&gt;：填写内部访问的端口（对于 bitwarden 来说，就是刚刚容器 &lt;code&gt;80&lt;/code&gt; 端口映射的端口，比如 &lt;code&gt;8003&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置证书&lt;/h2&gt;
&lt;p&gt;依次打开 &lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;安全性&lt;/code&gt; - &lt;code&gt;证书&lt;/code&gt;，选中正在使用的证书，点击 &lt;code&gt;设置&lt;/code&gt;，确保 &lt;code&gt;bitwarden&lt;/code&gt; 的反代服务所对应的域名的证书为当前证书即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%94%A8%E7%BE%A4%E6%99%96%E8%87%AA%E5%B8%A6%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0HTTPS%E8%AE%BF%E9%97%AE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%94%A8%E7%BE%A4%E6%99%96%E8%87%AA%E5%B8%A6%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0HTTPS%E8%AE%BF%E9%97%AE/</guid>
      
    </item>
    
    <item>
      <title>移除 Chrome（Edge） 由组织管理</title>
      
      
      
      
      <description>&lt;h2&gt;步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Win&lt;/code&gt; + &lt;code&gt;R&lt;/code&gt;，输入 &lt;code&gt;regedit&lt;/code&gt; 打开注册表&lt;/li&gt;
&lt;li&gt;找到以下目录并删除它们&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Chrome：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome
HKEY_CURRENT_USER\SOFTWARE\Policies\Google\Chrome&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Edge：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Edge
HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Edge&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.joshualowcock.com/guide/fix-chrome-is-managed-by-your-organization-in-3-steps/&#34;&gt;Works! Fix Chrome (or Edge) is Managed by your Organization (in 3 steps!)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%A7%BB%E9%99%A4Chrome%EF%BC%88Edge%EF%BC%89%E7%94%B1%E7%BB%84%E7%BB%87%E7%AE%A1%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E7%A7%BB%E9%99%A4Chrome%EF%BC%88Edge%EF%BC%89%E7%94%B1%E7%BB%84%E7%BB%87%E7%AE%A1%E7%90%86/</guid>
      
    </item>
    
    <item>
      <title>解决 Google 相册导出时间信息丢失问题</title>
      
      
      
      
      <description>&lt;p&gt;在 Google Takeout 导出 Google 相册后，很多照片的时间信息都被另存为 &lt;code&gt;.json&lt;/code&gt; 文件。如何将其导入对应照片呢？&lt;/p&gt;
&lt;p&gt;新建一个 Python 文件 &lt;code&gt;update-data.py&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```python
from win32file import CreateFile, SetFileTime, GetFileTime, CloseHandle
from win32file  import GENERIC_READ, GENERIC_WRITE, OPEN_EXISTING
from pywintypes import Time
import os,json,time&lt;/p&gt;
&lt;h1&gt;获取指定后缀的文件名&lt;/h1&gt;
&lt;p&gt;def get_all_file(ext_name):
    file_list = []
    datanames = os.listdir()
    for dataname in datanames:
        if os.path.splitext(dataname)[1] == ext_name:  #目录下包含.json的文件
            file_list.append(dataname)
    return file_list&lt;/p&gt;
&lt;h1&gt;读取json&lt;/h1&gt;
&lt;p&gt;def load_json(json_file_name):
    f = open(json_file_name,&#39;r&#39;,encoding = &#39;UTF-8&#39;)
    text = f.read()
    dic = json.loads(text)
    return dic&lt;/p&gt;
&lt;p&gt;def modifyFileTime(filePath, createTime, modifyTime, accessTime, offset):
    &#34;&#34;&#34;
    用来修改任意文件的相关时间属性，时间格式：YYYY-MM-DD HH:MM:SS 例如：2019-02-02 00:01:02
    :param filePath: 文件路径名
    :param createTime: 创建时间
    :param modifyTime: 修改时间
    :param accessTime: 访问时间
    :param offset: 时间偏移的秒数,tuple格式，顺序和参数时间对应
    &#34;&#34;&#34;
    try:
        format = &#34;%Y-%m-%d %H:%M:%S&#34;  # 时间格式
        cTime_t = timeOffsetAndStruct(createTime, format, offset[0])
        mTime_t = timeOffsetAndStruct(modifyTime, format, offset[1])
        aTime_t = timeOffsetAndStruct(accessTime, format, offset[2])&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    fh = CreateFile(filePath, GENERIC_READ | GENERIC_WRITE, 0, None, OPEN_EXISTING, 0, 0)
    createTimes, accessTimes, modifyTimes = GetFileTime(fh)

    createTimes = Time(time.mktime(cTime_t))
    accessTimes = Time(time.mktime(aTime_t))
    modifyTimes = Time(time.mktime(mTime_t))
    SetFileTime(fh, createTimes, accessTimes, modifyTimes)
    CloseHandle(fh)
    return 0
except:
    return 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def timeOffsetAndStruct(times, format, offset):
    return time.localtime(time.mktime(time.strptime(times, format)) + offset)&lt;/p&gt;
&lt;h1&gt;日期转换，将谷歌的日期转化为数值&lt;/h1&gt;
&lt;p&gt;def time_format(data_string):
    print(data_string)
    year = data_string.split(&#39;年&#39;)[0]
    month = data_string.split(&#39;年&#39;)[1].split(&#39;月&#39;)[0]
    day = data_string.split(&#39;年&#39;)[1].split(&#39;月&#39;)[1].split(&#39;日&#39;)[0]
    add_flag = data_string.split(&#39;年&#39;)[1].split(&#39;月&#39;)[1].split(&#39;日&#39;)[1].find(&#39;下午&#39;)
    hour = data_string.split(&#39;年&#39;)[1].split(&#39;月&#39;)[1].split(&#39;日&#39;)[1].split(&#39;午&#39;)[1].split(&#39;:&#39;)[0]
    minute = data_string.split(&#39;年&#39;)[1].split(&#39;月&#39;)[1].split(&#39;日&#39;)[1].split(&#39;午&#39;)[1].split(&#39;:&#39;)[1]
    second = data_string.split(&#39;年&#39;)[1].split(&#39;月&#39;)[1].split(&#39;日&#39;)[1].split(&#39;午&#39;)[1].split(&#39;:&#39;)[2]
    if add_flag &amp;gt; 0:
        hour = str(int(hour)+12)
    return year + &#39;-&#39; + month + &#39;-&#39; +day +&#39; &#39; + hour + &#39;:&#39;+ minute + &#39;:&#39; + second&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == &#39;&lt;strong&gt;main&lt;/strong&gt;&#39;:
    file_name_json = get_all_file(&#39;.json&#39;)                      #获取当前目录下所有文件图片文件名list&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for fnj in file_name_json:
    dic = load_json(fnj)                                        #提取字典信息
    st = dic[&#39;creationTime&#39;][&#39;formatted&#39;]                       #获取文件日期
    output_format = time_format(st)                             #转换日期格式

    file_name = fnj[0:-5]                                       #获取对应文件的照片名字
    print(file_name)
    offset = (0, 1, 2)
    #修改文件日期
    modifyFileTime(file_name, output_format, output_format, output_format,offset)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;这个脚本的作用是根据 json 修改文件创建日期，并将其导入同名的照片。&lt;/p&gt;
&lt;p&gt;直接将此脚本放入每个相册的目录中运行即可。执行过后，照片的时间信息就回来了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/356718593&#34;&gt;谷歌相册下载后的时间丢失问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E8%A7%A3%E5%86%B3Google%E7%9B%B8%E5%86%8C%E5%AF%BC%E5%87%BA%E6%97%B6%E9%97%B4%E4%BF%A1%E6%81%AF%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E8%A7%A3%E5%86%B3Google%E7%9B%B8%E5%86%8C%E5%AF%BC%E5%87%BA%E6%97%B6%E9%97%B4%E4%BF%A1%E6%81%AF%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/</guid>
      
    </item>
    
    <item>
      <title>避免 Chrome（Edge）强制转换 HTTPS</title>
      
      
      
      
      <description>&lt;p&gt;有些网站只能用 http 访问，但有时候浏览器会强制转换为 https，导致访问错误。以下步骤将展示如何禁用浏览器的自动转换。&lt;/p&gt;
&lt;h2&gt;操作步骤&lt;/h2&gt;
&lt;p&gt;在地址栏输入链接并回车：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chrome：&lt;code&gt;chrome://net-internals/#hsts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edge：&lt;code&gt;edge://net-internals/#hsts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;code&gt;Delete domain security policies&lt;/code&gt; 栏，将你不需要自动转换的链接填进。比如，我要求 &lt;code&gt;wiki-power.com&lt;/code&gt; 不被强制转换为 https 访问，则填入 &lt;code&gt;wiki-power.com&lt;/code&gt; 然后点击 &lt;code&gt;Delete&lt;/code&gt; 删除即可。&lt;/p&gt;
&lt;p&gt;随后在地址栏输入链接并回车：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chrome：&lt;code&gt;chrome://flags/#edge-automatic-https&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edge：&lt;code&gt;edge://flags/#edge-automatic-https&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;code&gt;Automatic HTTPS&lt;/code&gt; 选项的 &lt;code&gt;Default&lt;/code&gt; 改为 &lt;code&gt;Disabled&lt;/code&gt;，并重启浏览器。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Thinker001/article/details/117717690&#34;&gt;Edge 或谷歌浏览器输入 http 的网址被强制转化为 https，手工修改为 http 都无效&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E9%81%BF%E5%85%8DChrome%EF%BC%88Edge%EF%BC%89%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2HTTPS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/%E9%81%BF%E5%85%8DChrome%EF%BC%88Edge%EF%BC%89%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2HTTPS/</guid>
      
    </item>
    
    <item>
      <title>Docusaurus 极简部署指南</title>
      
      
      
      
      <description>&lt;p&gt;使用 &lt;a href=&#34;https://github.com/linyuxuanlin/Docusaurus-Vercel&#34;&gt;&lt;strong&gt;这个模板&lt;/strong&gt;&lt;/a&gt; 生成自己的仓库&lt;/p&gt;
&lt;p&gt;注册 &lt;a href=&#34;https://Vercel.com&#34;&gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;/a&gt; 账户（选择用 GitHub 账户注册），并导入刚刚的仓库&lt;/p&gt;
&lt;p&gt;行了。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Docusaurus%E6%9E%81%E7%AE%80%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Docusaurus%E6%9E%81%E7%AE%80%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>Hugo 极简搭建指南</title>
      
      
      
      
      <description>&lt;p&gt;Hugo 是一个搭建网页的框架，有极高的构建和部署速度。至于在 Windows 下的安装配置，官方文档并未详细说明，第三方教程也参差不齐，所以我写了这一篇教程。&lt;/p&gt;
&lt;h2&gt;下载安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开 Hugo 官方 GitHub 的 &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;&lt;strong&gt; Releases&lt;/strong&gt;&lt;/a&gt; 页面&lt;/li&gt;
&lt;li&gt;选择最新的版本下载（选择 &lt;code&gt;hugo_xxx_Windows-64/32bit.zip&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;将压缩包内的 &lt;code&gt;hugo.exe&lt;/code&gt; 文件解压至 &lt;code&gt;D:\hugo&lt;/code&gt; 文件夹目录下&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;文件资源管理器&lt;/code&gt;（即 &lt;code&gt;我的电脑&lt;/code&gt;）中空白处点击鼠标右键，打开属性&lt;/li&gt;
&lt;li&gt;依次点击 &lt;code&gt;高级系统设置&lt;/code&gt; - &lt;code&gt;环境变量&lt;/code&gt; ，双击打开系统变量中的 &lt;code&gt;Path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在环境变量界面中双击空白行，添加 &lt;code&gt;D:\hugo&lt;/code&gt;，点击确定&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;打开命令提示符，输入语句：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以确认 Hugo 是否安装成功（如果安装成功就能看到版本号）&lt;/p&gt;
&lt;h2&gt;创建站点&lt;/h2&gt;
&lt;p&gt;切换至相应目录下，使用如下语句：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo new site quickstart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这将在一个叫 &lt;code&gt;quickstart&lt;/code&gt; 的文件夹内创建一个新的 Hugo 站点。&lt;/p&gt;
&lt;h2&gt;添加主题&lt;/h2&gt;
&lt;p&gt;主题的挑选可以到官方的 &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;&lt;strong&gt;主题页面&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;直接跳转至 GitHub 下载主题文件夹，解压至站点的 &lt;code&gt;theme&lt;/code&gt; 目录下即可。&lt;/p&gt;
&lt;p&gt;执行如下命令，将主题添加至站点的配置文件中：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo &#39;theme = &#34;主题文件夹的名字&#34;&#39; &amp;gt;&amp;gt; config.toml&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;创建文章&lt;/h2&gt;
&lt;p&gt;使用如下命令，创建一篇文章：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo new posts/my-first-post.md&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后打开文章，将 &lt;code&gt;front matter&lt;/code&gt; 中的 &lt;code&gt;draft: true&lt;/code&gt; 改为 &lt;code&gt;draft: false&lt;/code&gt;，以移出草稿区，正常呈现出来。&lt;/p&gt;
&lt;h2&gt;启动 Hugo 服务&lt;/h2&gt;
&lt;p&gt;使用以下命名启动 Hugo 本地预览服务：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开 &lt;a href=&#34;http://localhost:1313/&#34;&gt;&lt;strong&gt;http://localhost:1313/&lt;/strong&gt;&lt;/a&gt; ，即可看到实时预览的站点（在本地的任何修改，将即时更新）。&lt;/p&gt;
&lt;h2&gt;本地部署&lt;/h2&gt;
&lt;p&gt;使用如下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Build static pages&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将站点部署进行本地部署（输出于 &lt;code&gt;public&lt;/code&gt; 文件夹目录下）。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;Quick Start · Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Hugo%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Hugo%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>MkDocs 测试实验室</title>
      
      
      
      
      <description>&lt;p&gt;&lt;code&gt;MkDocs-Lab&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Mermaid&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mermaid
graph LR
    A[Square Rect] -- Link text --&amp;gt; B((Circle))
    A --&amp;gt; C(Round Rect)
    B --&amp;gt; D{Rhombus}
    C --&amp;gt; D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mermaid
graph LR
  A[Start] --&amp;gt; B{Error?};
  B --&amp;gt;|Yes| C[Hmm...];
  C --&amp;gt; D[Debug];
  D --&amp;gt; B;
  B ----&amp;gt;|No| E[Yay!];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mermaid
sequenceDiagram
  Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts!
  John--&amp;gt;&amp;gt;Alice: Great!
  John-&amp;gt;&amp;gt;Bob: How about you?
  Bob--&amp;gt;&amp;gt;John: Jolly good!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```mermaid
stateDiagram-v2
  state fork_state &amp;lt;&lt;fork&gt;&amp;gt;
    [*] --&amp;gt; fork_state
    fork_state --&amp;gt; State2
    fork_state --&amp;gt; State3&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;state join_state &amp;lt;&amp;lt;join&amp;gt;&amp;gt;
State2 --&amp;gt; join_state
State3 --&amp;gt; join_state
join_state --&amp;gt; State4
State4 --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chrieke.medium.com/the-best-mkdocs-plugins-and-customizations-fc820eb19759&#34;&gt;The best MkDocs plugins and customizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mkdocs/mkdocs/wiki/MkDocs-Plugins&#34;&gt;MkDocs Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://squidfunk.github.io/mkdocs-material/reference/diagrams/&#34;&gt;Diagrams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/MkDocs%E6%B5%8B%E8%AF%95%E5%AE%9E%E9%AA%8C%E5%AE%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/MkDocs%E6%B5%8B%E8%AF%95%E5%AE%9E%E9%AA%8C%E5%AE%A4/</guid>
      
    </item>
    
    <item>
      <title>Personal Onboarding Workflow (Windows)</title>
      
      
      
      
      <description>&lt;h2&gt;Settings&lt;/h2&gt;
&lt;h3&gt;Initialization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bring up Windows without Microsoft account.&lt;/li&gt;
&lt;li&gt;Open diagnosis (for dev version).&lt;/li&gt;
&lt;li&gt;Check for system and driver update&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;System Settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;Multitasking&lt;ul&gt;
&lt;li&gt;Don&#39;t show Edge tabs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Display&lt;ul&gt;
&lt;li&gt;Night Light&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Remote Desktop - on&lt;/li&gt;
&lt;li&gt;Personalization&lt;/li&gt;
&lt;li&gt;Dark theme&lt;/li&gt;
&lt;li&gt;Background &amp;amp; Lockscreen&lt;/li&gt;
&lt;li&gt;Taskbar&lt;/li&gt;
&lt;li&gt;Privacy &amp;amp; security&lt;/li&gt;
&lt;li&gt;Search permissions - off&lt;/li&gt;
&lt;li&gt;For developers - on&lt;/li&gt;
&lt;li&gt;Windows Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other Settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ultimate Performance (powershell - &lt;code&gt;powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;File Explorer&lt;/li&gt;
&lt;li&gt;Sidebar&lt;/li&gt;
&lt;li&gt;NVIDIA and Intel driver settings&lt;/li&gt;
&lt;li&gt;Language format / time / typing&lt;/li&gt;
&lt;li&gt;Edge: enable &lt;a href=&#34;edge://flags/#enable-parallel-downloading&#34;&gt;&lt;strong&gt;parallel downloading&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disable hibernate: &lt;code&gt;powercfg /hibernate off&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;frp&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Software Install&lt;/h2&gt;
&lt;h3&gt;Executable&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HuoRong Security&lt;/li&gt;
&lt;li&gt;Synology Drive (with settings)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/insiders/&#34;&gt;Visual Studio Code Insiders&lt;/a&gt; (with settings)&lt;/li&gt;
&lt;li&gt;(Only for Matebook) Huawei PC Manager (with settings)&lt;/li&gt;
&lt;li&gt;Logi Options+ (with settings)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/PowerToys/releases&#34;&gt;Powertoys&lt;/a&gt; (with backup)&lt;/li&gt;
&lt;li&gt;Wechat (with settings)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub Desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Portable (Sync with Synology Drive)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;0_init&lt;/li&gt;
&lt;li&gt;Clash&lt;/li&gt;
&lt;li&gt;HiBitUninstaller&lt;/li&gt;
&lt;li&gt;Win10Apps&lt;/li&gt;
&lt;li&gt;DriverBooster&lt;/li&gt;
&lt;li&gt;Altsnap&lt;/li&gt;
&lt;li&gt;WPD&lt;/li&gt;
&lt;li&gt;Dism++&lt;/li&gt;
&lt;li&gt;HEU KMS Activator&lt;/li&gt;
&lt;li&gt;OInstall&lt;/li&gt;
&lt;li&gt;Snipaste&lt;/li&gt;
&lt;li&gt;PicGo&lt;/li&gt;
&lt;li&gt;Bamboo&lt;/li&gt;
&lt;li&gt;SumatraPDF&lt;/li&gt;
&lt;li&gt;JPEGView&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;li&gt;Peazip (with File associations and system menu integration)&lt;/li&gt;
&lt;li&gt;DeepL&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Microsoft Store&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(Only for Matebook) Intel® Graphics Command Center (Beta)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Software Uninstall&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Onedrive (by HiBit Uninstaller)&lt;/li&gt;
&lt;li&gt;Unnecessary Windows apps (by Win10Apps)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Personal_Onboarding_Workflow_%28Windows%29/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Personal_Onboarding_Workflow_%28Windows%29/</guid>
      
    </item>
    
    <item>
      <title>RSS - 高效率的阅读方式</title>
      
      
      
      
      <description>&lt;p&gt;RSS 的全称是「简易内容聚合」（Really Simple Syndication），是一个能让你在一个地方订阅各种感兴趣网站的工具。&lt;/p&gt;
&lt;p&gt;简单地说，当关注的作者在自己的平台（可以是博客、公众号、知乎等）写了一篇文章，RSS 就会将其推送给我阅读。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个网站支持 RSS，就意味着每当它新发布一篇新文章，就会往一个位于特定网址的文件中，以特定的语法（具体而言是 XML 标记语言或 JSON）增加一条记录，列明这篇文章的标题、作者、发表时间和内容（可以是全文，也可以是摘要）等信息。这样，用户只要搜集所有他感兴趣的网站提供的这种文件的网址，并不时检查这些文件内容的更新，就能知道这些网站是否、何时发布了什么内容。RSS 阅读器的核心功能，就是存储用户订阅的 RSS 地址，以固定的频率自动检查更新，并将其内容转换为易读的格式呈现给用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200225145439.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200225145502.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;为什么用 RSS&lt;/h2&gt;
&lt;h3&gt;1. 方便&lt;/h3&gt;
&lt;p&gt;当我关注的人变多了，我不必一一点开知乎、简书、甚至翻看博客去主动获取更新，而是在一个统一的终端内阅读。&lt;/p&gt;
&lt;h3&gt;2. 信息权&lt;/h3&gt;
&lt;p&gt;RSS 的对立面是算法推荐，像微信公众号、知乎、微博、今日头条等平台。 且不说算法推送平台广告多，迁移麻烦的问题。算法推荐的特点是，你不需要刻意选择，算法会根据你的喜好，给你推送内容。这样一来，你几乎没有选择的余地，在不断被「喂饱」中逐渐失去判断的能力。更可怕的地方在于，&lt;strong&gt;它替你定义了你的画像，然后把你潜移默化中变成了它所认为的你&lt;/strong&gt;。「大数据杀熟」的东窗事发绝非偶然，用算法窥视用户隐私是当今互联网公司的通配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;做信息的主人，而不是奴隶。&lt;/strong&gt;RSS 是一种公开的协议，可自由更换平台与客户端。重要的一点是，&lt;strong&gt;获取信息的权力完全自治&lt;/strong&gt;。RSS 相比算法推荐，拥有了可控性和安全感，隐私完全掌握在自己手里。&lt;/p&gt;
&lt;h3&gt;3. 去中心化&lt;/h3&gt;
&lt;p&gt;发布在需要备案的平台的文章（公众号、微博、知乎等），常常会因为涉敏而被删除。为了信息的自由流动，我们有必要采用去中心化的方式，即作者们自建的平台。而 RSS 会将分散的内容收集起来，并呈现给你阅读。&lt;/p&gt;
&lt;h2&gt;开始 RSS 阅读&lt;/h2&gt;
&lt;h3&gt;1. 获取内容的 RSS 源&lt;/h3&gt;
&lt;p&gt;以 Inoreader 为例，最简单的方法是，拷贝博客的地址，并粘贴进 Inoreader 的搜索框，一般可以直接订阅。&lt;/p&gt;
&lt;p&gt;判断一个网站是否有 RSS，如果打开就看到这个标识：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/rss.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;则可以直接点击此图标，并直接订阅 RSS 链接。&lt;br&gt;
如果没有标识呢？也可能是有 RSS 的，不过藏得比较深。&lt;/p&gt;
&lt;p&gt;这时候我们可以用一款叫 RSS+ 的浏览器插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先安装 &lt;a href=&#34;https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo&#34;&gt;油猴插件&lt;/a&gt; ，这里需要科学上网。&lt;/li&gt;
&lt;li&gt;再安装 &lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss&#34;&gt;RSS+ 脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;此时，如果网站有 RSS，可在右下角小圆圈里发现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而对无 RSS 的网站，可以自己制作 RSS，这里推荐几个工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://feed43.com/&#34;&gt;feed43&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rsshub.app/#%E5%BE%AE%E5%8D%9A&#34;&gt;RSSHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://feedocean.com/?lang=zh-CN&#34;&gt;FeedOcean&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上的工具，不仅可以订阅无 RSS 的博客，还能直接订阅知乎专栏、公众号、微博、贴吧等。具体方法参见文档。&lt;/p&gt;
&lt;h3&gt;2. 选择一个 RSS 阅读器&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Inoreader&lt;/strong&gt; 免费版基础功能完善，抓取时间大概 15 分钟，符合要求。有网页版、iOS（需要美区 App Store 账户）、Android 版本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reabble&lt;/strong&gt; 基于 Inoreader API ，为电子墨水屏阅读而生。建议升级收费版（年费 ¥21，免费版 7 篇文章 / 天，且不支持推送） 我设置每天 9 点定时推送新文章至 Kindle 阅读，也方便标注 &amp;amp; 导出书摘。 若想在电脑上阅读，也可以直接打开 &lt;a href=&#34;https://reabble.com&#34;&gt;reabble.com&lt;/a&gt; ，创建桌面快捷方式，界面比 Inoreader 简洁且无广告。&lt;/p&gt;
&lt;h2&gt;订阅一些有意思的源&lt;/h2&gt;
&lt;p&gt;注：RSS 并不适合订阅新闻类网站，刷新太快、内容繁琐反而导致阅读体验不佳。所以 RSS 更适合订阅&lt;strong&gt;高质量博客&lt;/strong&gt;之类的网站。订阅源并不是越多越好，应该小而精。过多的订阅源会引起「信息过载」，你会发现自己每天都收到数以百计的新资讯，却无暇阅读。&lt;/p&gt;
&lt;p&gt;我导出了自己的订阅源，可以参考一下： &lt;a href=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/doc/Blogs.opml&#34;&gt;&lt;strong&gt;我的订阅&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
你可以在 Inoreader 或其他 RSS 阅读器导入 &lt;code&gt;.opml&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;2023 年 4 月补充：搭建自托管 RSS 聚合器的方法：&lt;a href=&#34;https://wiki-power.com/Homelab-%E8%87%AA%E6%89%98%E7%AE%A1RSS%E8%81%9A%E5%90%88%E5%99%A8FreshRSS/&#34;&gt;&lt;strong&gt;Homelab - 自托管 RSS 聚合器 FreshRSS&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：RSS 阅读会不会被时代淘汰？&lt;br&gt;
A：读书这种方式也没有被时代淘汰。一个趋势是，凡是互联网平台，总是向群众「喜闻乐见」喜闻乐见的方向发展，直至内容变水，新的平台取而代之，像是知乎和豆瓣。而 RSS 不受平台兴衰的影响，除非有更好的协议出现，否则 RSS 不会被淘汰。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;引用「&lt;a href=&#34;https://sspai.com/user/701048/updates&#34;&gt;notajerk&lt;/a&gt;」的话结尾：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在网上获取信息时，可以中二一点把自己想象成古代听取群臣意见的帝王。对于皇帝来说，最危险和最不该做的事情就是暴露自己的喜好，这是被臣下蒙蔽乃至最后被夺权篡位的基础。英明的皇帝会保持内心的虚静无为（客观中立），坚持单独听取各方意见而不暴露自己的感想，并将各方意见与客观事实一一验证来确认各自的可信度。这也是几千年后每个人获取信息时应该坚守的原则。&lt;strong&gt;挑选信息来源也是最值得花时间的地方&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/34280&#34;&gt;使用 RSS 可以做什么你未曾想过的事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.wizos.me/20181022-258.html&#34;&gt;怎样查找一个网站的 RSS 地址？用 RSS + ！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.wizos.me/20180412-134.html&#34;&gt;RSS 工具大全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/buwuliao/p/8379549.html&#34;&gt;【RSS】我的 RSS 使用介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.douban.com/note/522518464/&#34;&gt;自制全文 RSS 汇总（附 推荐工具）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/43998&#34;&gt;论 RSS 的「复兴」&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/RSS-%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E9%98%85%E8%AF%BB%E6%96%B9%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/RSS-%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E9%98%85%E8%AF%BB%E6%96%B9%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>VS Code 生产力指南 - Jupyter Notebook</title>
      
      
      
      
      <description>&lt;p&gt;用 VS Code 打造高效率的生产力工具。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323155728.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Jupyter Notebook 是一个很强大的工具，它允许我们在一个文档环境内编写、运行代码、查看输出、将数据可视化并查看结果……总之，有了它，我们写含代码的文档就方便多了。&lt;/p&gt;
&lt;p&gt;在上一篇文章中，我们完成了 VS Code 基本环境的搭建。这篇文章我将对 Jupyter with VS Code 进行详细讲解。&lt;/p&gt;
&lt;h2&gt;环境配置&lt;/h2&gt;
&lt;p&gt;众所周知，Jupyter Notebooks 依赖 Python 环境。&lt;br&gt;
为了确认你是否拥有 Python 环境，在 VS Code 命令面板（&lt;code&gt;Ctrl + Shift + P&lt;/code&gt;）内键入 &lt;strong&gt;Python: Select Interpreter&lt;/strong&gt;，如果看到有可以选择的 Python 版本，那就没问题。&lt;/p&gt;
&lt;p&gt;如果没有 Python 环境，可以通过以下方法安装：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;strong&gt;Python 官网&lt;/strong&gt;&lt;/a&gt; 下载最新版本安装包（尽量选择 &lt;code&gt;web-based installer&lt;/code&gt; 版本）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置完本地 Python 环境后，我们还需要在 VS Code 内安装 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-python.python&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt; 插件。在近期的一次更新中，Jupyter Notebooks 已经被包含在这个插件内，不用再单独安装了。&lt;/p&gt;
&lt;h2&gt;创建笔记本&lt;/h2&gt;
&lt;p&gt;环境配置完成后，我们可以在 VS Code 命令面板（&lt;code&gt;Ctrl + Shift + P&lt;/code&gt;）输入 &lt;strong&gt;Python: Create Blank New Jupyter&lt;/strong&gt; 创建一个空白的 Jupyter 笔记本（&lt;code&gt;.ipynb&lt;/code&gt; 文件）。如下图简单测试一下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323153020.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，代码正常运行。&lt;/p&gt;
&lt;h2&gt;基本操作&lt;/h2&gt;
&lt;p&gt;Jupyter Notebook 使用 &lt;strong&gt;代码单元（code cells）&lt;/strong&gt; 的形式来创建、编辑和运行代码。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323153717.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;添加 code cells&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323153850.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;运行单个 code cell&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323153939.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;运行多个 code cells&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154005.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;移动 code cell&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154059.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;删除 code cell&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154148.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;在代码与 Markdown 之间切换&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154242.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;图表查看器&lt;/h3&gt;
&lt;p&gt;通过图表查看器，你可以轻松查看代码输出的图表，也可以将图标导出各种格式的图片：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154555.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;数据与变量查看器&lt;/h3&gt;
&lt;p&gt;变量的类型、数量与值可以通过变量查看器实时查看：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154758.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以通过数据查看器浏览更具体的数据：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200323154832.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/python/jupyter-support&#34;&gt;Working with Jupyter Notebooks in Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/85445777&#34;&gt;VS Code Python 全新发布！Jupyter Notebook 原生支持终于来了！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/VSCode%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8C%87%E5%8D%97-JupyterNotebook/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/VSCode%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8C%87%E5%8D%97-JupyterNotebook/</guid>
      
    </item>
    
    <item>
      <title>VS Code 生产力指南 - 环境配置</title>
      
      
      
      
      <description>&lt;p&gt;—— 如何用 VS Code 打造高效率的生产力工具。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200319135609.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;工欲善其事，必先利其器。创造是一件美好的事情，如有利器相辅，这个过程将会变得更加舒适。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;为什么选用 VS Code ?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;开源免费，颜值出众&lt;/li&gt;
&lt;li&gt;完善的编辑功能（自动补全、语法突出等）&lt;/li&gt;
&lt;li&gt;可直接在编辑器内调试代码&lt;/li&gt;
&lt;li&gt;集成 Git&lt;/li&gt;
&lt;li&gt;丰富的插件支持与自定义项&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;软件安装&lt;/h2&gt;
&lt;p&gt;你可以在 VS Code 官网下载最新的版本：&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一般我们选择下载 &lt;strong&gt;Stable&lt;/strong&gt; 版本。如果你不惧 bug，想体验最新的特性，也可以试试 &lt;strong&gt;Insiders&lt;/strong&gt; 版本。&lt;/p&gt;
&lt;p&gt;下载安装完成后，我们打开软件，首先看到的是启动页面：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200318224855.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;插件安装&lt;/h2&gt;
&lt;p&gt;为了精简体积，VS Code 仅保留一些最基础的功能。但如果想提高效率，这些功能是远远不够的。&lt;br&gt;
好在 VS Code 有各式各样的第三方插件加成，可以真正做到按需取用。&lt;/p&gt;
&lt;p&gt;下面推荐一些好用的插件（可直接点击链接安装）：&lt;/p&gt;
&lt;h3&gt;基本&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans&#34;&gt;&lt;strong&gt;Chinese (Simplified) Language Pack&lt;/strong&gt;&lt;/a&gt;：汉化 VS Code&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync&#34;&gt;&lt;strong&gt;Settings Sync&lt;/strong&gt;&lt;/a&gt;：备份设置项和插件，多设备同步&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置项&lt;/strong&gt;：配置相应的 &lt;code&gt;GitHub Gist ID&lt;/code&gt; 和 &lt;code&gt;GitHub Access Token&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用法&lt;/strong&gt;：&lt;code&gt;Shift + Alt + U&lt;/code&gt; 上传，&lt;code&gt;Shift + Alt + D&lt;/code&gt; 下载&lt;/li&gt;
&lt;li&gt;（最新版本 VS Code 已自带同步功能，但如果需要版本管理还是可以用这个插件）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Markdown&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&#34;&gt;&lt;strong&gt;Markdown All in One&lt;/strong&gt;&lt;/a&gt;：提供更强大的 Markdown 语法支持&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=onesdev.vscode-paste-image-plus&#34;&gt;&lt;strong&gt;Markdown Paste Image&lt;/strong&gt;&lt;/a&gt;：将图片粘贴到 Markdown，并拷贝至 /res 文件夹内&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=xlthu.Pangu-Markdown&#34;&gt;&lt;strong&gt;Pangu-Markdown&lt;/strong&gt;&lt;/a&gt;：规范 Markdown 格式（中英文间加空格、替换规范标点等）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置项&lt;/strong&gt;：启用保存时自动格式化&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=DougFinke.vscode-pandoc&#34;&gt;&lt;strong&gt;vscode-pandoc&lt;/strong&gt;&lt;/a&gt;：增加 Pandoc 支持，将 Markdown 导出为 PDF/Word/HTML 等格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置项&lt;/strong&gt;：确保 &lt;a href=&#34;https://pandoc.org/installing.html&#34;&gt;Pandoc&lt;/a&gt; 已经安装&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;美化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=SirTori.indenticator&#34;&gt;&lt;strong&gt;Indenticator&lt;/strong&gt;&lt;/a&gt;：高亮代码缩进深度&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons&#34;&gt;&lt;strong&gt;vscode-icons&lt;/strong&gt;&lt;/a&gt;：为不同的文件格式添加好看的图标&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;编程语言&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools&#34;&gt;&lt;strong&gt;C/C++&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-python.python&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;前端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&#34;&gt;&lt;strong&gt;Prettier - Code formatter&lt;/strong&gt;&lt;/a&gt;：HTML/CSS/JavaScript 等前端语言自动格式化工具&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用法&lt;/strong&gt;：&lt;code&gt;Ctrl + Shift + P&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=RoyAction.color-manager&#34;&gt;&lt;strong&gt;Color Manager&lt;/strong&gt;&lt;/a&gt;：直接预览色值对应的颜色&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&#34;&gt;&lt;strong&gt;Live Server&lt;/strong&gt;&lt;/a&gt;：在 VS Code 内运行本地网页&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=hancel.google-translate&#34;&gt;&lt;strong&gt;Google Translate&lt;/strong&gt;&lt;/a&gt;：在 VS Code 内提供翻译&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用法&lt;/strong&gt;：&lt;code&gt;Ctrl + Alt + T&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=McCarter.start-git-bash&#34;&gt;&lt;strong&gt;Start git-bash&lt;/strong&gt;&lt;/a&gt;：将 &lt;code&gt;bash&lt;/code&gt; 添加至 VS Code 的终端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=andi1984.tinypng&#34;&gt;&lt;strong&gt;TinyPNG&lt;/strong&gt;&lt;/a&gt;：压缩图片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置项&lt;/strong&gt;：设置正确的 &lt;code&gt;TinyPNG API Key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用法&lt;/strong&gt;：右键文件树内的图片 - &lt;code&gt;TinyPNG:Compress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=YRM.zhihu&#34;&gt;&lt;strong&gt;Zhihu Daily&lt;/strong&gt;&lt;/a&gt;：摸鱼必备，在 VS Code 内刷知乎日报&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=sakura1357.cxk&#34;&gt;&lt;strong&gt;坤坤鼓励师&lt;/strong&gt;&lt;/a&gt;：连续打代码一小时，会有蔡徐坤专属篮球舞提醒你休息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;主题&lt;/h2&gt;
&lt;p&gt;你可以通过 &lt;code&gt;文件 - 首选项 - 颜色主题&lt;/code&gt; 来选择自己喜欢的主题，例如我选的是 &lt;code&gt;Monokai Dimmed&lt;/code&gt; 主题：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200319132727.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你觉得默认提供的主题不够用，也可以在插件商店内，用关键词 &lt;code&gt;theme&lt;/code&gt; 搜索并下载自己喜欢的主题。&lt;/p&gt;
&lt;h2&gt;常用设置&lt;/h2&gt;
&lt;p&gt;初次使用，可以修改一些常用的设置，使 VS Code 用起来更加顺手。
通过 &lt;code&gt;文件 - 首选项 - 设置&lt;/code&gt; 即可打开设置页面。&lt;/p&gt;
&lt;h3&gt;自动保存&lt;/h3&gt;
&lt;p&gt;可将 &lt;code&gt;Files: Auto Save&lt;/code&gt; 设置为除 &lt;code&gt;off&lt;/code&gt; 外其他 3 个选项。日常使用，自动保存还是很有必要的。&lt;/p&gt;
&lt;h3&gt;字体&lt;/h3&gt;
&lt;p&gt;等宽字体是写代码的必备，我个人推荐 &lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software-development/Microsoft-YaHei-Mono.ttf&#34;&gt;&lt;strong&gt;雅黑等宽 (Microsoft YaHei Mono)&lt;/strong&gt;&lt;/a&gt; 字体。&lt;/p&gt;
&lt;p&gt;下载 .ttf 字体文件后安装，重启 VS Code，并在 &lt;code&gt;设置 - 文本编辑器 - 字体 - Font Family&lt;/code&gt; 选项中将 &lt;code&gt;&#39;Microsoft YaHei Mono&#39;&lt;/code&gt; 添加至头部，即可启用字体。&lt;/p&gt;
&lt;h2&gt;常用快捷键&lt;/h2&gt;
&lt;p&gt;|     操作     |           快捷键           |
| :----------: | :------------------------: |
|   命令面板   | &lt;code&gt;F1&lt;/code&gt; 或 &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; |
|     终端     | &lt;code&gt;Ctrl + &amp;#96;&lt;/code&gt;  |
|  资源管理器  |     &lt;code&gt;Ctrl + Shift + E&lt;/code&gt;     |
|   全局搜索   |     &lt;code&gt;Ctrl + Shift + F&lt;/code&gt;     |
| 源代码管理器 |     &lt;code&gt;Ctrl + Shift + G&lt;/code&gt;     |
|     运行     |     &lt;code&gt;Ctrl + Shift + D&lt;/code&gt;     |
|   插件管理   |     &lt;code&gt;Ctrl + Shift + X&lt;/code&gt;     |
| 快速切换文件 |         &lt;code&gt;Ctrl + D&lt;/code&gt;         |&lt;/p&gt;
&lt;h2&gt;源代码控制&lt;/h2&gt;
&lt;p&gt;提交 Github 每次都需要输入用户名及密码？
输入命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git config --global credential.helper store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;重启 VS Code 即可。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;以上为 VS Code 基本的环境配置，下一篇将详细讨论 Git，Jupyter NoteBook 及用户代码片段等操作方法，敬请期待。&lt;/p&gt;
&lt;h3&gt;参考链接&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs&#34;&gt;Docs · Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/28631442&#34;&gt;为什么我选择使用 VS Code 进行前端开发？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/8854713433c5&#34;&gt;vscode git 提交总让输入用户名及密码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/a87e9ca2d208&#34;&gt;Vscode 编辑 markdown 代码块（snippets）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.walterlv.com/post/add-custom-code-snippet-for-vscode.html##%E5%85%B3%E4%BA%8E%E6%96%87%E4%BB%B6%E5%90%8D%E7%A7%B0&#34;&gt;在 Visual Studio Code 中添加自定义的代码片段&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/VSCode%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8C%87%E5%8D%97-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/VSCode%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8C%87%E5%8D%97-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      
    </item>
    
    <item>
      <title>Windows 初始化与软件推荐（旧）</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210117142759.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更新的文章请见 &lt;a href=&#34;https://wiki-power.com/Personal_Onboarding_Workflow_%28Windows%29/&#34;&gt;&lt;strong&gt;Personal Onboarding Workflow (Windows)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你刚刚刷了一个 Windows 系统，有哪些设置项和软件是必须的呢？&lt;/p&gt;
&lt;h2&gt;一些个人设置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;不使用微软账户初始化&lt;/li&gt;
&lt;li&gt;开启诊断（预览版系统需要）&lt;/li&gt;
&lt;li&gt;重命名电脑名称&lt;/li&gt;
&lt;li&gt;设置 - 更新和安全 - 开发者选项 - 开启开发人员模式&lt;/li&gt;
&lt;li&gt;预览版模式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bobi.site/archives/875&#34;&gt;&lt;strong&gt;卓越性能&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装 Synology Drive Client&lt;/li&gt;
&lt;li&gt;安装 &lt;a href=&#34;https://www.huorong.cn/&#34;&gt;&lt;strong&gt;火绒安全&lt;/strong&gt;&lt;/a&gt;（防止 Windows Defender 误删文件）&lt;/li&gt;
&lt;li&gt;登录 Microsoft 账户&lt;/li&gt;
&lt;li&gt;激活 Windows：&lt;a href=&#34;https://github.com/zbezj/HEU_KMS_Activator&#34;&gt;&lt;strong&gt;HEU_KMS_Activator&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;更新系统、驱动&lt;/li&gt;
&lt;li&gt;配置浏览器（Edge Canary）&lt;/li&gt;
&lt;li&gt;拓展&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/%E5%BC%80%E5%90%AFChrome%EF%BC%88Edge%EF%BC%89%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD&#34;&gt;&lt;strong&gt;开启 Chrome（Edge）多线程下载&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用户账户控制设置：设为从不通知&lt;/li&gt;
&lt;li&gt;定制任务栏&lt;/li&gt;
&lt;li&gt;配置个性化设置&lt;/li&gt;
&lt;li&gt;配置显示设置&lt;/li&gt;
&lt;li&gt;配置剪切板历史记录及同步&lt;/li&gt;
&lt;li&gt;配置鼠标触摸板键盘等&lt;/li&gt;
&lt;li&gt;启动隐藏设置：&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/GodMode.lnk&#34;&gt;GodMode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;关闭休眠：&lt;code&gt;powercfg /hibernate off&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/amoscn/article/details/106224359&#34;&gt;&lt;strong&gt;解决英文环境下的中文字体显示问题&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;安装软件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;工作软件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/?dv=win64&amp;amp;build=insiders&#34;&gt;&lt;strong&gt;VS Code insiders&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Setting Sync&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.logitech.com.cn/zh-cn/product/options&#34;&gt;&lt;strong&gt;Logitech Options&lt;/strong&gt;&lt;/a&gt;：罗技鼠标专用（自动弹出下载安装）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/zh-cn/p/python-39/9p7qfqmjrfp7?rtc=1&amp;amp;activetab=pivot:overviewtab&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dldir1.qq.com/weixin/Windows/Beta/WeChatBeta.exe&#34;&gt;&lt;strong&gt;微信（测试版）&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/zh-cn/p/app-installer/9nblggh4nns1?ocid=9nblggh4nns1_ORSEARCH_Bing&amp;amp;rtc=2&amp;amp;activetab=pivot:overviewtab&#34;&gt;winget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Powertoys:&lt;code&gt;WinGet install powertoys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software/QQ%209.4.2.27666%20Lite-20210118%20by%20flighty-Q.exe&#34;&gt;&lt;strong&gt;修改版 QQ&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.diskgenius.cn/download.php&#34;&gt;&lt;strong&gt;DiskDenius&lt;/strong&gt;&lt;/a&gt;：磁盘工具&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;预留 10 GB 空闲（SSD）&lt;/li&gt;
&lt;li&gt;NTFS，4096 扇区（4k 对齐）&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/KMS.exe&#34;&gt;&lt;strong&gt;KMS&lt;/strong&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;激活 Windows（已失效）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭 Windows Defender&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://desktop.github.com&#34;&gt;&lt;strong&gt;GitHub Desktop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/Win10Apps.exe&#34;&gt;&lt;strong&gt;Win10Apps&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/geekuninstaller.exe&#34;&gt;&lt;strong&gt;Geek Uninstaller&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/Bandizip.exe&#34;&gt;&lt;strong&gt;Bandizip&lt;/strong&gt;&lt;/a&gt;：无广告版本&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chuyu.me/zh-Hans/&#34;&gt;&lt;strong&gt;Dism++&lt;/strong&gt;&lt;/a&gt;：系统工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/JPEGView64.zip&#34;&gt;&lt;strong&gt;JPEGView&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kbtool.cn/down.php&#34;&gt;&lt;strong&gt;卡硬工具箱&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/henrypp/memreduct/releases&#34;&gt;&lt;strong&gt;Mem Reduct&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/OInstall.exe&#34;&gt;&lt;strong&gt;OInstall&lt;/strong&gt;&lt;/a&gt;：Office 工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/PowerToys/releases/&#34;&gt;&lt;strong&gt;PowerToys&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.snipaste.com/download.html&#34;&gt;&lt;strong&gt;Snipaste&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/SpaceSniffer.exe&#34;&gt;&lt;strong&gt;SpaceSniffer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sumatrapdfreader.org/download-free-pdf-viewer.html&#34;&gt;&lt;strong&gt;Sumatra PDF&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://daumpotplayer.com/download/&#34;&gt;&lt;strong&gt;PotPlayer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.4&#34;&gt;&lt;strong&gt;PicGo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://christopherwk210.github.io/bamboo/&#34;&gt;&lt;strong&gt;Bamboo&lt;/strong&gt;&lt;/a&gt;：基于 TinyPNG 的图像压缩软件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pm.myapp.com/invc/xfspeed/qqpcmgr/data/DeskGo_2_9_1051_127_lite.exe&#34;&gt;&lt;strong&gt;DeskGo&lt;/strong&gt;&lt;/a&gt;：桌面整理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software/Wise%20Driver%20Care.zip&#34;&gt;&lt;strong&gt;Wise Driver Care&lt;/strong&gt;&lt;/a&gt;：驱动安装管理工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.neatdownloadmanager.com/index.php/en/&#34;&gt;&lt;strong&gt;NDM&lt;/strong&gt;&lt;/a&gt;：下载器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/AltDrag.exe&#34;&gt;&lt;strong&gt;AltDrag&lt;/strong&gt;&lt;/a&gt;：窗口拖动 / 缩放 / 更改透明度小工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software/raidrive-2020-6-80.exe&#34;&gt;&lt;strong&gt;Raidrive&lt;/strong&gt;&lt;/a&gt;：挂载远程硬盘的工具（无广告版），我通过 WebDAV 挂载 NAS 为本地磁盘。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;选装软件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/7z.exe&#34;&gt;&lt;strong&gt;7-Zip&lt;/strong&gt;&lt;/a&gt;：压缩率高&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wpspro.support.wps.cn/gov/guangdong/chaozhou/installation/WPS%20Office%202019%20%E4%B8%93%E4%B8%9A%E7%89%88%EF%BC%88%E6%BD%AE%E5%B7%9E%E5%B8%82%E5%85%9A%E6%94%BF%E6%9C%BA%E5%85%B3%E5%8D%95%E4%BD%8D%EF%BC%89.exe&#34;&gt;&lt;strong&gt;WPS 特供版&lt;/strong&gt;&lt;/a&gt;：清爽无广告&lt;/li&gt;
&lt;li&gt;备用链接：https://pan.baidu.com/s/1d_DVwbLScESe1Zh7um6YTA&lt;/li&gt;
&lt;li&gt;提取码：&lt;code&gt;y1xe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/SoftDownloader.zip&#34;&gt;&lt;strong&gt;SoftDownloader&lt;/strong&gt;&lt;/a&gt;：能找到绝大部分的软件，一键安装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/OfficeBox.zip&#34;&gt;&lt;strong&gt;万彩办公大师&lt;/strong&gt;&lt;/a&gt;：各类办公相关的小工具，很强大&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/IObit_Unlocker.exe&#34;&gt;&lt;strong&gt;IObit Unlocker&lt;/strong&gt;&lt;/a&gt;：文件占用解锁工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/EmptyFolderNuker.exe&#34;&gt;&lt;strong&gt;EmptyFolderNuker&lt;/strong&gt;&lt;/a&gt;：检测并删除空文件夹的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Windows%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8E%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90%EF%BC%88%E6%97%A7%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/Windows%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8E%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90%EF%BC%88%E6%97%A7%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>个人文案排版规范</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。 —— &lt;a href=&#34;https://github.com/vinta/pangu.js&#34;&gt;&lt;strong&gt;vinta/paranoid-auto-spacing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为何要讲究排版规范？良好的文案排版，能降低理解难度，增强内容的可读性，极大提升用户的阅读体验。&lt;/p&gt;
&lt;h2&gt;具体格式要求&lt;/h2&gt;
&lt;h3&gt;段落&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;首行无需空格缩进，段与段之间空一行。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;空格&lt;/h3&gt;
&lt;p&gt;以下是需要添加空格的场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;中文与英文、数字之间：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;错误：&lt;code&gt;这里是一个Wiki站点，建立于2015年一个炎热的夏天&lt;/code&gt;
正确：&lt;code&gt;这里是一个 Wiki 站点，建立于 2015 年一个炎热的夏天&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字与单位之间：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;错误：其频率为 72MHz，占空比为 50 %&lt;br&gt;
正确：其频率为 72 MHz，占空比为 50%。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;普通与特殊字符（链接、加粗、斜体等）之间：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;这个 &lt;strong&gt;字体&lt;/strong&gt; 使用了加粗样式&lt;br&gt;
请 &lt;strong&gt;&lt;a href=&#34;https://wiki.wildwolf.pw/&#34;&gt;点击这里&lt;/a&gt;&lt;/strong&gt; 进行订阅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;英文半角标点之后：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;Hello, world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中文与破折号之间：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown- 一种高效的写作方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不添加空格的场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数字与特殊单位：&lt;/strong&gt; &lt;code&gt;%&lt;/code&gt; &lt;code&gt;℃&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;文本样式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;中英文混排时，使用中文全角标点&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中英文混排中，如果出现整句英文，则此句内使用英文半角标点&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行内链接一般使用加粗，以提高阅读性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用无序列表代替有序列表&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用准确的专有名词：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;错误：使用 github 登录&lt;br&gt;
正确：使用 GitHub 登录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中文使用直角引号，代替普通引号：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;错误：华广机器人队，也称为“野狼队”
正确：华广机器人队，也称为「野狼队」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特殊单位可直接使用：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;℃&lt;/code&gt; &lt;code&gt;Ω&lt;/code&gt; 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不重复使用标点以强调：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;写作风格&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如无必要，勿增实体。&lt;/li&gt;
&lt;li&gt;避免使用长句，尽量拆分为多个简单句。&lt;/li&gt;
&lt;li&gt;论点要有论据支持，避免只说理不举例。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;网站相关&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;固定链接。&lt;/strong&gt;因为文章可能会以链接的形式被他人引用，如果文章链接变更，可能会跳转只 404 页面，从而制造障碍。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;减少链接层级。&lt;/strong&gt;对个人 Wiki 站点来说，推荐域名的样式为 &lt;code&gt;xxx.com/文章名&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xitu/gold-miner/wiki/%E8%AF%91%E6%96%87%E6%8E%92%E7%89%88%E8%A7%84%E5%88%99%E6%8C%87%E5%8C%97&#34;&gt;译文排版规则指北&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.leancloud.cn/copywriting-style-guide/&#34;&gt;文案风格指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vinta/pangu.js&#34;&gt;為什麼你們就是不能加個空格呢？・vinta/pangu.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruanyf/document-style-guide&#34;&gt;中文技术文档的写作规范・ruanyf/document-style-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.leancloud.cn/improve-chinese/&#34;&gt;余光中：怎样改进英式中文？- 论中文的常态与变态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/37815&#34;&gt;少数派写作排版指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/58f12ia2iFRTOXJitQIO2w&#34;&gt;阿里设计师出品！B 端产品文案指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/</guid>
      
    </item>
    
    <item>
      <title>个人知识库的搭建 - 基于 Docusaurus</title>
      
      
      
      
      <description>&lt;p&gt;续上一篇文章 &lt;a href=&#34;https://wiki-power.com/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E7%9F%A5%E8%AF%86%E5%BA%93&#34;&gt;&lt;strong&gt;为什么你需要一个知识库&lt;/strong&gt;&lt;/a&gt;，本篇文章将基于 Docusaurus 框架，对知识库的搭建展开详细讲解。&lt;/p&gt;
&lt;p&gt;在本文开始之前，请先确保你准备就绪：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;科学上网的条件&lt;/li&gt;
&lt;li&gt;随机应变的能力&lt;/li&gt;
&lt;li&gt;一点儿英语基础&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置本地环境&lt;/h2&gt;
&lt;h3&gt;安装 Node.js&lt;/h3&gt;
&lt;p&gt;访问 &lt;a href=&#34;https://nodejs.org/zh-cn/&#34;&gt;&lt;strong&gt;Node.js 官网&lt;/strong&gt;&lt;/a&gt;，下载并安装 Node.js。&lt;/p&gt;
&lt;h3&gt;VS Code 的安装配置&lt;/h3&gt;
&lt;p&gt;我们用 VS Code 作为本地编辑器，用于修改网站框架、编写文章。&lt;/p&gt;
&lt;p&gt;首先，到 &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;&lt;strong&gt;VS Code 官网&lt;/strong&gt;&lt;/a&gt; 下载安装 VS Code。&lt;/p&gt;
&lt;p&gt;软件安装完成后，我们可以选装以下两个插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans&#34;&gt;&lt;strong&gt;Chinese (Simplified) Language Pack&lt;/strong&gt;&lt;/a&gt;：汉化 VS Code 界面&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&#34;&gt;&lt;strong&gt;Markdown All in One&lt;/strong&gt;&lt;/a&gt;：提供更多 Markdown 语法支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装插件后，可能需要按提示重启 VS Code。&lt;/p&gt;
&lt;p&gt;更加详细的配置说明可以参考 &lt;a href=&#34;https://wiki-power.com/VSCode%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8C%87%E5%8D%97-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;VS Code 生产力指南 - 环境配置&lt;/strong&gt;&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h3&gt;安装 Docusaurus 框架&lt;/h3&gt;
&lt;p&gt;切换到需要建立网站项目的目录。&lt;/p&gt;
&lt;p&gt;例如：我想要在电脑的 D 盘下建立一个名为 &lt;code&gt;wiki&lt;/code&gt; 的文件夹，作为这个知识库项目。那么请在 VS Code 内选择 &lt;code&gt;文件&lt;/code&gt; - &lt;code&gt;打开文件夹&lt;/code&gt;，点击 D 盘，并点击 &lt;code&gt;选择文件夹&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 npx 初始化网站：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
npx @docusaurus/init@latest init [name] [template]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如，如果我的网站项目文件夹的名字为 &lt;code&gt;wiki&lt;/code&gt;，那就用 &lt;code&gt;wiki&lt;/code&gt; 替换掉 &lt;code&gt;[name]&lt;/code&gt;，而根据 &lt;a href=&#34;https://v2.docusaurus.io/docs/installation#scaffold-project-website&#34;&gt;&lt;strong&gt;官方文档&lt;/strong&gt;&lt;/a&gt;， &lt;code&gt;[template]&lt;/code&gt; 指的是网站模板的主题，这里我们将其替换为 &lt;code&gt;classic&lt;/code&gt; 即可。所以此处我们执行的命令为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
npx @docusaurus/init@latest init wiki classic&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们在 VS Code 内使用快捷键 &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;`&lt;/code&gt; 打开终端，把上面的那行代码粘贴进来并敲击回车，耐心等待加载完成。&lt;/p&gt;
&lt;p&gt;当加载完成后，我们在终端内使用命令切换到网站文件夹目录：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
cd [name]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;[name]&lt;/code&gt; 替换为你网站项目文件夹的名字，例如在上一步我们使用的是 &lt;code&gt;wiki&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;接着，执行以下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
npm run start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行网站的本地部署。等待部署进度完成后，它会自动在浏览器打开 &lt;a href=&#34;localhost:3000&#34;&gt;&lt;strong&gt;localhost:3000&lt;/strong&gt;&lt;/a&gt; 页面，如果一切顺利，你可以看到网站已经成功生成。&lt;/p&gt;
&lt;h2&gt;将网站部署至云端&lt;/h2&gt;
&lt;p&gt;上一个步骤，我们成功生成了网站，但它只是被部署在了本地，从互联网上是无法访问到这个站点的。我们需要将网站部署至云服务器，让别的用户也可以从互联网任意访问。&lt;/p&gt;
&lt;h3&gt;注册 GitHub 账户&lt;/h3&gt;
&lt;p&gt;在 &lt;a href=&#34;https://github.com/join&#34;&gt;&lt;strong&gt;GitHub 官网&lt;/strong&gt;&lt;/a&gt; 注册 GitHub 账户。&lt;/p&gt;
&lt;h3&gt;安装 Git&lt;/h3&gt;
&lt;p&gt;我们从 &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;strong&gt;Git 官网&lt;/strong&gt;&lt;/a&gt; 下载 Git 软件，并完成安装。&lt;/p&gt;
&lt;p&gt;重启 VS Code，召出终端，粘贴以下的命令初始化 Git：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git config --global user.name &#34;username&#34;
git config --global user.email &#34;email@example.com&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此处需要把 &lt;code&gt;&#34;username&#34;&lt;/code&gt; 替换为你的 Git 提交用户名，推荐与刚刚在 GitHub 注册的账户名一致，例如我将其替换为 &lt;code&gt;linyuxuanlin&lt;/code&gt;。&lt;code&gt;&#34;email@example.com&#34;&lt;/code&gt; 同理，替换为 GitHub 注册的邮箱即可。&lt;/p&gt;
&lt;p&gt;更加详细的配置说明可以参考 &lt;a href=&#34;https://wiki-power.com/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0&#34;&gt;&lt;strong&gt;Git 学习笔记&lt;/strong&gt;&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h3&gt;在 VS Code 内配置项目仓库&lt;/h3&gt;
&lt;p&gt;为了接下来能推送到 GitHub 服务器上，我们需要在 VS Code 内配置项目 Git 仓库，并上传到 GitHub 上。&lt;/p&gt;
&lt;p&gt;在 VS Code 内使用快捷键 &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;G&lt;/code&gt; 切换到源代码管理界面，初始化项目 Git 仓库，并作出首次提交。&lt;/p&gt;
&lt;p&gt;随后，使用快捷键 &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;S&lt;/code&gt; 将本地 Git 仓库推送到 GitHub（按提示登录 GitHub 账户即可）。&lt;/p&gt;
&lt;h3&gt;使用 Vercel 云端部署网站&lt;/h3&gt;
&lt;p&gt;此处 Vercel 的功能，相当于 GitHub Action + GitHub Pages，即自动持续部署 + 静态网站展示。选择 Vercel 是因为其生成的静态网站，国内访问速度相比 GitHub Pages 会快很多。&lt;/p&gt;
&lt;p&gt;首先，直接访问 &lt;a href=&#34;https://github.com/login?client_id=Iv1.9d7d662ea00b8481&amp;amp;return_to=%2Flogin%2Foauth%2Fauthorize%3Fclient_id%3DIv1.9d7d662ea00b8481%26scope%3Dread%253Auser%252Cuser%253Aemail%26state%3DFdx6thivZ89LeAihPfRiiYf9&#34;&gt;&lt;strong&gt;Vercel 的 GitHub 登录页面&lt;/strong&gt;&lt;/a&gt; ，使用 GitHub 账户注册 Vercel 账户。&lt;/p&gt;
&lt;p&gt;完成之后，点击网页上的 &lt;code&gt;New Project&lt;/code&gt;，导入 GitHub 响应的仓库（例如我们之前建立的 &lt;code&gt;wiki&lt;/code&gt; 仓库），此处可能需要根据提示，再进行一次 GitHub 的登录。导入之后，一路点击 &lt;code&gt;Next&lt;/code&gt; 继续，很快网站就能部署成功了。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;这篇文章我们实现了基于 Docusaurus 的知识库的本地和云端部署。本文的过程中如果遇到问题，可以联系我 &lt;a href=&#34;https://wiki-power.com/WeChat&#34;&gt;&lt;strong&gt;微信&lt;/strong&gt;&lt;/a&gt; 反馈。在下一篇文章【待更新】中，我将对个性化的配置做详细的讲解。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://v2.docusaurus.io/docs/&#34;&gt;Docs·Docusaurus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA-%E5%9F%BA%E4%BA%8EDocusaurus/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA-%E5%9F%BA%E4%BA%8EDocusaurus/</guid>
      
    </item>
    
    <item>
      <title>为什么你需要一个知识库</title>
      
      
      
      
      <description>&lt;p&gt;从 2015 年起，我开始尝试搭建个人网站。时至今日，在经历了各种平台的变迁之后，我在 &lt;a href=&#34;https://wiki-power.com/&#34;&gt;&lt;strong&gt;Power&#39;s Wiki&lt;/strong&gt;&lt;/a&gt; 上搭建了个人知识库，在此记录与分享知识。接下来，我将围绕本文主题展开详细阐述。&lt;/p&gt;
&lt;h2&gt;为什么你需要一个知识库？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;知识需要归档沉淀&lt;/strong&gt;。我们平时学习积累的知识，如果不及时进行整理归纳，很快就会忘记。合理的分类归档，既有利于日后检索与参考，又能避免在同一个地方踩坑。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用输出倒逼输入&lt;/strong&gt;。若想快速掌握一门知识，最好的方法，就是用自己的话复述给别人听。如果你把能知识清晰地描述出来，那么你才算掌握它。有了持续的输出，当你不能清晰地描述知识时，就会通过主动学习来补充。从另一个方面来讲，这也促进了我们不断去进行阅读和输入。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;赛博空间的桃源&lt;/strong&gt;。在这一片自留地上，你可以避开主流互联网上的纷争（特指某些乌烟瘴气的言论）。我常把个人知识库当作世外桃源一样的存在，这是一个可以静下心来耕耘的地方。&lt;/p&gt;
&lt;h2&gt;为什么知识库要公开？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;更加精致化的输出和整理&lt;/strong&gt;。如果选择知识库不公开，那么要求就变低了。我们对知识的归纳整理，可能会慢慢变得随意，不会很注重规范和可阅读性。久而久之，知识库会慢慢变成草稿箱，甚至可能看不懂自己先前写了些什么。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分享让思想碰撞&lt;/strong&gt;。知识需要分享，在碰撞中可能出现新的火花。当别人遇到一样的问题时，也可以直接发自己写过的教程，这样既方便又酷。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提升个人品牌，遇见志同道合的人&lt;/strong&gt;。持续维护一个知识库，你会收获志同道合的读者和朋友。也许他们也对摄影、编程、搞电路、造机器人、读书等等感兴趣，也在经营着一个知识库或博客。另外，把知识库链接挂在各种社交平台首页或简历上，是绝对是可以展现个人实力的。&lt;/p&gt;
&lt;h2&gt;为什么选择自建知识库？&lt;/h2&gt;
&lt;p&gt;自建知识库的相对面，是在第三方平台上写作。第三方平台，指的是语雀、知乎、简书、公众号、CSDN 这一类平台。在这一类平台上，你不用去管底层是如何构建、基础功能怎么实现、文章图片如何存放、如何部署站点更新文章、如何去做 SEO 等等，你只需要写下文字，剩下的全部由平台帮你实现。简而言之，可以傻瓜式地写作，且平台附加巨大的流量。既然如此方便，为什么我们还是提倡自建知识库呢？&lt;/p&gt;
&lt;p&gt;首先，是 &lt;strong&gt;数据安全&lt;/strong&gt; 问题。你在第三方平台上留下的文字，所有权并不归属与你。&lt;/p&gt;
&lt;p&gt;互联网发展到现今这个阶段，大多数平台都在筑墙。他们会接受数据导入，但你若想批量迁出数据，他们会设置障碍。另外，很多平台会阻止外链，其本意是留住用户、阻止流量流向别的平台，但这非常不利于知识的交流和碰撞。&lt;/p&gt;
&lt;p&gt;特别提及微信公众号，截至目前，发出去的文章最多也只能删改 20 个字符。而我们都知道，很多知识并不是一成不变的，是要不断更新的，这就很不利于知识的迭代更新。&lt;/p&gt;
&lt;p&gt;将数据完全托付给平台，是非常不保险的行为。当你的文章内出现了相对敏感的内容，或是对平台的负面言论，他们常用的手段是封禁和要求删改。假若平台的服务器遭受黑客攻击，或者平台某天倒闭了，他们也没有义务恢复并归还你的数据。说到底，托付给平台，你对自己的数据没有完全掌控的权利。&lt;/p&gt;
&lt;p&gt;其次，是 &lt;strong&gt;可定制性&lt;/strong&gt; 的问题。你选择了平台，就必须接受它的样式和 UI，有时候还得忍受文章边角的各种牛皮藓广告。相比之下，自建平台，UI 可完全自定义。清爽简洁的版面，对阅读体验的提升无疑是巨大的。&lt;/p&gt;
&lt;p&gt;说到底，第三方与自建的关系，就像租房子与买房子的关系。选择租房子，你可以付出更少，入住更方便，可以在有限制的自由里装饰你租来的屋子。但是你所拥有的，是使用权而不是所有权；而买来的房子，你可以随意更换装修风格，可以随意在房间里堆放你想要的东西，你对其拥有所有权。&lt;/p&gt;
&lt;h2&gt;为什么要知识库而不是文章流？&lt;/h2&gt;
&lt;p&gt;文章流指的是博客、公众号及大部分平台的形式，即主要以时间线来归档文章。相对地，知识库（Wiki）的形式，主要是以类别来收纳文章，就像是在翻阅一本档案，更利于检索和分类阅读。&lt;/p&gt;
&lt;p&gt;为什么要知识库而不是文章流呢？首先，一些琐碎但不可或缺的知识，并不适合单独成文、长篇大论。如果是以文章流的形式，其权重和其他文章是相同的，这样会冲淡整个站点的文章纯度。但是，体系化的文章，又是从这些零散的知识生长而来的。相对而言，以知识库的形式作为载体，以类别形式来做区分，就很合适了。&lt;/p&gt;
&lt;p&gt;另一方面，我之前在 &lt;a href=&#34;https://wiki-power.com/%E5%8D%A1%E7%89%87%E5%BC%8F%E5%86%99%E4%BD%9C&#34;&gt;&lt;strong&gt;卡片式写作&lt;/strong&gt;&lt;/a&gt; 这篇文章中曾经提及，每一份的基础知识，相当于一张小卡片，一层一层往上抽象，不同的顶层文章可以调用相同的底层卡片，既提高知识的复用率，也减少做重复的无用功。&lt;/p&gt;
&lt;h2&gt;工具的选择&lt;/h2&gt;
&lt;p&gt;至于知识库的选型，个人看重的主要是以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基础功能&lt;/strong&gt;：侧边栏可显示文章标题及其归属类别，主版面显示文章内容，内容支持 Markdown 语法，内容与框架相互独立。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;搜索功能&lt;/strong&gt;：搜索功能是类别归档的补充，有时候以大类别查找一个特定的知识点并不方便，但有了全站搜索就能直接传送到点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目开源&lt;/strong&gt;：知识库的平台一定要是开源的，因为闭源的项目，可能会因维护者个人或团队的原因停止更新或支持，遇到 bug 也未能及时处理解决（此处特指 GitBook 和 Bitcron）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静态网站&lt;/strong&gt;：静态网站能托管在 GitHub Pages 等平台，无需单独购买服务器，一方面省钱易维护，另一方面也对 SEO 友好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应易于搭建，便于部署与更新&lt;/strong&gt;：知识库的架设不应该花过多的时间，内容更新的流程也不应过于复杂。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UI 简洁美观&lt;/strong&gt;：为了阅读体验，版面 UI 应尽量保持清爽美观，且最好有夜间模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;自建知识库的局限性&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;当我看到他人对某个平台只有赞美，没有批评；对该平台的某些问题只字不提，选择性失明，过分赞美某些长处；所有的赞美都是热血澎湃，丧失理性…… 我便提高警惕，强迫自己不被带动情绪，理性看待这个平台的一切东西。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我不希望大家只了解自建知识库的优点，需要说明的是，自建知识库有一定的局限性。只有充分了解其利与弊，才能根据自己的目的去做出选择。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;流量问题&lt;/strong&gt;。依靠第三方平台，你产出的内容更容易被大家读到，也更容易被展示在搜索引擎结果的前十之内。相对来说，自建平台一般很大的流量，也就意味着没什么读者。不过，我们可以使用一文多发的方法来解决这个问题，简而言之，就是基于知识库，使用 Artipub 等工具，将内容同步发至各第三方平台，将流量引导至个人知识库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自建知识库有一定的技术门槛&lt;/strong&gt;。对于没有接触过 Jamstack（JavaScript，API &amp;amp; Markup）理念及其相关技术链的读者而言，可能需要经过一定的学习。这个问题我会在 &lt;a href=&#34;https://wiki-power.com/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA-%E5%9F%BA%E4%BA%8EDocusaurus&#34;&gt;&lt;strong&gt;个人知识库的搭建 - 基于 Docusaurus&lt;/strong&gt;&lt;/a&gt; 这篇文章中逐一进行讲解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;静态网站无在线编辑器&lt;/strong&gt;。换句话说，如果选择了静态网站，那么编辑器和网站本身是分离的，无法像知乎那样在其网页或 App 上直接编辑内容并发布。你需要一个本地的编辑器，例如 VS Code 或 Typora. 不过解决方法也是有的，可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E5%9C%A8iPad%E4%B8%8A%E8%BF%90%E8%A1%8CVSCode&#34;&gt;&lt;strong&gt;如何在 iPad 上运行 VS Code&lt;/strong&gt;&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;知识点同时隶属与多个类别&lt;/strong&gt;。一般来说，知识库仅以类别收录文章，为了避免冗杂，单篇文章仅可属于于一个类别。但举个例子，&lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%AC%BE%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F&#34;&gt;&lt;strong&gt;如何设计一款单片机的最小系统&lt;/strong&gt;&lt;/a&gt; 这篇文章，既属于 &lt;code&gt;电路设计&lt;/code&gt; 一类，又属于 &lt;code&gt;STM32&lt;/code&gt; 一类，那该如何收录？我的解决方法是根据文章的内容，收录于相关程度更高的类别。之所以不采用标签系统，是因为标签容易泛滥，泛滥之后检索起来不如类别分类加搜索功能方便。&lt;/p&gt;
&lt;h2&gt;我都用过哪些平台？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WordPress&lt;/strong&gt;：使用方便但底层过于庞大复杂，需要使用数据库，不利于迁出。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hexo&lt;/strong&gt;：较为冗杂，且没有比较好看的 Wiki 主题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitBook&lt;/strong&gt;：CLI 版本已停止更新支持，V2 版本国内访问速度较慢。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;：技术相对较旧且缺少更新支持。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub Issues/Gist/Wiki&lt;/strong&gt;：国内访问速度较慢，UI 不可定制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bitcron&lt;/strong&gt;：托管动态网站，可定制性较差，访问速度时快时慢。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DokuWiki&lt;/strong&gt;：需自备服务器，且其本身过于老旧。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gridea&lt;/strong&gt;：部署简单，但可定制性较差，只能用其专用编辑器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wiki.js&lt;/strong&gt;：需自备服务器搭建，一般适用于团队知识库，存在部分小问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语雀&lt;/strong&gt;：相对还不错的第三方知识库平台，缺点是 UI 不可定制，且数据迁出不方便。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：部署速度快，但没有比较好看的 Wiki 主题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gatsby&lt;/strong&gt;：与 Hugo 相似。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghost&lt;/strong&gt;：动态网站，UI 美观，需要自备服务器（或花钱买服务），可定制性较差。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;docsify&lt;/strong&gt;：比较推荐。部署简易，UI 美观，但因为其加载时渲染的特性，在某些设备上运行性能较差。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docute&lt;/strong&gt;:比较推荐。部署简易，UI 美观，也是加载时渲染内容，相比 docsify 少了很多插件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VuePress&lt;/strong&gt;：比较推荐。各方面相对都很不错，社区插件多，局限性是官方文档较乱，有些微小的 bug。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docusaurus&lt;/strong&gt;：比较推荐。各方面相对都不错，局限性是编译较慢，框架比较臃肿。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MkDocs（配合 Material 主题）&lt;/strong&gt;：比较推荐。各方面相对都很不错，编译也相对快，我的网站现在使用的方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之前我也写过一些关于自建博客和知识库的文章，有兴趣可以参考一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E5%9F%BA%E4%BA%8Edocsify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAWiki&#34;&gt;基于 docsify 搭建个人 Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E5%9B%9E%E5%BD%92%E5%8D%9A%E5%AE%A2&#34;&gt;回归博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E6%B5%85%E8%B0%88Bitcron%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0&#34;&gt;浅谈 Bitcron 博客平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E5%8D%9A%E5%AE%A2%E8%BD%AC%E8%87%B3GitBook&#34;&gt;博客转至 GitBook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97-VuePress&#34;&gt;个人知识库极简搭建指南 - VuePress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E5%9B%A2%E9%98%9F%E7%9F%A5%E8%AF%86%E5%BA%93%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95-DokuWiki&#34;&gt;团队知识库搭建记录 - DokuWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F&#34;&gt;构建知识管理系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;临渊羡鱼，不如退而结网。在下一篇文章 &lt;a href=&#34;https://wiki-power.com/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA-%E5%9F%BA%E4%BA%8EDocusaurus&#34;&gt;&lt;strong&gt;个人知识库的搭建 - 基于 Docusaurus&lt;/strong&gt;&lt;/a&gt; 中，我将对如何自建知识库展开详细讲解。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.imshuai.com/why-wiki.html&#34;&gt;Why Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zoomyale.com/2016/why_blogging/&#34;&gt;为什么要在老掉牙的独立博客上写东西&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ehippocampus.xyz/whyblog&#34;&gt;我为什么开这个博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E7%9F%A5%E8%AF%86%E5%BA%93/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E7%9F%A5%E8%AF%86%E5%BA%93/</guid>
      
    </item>
    
    <item>
      <title>使用 Markdown 高效写作</title>
      
      
      
      
      <description>&lt;p&gt;如果你习惯使用 Word 之类的工具写作，你可能会常常遇到以下的场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加粗的按钮在哪里？列表的按钮在哪里？怎样才能正常地插图？&lt;/li&gt;
&lt;li&gt;不同标题要用几号字体？正文用几号字体才合适？&lt;/li&gt;
&lt;li&gt;用别的版本的 Word 打开，样式不是我想要的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当用于排版的时间超过了写作本身，足以证明，这种写作方式并不高效。&lt;br&gt;
而 Markdown 这种写作方式，可以专注于写作本身，而不是总被格式打断思绪。&lt;/p&gt;
&lt;h2&gt;工具&lt;/h2&gt;
&lt;p&gt;首先，你需要一个支持 Markdown 的编辑器，我推荐使用 VS Code 或 Typora。&lt;br&gt;
软件的安装配置，可以参考我写过的教程：&lt;a href=&#34;https://wiki-power.com/VSCode生产力指南-环境配置&#34;&gt;&lt;strong&gt;VS Code 生产力指南 - 环境配置&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;常用语法&lt;/h2&gt;
&lt;p&gt;Markdown 常用语法也就这么几种：&lt;strong&gt;标题、文本样式、引用、代码、链接、图片、列表、表格、分割线&lt;/strong&gt; ，掌握即可游刃有余了。&lt;/p&gt;
&lt;h3&gt;标题&lt;/h3&gt;
&lt;p&gt;要创建标题，请在标题文本前添加 1~6 个 &lt;code&gt;#&lt;/code&gt; 符号。标题的层级数取决于 &lt;code&gt;#&lt;/code&gt; 的数量。一般来说，文章的结构不应超出 4 个层级。&lt;/p&gt;
&lt;p&gt;```markdown&lt;/p&gt;
&lt;h1&gt;最大标题&lt;/h1&gt;
&lt;h2&gt;二级标题&lt;/h2&gt;
&lt;h3&gt;三级标题&lt;/h3&gt;
&lt;h4&gt;四级标题&lt;/h4&gt;
&lt;p&gt;……
```&lt;/p&gt;
&lt;h3&gt;文本样式&lt;/h3&gt;
&lt;p&gt;在字符两侧添加符号，对文本进行样式化：&lt;/p&gt;
&lt;p&gt;|   样式   |    键盘快捷键    | 语法                   | 呈现样式             |
| :------: | :--------------: | ---------------------- | -------------------- |
|   粗体   | &lt;code&gt;Ctrl&lt;/code&gt;/&lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;B&lt;/code&gt; | &lt;code&gt;**粗体文本**&lt;/code&gt;         | &lt;strong&gt;粗体文本&lt;/strong&gt;         |
|   斜体   | &lt;code&gt;Ctrl&lt;/code&gt;/&lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;I&lt;/code&gt; | &lt;code&gt;*斜体文本*&lt;/code&gt;           | &lt;em&gt;斜体文本&lt;/em&gt;           |
| 又粗又斜 |                  | &lt;code&gt;***又粗又斜的文本***&lt;/code&gt; | &lt;strong&gt;&lt;em&gt;又粗又斜的文本&lt;/em&gt;&lt;/strong&gt; |
|  删除线  |                  | &lt;code&gt;~~错误文本~~&lt;/code&gt;         | ~~错误文本~~         |&lt;/p&gt;
&lt;p&gt;注意：斜体文本是专为英文设计的，为了易读性和规范性，请勿对中文使用斜体。&lt;/p&gt;
&lt;h3&gt;引用文本&lt;/h3&gt;
&lt;p&gt;你可以使用 &lt;code&gt;&amp;gt;&lt;/code&gt; 符号来引用文段：&lt;/p&gt;
&lt;p&gt;```markdown
正如「海盗湾」的圣诞祝词：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们相信，我们已经改变了一些东西。不仅仅是我们，而是我们所有人。 我们不再想仅仅运行一个网站，而是想寻找一些意义。这离不开你的帮助。我们的历史还在书写中，请不要匆忙下结论。
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正如「海盗湾」的圣诞祝词：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们相信，我们已经改变了一些东西。不仅仅是我们，而是我们所有人。 我们不再想仅仅运行一个网站，而是想寻找一些意义。这离不开你的帮助。我们的历史还在书写中，请不要匆忙下结论。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;引用代码&lt;/h3&gt;
&lt;h4&gt;行内引用&lt;/h4&gt;
&lt;p&gt;你可以使用反引号 &lt;code&gt;`&lt;/code&gt;（在键盘左上角）在行内引用代码。例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
将压缩包内的 `hugo.exe` 文件解压至 `D:\hugo` 文件夹目录下。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将压缩包内的 &lt;code&gt;hugo.exe&lt;/code&gt; 文件解压至 &lt;code&gt;D:\hugo&lt;/code&gt; 文件夹目录下。&lt;/p&gt;
&lt;h4&gt;多行代码&lt;/h4&gt;
&lt;p&gt;如果需要多行代码，可以使用三个反引号 &lt;code&gt;```&lt;/code&gt; 前后包围代码区块：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210215164653.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c
int fputc(int ch,FILE *f)
{
    HAL_UART_Transmit(&amp;amp;huart1,(uint8_t*)&amp;amp;ch,1,100);
    return ch;
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;```c&lt;/code&gt; 表示这段代码是 C 语言，即会按照 C 的语法来渲染高亮。&lt;/p&gt;
&lt;p&gt;如果需要显示代码所在的文件，可以加上 &lt;code&gt;```c title=&#34;stm32f4xx_it.c&#34;&lt;/code&gt;，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c title=&#34;stm32f4xx_it.c&#34;
int fputc(int ch,FILE *f)
{
    HAL_UART_Transmit(&amp;amp;huart1,(uint8_t*)&amp;amp;ch,1,100);
    return ch;
}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;链接&lt;/h3&gt;
&lt;p&gt;将链接文本包含在方括号 &lt;code&gt;[ ]&lt;/code&gt; 内，然后将 URL 包含在括号 &lt;code&gt;( )&lt;/code&gt; 内，可创建链接。例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
本站点是使用 [Docusaurus](https://v2.docusaurus.io/) 构建的。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;本站点是使用 &lt;a href=&#34;https://v2.docusaurus.io/&#34;&gt;Docusaurus&lt;/a&gt; 构建的。&lt;/p&gt;
&lt;h3&gt;图片&lt;/h3&gt;
&lt;p&gt;图片的格式仅仅比链接多加了个 &lt;code&gt;!&lt;/code&gt; 符号，例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
![](https://cdn.jsdelivr.net/gh/linyuxuanlin/Wiki-WildWolf/static/uploads/b944219198103ea09f0f02bcb830e9b.png)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://cdn.jsdelivr.net/gh/linyuxuanlin/Wiki-WildWolf/static/uploads/b944219198103ea09f0f02bcb830e9b.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注：图片可不加显示文字，即 &lt;code&gt;[ ]&lt;/code&gt; 内可留空。&lt;/p&gt;
&lt;h3&gt;列表&lt;/h3&gt;
&lt;h4&gt;无序列表&lt;/h4&gt;
&lt;p&gt;在文本前面添加 &lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;*&lt;/code&gt;，可创建无序列表（注意：符号后应该带一个空格，否则可能渲染失败）。例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
- 列表子项
- 列表子项
- 列表子项&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列表子项&lt;/li&gt;
&lt;li&gt;列表子项&lt;/li&gt;
&lt;li&gt;列表子项&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;有序列表&lt;/h4&gt;
&lt;p&gt;若想创建有序列表，请在每行前添加编号：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
1. 列表项一
2. 列表项二
3. 列表项三&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;列表项一&lt;/li&gt;
&lt;li&gt;列表项二&lt;/li&gt;
&lt;li&gt;列表项三&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;TODO 列表&lt;/h4&gt;
&lt;p&gt;若要创建 TODO 列表，则按照以下的格式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
- [x] 完成更改
- [ ] 推送提交到 GitHub
- [ ] 打开拉取请求&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] 完成更改&lt;/li&gt;
&lt;li&gt;[ ] 推送提交到 GitHub&lt;/li&gt;
&lt;li&gt;[ ] 打开拉取请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;列表嵌套&lt;/h4&gt;
&lt;p&gt;若想在列表内进行嵌套，可直接使用快捷键 &lt;code&gt;Tab&lt;/code&gt; 缩进，&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Tab&lt;/code&gt; 取消缩进：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
1. 列表项一
   1. 列表子项一
   2. 列表子项二
      - 子子项
      - 子子项
2. 列表项二&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;列表项一&lt;/li&gt;
&lt;li&gt;列表子项一&lt;/li&gt;
&lt;li&gt;列表子项二&lt;ul&gt;
&lt;li&gt;子子项&lt;/li&gt;
&lt;li&gt;子子项&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;列表项二&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;表格&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;|&lt;/code&gt; 符号来分隔不同的单元格，使用 &lt;code&gt;-&lt;/code&gt; 符号来分隔表头和其他行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
| name       | age |
| ---------- | --- |
| LearnShare | 12  |
| Mike       | 32  |&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;| name       | age |
| ---------- | --- |
| LearnShare | 12  |
| Mike       | 32  |&lt;/p&gt;
&lt;p&gt;若想对齐表格中的列，可以使用 &lt;code&gt;:&lt;/code&gt; 符号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:---&lt;/code&gt; 或 &lt;code&gt;---&lt;/code&gt; 代表左对齐&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:--:&lt;/code&gt; 代表居中对齐&lt;/li&gt;
&lt;li&gt;&lt;code&gt;---:&lt;/code&gt; 代表右对齐&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;markdown
|    name    | age |
| :--------: | --: |
| LearnShare |  12 |
|    Mike    |  32 |&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;|    name    | age |
| :--------: | --: |
| LearnShare |  12 |
|    Mike    |  32 |&lt;/p&gt;
&lt;h3&gt;分割线&lt;/h3&gt;
&lt;p&gt;你可以用 &lt;code&gt;---&lt;/code&gt; 符号生成分割线，以分隔不同内容的文段：&lt;/p&gt;
&lt;h2&gt;```markdown&lt;/h2&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210216123630.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;高级用法&lt;/h2&gt;
&lt;h3&gt;段落与分行&lt;/h3&gt;
&lt;p&gt;在 Markdown 中，请以前后各空一行，来区分不同的段落。&lt;br&gt;
同一段落内的换行，只需在句末加两个空格即可。&lt;/p&gt;
&lt;h3&gt;导出其他格式&lt;/h3&gt;
&lt;p&gt;如需要导出 PDF，Word，图片等格式，可以使用 Pandoc 来实现。&lt;br&gt;
如果你使用的是 VS Code，可以直接使用 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yzane.markdown-pdf&#34;&gt;&lt;strong&gt;Markdown PDF&lt;/strong&gt;&lt;/a&gt; 以导出 PDF 文档。&lt;/p&gt;
&lt;h3&gt;用 Markdown 写公众号文章&lt;/h3&gt;
&lt;p&gt;微信公众号用的是富文本编辑器，我们可以使用网页工具 &lt;a href=&#34;https://md2wechat.wiki-power.com/&#34;&gt;&lt;strong&gt;MD2WeChat&lt;/strong&gt;&lt;/a&gt; 对 Markdown 进行解析渲染，并粘贴至公众号编辑器内。&lt;/p&gt;
&lt;p&gt;详情请参考 &lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0&#34;&gt;&lt;strong&gt;使用 Markdown 进行高效写作&lt;/strong&gt;&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sinnammanyo.cn/About-Markdown/&#34;&gt;个人 Markdown 编辑方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/41893875&#34;&gt;高效写作方式 Markdown，让你彻底摆脱排版的困扰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/younghz/Markdown&#34;&gt;younghz/Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xianbai.me/learn-md/index.html&#34;&gt;Learning-Markdown (Markdown 入门参考)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/cn/github/writing-on-github/basic-writing-and-formatting-syntax&#34;&gt;基本撰写和格式语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%BD%BF%E7%94%A8Markdown%E9%AB%98%E6%95%88%E5%86%99%E4%BD%9C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%BD%BF%E7%94%A8Markdown%E9%AB%98%E6%95%88%E5%86%99%E4%BD%9C/</guid>
      
    </item>
    
    <item>
      <title>使用 Rclone 同步网盘数据</title>
      
      
      
      
      <description>&lt;p&gt;Rclone 是一个用于管理网盘文件的命令行工具，支持 40 余种网盘（包括 S3 类）。Rclone 也有衍生的图形化界面的软件 RcloneBrowser，方便一般用户使用。本文介绍如何通过 Rclone 同步腾讯云对象储存。&lt;/p&gt;
&lt;h2&gt;软件安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rclone.org/downloads/&#34;&gt;&lt;strong&gt;Rclone&lt;/strong&gt;&lt;/a&gt;：下载后将 &lt;code&gt;.exe&lt;/code&gt; 解压，记下路径。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kapitainsky/RcloneBrowser/releases&#34;&gt;&lt;strong&gt;RcloneBrowser&lt;/strong&gt;&lt;/a&gt;：GUI 工具。安装后选择 Rclone 的路径。&lt;/li&gt;
&lt;li&gt;（&lt;a href=&#34;http://www.secfs.net/winfsp/rel/&#34;&gt;&lt;strong&gt;WinFsp&lt;/strong&gt;&lt;/a&gt;：依赖库，如果挂载虚拟硬盘就需要安装）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置流程&lt;/h2&gt;
&lt;p&gt;打开 Rclone Browser，点击左下角的 &lt;code&gt;Config...&lt;/code&gt;，接下来根据提示输入：&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;n&lt;/code&gt; 以新建远程连接：&lt;/p&gt;
&lt;p&gt;```shell
Name                 Type
====                 ====
rclone config        s3
e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config&lt;/p&gt;
&lt;p&gt;e/n/d/r/c/s/q&amp;gt; n
```&lt;/p&gt;
&lt;p&gt;给远程连接取个名字（例如 &lt;code&gt;test&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
name&amp;gt; test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;选择服务商（以下我以腾讯云 COS 为例，选择 &lt;code&gt;4&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;```shell
Choose a number from below, or type in your own value
 1 / 1Fichier
   \ &#34;fichier&#34;
 2 / Alias for an existing remote
   \ &#34;alias&#34;
 3 / Amazon Drive
   \ &#34;amazon cloud drive&#34;
 4 / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, and Tencent COS
   \ &#34;s3&#34;
...&lt;/p&gt;
&lt;p&gt;Storage&amp;gt; 4
```&lt;/p&gt;
&lt;p&gt;```shell
Choose a number from below, or type in your own value
 1 / Amazon Web Services (AWS) S3
   \ &#34;AWS&#34;
 2 / Alibaba Cloud Object Storage System (OSS) formerly Aliyun
   \ &#34;Alibaba&#34;
 3 / Ceph Object Storage
   \ &#34;Ceph&#34;
 4 / Digital Ocean Spaces
   \ &#34;DigitalOcean&#34;
 5 / Dreamhost DreamObjects
   \ &#34;Dreamhost&#34;
 6 / IBM COS S3
   \ &#34;IBMCOS&#34;
 7 / Minio Object Storage
   \ &#34;Minio&#34;
 8 / Netease Object Storage (NOS)
   \ &#34;Netease&#34;
 9 / Scaleway Object Storage
   \ &#34;Scaleway&#34;
10 / StackPath Object Storage
   \ &#34;StackPath&#34;
11 / Tencent Cloud Object Storage (COS)
   \ &#34;TencentCOS&#34;
12 / Wasabi Object Storage
   \ &#34;Wasabi&#34;
13 / Any other S3 compatible provider
   \ &#34;Other&#34;&lt;/p&gt;
&lt;p&gt;provider&amp;gt; 11
```&lt;/p&gt;
&lt;p&gt;选择认证类型。因为我们是第一次配置，所以选择 &lt;code&gt;1&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```shell
Choose a number from below, or type in your own value
 1 / Enter AWS credentials in the next step
   \ &#34;false&#34;
 2 / Get AWS credentials from the environment (env vars or IAM)
   \ &#34;true&#34;&lt;/p&gt;
&lt;p&gt;env_auth&amp;gt; 1
```&lt;/p&gt;
&lt;p&gt;输入云服务的账号，这里相当于腾讯云 COS 的 SecretId：&lt;/p&gt;
&lt;p&gt;```shell
AWS Access Key ID.&lt;/p&gt;
&lt;p&gt;access_key_id&amp;gt; &lt;strong&gt;*&lt;/strong&gt;*
```&lt;/p&gt;
&lt;p&gt;输入密码，相当于 SecretKey：&lt;/p&gt;
&lt;p&gt;```shell
AWS Secret Access Key (password)&lt;/p&gt;
&lt;p&gt;secret_access_key&amp;gt; &lt;strong&gt;*&lt;/strong&gt;*
```&lt;/p&gt;
&lt;p&gt;选择云服务的地区：&lt;/p&gt;
&lt;p&gt;```shell
Endpoint for Tencent COS API.
 1 / Beijing Region.
   \ &#34;cos.ap-beijing.myqcloud.com&#34;
 2 / Nanjing Region.
   \ &#34;cos.ap-nanjing.myqcloud.com&#34;
 3 / Shanghai Region.
   \ &#34;cos.ap-shanghai.myqcloud.com&#34;
 4 / Guangzhou Region.
   \ &#34;cos.ap-guangzhou.myqcloud.com&#34;
...&lt;/p&gt;
&lt;p&gt;endpoint&amp;gt; 4
```&lt;/p&gt;
&lt;p&gt;选择读写类型，图床一般是公读私写：&lt;/p&gt;
&lt;p&gt;```shell
Canned ACL used when creating buckets and storing or copying objects.
 1 / Owner gets Full_CONTROL. No one else has access rights (default).
   \ &#34;default&#34;
 2 / Owner gets FULL_CONTROL. The AllUsers group gets READ access.
   \ &#34;public-read&#34;
   / Owner gets FULL_CONTROL. The AllUsers group gets READ and WRITE access.
...&lt;/p&gt;
&lt;p&gt;acl&amp;gt; 2
```&lt;/p&gt;
&lt;p&gt;选择储存类型（选择 &lt;code&gt;1&lt;/code&gt; 默认即可）：&lt;/p&gt;
&lt;p&gt;```shell
The storage class to use when storing new objects in Tencent COS.
 1 / Default
   \ &#34;&#34;
 2 / Standard storage class
   \ &#34;STANDARD&#34;
 3 / Archive storage mode.
   \ &#34;ARCHIVE&#34;
 4 / Infrequent access storage mode.
   \ &#34;STANDARD_IA&#34;&lt;/p&gt;
&lt;p&gt;storage_class&amp;gt; 1
```&lt;/p&gt;
&lt;p&gt;是否编辑高级设置（选择 &lt;code&gt;n&lt;/code&gt; 否）：&lt;/p&gt;
&lt;p&gt;```shell
Edit advanced config? (y/n)
y) Yes
n) No (default)&lt;/p&gt;
&lt;p&gt;y/n&amp;gt; n
```&lt;/p&gt;
&lt;p&gt;最后确认，检查无误后输入 &lt;code&gt;y&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```shell
Remote config&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;[Txcos]
type = s3
provider = TencentCOS
env_auth = false
access_key_id = 我是马赛克
secret_access_key = 我是马赛克
endpoint = cos.ap-guangzhou.myqcloud.com
acl = public-read&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;y) Yes this is OK (default)
e) Edit this remote
d) Delete this remote
y/e/d&amp;gt; y
```&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;q&lt;/code&gt; 退出：&lt;/p&gt;
&lt;p&gt;```shell
Current remotes:&lt;/p&gt;
&lt;p&gt;Name                 Type
====                 ====
Txcos                 s3&lt;/p&gt;
&lt;p&gt;e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&amp;gt; q
```&lt;/p&gt;
&lt;p&gt;接下来，双击打开配置好的远程连接，选择文件夹并点击 &lt;code&gt;Download&lt;/code&gt; 下载到本地，在弹出的窗口选择以下配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mode 选择 &lt;code&gt;Copy&lt;/code&gt; 模式（单向从云端到本地同步），只拷贝新增和变化的文件，备份的时候使用。&lt;/li&gt;
&lt;li&gt;在 Skip files 区域勾选 &lt;code&gt;Skip all files that exist&lt;/code&gt;，避免重复下载消耗流量。&lt;/li&gt;
&lt;li&gt;在 Task description 区域输入任务名称，方便下次同步使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置完成后，切换到 Tasks 标签页，选择相应的任务，点击 &lt;code&gt;Run&lt;/code&gt; 即可开始下载。&lt;/p&gt;
&lt;h2&gt;在群晖 NAS 上配置&lt;/h2&gt;
&lt;p&gt;注：在群晖上建议使用 CloudSync，不要对底层代码进行修改。&lt;/p&gt;
&lt;p&gt;准备工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启 ssh&lt;/li&gt;
&lt;li&gt;启用用户家目录（&lt;code&gt;homes&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;创建用于同步的文件夹（比如我是 &lt;code&gt;/volume1/wiki-media&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装 Rclone:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
curl https://rclone.org/install.sh | sudo bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置服务：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
rclone config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;按照上面的步骤就行。&lt;/p&gt;
&lt;p&gt;同步的命令：&lt;/p&gt;
&lt;p&gt;```shell&lt;/p&gt;
&lt;h1&gt;本地到网盘&lt;/h1&gt;
&lt;p&gt;rclone [功能选项] &amp;lt;本地路径&amp;gt; &amp;lt;网盘名称:路径&amp;gt; [参数] [参数] ...&lt;/p&gt;
&lt;h1&gt;网盘到本地&lt;/h1&gt;
&lt;p&gt;rclone [功能选项] &amp;lt;网盘名称:路径&amp;gt; &amp;lt;本地路径&amp;gt; [参数] [参数] ...&lt;/p&gt;
&lt;h1&gt;网盘到网盘&lt;/h1&gt;
&lt;p&gt;rclone [功能选项] &amp;lt;网盘名称:路径&amp;gt; &amp;lt;网盘名称:路径&amp;gt; [参数] [参数] ...
```&lt;/p&gt;
&lt;p&gt;例如我是：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
rclone sync COS_backup:/wiki-media-1253965369 /volume1/wiki-media -P&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在选定的路径新建一个自动化脚本（如 &lt;code&gt;rclone-sync.sh&lt;/code&gt;），将上面的命令放进脚本文件内。&lt;/p&gt;
&lt;p&gt;在群晖 &lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;任务计划&lt;/code&gt; - &lt;code&gt;新增&lt;/code&gt; - &lt;code&gt;计划的任务&lt;/code&gt; - &lt;code&gt;用户定义的脚本&lt;/code&gt;，在 &lt;code&gt;计划&lt;/code&gt; 和 &lt;code&gt;任务设置&lt;/code&gt; 标签页配置周期运行时间，和脚本的路径&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;任务计划&lt;/code&gt; - &lt;code&gt;新增&lt;/code&gt; - &lt;code&gt;计划的任务&lt;/code&gt; - &lt;code&gt;用户定义的脚本&lt;/code&gt;，在 &lt;code&gt;计划&lt;/code&gt; 和 &lt;code&gt;任务设置&lt;/code&gt; 标签页配置周期运行时间，和运行脚本的命令（比如 &lt;code&gt;bash /volume1/stash/permanent/rclone-sync.sh&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;可在 &lt;code&gt;设置&lt;/code&gt; 内配置输出结果，后选择任务，点击 &lt;code&gt;运行&lt;/code&gt;，可测试运行，可打开配置的输出路径看运行结果&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wazhuji.com/jiaocheng/17.html&#34;&gt;Rclone 安装配置使用教程，附 Rclone 常用命令参数详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/104628740&#34;&gt;基于 [对象存储] 的低成本全功能私有云搭建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.boxmoe.com/486.html&#34;&gt;使用 Rclone 和 WinFsp 将阿里云 oss / 腾讯云 cos 挂载为 windows 磁盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rhilip.info/archives/874/&#34;&gt;使用 rclone 在 Windows 下挂载 Google 个人 / 团队云盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://omo.moe/archives/616/&#34;&gt;使用 rclone 每天定时备份 typecho 博客网站内容及 mysql 数据库到 Google Drive/Onedrive 等网盘&lt;/a&gt;&#39;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%BD%BF%E7%94%A8Rclone%E5%90%8C%E6%AD%A5%E7%BD%91%E7%9B%98%E6%95%B0%E6%8D%AE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E4%BD%BF%E7%94%A8Rclone%E5%90%8C%E6%AD%A5%E7%BD%91%E7%9B%98%E6%95%B0%E6%8D%AE/</guid>
      
    </item>
    
    <item>
      <title>在浏览器上运行 VS Code（旧）</title>
      
      
      
      
      <description>&lt;p&gt;注：≥v3.8.0 版本 code-server 的部署请参考 &lt;a href=&#34;https://wiki-power.com/如何在iPad上运行VSCode&#34;&gt;&lt;strong&gt;如何在 iPad 上跑 VS Code&lt;/strong&gt;&lt;/a&gt; ，有更简洁的方法。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;众所周知，VS Code 是一个功能十分强大的编辑器。如果能在 iPad 这类轻便的平台上使用 VS Code（iPadOS 对键鼠的支持已经能够媲美桌面系统），那我们就可以随时随地工作了。&lt;/p&gt;
&lt;p&gt;恰好有一个让 VS Code 跑在服务器上的服务：code-server. 部署完成后，可通过浏览器访问。这样，只要有网络，任何设备都能够轻松用上 VS Code.&lt;/p&gt;
&lt;h2&gt;准备环境&lt;/h2&gt;
&lt;p&gt;一台安装有 Linux 的服务器（我用的是阿里云最低配的学生机）。&lt;/p&gt;
&lt;p&gt;官方要求配置如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;64-bit host.&lt;/li&gt;
&lt;li&gt;At least 1GB of RAM.&lt;/li&gt;
&lt;li&gt;2 cores or more are recommended (1 core works but not optimally).&lt;/li&gt;
&lt;li&gt;Secure connection over HTTPS or localhost (required for service workers and clipboard support).&lt;/li&gt;
&lt;li&gt;For Linux: GLIBC 2.17 or later and GLIBCXX 3.4.15 or later.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;安装过程&lt;/h2&gt;
&lt;h3&gt;1. 下载&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
wget https://github.com/cdr/code-server/releases/download/3.1.0/code-server-3.1.0-linux-x86_64.tar.gz # 下载 code-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不要照搬命令，在 code-server 的 &lt;a href=&#34;https://github.com/cdr/code-server/releases&#34;&gt;&lt;strong&gt;Release&lt;/strong&gt;&lt;/a&gt; 页面复制最新版本的链接（根据服务器的架构来选择，我使用的是 &lt;code&gt;code-server-3.1.0-linux-x86_64.tar.gz&lt;/code&gt; 版本），用 &lt;code&gt;wget&lt;/code&gt; 或 &lt;code&gt;SFTP&lt;/code&gt; 下载 / 传输至服务器上。&lt;/p&gt;
&lt;p&gt;如果下载速度很慢，可复制下载链接，使用 &lt;a href=&#34;https://gh.api.99988866.xyz/&#34;&gt;&lt;strong&gt;GitHub 文件加速&lt;/strong&gt;&lt;/a&gt; 这个网站获取国内加速下载链接。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
tar -xvf code-server-3.1.0-linux-x86_64.tar.gz # 解压&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;2. 安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
cd code-server
export PASSWORD=&#34;yourpassword&#34;
./code-server --port 8888 --host 0.0.0.0&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;yourpassword&lt;/code&gt; 改为你设定的密码，否则会随机生成密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 8888&lt;/code&gt; 意为指定运行端口，你可以设置为 &lt;code&gt;80&lt;/code&gt; 端口（Http 协议），这样访问的时候就不用加端口号了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--host 0.0.0.0&lt;/code&gt; 让服务能通过外网访问。默认的 &lt;code&gt;127.0.0.1&lt;/code&gt; 只能本地访问&lt;/li&gt;
&lt;li&gt;如不需要密码验证，可以加上 &lt;code&gt;--auth none&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如启动服务不成功，可能为 &lt;strong&gt;处理器架构版本&lt;/strong&gt; 选择错误，换一个版本即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3. 配置后台运行&lt;/h3&gt;
&lt;p&gt;默认直接运行的情况下，ssh 连接一断就没了。为了使其能够后台运行，可以用 &lt;code&gt;screen&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
yum install screen
或
apt-get install screen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
screen -S VSCode-online # VS Code-online 为自取的名字
export PASSWORD=&#34;password&#34; &amp;amp;&amp;amp; ./code-server --port 8888 --host 0.0.0.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再次进入运行中的 screen 作业：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
screen -r 作业名&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果需要停止后台 screen 的运行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
screen -ls # 查看已运行服务的 id
screen -X -S id quit # 替换掉 id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;退出 screen：&lt;code&gt;Ctrl + A + D&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;4. 轻松使用&lt;/h3&gt;
&lt;p&gt;在浏览器直接输入 &lt;code&gt;http://你的服务器 ip&lt;/code&gt; 即可享用云端 VS Code.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200413181001.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置域名访问：&lt;code&gt;待探索……&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;现阶段问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可直接下载的插件数量，手动安装插件很麻烦，且没有自动同步插件 / 用户设置功能，之后的版本应该会更新解决&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://copyfuture.com/blogs-details/20200405045150018h4edt0f4q8486jq&#34;&gt;在浏览器上运行 VS Code，code-server（阿里云服务器）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000022267386&#34;&gt;在浏览器上运行 VS Code，code-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Granery/article/details/90415636&#34;&gt;（推荐）VS code 在线工具——code-serve 在云服务器上的安装和使用 与常见的问题解决 （超详细）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.icodef.com/2019/11/17/1670&#34;&gt;iPad 编程学习环境---VS Code web 版本搭建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8CVSCode%EF%BC%88%E6%97%A7%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8CVSCode%EF%BC%88%E6%97%A7%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>如何保存易逝的文字</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;病毒太小了，看不见，所以要用试剂盒。试剂盒是怎么检测的呢？先用聚合酶链式反应，把病毒核酸的数量放大。然后用荧光染料染色，让病毒核酸变得鲜艳耀眼。&lt;br&gt;
灾难就像试剂盒，会让一切放大，变得更鲜艳耀眼。于是我们看到了前所未见的美好和善良，以及难以置信的愚蠢和丑恶。其实这些平时也在那里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文将介绍敏感信息被「404」前，保存下来的方法。&lt;/p&gt;
&lt;h2&gt;方法&lt;/h2&gt;
&lt;p&gt;注：本文将使用 &lt;strong&gt;Chrome 浏览器&lt;/strong&gt; 进行演示。&lt;/p&gt;
&lt;h3&gt;安装插件&lt;/h3&gt;
&lt;p&gt;如果你有梯子，可以在 &lt;a href=&#34;https://chrome.google.com/webstore/category/extensions?hl=zh-CN&#34;&gt;&lt;strong&gt;Chrome Webstore&lt;/strong&gt;&lt;/a&gt; 上直接搜索 &lt;strong&gt;Web Clipper&lt;/strong&gt; ，下载并安装插件。&lt;/p&gt;
&lt;p&gt;假如你打开上面链接后是这个画面：&lt;br&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200207144241.png&#34;&gt;
别担心，这是正常的。我们也可以从另一个链接下载插件：&lt;br&gt;
&lt;a href=&#34;https://www.crx4chrome.com/go.php?p=169618&amp;amp;s=1&amp;amp;l=https%3A%2F%2Ff2.crx4chrome.com%2Fcrx.php%3Fi%3Dmhfbofiokmppgdliakminbgdgcmbhbac%26v%3D1.18.0&#34;&gt;Download crx file from crx4chrome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;插件下载完成后，照着下图的指引，打开拓展程序管理页面：&lt;br&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200207144627.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;将刚刚下载的插件拖到这儿以安装。&lt;/p&gt;
&lt;h3&gt;配置&lt;/h3&gt;
&lt;p&gt;我们选择 GitHub 的 Issues 功能托管内容。&lt;/p&gt;
&lt;p&gt;如果你没有 GitHub 账户，那需要先注册一个：https://github.com/ （过程不再赘述）&lt;br&gt;
注册完成后，点击 &lt;a href=&#34;https://github.com/settings/tokens/new?scopes=repo&amp;amp;description=Web%20Clipper&#34;&gt;&lt;strong&gt;这个链接&lt;/strong&gt;&lt;/a&gt; 生成一个 AccessToken 。生成的 Token 务必保存下来，稍后会用到。&lt;br&gt;
创建一个仓库：https://github.com/new，性质为公开或私有，可自己决定。&lt;/p&gt;
&lt;p&gt;打开插件页面，绑定相应的 AccessToken 与 GitHub 仓库。&lt;/p&gt;
&lt;h3&gt;使用&lt;/h3&gt;
&lt;p&gt;当我们打开任意一篇文章时，可以将其剪藏下来，并设置标签。文章将会以 issue 形式，储存在对应仓库内。&lt;br&gt;
当文章被「404」后，我们仍然可以在这儿继续阅读。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200207151224.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;结语&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;中国有一句古话：「兼听则明，偏信则暗」。这句话告诉我们从多个不同的角度才能更好的还原事物的样子，才能做出正确的事情；只听信单方面的话，就分不清是非。对待信息也应如此。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxMjQwNDcxNQ==&amp;amp;mid=2649329422&amp;amp;idx=1&amp;amp;sn=7f104ad54b862e94e889b335540cf85b&amp;amp;chksm=83af7d8ab4d8f49cb965a02a0988190fb7ef3a2abc4dd2ba62ed94ba7b4ac22aa506b11e6cf2&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1581056806984&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=89c13119caee7b32f577a3b86d4de27c26b06239fbe092655e565f03e63f6810b2a7f6265a6b06302d4f6bb40433ea11b14283b80af696e4ba859598cac6ba8ecf67e3f62417a1de3347aad106a5e70b&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=6208006f&amp;amp;lang=zh_CN&amp;amp;exportkey=AwreTiO%2BkLxNNC2wt4nS0xA%3D&amp;amp;pass_ticket=9ERj0119cqTkVmDsc4nP%2BPcvPRUOx3xYuJyu6%2Bei%2Bmn1pTPoSMBYPULl6wx76He3&#34;&gt;逼近真相：在虚假和半真半假中的生存指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://g-rosidte.gitbook.io/record-of-survival-in-digital-totalitarian-era/v/shu-zi-ji-quan-shi-dai-sheng-cun-shou-ji/&#34;&gt;数字极权时代生存手记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E4%BF%9D%E5%AD%98%E6%98%93%E9%80%9D%E7%9A%84%E6%96%87%E5%AD%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E4%BF%9D%E5%AD%98%E6%98%93%E9%80%9D%E7%9A%84%E6%96%87%E5%AD%97/</guid>
      
    </item>
    
    <item>
      <title>如何在 Markdown 中使用 LaTeX</title>
      
      
      
      
      <description>&lt;p&gt;Markdown 原生支持使用 LaTeX 编写数学公式和符号。&lt;/p&gt;
&lt;h2&gt;字体样式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;换行：&lt;code&gt;\\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;空格：&lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;居中：使用 &lt;code&gt;$$&lt;/code&gt; 包裹&lt;/li&gt;
&lt;li&gt;字体样式：加粗：&lt;code&gt;\mathbf&lt;/code&gt;、斜体：&lt;code&gt;\mathit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;字体大小：&lt;code&gt;\tiny&lt;/code&gt;、&lt;code&gt;\scriptsize&lt;/code&gt;、&lt;code&gt;\small&lt;/code&gt;、&lt;code&gt;\normalsize&lt;/code&gt;、&lt;code&gt;\large&lt;/code&gt;、&lt;code&gt;\Large&lt;/code&gt;、&lt;code&gt;\huge&lt;/code&gt;、&lt;code&gt;\Huge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;颜色：&lt;code&gt;\color{颜色值}{数/字/符}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注释：&lt;code&gt;\text{内容}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;四则运算&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;点乘：&lt;code&gt;\cdot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;叉乘：&lt;code&gt;\times&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;上 / 下标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;上标：&lt;code&gt;^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;下标：&lt;code&gt;_&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如有嵌套，使用 &lt;code&gt;{}&lt;/code&gt; 包含。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例： $$X^{2m}_{3n}$$&lt;/p&gt;
&lt;h2&gt;上 / 下划线&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;上划线：&lt;code&gt;\overline&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;下划线：&lt;code&gt;\underline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例：$$\overline{x^2+a+b}$$&lt;/p&gt;
&lt;h2&gt;分数&lt;/h2&gt;
&lt;p&gt;分数的表示：&lt;code&gt;\frac{分子}{分母}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;方程组&lt;/h2&gt;
&lt;p&gt;方式一：&lt;code&gt;\begin{array}{c} 表达式一\\表达式二... \end{array}&lt;/code&gt;
方式二：&lt;code&gt;\begin{cases}…\end{cases}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;开平方根&lt;/h2&gt;
&lt;p&gt;格式：&lt;code&gt;\sqrt[n&lt;/code&gt;]{x}&lt;code&gt;，其中&lt;/code&gt;n&lt;code&gt;表示开根次数，&lt;/code&gt;x` 表示被开方项。&lt;/p&gt;
&lt;h2&gt;希腊字母&lt;/h2&gt;
&lt;p&gt;| 希腊字母（大写） |  表达式  | 希腊字母 （小写） |   表达式    |
| :--------------: | :------: | :---------------: | :---------: |
|        A         |    A     |         α         |   \alpha    |
|        B         |    B     |         β         |    \beta    |
|        Γ         |  \Gamma  |         γ         |   \gamma    |
|        Δ         |  \Delta  |         δ         |   \delta    |
|        E         |    E     |         ϵ         |  \epsilon   |
|        Z         |    Z     |         ε         | \varepsilon |
|        H         |    H     |         η         |    \eta     |
|        Θ         |  \Theta  |         θ         |   \theta    |
|        I         |    I     |         ι         |    \iota    |
|        K         |    K     |         κ         |   \kappa    |
|        Λ         | \Lambda  |         λ         |   \lambda   |
|        M         |    M     |         μ         |     \mu     |
|        N         |    N     |         ν         |     \nu     |
|        Ξ         |   \Xi    |         ξ         |     \xi     |
|        O         |    O     |         ο         |  \omicron   |
|        Π         |   \Pi    |         π         |     \pi     |
|        P         |    P     |         ρ         |    \rho     |
|        Σ         |  \Sigma  |         σ         |   \sigma    |
|        T         |    T     |         τ         |    \tau     |
|        Υ         | \Upsilon |         υ         |  \upsilon   |
|        Φ         |   \Phi   |         ϕ         |    \phi     |
|        −         |    -     |         φ         |   \varphi   |
|        X         |    X     |         χ         |    \chi     |
|        Ψ         |   \Psi   |         ψ         |    \psi     |
|        Ω         |  \Omega  |         ω         |   \omega    |&lt;/p&gt;
&lt;h2&gt;运算符&lt;/h2&gt;
&lt;p&gt;| 运算符 |   表达式   | 运算符 |  表达式   |
| :----: | :--------: | :----: | :-------: |
|   ±    |    \pm     |   ∅    | \emptyset |
|   ×    |   \times   |   ∈    |    \in    |
|   ÷    |    \div    |   ∉    |  \notin   |
|   ∣    |    \mid    |   ⊂    |  \subset  |
|   ⋅    |   \cdot    |   ⊃    |  \supset  |
|   ∘    |   \circ    |   ⊆    | \subseteq |
|   ∗    |    \ast    |   ⊇    | \supseteq |
|   ⨀    |  \bigodot  |   ⋂    |  \bigcap  |
|   ⨂    | \bigotimes |   ⋃    |  \bigcup  |
|   ⨁    | \bigoplus  |   ⋁    |  \bigvee  |
|   ≤    |    \leq    |   ⋀    | \bigwedge |
|   ≥    |    \geq    |   ≠    |   \neq    |
|   ≈    |  \approx   |   ≡    |  \equiv   |&lt;/p&gt;
&lt;h2&gt;微积分符号&lt;/h2&gt;
&lt;p&gt;| 运算符 | 表达式 | 运算符 | 表达式 |
| :----: | :----: | :----: | :----: |
|   ∮    | \oint  |   ∞    | \infty |
|   ∇    | \nabla |   ∫    |  \int  |
|   ∑    |  \sum  |  lim   |  \lim  |
|   →    | \vec{} |   -    |   -    |&lt;/p&gt;
&lt;h2&gt;逻辑符号&lt;/h2&gt;
&lt;p&gt;| 运算符 |  表达式  | 运算符 |   表达式   |
| :----: | :------: | :----: | :--------: |
|   ∵    | \because |   ∴    | \therefore |
|   ∀    | \forall  |   ∃    |  \exists   |&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://markdown.budshome.com/formula.html&#34;&gt;Markdown 数学公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://def.fe.up.pt/latex/Symbols.pdf&#34;&gt;LaTeX-Symbols.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E5%9C%A8Markdown%E4%B8%AD%E4%BD%BF%E7%94%A8LaTeX/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E5%9C%A8Markdown%E4%B8%AD%E4%BD%BF%E7%94%A8LaTeX/</guid>
      
    </item>
    
    <item>
      <title>如何在 iPad 上运行 VS Code</title>
      
      
      
      
      <description>&lt;p&gt;注：本教程基于 code-server v3.8.0，CentOS 8.2.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201221140748.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;更推荐以 Docker compose 的方式安装 code-server 服务。&lt;br&gt;
仅需一行命令部署，且无需配置后台运行，自带 Git 等环境。&lt;br&gt;
详见：&lt;a href=&#34;https://wiki-power.com/Homelab-%E5%9C%A8%E7%BA%BF%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%99%A8code-server&#34;&gt;&lt;strong&gt;Homelab - 在线代码编辑器 code-server&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你不想用 Docker compose 的方式部署，请继续阅读下文。&lt;/p&gt;
&lt;h2&gt;配置服务器&lt;/h2&gt;
&lt;p&gt;首先，你需要有一台 24h 不停机的服务器（推荐买阿里云 / 腾讯云学生机，只需 ¥9.9/月）&lt;br&gt;
为保证使用体验，这里推荐服务器的配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 核以上&lt;/li&gt;
&lt;li&gt;1GB 以上内存&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刷 Linux（这里我使用 CentOS 8.2），确保 ssh 能正常连上即可。&lt;/p&gt;
&lt;h2&gt;安装 code-server&lt;/h2&gt;
&lt;p&gt;在新的版本下（≥v3.8.0），可以直接使用脚本安装：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
curl -fsSL https://code-server.dev/install.sh | sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果发现半天下载不下来，多半是因为 DNS 污染，参考 &lt;a href=&#34;https://wiki-power.com/GitHub改Host&#34;&gt;&lt;strong&gt;GitHub 改 Host&lt;/strong&gt;&lt;/a&gt; 解决。&lt;/p&gt;
&lt;h2&gt;运行 code-server&lt;/h2&gt;
&lt;p&gt;使用命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
export PASSWORD=&#34;设置一个访问密码&#34; &amp;amp;&amp;amp; code-server --port 80 --host 0.0.0.0 --auth password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果没有出现错误，那么打开浏览器，输入服务器的 IP 地址访问，就可以看到一个在线的 VS Code 了。&lt;/p&gt;
&lt;h2&gt;配置后台运行&lt;/h2&gt;
&lt;p&gt;运行在前台的 code-server ，会因为 ssh 退出而结束进程。&lt;br&gt;
为了使其能在后台运行，我们可以使用 screen 程序（可以把它理解为一个容器）。&lt;/p&gt;
&lt;h3&gt;安装 screen&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
yum install screen&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;创建 screen 作业&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
screen -S VSCode-online # VSCode-online 为自取的名字&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;开启 code-server 服务&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
export PASSWORD=&#34;设置一个访问密码&#34; &amp;amp;&amp;amp; code-server --port 80 --host 0.0.0.0 --auth password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果顺利的话，就可以在浏览器输入 IP 地址访问了。&lt;/p&gt;
&lt;h2&gt;拓展&lt;/h2&gt;
&lt;h3&gt;添加桌面快捷方式&lt;/h3&gt;
&lt;p&gt;如果在 iPad 上使用，可以用 Safari 浏览器打开，点击右上角 &lt;code&gt;分享&lt;/code&gt; 图标 --&amp;gt; &lt;code&gt;添加到主屏幕&lt;/code&gt; 。&lt;br&gt;
可以将其假装为一个 App 使用，并隐去浏览器状态栏。&lt;br&gt;
顺带说一句，外接键鼠也都支持。&lt;/p&gt;
&lt;h3&gt;screen 的其他操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看正在运行的作业 id：&lt;code&gt;screen -ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重新进入运行中的 screen 作业：&lt;code&gt;screen -r 作业id # 作业 id 需要包含前缀的数字标识&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;结束某作业的运行：&lt;code&gt;screen -X -S 作业id quit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;退出当前作业的 screen 界面：&lt;code&gt;Ctrl + A + D&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;code-server 相关命令参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过外网访问：code-server 服务默认只运行在本地（&lt;code&gt;127.0.0.1&lt;/code&gt;）。为了能通过 IP 访问，可以添加 &lt;code&gt;--host 0.0.0.0&lt;/code&gt; 参数&lt;/li&gt;
&lt;li&gt;指定运行端口：&lt;code&gt;--port xxxx&lt;/code&gt;，你可以将 &lt;code&gt;xxxx&lt;/code&gt; 替换为 &lt;code&gt;8888&lt;/code&gt; ；也可以是 &lt;code&gt;80&lt;/code&gt; （走 Http 协议，直接用 IP 访问，不用加端口号）&lt;/li&gt;
&lt;li&gt;设置访问密码：加上&lt;code&gt;--auth password&lt;/code&gt; ；如不需要，则不加任何参数，或加上 &lt;code&gt;--auth none&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;安装 Git&lt;/h3&gt;
&lt;p&gt;VS Code 配合 Git 使用，方便进行云开发。&lt;br&gt;
可以使用如下命令安装 Git：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
yum install git&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;使用域名访问&lt;/h3&gt;
&lt;p&gt;通过服务器 IP 访问也许会有些奇怪，我们可以绑定一个自定义的域名，通过域名来访问 code-server 服务。&lt;br&gt;
购买一个域名，在 DNS 解析处添加服务器 IP 的，使用 A 类型即可。&lt;/p&gt;
&lt;h3&gt;当前版本 bugs 及解决&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;无法通过 VS Code 内置的 Settings Sync 服务同步用户设置：可以通过额外安装 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync&#34;&gt;&lt;strong&gt;Settings Sync&lt;/strong&gt;&lt;/a&gt; 插件解决&lt;/li&gt;
&lt;li&gt;Settings Sync 跳转 GitHub 登录出错：使用电脑浏览器进行配置&lt;/li&gt;
&lt;li&gt;iPad 上用鼠标滚轮无法正常滚动页面：目前只能使用直接触摸滚动，或用键盘方向键替代&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/在浏览器上运行VSCode（旧）&#34;&gt;在浏览器上运行 VSCode（旧）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/GitHub改Host&#34;&gt;GitHub 改 Host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/420569381e74&#34;&gt;screen 的安装和使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cdr/code-server/blob/v3.8.0/doc/guide.md&#34;&gt;Setup Guide · cdr/code-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E5%9C%A8iPad%E4%B8%8A%E8%BF%90%E8%A1%8CVSCode/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E5%9C%A8iPad%E4%B8%8A%E8%BF%90%E8%A1%8CVSCode/</guid>
      
    </item>
    
    <item>
      <title>如何实现外网 RDP 远控（frp）</title>
      
      
      
      
      <description>&lt;p&gt;使用 frp 在任意网络下实现远程桌面控制。&lt;/p&gt;
&lt;h2&gt;为什么使用 RDP&lt;/h2&gt;
&lt;p&gt;RDP 是 Windows 自带的协议。相比市面上的远程桌面软件，如 Todesk、Anydesk、向日葵等，有以下优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;兼容性更佳，根据设备自适应分辨率，可连接键鼠使用&lt;/li&gt;
&lt;li&gt;自由度高，不限制设备数量，也没有会员体系&lt;/li&gt;
&lt;li&gt;连接速度取决于电脑网速和服务器配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;为什么使用 frp&lt;/h2&gt;
&lt;p&gt;RDP 仅支持同 IP 段使用，为了在外网下实现远控，我们需要用 frp 方法给内网做穿透。&lt;/p&gt;
&lt;p&gt;frp 是一个反向代理软件，体积轻量但功能强大，可以使处于内网或防火墙后的设备对外界提供服务，它支持 HTTP、TCP、UDP 等众多协议。&lt;br&gt;
用 frp 实现外网 RDP 远控的原理，就是让被控端与服务器相连，我们通过服务器来间接连接被控端，从而实现远控。&lt;/p&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;服务端（可以是云服务器，也可以是有公网 IP 的实体机）&lt;/li&gt;
&lt;li&gt;被控端（Windows 必须是专业版以上）&lt;/li&gt;
&lt;li&gt;远控端（全平台都适用）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;服务端配置&lt;/h2&gt;
&lt;p&gt;首先，查看服务器架构：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
arch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参考 frp 的 &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt; 页面，选择符合自己架构的版本下载（比如我是 &lt;code&gt;X86_64&lt;/code&gt; 架构，即选择 &lt;code&gt;amd64&lt;/code&gt;）:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
wget https://github.com/fatedier/frp/releases/download/v0.36.2/frp_0.36.2_linux_amd64.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下载后，解压并改名：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
tar -zxvf frp_0.36.2_linux_amd64.tar.gz &amp;amp;&amp;amp; mv frp_0.36.2_linux_amd64 frp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们看一下 frp 文件夹内的文件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
cd frp &amp;amp;&amp;amp; ls&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;frps&lt;/li&gt;
&lt;li&gt;frps.ini&lt;/li&gt;
&lt;li&gt;frpc&lt;/li&gt;
&lt;li&gt;frpc.ini&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，&lt;code&gt;frps&lt;/code&gt; 与 &lt;code&gt;frps.ini&lt;/code&gt; 是服务端的程序与配置文件（s 结尾代表 server），而 &lt;code&gt;frpc&lt;/code&gt; 与 &lt;code&gt;frpc.ini&lt;/code&gt; 是客户端相关的（c 结尾代表 client），我们现在暂时不用，可以删除：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
rm -f frpc frpc.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们修改 &lt;code&gt;frps.ini&lt;/code&gt; 文件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
vim frps.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ini title=&#34;frps.ini&#34;
[common]
bind_port = 7000
dashboard_port = 7500
token = 12345678
dashboard_user = admin
dashboard_pwd = admin&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;bind_port&lt;/strong&gt;：客户端和服务端连接的端口，在之后配置客户端时会用上，一般默认即可。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dashboard_port&lt;/strong&gt;：服务端仪表板的端口，一般默认即可。如果按默认设置为 &lt;code&gt;7500&lt;/code&gt;，则可通过 &lt;code&gt;7500&lt;/code&gt; 端口访问仪表盘（例如 &lt;code&gt;服务器 IP:7500&lt;/code&gt;），查看 frp 状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;token&lt;/strong&gt;：客户端和服务端连接的口令，请自行设置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dashboard_user&lt;/strong&gt; / &lt;strong&gt;dashboard_pwd&lt;/strong&gt;：仪表盘用户名和密码，请自行设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编辑完成后，按 &lt;code&gt;Esc&lt;/code&gt; 后输入 &lt;code&gt;:wq&lt;/code&gt; 保存退出。&lt;/p&gt;
&lt;p&gt;为了在后台运行 frp 服务，我们可以使用 nohup 命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
nohup ./frps -c frps.ini &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果看到以下输出：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
nohup: ignoring input and appending output to &#39;nohup.out&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即表示服务正常运行。我们也可以用 &lt;code&gt;jobs&lt;/code&gt; 命令，查看正在运行的服务。&lt;/p&gt;
&lt;p&gt;为了测试服务端是否配置成功，我们可以访问 &lt;code&gt;x.x.x.x:7500&lt;/code&gt;，使用上面配置的用户名和密码，看看能否顺利进入仪表盘。如果访问不了仪表盘，也有可能在服务器的防火墙处放开相关端口。&lt;/p&gt;
&lt;h2&gt;被控端配置&lt;/h2&gt;
&lt;p&gt;还是参考 frp 的 &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt; 页面，选择符合自己架构的版本下载。下载后解压重命名，可删除 &lt;code&gt;frps&lt;/code&gt; 和 &lt;code&gt;frps.ini&lt;/code&gt; 文件。打开 &lt;code&gt;frpc.ini&lt;/code&gt; 文件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ini title=&#34;frpc.ini&#34;
[common]
server_addr = x.x.x.x
server_port = 7000
token = 12345678
[rdp]
type = tcp
local_ip = 127.0.0.1
local_port = 3389
remote_port = 7001
[smb]
type = tcp
local_ip = 127.0.0.1
local_port = 445
remote_port = 7002&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;server_addr&lt;/strong&gt;：服务器 IP 地址，请自行修改。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;server_port&lt;/strong&gt;：保持与服务端 &lt;code&gt;bind_port&lt;/code&gt; 的值相同即可，默认是 &lt;code&gt;7000&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;token&lt;/strong&gt;：连接口令，保持与服务端配置的 &lt;code&gt;token&lt;/code&gt; 相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，我们配置自定义的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[rdp]&lt;/strong&gt;：[xxx] 表示规则名称，可自定义。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;：转发的协议类型，可选 TCP/UDP&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;local_port&lt;/strong&gt;：本地端口号，这里填写的是 RDP 协议的端口（3389）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;remote_port&lt;/strong&gt;：在服务端开放的端口号，可自定义。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;RDP（Remote Desktop 协议）在 Windows 上默认的端口号为 3389，协议 TCP。
SMB（Windows 文件共享协议）默认端口号为 445，协议 TCP。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了在后台运行 frpc，我们创建脚本 &lt;code&gt;frpc.vbs&lt;/code&gt;，将以下内容粘贴进去：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vb title=&#34;frpc.vbs&#34;
set ws=WScript.CreateObject(&#34;WScript.Shell&#34;)
ws.Run &#34;c:\frp\frpc.exe -c c:\frp\frpc.ini&#34;,0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意可能需要修改路径。&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt;frpc.vbs&lt;/code&gt; 放入 &lt;code&gt;C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp&lt;/code&gt; 目录内，即可实现开机自启动。&lt;/p&gt;
&lt;p&gt;如果想测试使用，可以直接运行脚本，或重启自动运行。&lt;/p&gt;
&lt;h2&gt;远控端配置&lt;/h2&gt;
&lt;h3&gt;控制端是移动设备&lt;/h3&gt;
&lt;p&gt;如果需要在手机、iPad 上远控电脑，则需要先安装 &lt;code&gt;Microsoft 远程桌面&lt;/code&gt; App，然后执行以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 App 内右上角点击 &lt;code&gt;+&lt;/code&gt; - &lt;code&gt;添加电脑&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;电脑名称&lt;/code&gt; 填入 &lt;code&gt;IP:remote_port&lt;/code&gt;，例如 &lt;code&gt;x.x.x.x:7001&lt;/code&gt;，点击返回&lt;/li&gt;
&lt;li&gt;&lt;code&gt;账户名称&lt;/code&gt; 填入被控端电脑的账户密码，点击返回&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果一切配置正常，这时候应该可以成功远程控制了。&lt;/p&gt;
&lt;h3&gt;控制端是 Windows&lt;/h3&gt;
&lt;p&gt;直接在开始菜单搜索打开 &lt;code&gt;远程桌面连接&lt;/code&gt;，填入 &lt;code&gt;IP:remote_port&lt;/code&gt; 例如 &lt;code&gt;x.x.x.x:7001&lt;/code&gt;，按提示输入用户名密码，即可实现远程控制。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/52523&#34;&gt;使用 frp 进行内网穿透&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ehlxr.me/2017/01/18/Linux-%E7%9A%84-nohup-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/&#34;&gt;Linux 的 nohup 命令的用法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pa.ci/77.html&#34;&gt;【教程】通过 frp 实现自建远程桌面&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91RDP%E8%BF%9C%E6%8E%A7%EF%BC%88frp%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91RDP%E8%BF%9C%E6%8E%A7%EF%BC%88frp%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>如何用 Markdown 写一份简历</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210318220041.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;用 Markdown 写一份可在线预览，也可导出 PDF 的简历。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预览网址&lt;/strong&gt;：&lt;a href=&#34;https://cv-template.wiki-power.com/&#34;&gt;&lt;strong&gt;cv-template.wiki-power.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何导出 PDF&lt;/strong&gt;：在网页上使用快捷键 &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt; 唤出打印界面，目标打印机选择 &lt;code&gt;Microsoft Print to PDF&lt;/code&gt;，即可导出 PDF 版本的简历。&lt;/p&gt;
&lt;h2&gt;使用方法&lt;/h2&gt;
&lt;p&gt;打开项目 &lt;a href=&#34;https://github.com/linyuxuanlin/Markdown-CV-Site&#34;&gt;&lt;strong&gt;linyuxuanlin/Markdown-CV-Site&lt;/strong&gt;&lt;/a&gt;，点击绿色的按钮 &lt;code&gt;Use this template&lt;/code&gt; 初始化为自己的仓库。&lt;/p&gt;
&lt;p&gt;打开 &lt;a href=&#34;https://vercel.com/&#34;&gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;/a&gt;，点击 &lt;code&gt;New Project&lt;/code&gt;，导入刚刚初始化的 GitHub 仓库，设置下列参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FRAMEWORK PRESET&lt;/code&gt;：选择 &lt;code&gt;Other&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUILD COMMAND&lt;/code&gt;：填入 &lt;code&gt;npm run build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OUTPUT DIRECTORY&lt;/code&gt;：填入 &lt;code&gt;dist&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击下一步，等待几十秒，网站就生成了。&lt;/p&gt;
&lt;p&gt;如需修改简历的内容，请编辑根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 和 &lt;code&gt;markdown/resume-template.md&lt;/code&gt; 文件，推送到 GitHub 仓库后，可自动触发 Vercel 构建。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;p&gt;本项目基于 &lt;a href=&#34;https://github.com/BigLiao/markCV&#34;&gt;&lt;strong&gt;BigLiao/markCV&lt;/strong&gt;&lt;/a&gt;，做了一些 UI 的简化和改善。简历模板使用的是 &lt;a href=&#34;https://cv.ftqq.com/&#34;&gt;&lt;strong&gt;冷熊简历&lt;/strong&gt;&lt;/a&gt; 的默认内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/P64bm-SBYXyQymfHAR1rqA&#34;&gt;聊聊简历怎么写？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8E%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8E%86/</guid>
      
    </item>
    
    <item>
      <title>如何配一台电脑</title>
      
      
      
      
      <description>&lt;h2&gt;1. 选机箱&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200428102157.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电源须下置&lt;/li&gt;
&lt;li&gt;尽量有背部走线设计&lt;/li&gt;
&lt;li&gt;日常使用小机箱 / 中塔较为合适&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. 选主板 /CPU&lt;/h2&gt;
&lt;p&gt;参考 &lt;a href=&#34;http://www.lotpc.com/tag/5923_1.html&#34;&gt;&lt;strong&gt;CPU 天梯图&lt;/strong&gt;&lt;/a&gt;，根据需求选取。注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相同价位下，玩游戏选 Intel，不玩游戏 AMD&lt;/li&gt;
&lt;li&gt;CPU 可以买散片（一般不会有假货），散片须自备散热器&lt;/li&gt;
&lt;li&gt;如自备散热器需注意机箱的 CPU 散热器限高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选完 CPU 选主板。注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AMD 芯片配 AMD 主板，Intel 芯片配 Intel 主板&lt;/li&gt;
&lt;li&gt;注意机箱兼容的主板尺寸（ATX, Micro-ATX, MINI-ITX）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主板 /CPU 可以买套装，比较实惠。&lt;/p&gt;
&lt;h2&gt;3. 选显卡&lt;/h2&gt;
&lt;p&gt;参考 &lt;a href=&#34;http://www.lotpc.com/tag/5921_1.html&#34;&gt;&lt;strong&gt;显卡天梯图&lt;/strong&gt;&lt;/a&gt;，根据需求选取。注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 CPU 有核显，且对配置要求不高，则独立显卡非必须&lt;/li&gt;
&lt;li&gt;采用 NVIDIA 芯片的称之为 N 卡，而 AMD 芯片称之为 A 卡&lt;/li&gt;
&lt;li&gt;相同价位下，绘图渲染工作用 A 卡，玩游戏用 N 卡&lt;/li&gt;
&lt;li&gt;N 卡高端型号比较丰富，且功耗较低；A 卡性价比高&lt;/li&gt;
&lt;li&gt;注意机箱的显卡限长&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. 选内存条&lt;/h2&gt;
&lt;p&gt;内存条基本参数要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DDR4 2400 频数&lt;/li&gt;
&lt;li&gt;注意区分台式机 / 笔记本内存条&lt;/li&gt;
&lt;li&gt;根据需求，基础 16GB，高性能 32GB 以上&lt;/li&gt;
&lt;li&gt;注意主板的内存插口数量&lt;/li&gt;
&lt;li&gt;推荐金士顿 / 三星的内存条&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5. 选硬盘&lt;/h2&gt;
&lt;p&gt;硬盘分固态（SSD）与机械（HDD）。因为相同容量下， SSD 比 HDD 贵而且传输速率高，所以通常将系统和软件存放于 SSD，不常用而体积大的资料文档存放于 HDD.&lt;/p&gt;
&lt;p&gt;SSD 基本参数要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;M.2 接口（NVMe 协议）&lt;/li&gt;
&lt;li&gt;根据需求选容量&lt;/li&gt;
&lt;li&gt;注意对比读写速率&lt;/li&gt;
&lt;li&gt;推荐三星的 SSD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HDD 基本参数要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SATA 3.0 接口&lt;/li&gt;
&lt;li&gt;7200rpm 转速&lt;/li&gt;
&lt;li&gt;理论传输速率 6Gbit/s&lt;/li&gt;
&lt;li&gt;根据需求选容量&lt;/li&gt;
&lt;li&gt;推荐希捷的 HDD&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;6. 选电源&lt;/h2&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据机箱限定的尺寸选取&lt;/li&gt;
&lt;li&gt;（300W 起步）所有硬件功率累加，再多 100W 冗余就足够&lt;/li&gt;
&lt;li&gt;注意转换效率：白、铜、银、金、白金、钛金依次递增，价格越贵，电费越省&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;7. 其他配件&lt;/h2&gt;
&lt;p&gt;无线模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最好支持 Wi-Fi 6&lt;/li&gt;
&lt;li&gt;注意接口类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开机卡&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意接口类型&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E9%85%8D%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E5%A6%82%E4%BD%95%E9%85%8D%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91/</guid>
      
    </item>
    
    <item>
      <title>技术文档写作规范</title>
      
      
      
      
      <description>&lt;p&gt;众所周知，风格统一、语法规范的排版，能使文章更加易读，降低沟通的成本。&lt;/p&gt;
&lt;h2&gt;文章结构&lt;/h2&gt;
&lt;p&gt;撰写技术文章时，可以参考以下的结构层次：&lt;/p&gt;
&lt;p&gt;```markdown&lt;/p&gt;
&lt;h1&gt;文章标题&lt;/h1&gt;
&lt;p&gt;一两句话介绍本文的内容。&lt;/p&gt;
&lt;h2&gt;效果&lt;/h2&gt;
&lt;p&gt;请大致介绍 demo 的用法，并展示效果。&lt;/p&gt;
&lt;h2&gt;原理&lt;/h2&gt;
&lt;p&gt;请逐步介绍原理。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;做一个简单的总结。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;参考 1 的链接&#34;&gt;参考 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;参考 2 的链接&#34;&gt;参考 2&lt;/a&gt;
```&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;排版规范&lt;/h2&gt;
&lt;h3&gt;段落&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用 Markdown 语法时，首行无需缩进&lt;/li&gt;
&lt;li&gt;段与段之间需要有空行区分&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;需要添加空格的场景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;中文与英文、数字之间：&lt;blockquote&gt;
&lt;p&gt;错误：&lt;code&gt;Qt生成器是一个针对C++的跨平台IDE&lt;/code&gt;&lt;br&gt;
正确：&lt;code&gt;Qt 生成器是一个针对 C++ 的跨平台 IDE&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;数字与单位之间：（但数字与百分号间不需加空格）&lt;blockquote&gt;
&lt;p&gt;错误：&lt;code&gt;其频率为 72MHz，占空比为 50 %。&lt;/code&gt;&lt;br&gt;
正确：&lt;code&gt;其频率为 72 MHz，占空比为 50%。&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;普通与特殊字符（链接、加粗、斜体等）之间：&lt;blockquote&gt;
&lt;p&gt;这个 &lt;strong&gt;字体&lt;/strong&gt; 使用了加粗样式
请 &lt;strong&gt;&lt;a href=&#34;https://wiki.wildwolf.pw/&#34;&gt;点击这里&lt;/a&gt;&lt;/strong&gt; 进行订阅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;英文半角标点之后：&lt;blockquote&gt;
&lt;p&gt;Hello, world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;中文与破折号之间：&lt;blockquote&gt;
&lt;p&gt;Markdown - 一种高效的写作方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;文本样式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;中英文混排时，默认使用中文全角标点&lt;/li&gt;
&lt;li&gt;中英文混排中，如果出现整句英文，则此句内使用英文半角标点&lt;/li&gt;
&lt;li&gt;行内链接一般使用加粗，以提高阅读性&lt;/li&gt;
&lt;li&gt;使用准确的专有名词：&lt;blockquote&gt;
&lt;p&gt;错误：使用 github 登录&lt;br&gt;
正确：使用 GitHub 登录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;中文使用直角引号，代替普通引号：&lt;blockquote&gt;
&lt;p&gt;错误：华广机器人队，也称为“野狼队”&lt;br&gt;
正确：华广机器人队，也称为「野狼队」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;不重复使用标点以强调&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;写作风格&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如无必要，勿增实体&lt;/li&gt;
&lt;li&gt;为了提高可读性，尽量避免使用长句，可拆分为多个简单句&lt;/li&gt;
&lt;li&gt;论点要有论据支持，避免只说理不举例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83&#34;&gt;个人文案排版规范&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/</guid>
      
    </item>
    
    <item>
      <title>把回忆放心交给 Google Photos（已弃用）</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;过去，我们会把承载着回忆的照片存在电脑或硬盘上。我们渐渐发现，照片不断堆积，文件夹式的分类方法也逐渐失去其意义：一次旅行过后，常常因拖延症而没有整理照片；照片整理好了，却再也不会翻看品味了；一旦硬盘遭祸（物理或人为因素），只能送去数据恢复，有时还不一定能救回来。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2af4c42e6f7a9f4ed45b6f150b164184.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我不断寻找、发现新的存放照片的介质。过用 Resilio Sync，微云同步盘，百度云同步盘等同步工具做多重备份；也考虑过搭建 NAS 照片库（RAID 1）；或者是各类云服务例如 iCloud，小米云相册，微云，百度云等，却始终没有用着顺手的。首先，用文件夹的形式来管理照片，确实很规整，但不方便整理与翻看；其次，国内的这些服务提供商，哪天要缺钱了把你隐私给卖了，也是很常见的。&lt;/p&gt;
&lt;p&gt;我最终发现了 Google Photos，相对安全，操作也比较人性化。体验了一年多时间，觉得挺不错的，于是更新了本篇文章。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/0f0ab1740e3206831f3e6ef19ef0c903.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;特色&lt;/h2&gt;
&lt;h3&gt;1. 无限容量&lt;/h3&gt;
&lt;p&gt;相比 iCloud（5GB 免费空间），小米云（11GB 免费空间），虽然可以购买储存容量，但是在同步所有照片的时候，多少还是有点小心翼翼。而 Google Photos 的无限容量，完全满足搭建个人存放照片的需求。但有条件：照片最高 1600 万像素，视频 1080p，超出会被压缩。不过对于非专业用户来说，也足够了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/cea385ad94811257f4b7c084d41c5d30.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;2. 智能&lt;/h3&gt;
&lt;p&gt;相较于文件夹形式管理，即使没有对照片归档分类，Google Photos 的搜索功能也足以帮你挖出封存多年的旧照片；你可以给人物打上标签，就可以搜索到关于 TA 的所有照片了。另外，「重温往年今日」也是一个不错的功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/f1ccf68a3eeae7b4a69f58122838666d.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;3. 相对安全&lt;/h3&gt;
&lt;p&gt;数据无价。如果你只把相册储存在自己的设备上（硬盘等），也许会担心数据损坏或遗失问题。而把相册交给信任的云服务提供商保管，则会安全许多。毕竟，他们会对用户的数据负责；而假如硬盘出了问题，你只能自己承担。 谈到安全，隐私问题不容忽视。于我而言，会把照片这样的隐私给不作恶的 Google 托管，绝不会把数据交给 360、百度。GDPR 下对用户隐私更加尊重的 Google，比「中国人更愿意用隐私换便利」的百度，不知高到哪里去了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/59bd6366d7c370b480def6fec44802a6.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;4. 其他优点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;兼容各设备（iCloud 和某些云服务，只照顾自家设备）&lt;/li&gt;
&lt;li&gt;自带照片编辑器&lt;/li&gt;
&lt;li&gt;同步到云端后可释放手机储存&lt;/li&gt;
&lt;li&gt;自动合并重复照片&lt;/li&gt;
&lt;li&gt;界面美观、人性化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;弊端&lt;/h2&gt;
&lt;h3&gt;1. 安全问题&lt;/h3&gt;
&lt;p&gt;不敢说得太过绝对，毕竟免费的服务，不应许以过高的期待。不过，Google 有名声做保障，也相较于国内厂商，确实比存在硬盘和国内云盘安全得多。 Google 也许会拿你的照片训练 AI，但应该不会泄露出去。&lt;/p&gt;
&lt;h3&gt;2. 国内网络&lt;/h3&gt;
&lt;p&gt;众所周知的原因，如果你没有良好的梯子，那还是放弃 Google Photos 吧。&lt;/p&gt;
&lt;h3&gt;3. 同步&lt;/h3&gt;
&lt;p&gt;Google Photos 在打开的时候才能同步照片，或许这也是优点。同步后可以删除设备上的照片，释放空间。用一段时间后缓存会增加，需要定期清缓存（对于储存容量小的设备）。&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：还是对数据安全不放心，有更好的解决方法吗？&lt;br&gt;
A：建议用移动硬盘加密备份，或者打包加密再上传到国外的网盘。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ifanr.com/527180&#34;&gt;探寻 Google Photos 无限免费的“真相”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sohu.com/a/190124959_742974&#34;&gt;Google Photos 备份照片的好选择，却不一定是最好的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.playpcesor.com/2015/06/google-photos-search-tips-16.html&#34;&gt;Google 相簿你一定想知道的 16 招搜尋照片神奇密技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.newseed.cn/p/1345029&#34;&gt;“中国人更愿意用隐私换便利”，李彦宏错了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/29151&#34;&gt;这一次，Google Photos 要重新定义「云相册」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://policies.google.com/privacy?hl=zh-CN&#34;&gt;Google 隐私权和条款&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E6%8A%8A%E5%9B%9E%E5%BF%86%E6%94%BE%E5%BF%83%E4%BA%A4%E7%BB%99GooglePhotos/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E6%8A%8A%E5%9B%9E%E5%BF%86%E6%94%BE%E5%BF%83%E4%BA%A4%E7%BB%99GooglePhotos/</guid>
      
    </item>
    
    <item>
      <title>用 Graphviz 绘制关系图</title>
      
      
      
      
      <description>&lt;p&gt;一种用代码绘制关系图的方式。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.graphviz.org/&#34;&gt;Graphviz&lt;/a&gt; 是个好东西，可用来绘制关系图。与 Visio 有一个本质上的差异： Graphviz 生成图是&lt;strong&gt;自动布局&lt;/strong&gt;的，不需要手动调整元素的位置。当一个关系网络比较复杂时，用自动布局可实现&lt;strong&gt;最小化连线交叉&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/Graphviz.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;发现一个很好用的在线编辑器：[GraphvizOnline](&lt;a href=&#34;http://dreampuf.github.io/GraphvizOnline/#digraph%20graph_name%20{%20&#34;&gt;http://dreampuf.github.io/GraphvizOnline/#digraph graph_name { &lt;/a&gt; %20%20A-&amp;gt;B[label%3D&#34;关系&#34;]%20 }) 支持即时渲染，导出 &lt;code&gt;.png&lt;/code&gt; 与 &lt;code&gt;.svg&lt;/code&gt; 等格式。&lt;/p&gt;
&lt;p&gt;macOS 安装：&lt;code&gt;brew install graphviz&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;作图流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;新建 &lt;code&gt;xxx.dot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;.dot&lt;/code&gt; 文档&lt;/li&gt;
&lt;li&gt;切换到所在目录，导出：&lt;code&gt;dot xxx.dot -T png -o xxx.png&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;简易语法&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;graph graph_name {
  A--B[label=&#34;连接关系&#34;]
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/屏幕快照%202019-02-01%20 下午 2.02.44.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;自动布局是 Graphviz 的精髓。类比我之前用 Markdown 语法直接生成幻灯片，这些工具把内容标准化，让人能够&lt;strong&gt;更加注重于内容，而非形式与布局&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.zengrong.net/post/2294.html&#34;&gt;Graphviz 简易教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.graphviz.org/pdf/dotguide.pdf&#34;&gt;Drawing graphs with dot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/lanchunhui/article/details/49472949&#34;&gt;Windows 下 Graphviz 安装及入门教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E7%94%A8Graphviz%E7%BB%98%E5%88%B6%E5%85%B3%E7%B3%BB%E5%9B%BE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E7%94%A8Graphviz%E7%BB%98%E5%88%B6%E5%85%B3%E7%B3%BB%E5%9B%BE/</guid>
      
    </item>
    
    <item>
      <title>用树莓派架设云打印服务器</title>
      
      
      
      
      <description>&lt;p&gt;用树莓派搭建云打印服务器，让普通打印机也能无线共享打印。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_20181222_155243.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;假使办公室内有一台公用的打印机（未连接电脑），每次打印都需要手动切换。那么可以用树莓派作为打印机的服务器，实现共享云打印。&lt;/p&gt;
&lt;h2&gt;步骤&lt;/h2&gt;
&lt;h3&gt;1. 前期准备&lt;/h3&gt;
&lt;p&gt;树莓派刷入 Raspbian 系统，最好更换国内软件源。&lt;/p&gt;
&lt;h3&gt;2. 配置云打印服务&lt;/h3&gt;
&lt;p&gt;安装 CUPS 插件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt-get install cups
sudo cupsctl --remote-any
sudo /etc/init.d/cups restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看树莓派当前 IP 地址：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$hostname -I&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;现在可以在浏览器输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://你的树莓派 IP:631/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开 CUPS 的界面。 浏览器可能会弹出警告，忽略即可。&lt;/p&gt;
&lt;p&gt;跳到 Administration 界面，注意右边的勾选：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/SRnaG8Upe4QCw4A7__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;添加打印机：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2ha01tLqMK8dKPPw__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;将打印机用 USB 线接上树莓派，一般可以看到本地 USB 设备： &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/dOY25IVr55cf4qbg__thumbnail-1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;直接添加设备，名字越简单越好，share 选项一定要勾选： &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/zY62367hBa0ZuwJV__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到打印机相应的型号，然后一直点就行了。 配置完成后，可以在打印机的页面选择 &lt;code&gt;Print Test Page&lt;/code&gt; 测试能否正常打印：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/9izhdEoI8cobbMjF__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;3. 在 Windows 上配置&lt;/h3&gt;
&lt;p&gt;控制面板 - 设备和打印机 - 添加打印机&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/dk39pnMjcQYPBElC__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/CRkgxClLaaYjdGPt__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;填入 IP，例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://你的树莓派 IP:631/printers/刚才设定的打印机名称&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/Z8sZTaxH5ZoGWyBK__thumbnail.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打印测试页试试？&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;重复两遍以上的事情，就可以考虑用自动化流程解决了，要学会用聪明的方法偷懒。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ncnynl.com/archives/201608/742.html&#34;&gt;树莓派 3 - 搭建网络打印机服务器（支持 PC，IPhone，Android 打印）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9E%B6%E8%AE%BE%E4%BA%91%E6%89%93%E5%8D%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E6%8A%80%E6%9C%AF%E6%B5%81/%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9E%B6%E8%AE%BE%E4%BA%91%E6%89%93%E5%8D%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      
    </item>
    
    <item>
      <title>使用 Bitwarden 搭建密码管理器（群晖 Docker）</title>
      
      
      
      
      <description>&lt;p&gt;注：由于 bitwarden_rs 镜像更名，且 Bitwarden 官方浏览器拓展与旧版本不兼容无法登录，请将下文出现的 &lt;code&gt;bitwardenrs/server&lt;/code&gt; 替换为 &lt;code&gt;vaultwardenrs/server&lt;/code&gt;，并确保版本不低于 1.27.0！&lt;/p&gt;
&lt;p&gt;本文介绍如何在自己的群晖上使用 Docker 对全平台密码管理服务器 Bitwarden 进行私有部署。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210503221838.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;目前的密码管理器方案有 1Password，Lastpass，KeePass，Bitwarden 等，这几种方案各有优劣。在这里我的需求是可多端同步使用，开源可自部署，且有自动填充的功能，同时兼顾界面美观，所以我选择了在自己的群晖上部署 Bitwarden 服务。&lt;/p&gt;
&lt;h2&gt;在群晖 Docker 上部署&lt;/h2&gt;
&lt;h3&gt;建立存放数据的文件夹&lt;/h3&gt;
&lt;p&gt;我们在 &lt;code&gt;docker&lt;/code&gt; 目录下建立存放 Bitwarden 数据的文件夹（比如 &lt;code&gt;docker/bitwarden&lt;/code&gt;）。&lt;/p&gt;
&lt;h3&gt;下载镜像并配置容器&lt;/h3&gt;
&lt;p&gt;打开群晖 Docker 套件，下载 &lt;code&gt;bitwardenrs/server&lt;/code&gt; 镜像，双击启动，勾选 &lt;code&gt;启用自动重新启动&lt;/code&gt;，然后进入 &lt;code&gt;高级设置&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;卷&lt;/code&gt; 页面配置挂载的文件夹，点击 &lt;code&gt;添加文件夹&lt;/code&gt;，选择本地的 &lt;code&gt;docker/bitwarden&lt;/code&gt; 路径，装载路径填 &lt;code&gt;/data&lt;/code&gt;（默认不可变）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210503211711.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;端口设置&lt;/code&gt; 页面，手动设置容器端口 80 所对应的本地端口（比如我设置为 &lt;code&gt;8003&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210503211759.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后完成配置，启动容器。输入群晖本地 IP:8003，我们就能看到 Bitwarden 的登陆页面了。但是当我们创建账户后登录时，会看到这样一条提示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210503212146.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是因为，Docker 容器本身没有提供 https 端口配置，而 Bitwarden 又只能够通过 https 来进行登录（SSL 加密防止中间人攻击）。所以，在这里我们必须使用群晖自带的反向代理服务，通过 https 来访问内部 http 端口了。具体教程可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%A8%E7%BE%A4%E6%99%96%E8%87%AA%E5%B8%A6%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0HTTPS%E8%AE%BF%E9%97%AE&#34;&gt;&lt;strong&gt;用群晖自带反向代理实现 HTTPS 访问&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;多设备使用&lt;/h2&gt;
&lt;p&gt;可以在 Bitwarden 官方的 &lt;a href=&#34;https://bitwarden.com/download/&#34;&gt;&lt;strong&gt;下载页面&lt;/strong&gt;&lt;/a&gt;，下载各版本的客户端&lt;/p&gt;
&lt;h3&gt;桌面端&lt;/h3&gt;
&lt;p&gt;推荐直接使用浏览器扩展 &lt;a href=&#34;https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb&#34;&gt;&lt;strong&gt;Bitwarden - 免费密码管理器&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在登录的时候，先点击左上角的小齿轮，进入设置：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210503215149.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;自托管环境&lt;/code&gt; 中的 &lt;code&gt;服务器 URL&lt;/code&gt; 填入群晖 NAS 的 IP:外部端口，即可正常登录。&lt;/p&gt;
&lt;p&gt;如果需要，也可以下载桌面客户端使用。&lt;/p&gt;
&lt;h3&gt;移动端&lt;/h3&gt;
&lt;p&gt;直接在 AppStore 或各应用商城下载 Bitwarden App，在登录页面也需要配置自托管环境，步骤与桌面端相同。&lt;/p&gt;
&lt;h2&gt;备份密码数据库&lt;/h2&gt;
&lt;p&gt;备份 Bitwarden 数据库的方法有两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在网页端或客户端内选择 &lt;code&gt;导出密码库&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;直接备份 &lt;code&gt;data&lt;/code&gt; 文件夹&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ioiox.com/archives/70.html&#34;&gt;群晖 NAS 高级服务 - docker 部署 bitwarden 全平台密码管理器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ppgg.in/blog/10271.html#comment-8463&#34;&gt;使用群晖搭建第三方 Bitwarden 密码服务器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8Bitwarden%E6%90%AD%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8Bitwarden%E6%90%AD%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>使用 Calibre 搭建在线书库（群晖 Docker）</title>
      
      
      
      
      <description>&lt;p&gt;如何在群晖 NAS 用 calibre-web（Docker）搭建一个在线书库。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210429125418.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;相比于传统用文件夹的方式，以开源的 Calibre 为代表的书库管理方式，能提供更丰富的功能诸如在线阅读、下载、格式转换、推送到邮箱、去除重复书籍等。calibre-web 是一个基于 Calibre 的 Docker 镜像，可以让我们很方便地将书库部署在像群晖这样的服务器上。&lt;/p&gt;
&lt;h2&gt;建立初始文件夹&lt;/h2&gt;
&lt;p&gt;首先，建立书库资源文件夹，这里我直接在磁盘根目录建立了一个名为 &lt;code&gt;book&lt;/code&gt; 的共享文件夹：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210429214028.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;相应地，在 &lt;code&gt;docker&lt;/code&gt; 文件夹内创建一个名为 &lt;code&gt;calibre-web&lt;/code&gt; 文件夹，专门用于存放 Docker 镜像的配置文件。&lt;/p&gt;
&lt;h2&gt;创建容器&lt;/h2&gt;
&lt;p&gt;打开群晖的 Docker 套件，在注册表中搜索 &lt;code&gt;johngong/calibre-web&lt;/code&gt;，双击下载后，初始化容器，点进高级设置。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;卷&lt;/code&gt; 页面添加映射文件夹，装载路径分别是 &lt;code&gt;/library&lt;/code&gt; 和 &lt;code&gt;/config&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210429214908.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;端口设置&lt;/code&gt; 页面添加端口映射，主要将容器内部的 &lt;code&gt;8083&lt;/code&gt; 端口映射出去，这里我选择 &lt;code&gt;5004&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210429215121.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后，创建并启动容器。&lt;/p&gt;
&lt;h2&gt;运行测试&lt;/h2&gt;
&lt;p&gt;打开群晖内网 IP:5004 打开管理界面，默认的账号是 &lt;code&gt;admin&lt;/code&gt;，密码是 &lt;code&gt;admin123&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，默认是没有书籍上传功能的，需要依次点击右上角 &lt;code&gt;管理权限&lt;/code&gt; - &lt;code&gt;编辑基本配置&lt;/code&gt; — &lt;code&gt;启用上传&lt;/code&gt;，才能启用书籍上传功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210429215628.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;启用 HTTPS&lt;/h2&gt;
&lt;h3&gt;使用群晖系统自带的反向代理（推荐）&lt;/h3&gt;
&lt;p&gt;具体教程可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%A8%E7%BE%A4%E6%99%96%E8%87%AA%E5%B8%A6%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0HTTPS%E8%AE%BF%E9%97%AE&#34;&gt;&lt;strong&gt;用群晖自带反向代理实现 HTTPS 访问&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;直接添加证书方法&lt;/h3&gt;
&lt;p&gt;将申请到的证书和密钥文件复制一份到 &lt;code&gt;docker/calibre-web/&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;p&gt;随后在 calibre-web 内依次点击 &lt;code&gt;管理权限&lt;/code&gt; - &lt;code&gt;编辑基本配置&lt;/code&gt; - &lt;code&gt;服务器配置&lt;/code&gt;，配置 SSL 证书及密钥文件的路径（例如我是 &lt;code&gt;/config/wiki-power.com.cer&lt;/code&gt; 和 &lt;code&gt;/config/wiki-power.com.key&lt;/code&gt;），随后点击保存。&lt;/p&gt;
&lt;p&gt;这样就可以开启 HTTPS 访问了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chrno.cn/index.php/docker/15.html&#34;&gt;群晖 Docker 安装 calibre-web 图书管理系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8Calibre%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E4%B9%A6%E5%BA%93%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8Calibre%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E4%B9%A6%E5%BA%93%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>使用 RSSHub 搭建 RSS 生成器（群晖 Docker）</title>
      
      
      
      
      <description>&lt;p&gt;在群晖 Docker 上搭建 RSSHub 服务，给各种奇奇怪怪的内容生成 RSS 订阅源。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210504105215.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;在群晖 Docker 上部署&lt;/h2&gt;
&lt;p&gt;打开群晖 Docker 套件，下载 &lt;code&gt;diygod/rsshub&lt;/code&gt; 镜像，双击启动，勾选 &lt;code&gt;启用自动重新启动&lt;/code&gt;，然后进入 &lt;code&gt;高级设置&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;端口设置&lt;/code&gt; 页面，手动设置容器端口 1200 所对应的本地端口（比如我设置为 &lt;code&gt;8004&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210504085806.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后完成配置，启动容器。输入群晖本地 IP:8004，如果能看到 RSSHub 的页面，就算安装成功了。&lt;/p&gt;
&lt;h2&gt;使用步骤&lt;/h2&gt;
&lt;p&gt;详细的使用方法请参考 &lt;a href=&#34;https://docs.rsshub.app/&#34;&gt;&lt;strong&gt;RSSHub 官方文档&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;举个简单的例子，在官方文档中查到，豆瓣 &lt;code&gt;正在上映的电影&lt;/code&gt; 生成方法如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210504104630.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，使用 &lt;code&gt;你的域名/douban/movie/playing&lt;/code&gt; 就可以使用自己的服务器来生成 RSS 源了。&lt;/p&gt;
&lt;p&gt;建议使用群晖系统自带的反向代理，实现 HTTPS 加密访问。具体教程可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%A8%E7%BE%A4%E6%99%96%E8%87%AA%E5%B8%A6%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0HTTPS%E8%AE%BF%E9%97%AE&#34;&gt;&lt;strong&gt;用群晖自带反向代理实现 HTTPS 访问&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;使用 RSSHub Radar 自动检测路由&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/DIYgod/RSSHub-Radar&#34;&gt;&lt;strong&gt;RSSHub Radar&lt;/strong&gt;&lt;/a&gt; 是一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的浏览器扩展。&lt;/p&gt;
&lt;p&gt;在其设置页面填入自定义地址即可使用。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.rsshub.app/&#34;&gt;RSSHub 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://immwind.com/use-docker-install-rsshub-in-synology&#34;&gt;在群晖中使用 Docker 安装 RSSHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8RSSHub%E6%90%AD%E5%BB%BARSS%E7%94%9F%E6%88%90%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8RSSHub%E6%90%AD%E5%BB%BARSS%E7%94%9F%E6%88%90%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>使用 TinyPNG 自动更新容器（群晖 Docker）</title>
      
      
      
      
      <description>&lt;p&gt;使用 TinyPNG 自动高质量压缩本地图片。&lt;/p&gt;
&lt;h2&gt;在群晖 Docker 应用中下载镜像&lt;/h2&gt;
&lt;p&gt;打开群晖 Docker 套件，下载 &lt;code&gt;stilleshan/tinypng&lt;/code&gt; 镜像即可。&lt;/p&gt;
&lt;h2&gt;在任务计划中配置 Watchtower&lt;/h2&gt;
&lt;p&gt;打开群晖的 &lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;任务计划&lt;/code&gt; - &lt;code&gt;新增&lt;/code&gt; - &lt;code&gt;计划的任务&lt;/code&gt; - &lt;code&gt;用户定义的脚本&lt;/code&gt;，随后按以下图片填写配置：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202301092319956.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202301092321592.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中的脚本：&lt;/p&gt;
&lt;p&gt;```shell
docker run --rm --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --run-once calibre-web freshrss code-server&lt;/p&gt;
&lt;p&gt;docker run --rm -v /your/pic/path:/pic stilleshan/tinypng # 修改 /your/pic/path 为需要压缩的图片目录
```&lt;/p&gt;
&lt;p&gt;docker run --rm -v /volume1/wiki-media/img:/pic stilleshan/tinypng&lt;/p&gt;
&lt;p&gt;注意，脚本的最后 &lt;code&gt;calibre-web freshrss code-server&lt;/code&gt; 是需要更新的容器名，请替换为你需要更新的。&lt;/p&gt;
&lt;p&gt;保存，运行脚本即可实现 Docker 容器批量定时更新。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://post.smzdm.com/p/awzggnqp/&#34;&gt;如何优雅地使用一条命令更新群晖 docker 容器 - Watchtower 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8TinyPNG%E8%87%AA%E5%8A%A8%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8TinyPNG%E8%87%AA%E5%8A%A8%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>使用 Watchtower 自动更新容器（群晖 Docker）</title>
      
      
      
      
      <description>&lt;p&gt;使用 Watchtower 自动更新群晖 Docker 上的容器。&lt;/p&gt;
&lt;h2&gt;在群晖 Docker 应用中下载镜像&lt;/h2&gt;
&lt;p&gt;打开群晖 Docker 套件，下载 &lt;code&gt;containrrr/watchtower&lt;/code&gt; 镜像即可。&lt;/p&gt;
&lt;h2&gt;在任务计划中配置 Watchtower&lt;/h2&gt;
&lt;p&gt;打开群晖的 &lt;code&gt;控制面板&lt;/code&gt; - &lt;code&gt;任务计划&lt;/code&gt; - &lt;code&gt;新增&lt;/code&gt; - &lt;code&gt;计划的任务&lt;/code&gt; - &lt;code&gt;用户定义的脚本&lt;/code&gt;，随后按以下图片填写配置：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202301092319956.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202301092321592.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中的脚本：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker run --rm --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --run-once calibre-web freshrss code-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意，脚本的最后 &lt;code&gt;calibre-web freshrss code-server&lt;/code&gt; 是需要更新的容器名，请替换为你需要更新的；或者留空表示更新全部容器。&lt;/p&gt;
&lt;p&gt;保存，运行脚本即可实现 Docker 容器批量定时更新。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://post.smzdm.com/p/awzggnqp/&#34;&gt;如何优雅地使用一条命令更新群晖 docker 容器 - Watchtower 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8Watchtower%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%AE%B9%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8Watchtower%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%AE%B9%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>使用 acme.sh 自动申请域名证书（群晖 Docker）</title>
      
      
      
      
      <description>&lt;p&gt;本文介绍如何使用 Docker 镜像 acme.sh，实现名证书自动申请和续签功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh&#34;&gt;&lt;strong&gt;acme.sh&lt;/strong&gt;&lt;/a&gt; 可以从 letsencrypt 生成免费的证书，支持 Docker 部署，支持 http 和 DNS 两种域名验证方式，其中包括手动，自动 DNS 及 DNS alias 模式方便各种环境和需求。可同时申请合并多张单域名，泛域名证书，并自动续签证书和部署到项目。&lt;/p&gt;
&lt;h2&gt;准备 DNS API&lt;/h2&gt;
&lt;p&gt;本文以腾讯云为例申请 DNS API，其他解析平台请参考官方文档 &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&#34;&gt;&lt;strong&gt;dnsapi&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;首先，打开 &lt;a href=&#34;https://console.dnspod.cn/&#34;&gt;&lt;strong&gt;DNSPOD&lt;/strong&gt;&lt;/a&gt;，点击右上角头像 - &lt;code&gt;密钥管理&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接着，创建一个新的密钥，并拷贝 &lt;strong&gt;ID&lt;/strong&gt; 与 &lt;strong&gt;Token&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;在群晖 Docker 上部署&lt;/h2&gt;
&lt;p&gt;本教程介绍的是 Docker 的 daemon 守护模式，一直挂着容器，实现证书到期自动续期的功能。&lt;/p&gt;
&lt;h3&gt;创建配置文件夹&lt;/h3&gt;
&lt;p&gt;我们先创建 &lt;code&gt;/docker/acme.sh&lt;/code&gt; 文件夹，再手动创建 &lt;code&gt;account.conf&lt;/code&gt; 文件：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210430212420.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着，我们编辑这个文件，手动添加这几行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;conf
export DP_Id=&#34;刚刚申请的 ID&#34;
export DP_Key=&#34;刚刚申请的 TOKEN&#34;
AUTO_UPGRADE=&#39;1&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;随后保存并关闭文件。&lt;/p&gt;
&lt;h3&gt;下载镜像并配置容器&lt;/h3&gt;
&lt;p&gt;打开群晖 Docker 套件，下载 &lt;code&gt;neilpang/acme.sh&lt;/code&gt; 镜像，双击启动并进入 &lt;code&gt;高级设置&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;卷&lt;/code&gt; 页面配置挂载的文件夹，点击 &lt;code&gt;添加文件夹&lt;/code&gt;，选择本地的 &lt;code&gt;docker/acme.sh&lt;/code&gt; 路径，装载路径填 &lt;code&gt;/acme.sh&lt;/code&gt;（默认不可变）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210430214221.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;网络&lt;/code&gt; 页面，勾选 &lt;code&gt;使用与 Docker Host 相同的网络&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;接着，切换到 &lt;code&gt;环境&lt;/code&gt; 页面，在 &lt;code&gt;命令&lt;/code&gt; 框里填入 &lt;code&gt;daemon&lt;/code&gt; 命令：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210430215244.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后创建并运行容器。双击已运行的容器，切换到 &lt;code&gt;终端机&lt;/code&gt; 页面，点击 &lt;code&gt;通过命令启动&lt;/code&gt;，输入 &lt;code&gt;sh&lt;/code&gt; 后点确定。&lt;/p&gt;
&lt;p&gt;输入以下命令实现自动更新：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
acme.sh --upgrade --auto-upgrade&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后输入以下命令申请证书：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
acme.sh --issue --dns dns_dp -d wiki-power.com -d *.wiki-power.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;dns_dp&lt;/code&gt; 代表腾讯云 DNSPod，如果是阿里云请填写 &lt;code&gt;dns_ali&lt;/code&gt;，CLoudflare 填写 &lt;code&gt;dns_cf&lt;/code&gt;，其他请参考官方手册 &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&#34;&gt;&lt;strong&gt;dnsapi&lt;/strong&gt;&lt;/a&gt;。另外，其中 &lt;code&gt;*.wiki-power.com&lt;/code&gt; 代表申请的是泛域名证书。如果需要同时申请多域名，可以按照以下的方式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
acme.sh --issue --dns dns_dp -d aaa.com -d *.aaa.com -d bbb.com -d *.bbb.com -d ccc.com -d *.ccc.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 daemon 守护模式下，acme.sh 会根据申请记录，每 60 天自动更新证书。&lt;/p&gt;
&lt;h3&gt;生成证书&lt;/h3&gt;
&lt;p&gt;如果一切顺利，你可以在 &lt;code&gt;docker/acme.sh/域名命名的文件夹&lt;/code&gt; 内发现 &lt;code&gt;域名.cer&lt;/code&gt; 和 &lt;code&gt;域名.key&lt;/code&gt;，这就是证书和密钥文件，可以拷贝至需要用到的地方。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ioiox.com/archives/88.html&#34;&gt;群晖 NAS 高级服务 - docker 部署 acme.sh 自动申请域名证书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8acme.sh%E8%87%AA%E5%8A%A8%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8acme.sh%E8%87%AA%E5%8A%A8%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>使用 frp 访问群晖 NAS</title>
      
      
      
      
      <description>&lt;p&gt;使用 frp 在任意网络下访问群晖 NAS。&lt;/p&gt;
&lt;h2&gt;为什么要通过 frp 访问群晖&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;无公网 IP&lt;/li&gt;
&lt;li&gt;QuickConnect 服务太慢&lt;/li&gt;
&lt;li&gt;花生壳等服务需要单独买流量&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;服务端配置&lt;/h2&gt;
&lt;p&gt;跳转文章 &lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91RDP%E8%BF%9C%E6%8E%A7%EF%BC%88frp%EF%BC%89#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;如何实现外网 RDP 远控（frp）· 服务端配置&lt;/strong&gt;&lt;/a&gt;。需要注意的是，&lt;code&gt;frpc.ini&lt;/code&gt; 配置文件中的 &lt;code&gt;vhost_http_port&lt;/code&gt; / &lt;code&gt;vhost_https_port&lt;/code&gt; 参数必须保留。&lt;/p&gt;
&lt;h3&gt;绑定域名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在域名解析处以服务器 IP 添加 A 记录&lt;/li&gt;
&lt;li&gt;在云服务器处配置域名绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;群晖 NAS 配置&lt;/h2&gt;
&lt;h3&gt;编辑配置文件&lt;/h3&gt;
&lt;p&gt;在任意位置新建 &lt;code&gt;frpc.ini&lt;/code&gt; 文件，填入以下内容：&lt;/p&gt;
&lt;p&gt;```ini title=&#34;frpc.ini&#34;
[common]
server_addr = 服务器 IP
server_port = 服务端 frp 端口，默认为 7000
token = 密钥，需与服务端配置的相同&lt;/p&gt;
&lt;p&gt;[dsm-http]
type = tcp
local_ip = localhost
local_port = 群晖 DSM http 端口，默认为 5000
custom_domains = 绑定的域名
remote_port = 自定义远程端口&lt;/p&gt;
&lt;p&gt;[dsm-https]
type = tcp
local_ip = localhost
local_port = 群晖 DSM https 端口，默认为 5001
custom_domains = 绑定的域名
remote_port = 自定义远程端口&lt;/p&gt;
&lt;p&gt;[ssh]
type = tcp
local_ip = localhost
local_port = 默认为 22
custom_domains = 绑定的域名
remote_port = 自定义远程端口
```&lt;/p&gt;
&lt;h3&gt;使用 Docker 方法&lt;/h3&gt;
&lt;p&gt;在群晖的 Docker 内安装 &lt;code&gt;stilleshan/frpc&lt;/code&gt; 映像，使用以下参数初始化容器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;勾选 &lt;code&gt;使用高权限执行容器&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;启用自动重新启动&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;卷&lt;/code&gt; 标签页添加文件，选择本地的 &lt;code&gt;frpc.ini&lt;/code&gt; 文件，对应装载路径为 &lt;code&gt;/frp/frpc.ini&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;使用与 Docker Host 相同的网络&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启动容器，稍等片刻，就可以通过域名 + http 端口号的形式访问群晖 DSM 了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ioiox.com/archives/26.html&#34;&gt;群晖 NAS 使用 Docker 安装配置 frpc 内网穿透教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8frp%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96NAS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E7%BE%A4%E6%99%96NAS%EF%BC%88218%2B%EF%BC%89/%E4%BD%BF%E7%94%A8frp%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96NAS/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 免费的内网穿透替代方案 Cloudflared</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230416143051.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflared&lt;/strong&gt; 是一个免费的内网穿透方案，用于外网访问无公网 IP 的主机。&lt;/p&gt;
&lt;p&gt;必需条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然 Cloudflared 是免费的，但需要绑定 VISA/PayPal。&lt;/li&gt;
&lt;li&gt;域名 NameServer 需要指向 Cloudflare&lt;/li&gt;
&lt;li&gt;需要启用 Cloudflare CDN（国内访问速度偏慢）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不需要公网 IP 的服务器&lt;/li&gt;
&lt;li&gt;不需要防火墙、反向代理&lt;/li&gt;
&lt;li&gt;不需要备案就可以使用 80 和 443 端口&lt;/li&gt;
&lt;li&gt;不需要自行申请 SSL 证书&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;国内访问速度慢&lt;/li&gt;
&lt;li&gt;相对依赖 Cloudflare 平台&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${TOKEN}&lt;/code&gt; 替换为你自己的 tunnel token：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    network_mode: host # 必需要设置为 host
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TOKEN}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;访问 &lt;a href=&#34;https://one.dash.cloudflare.com/&#34;&gt;&lt;strong&gt;Cloudflare Zero Trust&lt;/strong&gt;&lt;/a&gt; 面板，在左侧栏选择 &lt;code&gt;Access&lt;/code&gt; - &lt;code&gt;Tunnels&lt;/code&gt;，点击 &lt;code&gt;Create a tunnel&lt;/code&gt; 创建隧道，填写隧道名称（用于区分不同的物理机器）然后保存。记录下 token 后填写在 &lt;code&gt;docker-compose.yml&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;随后点进你创建的隧道，在 &lt;code&gt;Public Hostname Page&lt;/code&gt; 选项卡中添加代理的端口。举个例子，我绑定在 Cloudflare 的域名是 &lt;code&gt;wiki-power.com&lt;/code&gt;，我需要代理的服务本地的端口是 &lt;code&gt;80&lt;/code&gt;、&lt;code&gt;HTTP&lt;/code&gt; 协议，那么我只需要这样填写：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230416183438.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;即可通过 &lt;a href=&#34;https://dashboard.wiki-power.com&#34;&gt;https://dashboard.wiki-power.com&lt;/a&gt; 访问本地的端口。并且，它会帮你自动申请 SSL 证书，直接在公网通过 https 访问。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/&#34;&gt;官网 / 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudflare/cloudflared&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/cloudflare/cloudflared&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%85%8D%E8%B4%B9%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88Cloudflared/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%85%8D%E8%B4%B9%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88Cloudflared/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 内网穿透工具 frp</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230304195137.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;frp&lt;/strong&gt; 是一种内网穿透的方法。你可以通过有公网 IP 的服务器，将内网主机端口暴露到互联网。frp 支持 TCP、UDP、HTTP、HTTPS 等多种协议多种协议。&lt;/p&gt;
&lt;h2&gt;服务端 frps&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  frps:
    image: &#34;snowdreamtech/frps:latest&#34;
    restart: always
    network_mode: host
    volumes:
      - ${DIR}/frps/frps.ini:/etc/frp/frps.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;并添加配置文件 &lt;code&gt;frps.ini&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ini title=&#34;frps.ini&#34;
[common]
bind_port = 7000 # 客户端和服务端连接的端口，在之后配置客户端时会用上。
dashboard_port = 7500 # 服务端 dashboard 的端口
token = ${TOKEN-FRPS} # 客户端和服务端连接的口令，请自行设置。
dashboard_user = ${USERNAME-FRPS} # 用户名
dashboard_pwd = ${PASSWORD-FRPS} # 密码&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你不用 docker 的方法，也可以参考这篇文章：&lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91RDP%E8%BF%9C%E6%8E%A7%EF%BC%88frp%EF%BC%89#_2&#34;&gt;&lt;strong&gt;服务端配置·如何实现外网 RDP 远控（frp）&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;客户端 frpc&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.3&#34;
services:
  frpc:
    restart: always
    network_mode: &#34;host&#34;
    volumes:
      - ${DIR}/frpc/frpc.ini:/frp/frpc.ini
    image: stilleshan/frpc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;并添加配置文件 &lt;code&gt;frpc.ini&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```ini title=&#34;frpc.ini&#34;
[common]
server_addr = xx.xx.xx.xx # 服务器的公网 IP
server_port = 7000 # 与服务端的端口保持一致
tls_enable = true
token = ${TOKEN-FRPS} # 与服务端的 token 保持一致&lt;/p&gt;
&lt;p&gt;[xxx]
type = tcp
remote_port = xx # 公网访问的端口号
local_ip = localhost
local_port = xx # 内网的端口号
```&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/snowdreamtech/frp&#34;&gt;GitHub repo · snowdreamtech/frps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stilleshan/frpc&#34;&gt;GitHub repo · stilleshan/frpc
  &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/snowdreamtech/frps&#34;&gt;Docker Hub · snowdreamtech/frps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/stilleshan/frpc&#34;&gt;Docker Hub · stilleshan/frpc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91RDP%E8%BF%9C%E6%8E%A7%EF%BC%88frp%EF%BC%89/&#34;&gt;如何实现外网 RDP 远控（frp）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/%E4%BD%BF%E7%94%A8frp%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96NAS/&#34;&gt;使用 frp 访问群晖 NAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7frp/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7frp/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 功能强大的 wiki 系统 Wiki.js</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230304195348.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wiki.js&lt;/strong&gt; 是一个带后台编辑器和管理页面的 wiki 文档工具，包括多用户权限管理、Markdown、多种同步与储存方式（比如 git 同步）等功能。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）；自定义 &lt;code&gt;${USERNAME-DB}&lt;/code&gt; 与 &lt;code&gt;${PASSWORD-DB}&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  db:
    image: postgres:10-alpine # 此版本经测试可正常安装
    environment:
      POSTGRES_DB: wikijs
      POSTGRES_PASSWORD: ${PASSWORD-DB}
      POSTGRES_USER: ${USERNAME-DB}
    logging:
      driver: &#34;none&#34;
    restart: unless-stopped
    volumes:
      - ${DIR}/wikijs/postgres/db-data:/var/lib/postgresql/data&lt;/p&gt;
&lt;p&gt;wiki:
    image: ghcr.io/requarks/wiki:2
    depends_on:
      - db
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${USERNAME-DB}
      DB_PASS: ${PASSWORD-DB}
      DB_NAME: wikijs
    restart: unless-stopped
    ports:
      - &#34;${PORT}:3000&#34;&lt;/p&gt;
&lt;p&gt;volumes:
  db-data:
```&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;配置 git 仓库同步的详细教程：&lt;a href=&#34;https://docs.requarks.io/storage/git&#34;&gt;https://docs.requarks.io/storage/git&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://js.wiki&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.requarks.io/install/docker&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/requarks/wiki&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/requarks/wiki&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84wiki%E7%B3%BB%E7%BB%9FWikijs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84wiki%E7%B3%BB%E7%BB%9FWikijs/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 反代证书管理面板 Nginx Proxy Manager</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230408182138.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nginx Proxy Manager&lt;/strong&gt; 是一个 Nginx 图形化面板，能让用户在 Web 界面上轻松配置反向代理、申请网站 SSL 证书，而无需了解过多 Nginx / Letsencrypt 的底层原理。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  nginx-proxy-manager:
    image: &#34;jc21/nginx-proxy-manager:latest&#34;
    restart: unless-stopped
    ports:
      - &#34;${PORT}:80&#34;
      - &#34;${PORT}:81&#34; # 面板地址
      - &#34;${PORT}:443&#34;
    volumes:
      - ${DIR}/nginx-proxy-manager/data:/data
      - ${DIR}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;初始账户密码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;code&gt;admin@example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Password: &lt;code&gt;changeme&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;获取 Docker 的 IP 地址：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
ip addr show docker0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注：自托管服务尽量通过反代，绑定二级域名访问（80/443 端口），并在公网服务器管理控制台防火墙中关闭其他端口，这样可以提高安全性。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nginxproxymanager.com&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nginxproxymanager.com/guide&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/NginxProxyManager/nginx-proxy-manager&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/jlesage/nginx-proxy-manager&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%8F%8D%E4%BB%A3%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BFNginxProxyManager/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%8F%8D%E4%BB%A3%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BFNginxProxyManager/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 在线代码编辑器 code-server</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304132214418.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;code-server&lt;/strong&gt; 是一个能在浏览器中运行的 VS Code。相比于桌面端的优势是，你可以用任意设备在线码字，包括手机与平板这一类无法直接安装 VS Code 的设备。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）；将登陆密码 &lt;code&gt;${PASSWORD}&lt;/code&gt; 也替换为你自己的：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;2.1&#34;
services:
  code-server:
    image: ghcr.io/linuxserver/code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
      - PASSWORD=${PASSWORD} #optional
    # - SUDO_PASSWORD=  #optional
    # - SUDO_PASSWORD_HASH=  #optional
    # - PROXY_DOMAIN= #optional
    volumes:
      - ${DIR}/code-server/config:/config
    ports:
      - ${PORT}:8443
    restart: unless-stopped&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;h3&gt;配置 git&lt;/h3&gt;
&lt;p&gt;安装完成后，如果需要使用 Git，对用户名和邮箱初始化配置，请参考文章 &lt;a href=&#34;https://wiki-power.com/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0#%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;Git 学习笔记&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;读写权限问题&lt;/h3&gt;
&lt;p&gt;如果在操作文件时遇到 &lt;code&gt;Error: EACCES: permission denied&lt;/code&gt; 错误，可以用 &lt;code&gt;Ctrl&lt;/code&gt; + ``` 打开终端，输入以下命令赋予当前用户所有权：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo chown -R 用户名 文件夹路径&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如，以下是给 &lt;code&gt;abc&lt;/code&gt; 用户赋予当前目录的所有权的操作：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo chown -R abc .&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;设置 root 账户密码&lt;/h3&gt;
&lt;p&gt;如果需要用到 root 账户，可以使用以下命令初始化其密码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo passwd root&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://coder.com/docs/code-server/latest&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;文档 / GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%9C%A8%E7%BA%BF%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%99%A8code-server/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%9C%A8%E7%BA%BF%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%99%A8code-server/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 多功能 PDF 工具箱 Stirling-PDF</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230410172939.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stirling-PDF&lt;/strong&gt; 是一个自托管 PDF 工具包，功能包括 PDF 的分割、合并、旋转、提取页面、图像互转、重新排序、添加 / 提取图像、添加删除密码、设置权限、添加水印、将其他文件转换为 PDF、OCR 文字识别、元数据编辑，支持暗黑模式。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.3&#34;
services:
  s-pdf:
    ports:
      - &#34;${PORT}:8080&#34;
    image: frooodle/s-pdf&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF&#34;&gt;文档 / GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/frooodle/s-pdf&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%A4%9A%E5%8A%9F%E8%83%BDPDF%E5%B7%A5%E5%85%B7%E7%AE%B1Stirling-PDF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%A4%9A%E5%8A%9F%E8%83%BDPDF%E5%B7%A5%E5%85%B7%E7%AE%B1Stirling-PDF/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 容器应用管理平台 Portainer</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304111545899.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Portainer&lt;/strong&gt; 是一个容器应用（包括 Docker / Docker compose / Swarm / Kubernetes）的图形化管理工具，可通过 web 界面管理 Docker 环境。它也提供了许多功能如日志查看、容器启动和停止、镜像管理、网络、卷管理等。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.3&#34;
services:
  portainer:
    ports:
      - ${PORT}:9000 # HTTP
      # - ${PORT}:9443 # HTTPS（可选）
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PORT}/portainer/portainer_data:/data
    image: portainer/portainer-ce:latest&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;需注意社区版的镜像是 &lt;code&gt;portainer/portainer-ce&lt;/code&gt;，与商业版（portainer-be）区分开。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.portainer.io/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.portainer.io/&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/portainer/portainer&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/portainer/portainer-ce&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%AE%B9%E5%99%A8%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0Portainer/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E5%AE%B9%E5%99%A8%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0Portainer/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 播客订阅管理器 Podgrab</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230316131448.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Podgrab&lt;/strong&gt; 是一个自托管的播客管理器 / 下载器 / 存档工具，可通过 RSS 或内置搜索引擎搜索订阅播客节目，可自动下载新上线节目，并且自带 web 播放器。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;2.1&#34;
services:
  podgrab:
    image: akhilrex/podgrab:latest
    environment:
      - CHECK_FREQUENCY=240
    # - PASSWORD=${PASSWORD} # 加访问密码，username = podgrab
    volumes:
      - ${DIR}/podgrab/config:/config
      - ${DIR}/podgrab/assets:/assets
    ports:
      - ${PORT}:8080
    restart: unless-stopped&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/akhilrex/podgrab&#34;&gt;文档 / GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/akhilrex/podgrab/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%92%AD%E5%AE%A2%E8%AE%A2%E9%98%85%E7%AE%A1%E7%90%86%E5%99%A8Podgrab/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%92%AD%E5%AE%A2%E8%AE%A2%E9%98%85%E7%AE%A1%E7%90%86%E5%99%A8Podgrab/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 支持公有云的图床系统 Cloudreve</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230304195423.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudreve&lt;/strong&gt; 是一个支持多家云存储驱动的公有云文件系统，支持用本地、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive、S3 兼容协议作为储存端，可对接 Aria2 离线下载，多用户，拖拽上传 / 管理，在线预览 / 编辑，WebDAV 等。典型的使用场景是个人图床或网盘文件管理。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;首先创建目录结构，切换到存放 Cloudreve 的目录下（我的是 &lt;code&gt;/DATA/AppData/cloudreve&lt;/code&gt;）并执行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
mkdir -vp cloudreve/{uploads,avatar,data} \
&amp;amp;&amp;amp; touch cloudreve/conf.ini \
&amp;amp;&amp;amp; touch cloudreve/cloudreve.db \
&amp;amp;&amp;amp; mkdir -p aria2/config \
&amp;amp;&amp;amp; mkdir -p cloudreve/data/aria2 \
&amp;amp;&amp;amp; chmod -R 777 cloudreve/data/aria2 \
&amp;amp;&amp;amp; mkdir data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;随后创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）；最后自定义 &lt;code&gt;${PASSWORD-ARIA2}&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.8&#34;
services:
  cloudreve:
    image: cloudreve/cloudreve:latest
    restart: unless-stopped
    ports:
      - &#34;${PORT}:5212&#34;
    volumes:
      - temp_data:/data
      - ${DIR}/cloudreve/cloudreve/uploads:/cloudreve/uploads
      - ${DIR}/cloudreve/cloudreve/conf.ini:/cloudreve/conf.ini
      - ${DIR}/cloudreve/cloudreve/cloudreve.db:/cloudreve/cloudreve.db
      - ${DIR}/cloudreve/cloudreve/avatar:/cloudreve/avatar
    depends_on:
      - aria2
  aria2:
    image: p3terx/aria2-pro
    restart: unless-stopped
    environment:
      - RPC_SECRET=${PASSWORD-ARIA2}
      - RPC_PORT=6800
    volumes:
      - ${DIR}/cloudreve/aria2/config:/config
      - ${DIR}/cloudreve/data:/var/lib/docker/volumes/cloudreve_temp_data/_data
volumes:
  temp_data:
    driver: local
    driver_opts:
      type: none
      device: ${DIR}/cloudreve/temp_data
      o: bind&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;首次启动时，会自动创建初始的管理员账号，可以在 log 中找到。如果错过了，请删除目录下的 cloudreve.db，重新启动主程序以初始化新的管理员账户。&lt;/p&gt;
&lt;p&gt;我采用的图像命名规则：&lt;code&gt;{year}{month}{day}{hour}{minute}{second}{ext}&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cloudreve.org/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cloudreve.org/getting-started/install#docker-compose&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.cloudreve.org/&#34;&gt;论坛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudreve/Cloudreve&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/cloudreve/cloudreve&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.cloudreve.org/&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%94%AF%E6%8C%81%E5%85%AC%E6%9C%89%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E7%B3%BB%E7%BB%9FCloudreve/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%94%AF%E6%8C%81%E5%85%AC%E6%9C%89%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E7%B3%BB%E7%BB%9FCloudreve/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 支持多存储的文件列表程序 Alist</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304141808001.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alist&lt;/strong&gt; 是一个文件列表程序，支持多种储存方式如本地、阿里云盘、OneDrive、GoogleDrive、百度网盘、夸克网盘、蓝奏云、S3、FTP / SFTP 等等，带在线视频播放器与各类文件预览（兼容 Office、PDF、Markdown 等），还有离线下载功能。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.3&#34;
services:
  alist:
    restart: always
    volumes:
      - ${DIR}/alist:/opt/alist/data
    ports:
      - ${PORT}:5244
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
    image: xhofe/alist:latest&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;接入各类网盘的方法，官方的文档写得非常详细，一步步按着配置就可以了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://alist.nn.ci/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alist.nn.ci/guide/install/docker.html#release-version&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alist-org/alist&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/xhofe/alist&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://al.nn.ci/&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%94%AF%E6%8C%81%E5%A4%9A%E5%AD%98%E5%82%A8%E7%9A%84%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8%E7%A8%8B%E5%BA%8FAlist/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%94%AF%E6%8C%81%E5%A4%9A%E5%AD%98%E5%82%A8%E7%9A%84%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8%E7%A8%8B%E5%BA%8FAlist/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 支持多种协议的堡垒机 Next Terminal</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230312001443.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Next Terminal&lt;/strong&gt; 是一个简单好用的跳板机（堡垒机），集成了 Apache Guacamole 无客户端的远程桌面网关的堡垒机方案，支持 RDP、SSH、VNC、TELNET、Kubernetes 多协议，能直接通过 web 访问内网资源，跨平台兼容性佳。它支持 MFA 多因子认证登录，也有审计录像功能和其他记录。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.3&#34;
services:
  guacd:
    image: dushixiang/guacd:latest
    volumes:
      - ${DIR}/next-terminal/data:/usr/local/next-terminal/data
    restart: always
  next-terminal:
    image: dushixiang/next-terminal:latest
    environment:
      DB: sqlite
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822
    ports:
      - &#34;${PORT}:8088&#34;
    volumes:
      - /etc/localtime:/etc/localtime
      - ${DIR}/next-terminal/data:/usr/local/next-terminal/data
    restart: always&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;初始账户 / 密码：&lt;code&gt;admin&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://next-terminal.typesafe.cn/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://next-terminal.typesafe.cn/docs/install/docker-install.html&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dushixiang/next-terminal&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/dushixiang/next-terminal&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://next.typesafe.cn/&#34;&gt;Demo site&lt;/a&gt;（账号：test，密码：test）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.samliu.tech/2022/07/22/next-terminal-%E5%BC%80%E6%BA%90-%E8%BD%BB%E9%87%8F-%E7%AE%80%E5%8D%95%E7%9A%84%E5%A0%A1%E5%9E%92%E6%9C%BA/?utm_source=rss&amp;amp;utm_medium=rss&amp;amp;utm_campaign=next-terminal-%25e5%25bc%2580%25e6%25ba%2590-%25e8%25bd%25bb%25e9%2587%258f-%25e7%25ae%2580%25e5%258d%2595%25e7%259a%2584%25e5%25a0%25a1%25e5%259e%2592%25e6%259c%25ba&#34;&gt;Next Terminal | 开源 轻量 简单的堡垒机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%94%AF%E6%8C%81%E5%A4%9A%E7%A7%8D%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%A0%A1%E5%9E%92%E6%9C%BANextTerminal/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%94%AF%E6%8C%81%E5%A4%9A%E7%A7%8D%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%A0%A1%E5%9E%92%E6%9C%BANextTerminal/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 极简个人书签导航站 Flare</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230410170939.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Flare&lt;/strong&gt; 是一个轻量、快速、美观的个人导航页面，无任何数据库依赖，应用数据完全开放透明，支持在线编辑，内置 Material Design Icons 6k+ 图标。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）；自定义 &lt;code&gt;${USERNAME}&lt;/code&gt; 与 &lt;code&gt;${PASSWORD}&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.6&#34;
services:
  flare:
    image: soulteary/flare:latest
    restart: always
    # 更多启动参数文档 https://github.com/soulteary/docker-flare/blob/main/docs/advanced-startup.md
    command: flare --nologin=0 # 开启用户登录模式，需要先设置 `nologin` 启动参数为 `0`
    environment:
      - FLARE_USER=${USERNAME} # 如开启用户登录模式，且未设置 FLARE_USER，则默认用户为 `flare`
      - FLARE_PASS=${PASSWORD} # 如开启用户登录模式，且未设置 FLARE_USER，则会默认生成密码并展示在应用启动日志中
    ports:
      - ${PORT}:5005
    volumes:
      - ${DIR}/flare:/app&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;可在修改 &lt;code&gt;${DIR}/flare&lt;/code&gt; 内的 &lt;code&gt;apps.yml&lt;/code&gt; 与 &lt;code&gt;bookmarks.yml&lt;/code&gt; 配置应用和书签的地址。容器会实时更新。也可在 url 后面加上以下参数进行调试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引导操作：&lt;code&gt;/guide&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置页面：&lt;code&gt;/settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在线编辑：&lt;code&gt;/editor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;图标获取：&lt;code&gt;/icons&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;帮助页面：&lt;code&gt;/help&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://soulteary.com/2022/02/23/building-a-personal-bookmark-navigation-app-from-scratch-flare.html&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/soulteary/docker-flare&#34;&gt;文档 / GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/soulteary/flare/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%9E%81%E7%AE%80%E4%B8%AA%E4%BA%BA%E4%B9%A6%E7%AD%BE%E5%AF%BC%E8%88%AA%E7%AB%99Flare/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%9E%81%E7%AE%80%E4%B8%AA%E4%BA%BA%E4%B9%A6%E7%AD%BE%E5%AF%BC%E8%88%AA%E7%AB%99Flare/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 极简的待办系统 todo</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304111520508.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;todo&lt;/strong&gt; 是一个极简的待办系统工具。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;```yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;&lt;/p&gt;
&lt;p&gt;services:
  todo:
    image: prologic/todo
    restart: always
    ports:
      - ${PORT}:8000
    volumes:
      - ${DIR}/todo/todo_db:/usr/local/go/src/todo/todo.db
    environment:
      - THEME=ayu
```&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;配置主题的变量 &lt;code&gt;THEME&lt;/code&gt; 可根据需要替换为以下值：&lt;code&gt;ayu, dracula, gruvbox-dark, gruvbox-light, lucario, monokai, nord, solarized-dark, solarized-light, tomorrow, tomorrow-night, zenburn&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果不满足需求，也可以自定义主题，请参考官方文档 &lt;code&gt;Custom Color Themes&lt;/code&gt; 部分的内容。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/prologic/todo&#34;&gt;文档 / Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://todo.mills.io/&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%9E%81%E7%AE%80%E7%9A%84%E5%BE%85%E5%8A%9E%E7%B3%BB%E7%BB%9Ftodo/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E6%9E%81%E7%AE%80%E7%9A%84%E5%BE%85%E5%8A%9E%E7%B3%BB%E7%BB%9Ftodo/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 碎片笔记工具 memos</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304111548420.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;memos&lt;/strong&gt; 是一个开源的自托管 memos 工具。支持 Markdown 语法、公开分享、iframe 嵌入、标签管理、日历视图、简单的数据迁移与备份功能。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.0&#34;
services:
  memos:
    image: neosmemo/memos:latest
    volumes:
      - ${DIR}/memos:/var/opt/memos
    ports:
      - ${PORT}:5230&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;移动端 iOS/Android App：&lt;a href=&#34;https://memos.moe/&#34;&gt;&lt;strong&gt;Moe Memos&lt;/strong&gt;&lt;/a&gt;。还有更多第三方客户端（如微信小程序、浏览器扩展、Telegram Bot 等）请参考文档 &lt;a href=&#34;https://github.com/usememos/memos#contribution&#34;&gt;&lt;strong&gt;contribution·memos&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;用户数据的导入导出，可使用 VS Code 插件 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=alexcvzz.vscode-sqlite&#34;&gt;&lt;strong&gt;SQLite&lt;/strong&gt;&lt;/a&gt;，下载并打开 &lt;code&gt;${DIR}&lt;/code&gt; 下的 &lt;code&gt;memos_prod.db&lt;/code&gt; 即可进行增删改查、导入导出备份等操作。注意，只有在 docker 容器关闭 / 重启的时候才会更新 &lt;code&gt;memos_prod.db&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://usememos.com/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://usememos.com/docs/install#docker-compose&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/usememos/memos&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/neosmemo/memos&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.usememos.com/&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E7%A2%8E%E7%89%87%E7%AC%94%E8%AE%B0%E5%B7%A5%E5%85%B7memos/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E7%A2%8E%E7%89%87%E7%AC%94%E8%AE%B0%E5%B7%A5%E5%85%B7memos/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 网站 favicon 抓取工具 iconserver</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230304195157.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iconserver&lt;/strong&gt; 是一个网站 favicon 图标抓取工具。支持抓取 &lt;code&gt;favicon.ico&lt;/code&gt; 与
&lt;code&gt;apple-touch-icon.png&lt;/code&gt;，拥有简单的 URL API 与 web 操作页面，如果抓取失败则会生成首字母开头的 favicon。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  iconserver:
    image: &#34;matthiasluedtke/iconserver:latest&#34;
    restart: always
    ports:
      - ${PORT}:8080&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mat/besticon#docker&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mat/besticon&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/matthiasluedtke/iconserver&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://besticon-demo.herokuapp.com/&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E7%BD%91%E7%AB%99favicon%E6%8A%93%E5%8F%96%E5%B7%A5%E5%85%B7iconserver/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E7%BD%91%E7%AB%99favicon%E6%8A%93%E5%8F%96%E5%B7%A5%E5%85%B7iconserver/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 网站状态监控工具 Uptime Kuma</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230410160253.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Uptime Kuma&lt;/strong&gt; 是一个支持多种网络协议的状态监控工具，可监控多个自定义网站的实时可用状态、响应时长、证书有效期等，并提供了多种通知推送方式。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  uptime-kuma:
    image: louislam/uptime-kuma
    restart: always
    ports:
      - &#34;${PORT}:3001&#34;
    volumes:
      - ${DIR}/uptime-kuma:/app/data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注：如使用反向代理，请开启 &lt;code&gt;Websockets Support&lt;/code&gt; 功能。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://uptime.kuma.pet/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma/wiki&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/louislam/uptime-kuma&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E7%BD%91%E7%AB%99%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7UptimeKuma/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E7%BD%91%E7%AB%99%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7UptimeKuma/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 自动更新 Docker 容器的工具 Watchtower</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304092337531.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Watchtower&lt;/strong&gt; 是一个自动化更新全部或选定 Docker 容器的工具。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://containrrr.dev/watchtower&#34;&gt;官网 / 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/containrrr/watchtower/&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/containrrr/watchtower&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0Docker%E5%AE%B9%E5%99%A8%E7%9A%84%E5%B7%A5%E5%85%B7Watchtower/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0Docker%E5%AE%B9%E5%99%A8%E7%9A%84%E5%B7%A5%E5%85%B7Watchtower/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 自托管 RSS 聚合器 FreshRSS</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304102312005.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FreshRSS&lt;/strong&gt; 是一个托管的 RSS 聚合器，支持订阅多个 RSS 源，并自动刷新。提供 web 在线阅读和 API 供移动端 app 使用。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;2.4&#34;
services:
  freshrss:
    image: freshrss/freshrss
    hostname: freshrss
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
    ports:
      - &#34;${PORT}:80&#34;
    volumes:
      - ${DIR}/freshrss/data:/var/www/FreshRSS/data
      - ${DIR}/freshrss/extensions:/var/www/FreshRSS/extensions
    environment:
      TZ: Asia/Shanghai
      CRON_MIN: &#34;*/5&#34; # 每 5 分钟拉取一次文章更新&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;RSS 源可推荐 saveweb 的中文博客列表 &lt;a href=&#34;https://github.com/saveweb/rss-list&#34;&gt;&lt;strong&gt;rss-list&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;移动端 App 推荐使用 FeedMe(Android)，NetNewsWire(iOS)。&lt;/p&gt;
&lt;p&gt;更多 RSS 相关的内容可参考文章 &lt;a href=&#34;https://wiki-power.com/RSS-%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E9%98%85%E8%AF%BB%E6%96%B9%E5%BC%8F/&#34;&gt;&lt;strong&gt;RSS - 高效率的阅读方式&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://freshrss.org&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FreshRSS/FreshRSS/tree/edge/Docker#docker-compose&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FreshRSS/FreshRSS&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/freshrss/freshrss&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.freshrss.org/i/?rid=64342708bf322&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%87%AA%E6%89%98%E7%AE%A1RSS%E8%81%9A%E5%90%88%E5%99%A8FreshRSS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%87%AA%E6%89%98%E7%AE%A1RSS%E8%81%9A%E5%90%88%E5%99%A8FreshRSS/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 自托管密码管理器 Vaultwarden</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230304195414.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vaultwarden&lt;/strong&gt; 是一个第三方自托管的 Bitwarden 服务器，通过一个主密码保护并管理各个网站的密码，可生成随机的密码供不同网站使用。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;```yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;&lt;/p&gt;
&lt;p&gt;services:
  todo:
    image: vaultwarden/server:latest
    restart: always
    ports:
      - ${PORT}:80
    volumes:
      - ${DIR}/vaultwarden/:/data/
```&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;Vaultwarden 默认需要使用 https 登录，推荐通过反向代理使用（反向代理服务器的搭建可参考文章 &lt;a href=&#34;https://wiki-power.com/Homelab-%E5%8F%8D%E4%BB%A3%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BFNginxProxyManager/&#34;&gt;&lt;strong&gt;Homelab - 反代证书管理面板 Nginx Proxy Manager&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;使用浏览器扩展、桌面与移动端 App 时，需要在登录页面点击设置，并配置服务器的 URL，才能正常使用自托管的服务。&lt;/p&gt;
&lt;p&gt;另外，旧版本（低于 1.27.0）的 Vaultwarden 与 Bitwarden 的浏览器拓展不兼容，会导致无法登录。详见 issue：&lt;a href=&#34;https://github.com/dani-garcia/vaultwarden/issues/3082&#34;&gt;&lt;strong&gt;Client fails to connect or login&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;因为是自托管的服务，所以需要自己留意数据安全。记得定期备份密码数据库。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dani-garcia/vaultwarden/wiki&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dani-garcia/vaultwarden/wiki/Using-Docker-Compose&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dani-garcia/vaultwarden&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/vaultwarden/server&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%87%AA%E6%89%98%E7%AE%A1%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8Vaultwarden/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%87%AA%E6%89%98%E7%AE%A1%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8Vaultwarden/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 跨设备同步工具 Syncthing</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304111529987.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Syncthing&lt;/strong&gt; 是一款免费开源的文件同步应用程序，可在多个设备间同步文件和文件夹，支持增量同步。我用它将服务器的数据备份到 NAS 上做统一管理。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  syncthing:
    image: syncthing/syncthing
    hostname: my-syncthing
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      # - /DATA:/DATA # 需要同步的目录
      - ${DIR}/syncthing/config:/var/syncthing/config/
    ports:
      - ${PORT}:8384 # Web UI
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      - 21027:21027/udp # Receive local discovery broadcasts
    restart: unless-stopped&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;如果提示权限不足，可尝试将 &lt;code&gt;PUID&lt;/code&gt; 与 &lt;code&gt;PGID&lt;/code&gt; 值都修改为 &lt;code&gt;0&lt;/code&gt;，用 root 权限启动。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://syncthing.net/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/syncthing/syncthing/blob/main/README-Docker.md&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.syncthing.net/&#34;&gt;论坛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/syncthing/syncthing&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/syncthing/syncthing/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%B7%A8%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7Syncthing/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%B7%A8%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7Syncthing/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 轻量服务器管理面板 CasaOS</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230304192541.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CasaOS&lt;/strong&gt; 是一个简单易用、优雅的开源个人面板，功能包含了文件管理器、服务器状态监测、终端、Docker 容器管理、内置 Docker 应用商店等。&lt;/p&gt;
&lt;h2&gt;部署（shell）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
curl -fsSL https://get.casaos.io | sudo bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认面板访问地址：&lt;a href=&#34;http://localhost:80&#34;&gt;http://localhost:80&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：如果是部署在有分配反向代理的服务器上，最好在设置内更换面板访问端口，把 80 端口留给 Nginx。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://casaos.io&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.casaos.io/en/home&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/IceWhaleTech/CasaOS&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%BD%BB%E9%87%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BFCasaOS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E8%BD%BB%E9%87%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BFCasaOS/</guid>
      
    </item>
    
    <item>
      <title>Homelab - 高质量图片压缩工具 TinyPNG-docker</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20230416163137.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;TinyPNG-docker 是一个调用 TinyPNG API 进行图片高质量压缩的工具，可以自动压缩指定路径下的 WEBP、JPEG 和 PNG 图片，然后输出到你想要的路径下。它能有效减少网站的带宽占用、流量和加载时间。顺带说一句，这是我借助 ChatGPT 开发的一个 Docker 应用。&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（例如 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；将 &lt;code&gt;${API}&lt;/code&gt; 替换为自己申请的 TinyPNG 密钥：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  tinypng-docker:
    image: linyuxuanlin/tinypng-docker
    environment:
      - TINYPNG_API_KEY=${API}
      - INPUT_DIR=/app/input
      - OUTPUT_DIR=/app/output
    volumes:
      - ${DIR}/tinypng-docker/input:/app/input
      - ${DIR}/tinypng-docker/output:/app/output&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;p&gt;使用这个 Docker 容器前，你需要先在 TinyPNG 官网上注册一个账户，并申请获取一个 API 密钥。&lt;/p&gt;
&lt;p&gt;使用方法很简单，把需要压缩的图片贴进 &lt;code&gt;${DIR}/tinypng/input&lt;/code&gt; 文件夹中，就能在 &lt;code&gt;${DIR}/tinypng/output&lt;/code&gt; 文件夹找到压缩后的图片了。&lt;/p&gt;
&lt;p&gt;如果容器无法正常使用，可以用以下的方法排除：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保 &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件中指定的 &lt;code&gt;input&lt;/code&gt; 和 &lt;code&gt;output&lt;/code&gt; 文件夹路径正确。&lt;/li&gt;
&lt;li&gt;检查你的 TinyPNG 账户，是否已达到 API 密钥允许的最大压缩次数。&lt;/li&gt;
&lt;li&gt;检查 &lt;code&gt;input&lt;/code&gt; 文件夹是否包含正确格式的图像文件（WebP, PNG, JPEG）。注意，此容器只会检测并压缩 &lt;code&gt;created&lt;/code&gt; 事件，因此如果文件已经存在，则需要手动将其移到 &lt;code&gt;input&lt;/code&gt; 目录当中。&lt;/li&gt;
&lt;li&gt;检查压缩的图片是否在失真度上高于 API 的压缩设置，可能导致 API 解码失败（例如压缩前的图片已经压缩过）。&lt;/li&gt;
&lt;li&gt;尝试手动使用 tinify 官网提供的 API 压缩工具，上传压缩后的图片以进一步确定问题的所在，同时你可以在控制台输出调试信息定位问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;Docker 镜像开发流程&lt;/h2&gt;
&lt;h3&gt;准备工作&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如还未注册 Docker Hub 账户，则需要先在 Docker Hub 上创建一个账户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;登录 Docker Hub：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;shell
docker login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;根据提示输入用户名和密码，登录到 Docker Hub。&lt;/p&gt;
&lt;h3&gt;创建容器&lt;/h3&gt;
&lt;p&gt;创建 &lt;code&gt;Dockerfile&lt;/code&gt; 文件：&lt;/p&gt;
&lt;p&gt;```Dockerfile title=&#34;Dockerfile&#34;
FROM python:3.8-slim-buster&lt;/p&gt;
&lt;p&gt;RUN pip install tinify watchdog&lt;/p&gt;
&lt;p&gt;WORKDIR /app&lt;/p&gt;
&lt;p&gt;COPY . /app&lt;/p&gt;
&lt;p&gt;ENV TINYPNG_API_KEY=&lt;your_tinypng_api_key&gt;
ENV INPUT_DIR=/app/input
ENV OUTPUT_DIR=/app/output&lt;/p&gt;
&lt;p&gt;CMD [&#34;python&#34;, &#34;main.py&#34;]
```&lt;/p&gt;
&lt;p&gt;在相同路径下创建 &lt;code&gt;main.py&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```py title=&#34;main.py&#34;
import tinify
import os
import time
import sys
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler&lt;/p&gt;
&lt;p&gt;class MyHandler(FileSystemEventHandler):
    def on_created(self, event):
        if event.is_directory:
            return None
        elif event.event_type == &#39;created&#39;:
            print(&#34;Received created event - %s.&#34; % event.src_path)
            source_path = event.src_path
            output_path = os.path.join(os.environ[&#39;OUTPUT_DIR&#39;], os.path.basename(source_path))
            compress_image(source_path, output_path)&lt;/p&gt;
&lt;p&gt;def compress_image(source_path, output_path):
    tinify.key = os.environ[&#39;TINYPNG_API_KEY&#39;]
    source = tinify.from_file(source_path)
    source.to_file(output_path)
    print(f&#34;{source_path} compressed and saved to {output_path}&#34;)&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == &#34;&lt;strong&gt;main&lt;/strong&gt;&#34;:
    print(&#34;Watching for new images...&#34;)
    event_handler = MyHandler()
    observer = Observer()
    observer.schedule(event_handler, path=os.environ[&#39;INPUT_DIR&#39;], recursive=False)
    observer.start()
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()
```&lt;/p&gt;
&lt;p&gt;这里首先导入必需的 Python 库：tinify，os，time，sys，watchdog。随后定义了一个名为 MyHandler 的类，继承自 watchdog.events.FileSystemEventHandler。这个类包含一个 on_created 方法，当监测到指定文件夹下有新文件被创建时会被调用。on_created 函数获取源图像的路径，并将其压缩到指定的输出路径。最后开始监测输入文件夹，一旦检测到指定文件夹下有新文件被创建，就会自动执行压缩操作，并将压缩后的图像输出到指定的输出文件夹。&lt;/p&gt;
&lt;h3&gt;编译容器&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;Dockerfile&lt;/code&gt; 相同路径下执行以下命令编译容器：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker build -t tinypng-docker .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;tingpng-docker&lt;/code&gt; 为要构建的镜像名称，&lt;code&gt;.&lt;/code&gt; 为 &lt;code&gt;Dockerfile&lt;/code&gt; 文件所在的路径。&lt;/p&gt;
&lt;h3&gt;为镜像打标签&lt;/h3&gt;
&lt;p&gt;使用以下命令为镜像打标签：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker tag &amp;lt;image-name&amp;gt; &amp;lt;dockerhub-username&amp;gt;/&amp;lt;repository-name&amp;gt;:&amp;lt;tag&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker tag tinypng-docker linyuxuanlin/tinypng-docker:latest&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;推送镜像到 Docker Hub&lt;/h3&gt;
&lt;p&gt;使用以下命令将镜像上传到 Docker Hub：&lt;/p&gt;
&lt;p&gt;```shell
docker push &lt;dockerhub-username&gt;/&lt;repository-name&gt;:&lt;tag&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker push linyuxuanlin/tinypng-docker:latest&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;拉取镜像&lt;/h3&gt;
&lt;p&gt;上传完成后，其他人便可以通过以下命令拉取镜像：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker pull linyuxuanlin/tinypng-docker:latest&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/Homelab-%E9%AB%98%E8%B4%A8%E9%87%8F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7TinyPNG-docker&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Dockerfiles/tree/main/tinypng-docker&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/linyuxuanlin/tinypng-docker&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E9%AB%98%E8%B4%A8%E9%87%8F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7TinyPNG-docker/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/Homelab-%E9%AB%98%E8%B4%A8%E9%87%8F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7TinyPNG-docker/</guid>
      
    </item>
    
    <item>
      <title>搭建属于自己的 HomeLab</title>
      
      
      
      
      <description>&lt;p&gt;Homelab 是指可在家中搭建的实验（折腾）环境，用于进行实验和学习。通常指一系列硬件设备（家用服务器、小主机、旧电脑手机、树莓派等），上面运行着操作系统环境和软件（Linux、虚拟机、Docker 等）。Homelab 有很多种用途，比如作为软路由、远程主机，也可以部署一系列的自托管服务，如个人书库、影视库、密码管理器、个人网站、RSS 阅读器、播客服务器、备忘录等等。不仅实用，也可以作一门兴趣，为生活增添乐趣。&lt;/p&gt;
&lt;h2&gt;我的 Homelab 配置&lt;/h2&gt;
&lt;p&gt;我自己的 Homelab 配置是 &lt;strong&gt;轻量云服务器&lt;/strong&gt; + &lt;strong&gt;小主机&lt;/strong&gt; + &lt;strong&gt;NAS&lt;/strong&gt;，它们的配置与用途各有千秋：&lt;/p&gt;
&lt;p&gt;|          | 轻量云服务器（阿里云 1C2G） | 小主机（N100 CPU） | NAS（群晖 DS220+） |
| -------- | --------------------------- | ------------------ | ------------------ |
| 公网 IP  | 有                          | 无                 | 无                 |
| 储存空间 | 小                          | 中                 | 大                 |
| 性能     | 低                          | 高                 | 低                 |&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304130031463.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;不难看出，它们都是偏科生，但只要合作起来便是三边形战士。&lt;strong&gt;轻量云服务器&lt;/strong&gt; 偏向网络访问型，&lt;strong&gt;小主机&lt;/strong&gt; 偏向性能处理型，&lt;strong&gt;NAS&lt;/strong&gt; 偏向空间存储型。&lt;/p&gt;
&lt;h3&gt;轻量云服务器&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;轻量云服务器&lt;/strong&gt; 其实就是云服务器厂商多余的边角料，配置不高，但胜在价格实惠，比如我购买的阿里云轻量仅 ￥ 96 / 年（如果你有更便宜的套餐不妨让我了解一下）。&lt;/p&gt;
&lt;p&gt;因为有公网 IP （80/443 端口也是开放的），我在这台轻量云主机上部署的服务，主要是 frp 服务器、反向代理服务器、访问其他机器的跳板机、监控其它主机的面板、小型网站服务、网站 uptime 监测等需要通过公网直接访问的服务。&lt;/p&gt;
&lt;h3&gt;小主机&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;小主机&lt;/strong&gt; 我选用了零刻 N100 CPU 的准系统，自配 16G DDR5 内存条与 250G SSD 硬盘，总体下来大概 ￥ 1000 出头。日常功耗不高，在需要性能的时候也能呼之即来。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304130043744.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在小主机上部署的应用类型，主要是 web VS Code 代码编辑器、私有笔记库、RSS 阅读器、播客服务器、影视库、内网浏览器等这一类需要消耗性能的服务。&lt;/p&gt;
&lt;h3&gt;NAS&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NAS&lt;/strong&gt; 我选用的是群晖 DS220+，X86 架构方便运行 Docker 环境。前一段时间，我还给它加上了一条 16G 的内存条，企图提升它的性能。但随后发现，瓶颈仍然是那颗孱弱的 J4025 CPU。白群晖算是买软件送硬件了，但是为了资料的安全性，还算是值得的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202304130053483.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我在 NAS 上部署的，主要是设备资料备份、网盘同步、照片库、书库等储存需求型的服务。&lt;/p&gt;
&lt;h2&gt;如何一键启动所有的 Docker compose&lt;/h2&gt;
&lt;p&gt;凭借着折腾不止的精神，三天两头给设备刷系统是不可避免的。部署了那么多的应用，总不可能一个个单独 bring up 吧。这儿有个简单的 shell 脚本，可以一键部署所有 Docker compose：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell title=&#34;compose.sh&#34;
var=` find ./ -maxdepth 2 -name &#34;*.yml&#34;   -printf &#34;docker-compose -f %p up -d; &#34; `
echo $var | sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件的目录结构是这样的：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;├── compose
│   ├── code-server
|   |   ├──docker-compose.yml
│   ├── frp
|   |   ├──docker-compose.yml
│   ├── xxx
|   |   ├──docker-compose.yml
│   ├── ……
│   └── compose.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只要在 compose 目录下执行 &lt;code&gt;sh compose.sh&lt;/code&gt;，就能一键启动所有的 Docker compose 了。&lt;/p&gt;
&lt;h2&gt;自托管的优势&lt;/h2&gt;
&lt;p&gt;相比于第三方托管，让别人替你保管数据，&lt;strong&gt;自托管（Self-Hosted）&lt;/strong&gt; 具有十足的优势，表现在你对个人数据拥有完全的掌控权，可以根据自己的喜好去定制所需，能帮你获取到更多优质的信息源（个人书库、影视库、RSS 服务）。前提是要有一定的时间精力与资金投入，并且拥有一颗乐于折腾的心。&lt;/p&gt;
&lt;p&gt;在接下来的一系列文章中，我将介绍一些基础的配置，还有许多有趣的服务。上面提到的铁三角组合，只是我个人的差异化配置，如果你只有一台机器，折腾起来也是完全没有问题的。我将介绍的内容大多是基于 Docker 与 Docker-compose 部署的，因为这种方式兼容性极佳，在不同配置的机器上都能做到开箱即用。但需要提及的一点是，机器的选择最好是 X86 架构的，因为有些许容器没有做 ARM 适配，需要自己编译安装。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.v2ex.com/t/901954&#34;&gt;你们的 NAS 部署了什么有趣的服务?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7082842557482270734&#34;&gt;一键启动多个 docker-compose 配置容器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84HomeLab/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2/%E8%87%AA%E6%89%98%E7%AE%A1Self-Host/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84HomeLab/</guid>
      
    </item>
    
    <item>
      <title>AI 影响下未来的职业选择</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://sep4u.gr/wp-content/uploads/The_Future_of_Employment_ox_2013.pdf&#34;&gt;&lt;strong&gt;The future of employment&lt;/strong&gt;&lt;/a&gt; 这篇论文对现在 700 多个职业进行了评估，结论是未来十年将会有一半的职业消失。那么，各类职业的具体情况是怎么样的，以及个人应该如何应对，我们来具体地看一看。&lt;/p&gt;
&lt;h2&gt;将会消失的职业&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;最先会消失的职业有&lt;/strong&gt;：司机、实体店店员、裁判、一般事务员等。其中，司机指各类交通工具的职业驾驶者，包括出租车司机、货车司机、客机飞行员等等，将会被出错更少的自动驾驶取代。&lt;/p&gt;
&lt;p&gt;他们的职业大多 &lt;strong&gt;规则比较明确、技术点比较少、可替代性强&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;短期内不会消失，但以后会逐渐消失的职业&lt;/strong&gt;：医生、搬砖型程序员、消防员、警察等。其中，医生职业风险较高，且人为失误影响大；搬砖型程序员将会被人工智能的自我编程取代；对于消防员和警察这类高风险的职业，显然机器人优势更大，且在对案件的处理中，人工智能可以比人类遍历更多的可能性。&lt;/p&gt;
&lt;h2&gt;不会消失的职业&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;很难消失的职业有&lt;/strong&gt;：法官、小学教师、神职人员、创新型设计师、歌手等等。其中，因涉及伦理问题（机器不能够给人定罪 / 决定人的生死），法官这个职业很难消失；启蒙教育阶段，儿童需要被培养自主学习的意识与人文关怀，需要有教师带领；神职人员（神父、方丈、主持等）则肯定不会被取代。&lt;/p&gt;
&lt;p&gt;以上职业共有的特性是 &lt;strong&gt;人文关怀、道德伦理、创新&lt;/strong&gt; 。&lt;/p&gt;
&lt;h2&gt;如何选择职业方向&lt;/h2&gt;
&lt;p&gt;在未来社会，不被机器与人工智能取代工作，需要的是这三种品质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同理心&lt;/li&gt;
&lt;li&gt;团队协作&lt;/li&gt;
&lt;li&gt;讲故事的能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同理心，即 &lt;strong&gt;换位思考&lt;/strong&gt; 的能力。很多时候，需求不会自己跑出来，而是需要我们把自己的思考投射到别人身上，去挖掘需求，而不要只是顾着技术实现。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226140150.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;团队协作与「长板效应」相关。现代社会不要求每个人将短板补齐，而应专注于打造自己的专长，靠团队协作补齐短板。将每个人的长板拼起来，才是一个长板团队；否则如果每个人「全方位发展」却资质平平，这个团队如何从竞争中脱颖而出呢？&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226140223.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;讲故事的能力，体现在对内维系一个团队，需要共同的价值认知；对外，让别人接受你的理念，使用你的产品，也需要有讲故事的能力。&lt;/p&gt;
&lt;p&gt;要学会讲好一个让利益相关者都能认同的故事。价值不仅受产品本身影响，宣传也是至关重要的。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;卢德运动阻挡不了工业革命的浪潮。对普通人而言，个人力量永远阻挡不了时代趋势。预测时代的浪潮，借势而为，个人才能得到更好的发展。&lt;/p&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA==&amp;amp;mid=2653540387&amp;amp;idx=1&amp;amp;sn=985fbe7c3ca0a3ac90d5f56356eac31a&amp;amp;scene=21##wechat_redirect&#34;&gt;你需要补哪些核心能力？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Mshz9DxQLbE&amp;amp;list=PLxaBD9eBZcGTZaMZ-3HN5zXFQ06FDOjzJ&amp;amp;index=2&amp;amp;t=0s&#34;&gt;十年內將會消失的職業，你如果正在做這些工作最好盡快轉行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sep4u.gr/wp-content/uploads/The_Future_of_Employment_ox_2013.pdf&#34;&gt;The future of employment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/AI%E5%BD%B1%E5%93%8D%E4%B8%8B%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%81%8C%E4%B8%9A%E9%80%89%E6%8B%A9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/AI%E5%BD%B1%E5%93%8D%E4%B8%8B%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%81%8C%E4%B8%9A%E9%80%89%E6%8B%A9/</guid>
      
    </item>
    
    <item>
      <title>Hack.init( ) 黑客马拉松</title>
      
      
      
      
      <description>&lt;p&gt;—— Wight · 基于云平台的去线缆化照明系统。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/wight.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/Wight&#34;&gt;&lt;strong&gt;linyuxuanlin / Wight&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;项目制作于 2017 hack.init() 创客马拉松。 20 多个小时的敲代码、建模、调试各种乱七八糟的 bug、等待打印、展示 &amp;amp; 演讲，终于有点成品的样子。&lt;/p&gt;
&lt;p&gt;这个项目主要用于乡村偏远地区的路灯照明系统。 模型有点抽象，其实它正扮演的是一杆路灯。&lt;/p&gt;
&lt;h2&gt;项目创新点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;太阳能供电。&lt;/strong&gt; 自给自足（经查阅详细资料，太阳能发电量足以点亮 LED）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去线缆化。&lt;/strong&gt; 为偏远山区不方便铺线缆提供便利&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能算法。&lt;/strong&gt; 检测到夜晚，自动开灯；检测到人或车辆经过，提高 LED 亮度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云平台统一控制。&lt;/strong&gt; 用的是 GSM 主控，可以批量远程调试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拓展性。&lt;/strong&gt; 对个别有自定义照明需求的特殊用户提供各种自定义的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;原理及实现&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;代码：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;```cpp&lt;/p&gt;
&lt;h1&gt;define BUTTONS_address   &#34;channel/widget4_0/cmd/control&#34; //开关命令&lt;/h1&gt;
&lt;h1&gt;define LIGHT_STATUS_address  &#34;channel/widget4_0/data/light&#34;//开关状态&lt;/h1&gt;
&lt;h1&gt;define ITENSITY_DATA_address &#34;channel/widget4_0/data/lightsensor&#34;&lt;/h1&gt;
&lt;h1&gt;define LEDPIN1    D1    //定义灯泡控制引脚&lt;/h1&gt;
&lt;h1&gt;define LEDPIN2    D2&lt;/h1&gt;
&lt;h1&gt;define LEDPIN3    D3&lt;/h1&gt;
&lt;h1&gt;define LEDPIN4    D5&lt;/h1&gt;
&lt;h1&gt;define CHECKIN1   A0&lt;/h1&gt;
&lt;h1&gt;define CHECKIN2   D4&lt;/h1&gt;
&lt;p&gt;int autostate = 2;
int light_state = 2;
void buttons_function(uint8_t &lt;em&gt;payload, uint32_t len)//自动&amp;amp;浇水按钮
{
    uint8_t SwitchKey;
    uint8_t SwitchKey2;
    aJsonClass aJson;
    aJsonObject &lt;/em&gt;root = aJson.parse((char &lt;em&gt;)payload);
    if(root == NULL)
    {
        aJson.deleteItem(root);
        return;
    }
    aJsonObject &lt;/em&gt;_switch = aJson.getObjectItem(root, &#34;mode&#34;);
    if(_switch != NULL)
    {
        SwitchKey = atoi(_switch-&amp;gt;valuestring);
        if(SwitchKey)
        {
            SerialUSB.println(&#34;auto on&#34;);
            autostate=1;
             IntoRobot.publish(LIGHT_STATUS_address,&#34;1&#34;);
        }
        else
        {
            SerialUSB.println(&#34;auto off&#34;);
            autostate=0;
             IntoRobot.publish(LIGHT_STATUS_address,&#34;0&#34;);
        }
    }
    aJsonObject *_switch2 = aJson.getObjectItem(root, &#34;manual&#34;);
    if(_switch2 != NULL)
    {
        SwitchKey2 = atoi(_switch2-&amp;gt;valuestring);
        if(SwitchKey2)
        {
            SerialUSB.println(&#34;manual on&#34;);
            light_state=1;
             IntoRobot.publish(LIGHT_STATUS_address,&#34;1&#34;);
        }
        else
        {
            SerialUSB.println(&#34;manual off&#34;);
            light_state=0;
             IntoRobot.publish(LIGHT_STATUS_address,&#34;0&#34;);
        }
    }
    else
    {
    }
    aJson.deleteItem(root);
}
void lightup()
{
    digitalWrite(LEDPIN1, HIGH);    // 打开灯泡
    digitalWrite(LEDPIN2, HIGH);    // 打开灯泡
    digitalWrite(LEDPIN3, HIGH);    // 打开灯泡
    digitalWrite(LEDPIN4, HIGH);    // 打开灯泡&lt;/p&gt;
&lt;p&gt;}
void light_half_up()
{
    analogWrite(LEDPIN1, 80);    // 打开灯泡
    analogWrite(LEDPIN2, 80);    // 打开灯泡
    analogWrite(LEDPIN3, 80);    // 打开灯泡
    analogWrite(LEDPIN4, 80);    // 打开灯泡&lt;/p&gt;
&lt;p&gt;}
void lightdown()
{
    digitalWrite(LEDPIN1, LOW);
    digitalWrite(LEDPIN2, LOW);
    digitalWrite(LEDPIN3, LOW);
    digitalWrite(LEDPIN4, LOW);&lt;/p&gt;
&lt;p&gt;}
int getlight()
{
    int k  = analogRead(CHECKIN1);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SerialUSB.println(k);
return k;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
int get_IR_data()
{
    int b = digitalRead(CHECKIN2);
    SerialUSB.println(b);
    return b;
}
void automode()
{
    if(getlight()&amp;gt;=400)
    {
        IntoRobot.publish(LIGHT_STATUS_address,&#34;1&#34;);
        if (get_IR_data()==0)
        lightup();
        else
        light_half_up();
    }
    else
    {
    IntoRobot.publish(LIGHT_STATUS_address,&#34;0&#34;);
    lightdown();
    }
}&lt;/p&gt;
&lt;p&gt;void HUMIDITY_print_function(uint8_t *payload, uint32_t len)
{&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;// IntoRobot.publish(LIGHT_STATUS_address,&#34;1&#34;);
// IntoRobot.publish(LIGHT_STATUS_address,&#34;0&#34;);
void setup()
{
    pinMode(D4,INPUT);
    SerialUSB.begin(115200);
    SerialUSB.println(&#34;hello world&#34;);
    pinMode(LEDPIN1, OUTPUT);    //初始化
    pinMode(LEDPIN2, OUTPUT);    //初始化
    pinMode(LEDPIN3, OUTPUT);    //初始化
    pinMode(LEDPIN4, OUTPUT);    //初始化
    //设备接收云平台的灯开关命令
    IntoRobot.subscribe(BUTTONS_address,NULL,buttons_function);
    IntoRobot.subscribe(ITENSITY_DATA_address,NULL,HUMIDITY_print_function);
}
void loop()
{
   int a =map(getlight() ,0,1024,100,0);
   IntoRobot.publish(LIGHT,a);
    SerialUSB.println(getlight());
    if(autostate==0)
    {
        if(light_state ==1)
        lightup();
        else
        lightdown();
    }
    else if (autostate==1)
    {
        SerialUSB.println(&#34;state=1&#34;);
        automode();
    }
    delay(100);
}
```&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模型：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;屏幕快照 2017-07-17 下午 5.00.16 (2).png&#34; src=&#34;http://upload-images.jianshu.io/upload_2218072-c2cb025a94089a51.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240&#34;&gt;&lt;/p&gt;
&lt;p&gt;比赛时间所限，只能粗略画出模型，打印出来组装。&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：项目后期还有跟进吗？&lt;br&gt;
 A：暂时没有跟进的计划。创新点挺不错，但是否有商业应用价值，还有待验证。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;我们在这次比赛中并没有获奖。不过，比赛锻炼了赶代码和路演的能力，也让我提前体验了加班上线的感受，也认识了很多人，收获了好多纪念品。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;团队成员：林沛杰，黄岳峰，张梓宜&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.intorobot.com/&#34;&gt;IntoRobot 云平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/Hack.init%28%29%E9%BB%91%E5%AE%A2%E9%A9%AC%E6%8B%89%E6%9D%BE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/Hack.init%28%29%E9%BB%91%E5%AE%A2%E9%A9%AC%E6%8B%89%E6%9D%BE/</guid>
      
    </item>
    
    <item>
      <title>THE Hack 2019 黑客马拉松</title>
      
      
      
      
      <description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;THE Hack 2019 创客马拉松比赛在上交大举办，我和小伙伴们参加了这次比赛，在经历了 36 小时的艰难构想后，最终取得全场第 8 名和 Ruff 单项奖的成绩。&lt;/p&gt;
&lt;h2&gt;项目历程&lt;/h2&gt;
&lt;p&gt;今年的比赛有不同的 topics，我们一开始选择了智能家居的方向，打算做宿舍相关的智能家居套件，后来还是选择了 &lt;strong&gt;如何让科技上的弱势群体也能享受科技的乐趣&lt;/strong&gt; 这个 topic。有负责产品的小哥哥和小姐姐一起组队，我们今年的视角变得更广，不只是从技术，而是从心理学和用户需求出发，分析 topic，思考评委和赞助商更看重的是什么。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/72fa421a32841af4c9cb339132b30fe.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们今年的项目名称是 AIO - Care，是一款基于主动学习模型的智慧助老平台。我所负责的是硬件部分的简单实现，通过一些传感器的联动，为服务端采集数据，用以分析并服务于老年人，为他们提供更舒适的居家养老体验。&lt;/p&gt;
&lt;p&gt;产品的理念和方向由作为产品经理的 Amihua Lau 和 Ada 负责，他们在这个方面做得很棒。除此之外，Amihua Lau 还负责了机器学习的算法和 PPT 的制作；而 Ada 作为 Human Resource，也为我们小队拉到了许多的帮助和建议（这直接决定了我们产品的方向），也为我们薅来了数不清的零食和饮料，为我们提供了强大的后勤保障。他们负责的方面我望尘莫及，作为团队的 Leader 当之无愧。除此之外，也感谢隔壁朋友队里的翁艺林，为我们产品建了 3D 模型。&lt;/p&gt;
&lt;p&gt;我负责产品硬件的简单实现，代码已开源至 &lt;a href=&#34;https://github.com/linyuxuanlin/Project-of-THE-Hack&#34;&gt;GtiHub&lt;/a&gt; ，基于 Arduino ，很简单的一个 Demo，就不展开说了。&lt;/p&gt;
&lt;p&gt;相较前年的比赛，只是从技术出发；这一次的项目，我们把完整的商业模型和盈利模式都做了出来。我们开始了解这种比赛的套路，并从优秀的团队项目中吸取了很多经验。这只是一个开始，相信明年的 Hackathon 我们能取得更好的成绩。&lt;/p&gt;
&lt;p&gt;在这类型的比赛里，人文关怀的方向永远吃香；从赞助商的角度出发，永远比技术的高级程度重要得多。36 个小时的比赛历程，技术开发只能做出简单的 Demo；而对产品的渲染与包装，才能够独树一帜。薄积而厚发，把产品的创意和理念展现在赞助商面前，这才是这类比赛拿奖的套路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/THEHack2019%E9%BB%91%E5%AE%A2%E9%A9%AC%E6%8B%89%E6%9D%BE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/THEHack2019%E9%BB%91%E5%AE%A2%E9%A9%AC%E6%8B%89%E6%9D%BE/</guid>
      
    </item>
    
    <item>
      <title>一些观点</title>
      
      
      
      
      <description>&lt;h2&gt;关于创业&lt;/h2&gt;
&lt;h3&gt;想法是否可行？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;市场需求有多大？&lt;/li&gt;
&lt;li&gt;定义用户是谁&lt;/li&gt;
&lt;li&gt;发现用户的需求和渴望&lt;/li&gt;
&lt;li&gt;定义你的价值主张&lt;/li&gt;
&lt;li&gt;打造 MVP 产品&lt;/li&gt;
&lt;li&gt;与用户一起测试&lt;/li&gt;
&lt;li&gt;快速迭代直到找到 PMF&lt;/li&gt;
&lt;li&gt;有多人在做？&lt;/li&gt;
&lt;li&gt;为什么你能做？&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;价值可以有很多伪装——金钱、省时、享受等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;做产品还是做项目？&lt;/h3&gt;
&lt;p&gt;对早期创业者来说 ，更多时候是 &lt;strong&gt;一边做产品，一边接项目&lt;/strong&gt; 。&lt;br&gt;
接项目是为了生存，做产品是给未来的快速成长铺路。&lt;/p&gt;
&lt;p&gt;在不清楚应该选择什么方向的产品时，可以在做项目的过程中，去思考哪些需求具备通用性，变成产品的可能。最后要说的是，&lt;strong&gt;具体产品方向的选择是战术问题，你必须在战略层面，明白你的选择行业、技术领域的整体趋势。&lt;/strong&gt;选择，比努力更重要。&lt;/p&gt;
&lt;h4&gt;产品&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;满足一定的标准化程度，具备通用性和可复制性&lt;/li&gt;
&lt;li&gt;一般情况前期需要较大的投入&lt;/li&gt;
&lt;li&gt;存在爆发性成长的可能&lt;/li&gt;
&lt;li&gt;竞争激烈，一般一个赛道只能允许几家生存&lt;/li&gt;
&lt;li&gt;相对于项目，资本市场更偏向于产品潜在的高成长性带来的高回报&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;项目&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;「有一单没一单，吃了上顿没下顿」&lt;/li&gt;
&lt;li&gt;资金回流快，不需要较大的投入&lt;/li&gt;
&lt;li&gt;一般情况下成长缓慢&lt;/li&gt;
&lt;li&gt;允许很多小公司的存在&lt;/li&gt;
&lt;li&gt;资本不会优先选择&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;关于投资理财&lt;/h2&gt;
&lt;h3&gt;增长手段&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;不追求最佳，追求独家，例如专利&lt;/li&gt;
&lt;li&gt;规模化，例如零售巨头和互联网公司&lt;/li&gt;
&lt;li&gt;到商业环境恶劣的地方去，获取小市场大的份额&lt;/li&gt;
&lt;li&gt;获得政府担保和合作&lt;/li&gt;
&lt;li&gt;拥有产权，如地产或知识产权&lt;/li&gt;
&lt;li&gt;利用法律手段挣钱&lt;/li&gt;
&lt;li&gt;获得网络效应，如电信公司&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;投资&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;别人恐慌时买入，别人乐观时卖出&lt;/li&gt;
&lt;li&gt;极度痴迷投资游戏并有极强的好胜心&lt;/li&gt;
&lt;li&gt;从失败中吸取教训&lt;/li&gt;
&lt;li&gt;对风险有直觉，不依赖机器&lt;/li&gt;
&lt;li&gt;绝对的信心，即使面对批评&lt;/li&gt;
&lt;li&gt;左右脑都很好用，左脑算账，右脑判断公司管理团队和趋势&lt;/li&gt;
&lt;li&gt;大起大落中不改投资思路&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;关于写作&lt;/h2&gt;
&lt;h3&gt;方法&lt;/h3&gt;
&lt;h3&gt;公理与例子&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;将事物的本质抽象为一条公理之后，别忘了提供例子&lt;/strong&gt;。就像物理或数学上的道理，公理一般很难直接用得上，用得上的是公理推导出来的定理，以及更具体的法则。&lt;/p&gt;
&lt;p&gt;一些自己经历过的事情，往往自己印象深刻，但对于读者，需要以具体的案例或解释辅佐观点，使公理更加有说服力。&lt;/p&gt;
&lt;h3&gt;用户心理学&lt;/h3&gt;
&lt;p&gt;仅分析爆文对用户心理利用。&lt;/p&gt;
&lt;h4&gt;1. 情绪化&lt;/h4&gt;
&lt;p&gt;研究表明，引发悲伤等低能量情绪（low-energy emotions）的文章很少被分享，而激发敬畏、愤怒、焦虑等高能量情绪的文章则恰恰相反，能够获得更多分享，其中愤怒情绪最易被病毒式传播。&lt;/p&gt;
&lt;p&gt;想要令读者产生愤怒，不用贬低或是辱骂，只需要写一些让人感到愤怒的内容。愤怒通常是针对这个话题，而不是针对作者或者出版商。煽动读者的愤怒情绪通常需要有足够的容量去处理具有争议性的话题。争议性的博客帖子收到的评论量平均是无争议帖子的两倍。&lt;/p&gt;
&lt;p&gt;敬畏，则是一种更安全的情绪，尤其是对于想要避免激起愤怒的品牌来说。敬畏大于惊喜。这是为什么人们青睐大爆炸和富有传奇色彩的英雄人物电影的原因。&lt;/p&gt;
&lt;h4&gt;2. 长篇文章&lt;/h4&gt;
&lt;p&gt;长篇文章被分享得更多；文章篇幅与分享率的相关度，比其它变量都高。主持研究的 Ward 教授认为这其中存在因果关系。“如果我真的非常关心一个主题，我并不想把浅层表面的文章分享给我的朋友或者读者。”&lt;/p&gt;
&lt;p&gt;另一项研究则表明，虽然长篇文章获得更多的分享，但它们的评论数往往很少。这或许是因为人们并没有从头到尾读完它。&lt;/p&gt;
&lt;h4&gt;3. 流露真实情感&lt;/h4&gt;
&lt;p&gt;充满情感的贴子更易被病毒式传播，人们都希望在阅读时能有情感体验。作家 Walter Kirn 说，优秀的个人散文和回忆录应该从作者最羞愧的内容开始，这部分是冲突和情感所在。如果能分享这部分内容，也能证明读者是真实的、有血有肉的、有缺点的人。&lt;/p&gt;
&lt;p&gt;人们在写广告时可能并不愿意以羞耻为开头，但分享一些真实的感情能够让人解除戒备心。&lt;/p&gt;
&lt;h4&gt;4. 实用信息&lt;/h4&gt;
&lt;p&gt;令人吃惊、富有吸引力、实用性的内容能获得更多的分享。这也许是研究中最直观的一个发现。&lt;/p&gt;
&lt;p&gt;Ward 认为互联网阅读最主要的动机是人们想寻求对于某些问题的答案，比如我应该怎么投资个人退休账户？清洁木地板的最佳方式是什么？对这些问题的解答自然会受到欢迎。&lt;/p&gt;
&lt;h4&gt;5. 名气&lt;/h4&gt;
&lt;p&gt;被读者熟知的作者对于文章能否被分享有着巨大的影响。名气是循环累计的，原本的名气能带来更大的名气，特别是在互联网上。&lt;/p&gt;
&lt;h4&gt;6. 首页 / 头条&lt;/h4&gt;
&lt;p&gt;刊登在首页上的帖子更有可能被广泛传播。人们每天都被海量信息包围着，只有把内容放在最显眼的地方，才能确保读者会看到。注意力稀缺的年代，躲藏在角落里的内容很难被注意到。&lt;/p&gt;
&lt;h4&gt;7. 幽默笑点、槽点、泪点&lt;/h4&gt;
&lt;p&gt;被广泛地病毒式传播的内容大多是幽默的。另外，60% 的病毒式广告是由小公司生产的。&lt;/p&gt;
&lt;p&gt;幽默、恶搞、无节操，并不能解决所有的问题，但它是病毒式广告必不可少的先决条件。&lt;/p&gt;
&lt;h4&gt;8. 病毒式传播&lt;/h4&gt;
&lt;p&gt;如果希望内容能被病毒式传播，那么在发布之前，每一位内容生产者应该认真回答以下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文章是否成功地详细介绍了主题？篇幅足够长吗？&lt;/li&gt;
&lt;li&gt;这些内容能激发诸如愤怒、敬畏、焦虑等高能量情绪吗？&lt;/li&gt;
&lt;li&gt;文章语气传达了情感吗？&lt;/li&gt;
&lt;li&gt;这篇内容特别实用吗？有趣吗？又或者令人感到意外和惊喜吗？&lt;/li&gt;
&lt;li&gt;作者有名气或是信誉吗？&lt;/li&gt;
&lt;li&gt;这篇内容真的有趣吗？&lt;/li&gt;
&lt;li&gt;如果你的回答是肯定的，那么恭喜你，这是一篇能够被病毒式传播的文章&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;关于个人发展&lt;/h2&gt;
&lt;h3&gt;制造与销售&lt;/h3&gt;
&lt;p&gt;硅谷著名的风险投资家 Naval ，在推特说了一句金句，一万多人点赞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;他说：“既懂得制造，又懂得销售，你就是无敌的。”&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn to sell. Learn to build. If you can do both, you will be unstoppable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;他的意思是，一家成功的公司，必须同时具备两种能力：优秀的制造能力和优秀的销售能力。成功的公司，不仅要懂得如何创造出优秀的产品，还要懂得如何把产品卖出去。&lt;/p&gt;
&lt;p&gt;这就是为什么公司会设置 CEO 和 CTO 两个角色。一般来说，CEO 负责销售（包括融资）和管理，CTO 负责制造。这两个角色里面，只要有一个没做好，公司就成功不了。&lt;/p&gt;
&lt;p&gt;Naval 接着说，&lt;strong&gt;这个世界上，最厉害的人就是既懂得制造，又懂得销售的人。&lt;/strong&gt;这样的人可以创造出一个行业。举例来说，马斯克（Elon Musk）就是这样的人，他懂得技术，可以让工程师为他造出想要的东西，他也懂得销售，能让整个世界为特斯拉汽车疯狂。乔布斯也是这样的人，懂得顾客想要什么，以及苹果公司能造出什么，几乎凭一己之力让苹果公司变成世界市值最高的公司。&lt;/p&gt;
&lt;p&gt;如果我们把自己的人生看成是一个项目，人生成功也是如此，既要有真才实学，也要懂得推销自己。&lt;/p&gt;
&lt;p&gt;Naval 说，通常情况下，Maker（制造者）学习 sales（销售）比较容易，Sales 学习 make 比较难。比如，程序员学习运营，要比运营人员学习编程容易。所以，我的想法是，大学最好主修一些跟 make 相关的课程（比如计算机），然后辅修一些跟 sales 相关的课程（比如经济），这样的搭配比较合理。&lt;/p&gt;
&lt;h2&gt;关于生存&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;生存是一种即时策略游戏，所有的人都是这场游戏的玩家。财务自由了，就是游戏赢家。&lt;/p&gt;
&lt;p&gt;具体来说，又分成两种游戏：财富游戏和地位游戏。财富游戏的玩家追求更多的财富，地位游戏的玩家追求更高的地位。&lt;/p&gt;
&lt;p&gt;古时候，地位越高，财富越多，当大官就是发大财，所以大家都玩地位游戏。现代社会，财富游戏和地位游戏慢慢脱离了关系，不当大官也可以发大财，财富游戏的玩家多了起来。&lt;/p&gt;
&lt;p&gt;这两种游戏有本质的区别。&lt;strong&gt;地位游戏一定是零和的，有赢家就肯定有输家。&lt;/strong&gt;比如，我当了部门主管，你就不能当了。所以，地位游戏很凶险，必须时刻提防其他玩家的冷枪。财富游戏不是零和的，我盖了一幢漂亮的房子，不影响你也盖一幢。我赚钱了，不影响其他人的利益，很可能还让其他人过得更好。比如，乔布斯创办了苹果公司，其他人就有了更好的电子产品可用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创业是财富游戏，政治是地位游戏。&lt;/strong&gt; 因为上面的原因，我认为，创业值得参与，政治不值得参与。有些创业项目也是零和的，比如抢票技术、秒杀技术、游戏外挂等等，那也不值得参与。 &lt;/p&gt;
&lt;p&gt;—— 阮一峰《科技爱好者周刊：第 66 期》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;有待整理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzaishi/think/blob/master/2-%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%B3%A8%E5%86%8C%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md&#34;&gt;第一次注册公司的注意事项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzaishi/think/blob/master/3-%E7%AD%BE%E5%90%88%E5%90%8C%E6%97%B6%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88.md&#34;&gt;签合同时要注意什么&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzaishi/think&#34;&gt;https://github.com/yuzaishi/think&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《财富的本质：1%的人如何实现爆炸式财富增长》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atjason.com/daily/2019-10-07.html?from=groupmessage&amp;amp;isappinstalled=0&#34;&gt;1007 - 过于精简的道理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mr-wu.cn/rang-wen-zhang-zhuan-fa-guo-bai-wan-de-mi-mi/&#34;&gt;让文章转发过百万的 9 个秘密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzI4NjAxNjY4Nw==&amp;amp;mid=2650222680&amp;amp;idx=1&amp;amp;sn=57e58790ceb26791af6a82491bb40d2a&amp;amp;chksm=f3e0c598c4974c8e9dab9050d3242f6e995813e8dab5cf4abebb3e7d20df26fed7c1175d810b&amp;amp;scene=126&amp;amp;sessionid=1581695345&amp;amp;key=978925f044652b73934a38686b85a2f32d0ce74dd3188df05474f94e109f6ae98585d8ac574f9327636a723e02e7bb29fa5c8495b462cc28eebbf4984549ccd7b503749e0aa37914583cff6bd76bc0bd&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=6208006f&amp;amp;lang=zh_CN&amp;amp;exportkey=AzRga%2FpF1F7shQTPzd9rM8Q%3D&amp;amp;pass_ticket=5rObPEDbFFRSm9KZh6NsTzAJY55eBmsqru8fZYCcZzvGI5HZ%2B6tOeAx%2B%2FQuS94hj&#34;&gt;科技爱好者周刊：第 94 期&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E4%B8%80%E4%BA%9B%E8%A7%82%E7%82%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E4%B8%80%E4%BA%9B%E8%A7%82%E7%82%B9/</guid>
      
    </item>
    
    <item>
      <title>为什么要「站在巨人的肩膀上」</title>
      
      
      
      
      <description>&lt;p&gt;如果没有有效的指引，初学者往往会把大量的时间花在低水平试错上。&lt;br&gt;
这就是为什么人们经常揶揄 “从入门到放弃”。&lt;br&gt;
其实，只需要老师在关键处多讲一两句话，大部分人就可以根据图文教程顺利走下来，获得成功经验、乐趣和自信。&lt;br&gt;
这一两句话的差别看似不大，可受限于图文教程的形式（文字是一种压缩后的信息密码），往往会被讲授者忽略。&lt;br&gt;
从根本上避免这个问题，就需要讲授者和学习者间更宽的沟通信息渠道。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA==&amp;amp;mid=2653540340&amp;amp;idx=1&amp;amp;sn=cf1a9b6de29183e6bc3a62b2e7a5e2b6&amp;amp;chksm=f389a523c4fe2c35c75d01fdc3e7a9f951260f4ade75f4e832ab3ef983a68eeaa45eddfd9080&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1582829677099&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=41c07c1199c0727cc3e2071cc43be982d882df4afb2ec0d607731c96fda46c0496d4e671dd78c884e9dfe2940d4fda715785397d2a1abc010eb200bd6c94568b9c5aecc49b7251a9eec418f3bcc5bc6f&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=A08AEFPsXYep%2Bs06b8y%2BDL4%3D&amp;amp;pass_ticket=z4ox3f8nl73K2MPu0EBLLe%2FAru4MK%2B7c3EfDVNQbWWoZL0WujjMAwkBNocQsOmu8&#34;&gt;如何安装 Python 运行环境 Anaconda？（视频教程）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E3%80%8C%E7%AB%99%E5%9C%A8%E5%B7%A8%E4%BA%BA%E7%9A%84%E8%82%A9%E8%86%80%E4%B8%8A%E3%80%8D/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E3%80%8C%E7%AB%99%E5%9C%A8%E5%B7%A8%E4%BA%BA%E7%9A%84%E8%82%A9%E8%86%80%E4%B8%8A%E3%80%8D/</guid>
      
    </item>
    
    <item>
      <title>太阳高度角计算</title>
      
      
      
      
      <description>&lt;p&gt;表示太阳在天空中的位置，首先需要选定坐标系，通常用到的坐标系有两种，一种是赤道坐标系，一种是地平坐标系。&lt;/p&gt;
&lt;p&gt;概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;纬度 $\varphi$：-90°~90°，北纬为正。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;赤道坐标系&lt;/h2&gt;
&lt;p&gt;赤道坐标系以赤道面为基本平面，以 &lt;strong&gt;赤纬角&lt;/strong&gt; 和 &lt;strong&gt;时角&lt;/strong&gt; 两个量来定义太阳的位置。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220302221638.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;赤纬角 $\delta$&lt;/strong&gt; ：地日连线与赤道面的夹角&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时角 $\omega$&lt;/strong&gt;：上午为负，下午为正，在数值上等于离正午时间（单位是 h）乘以 15°。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赤纬角会随着公转轨道的位置，在北回归线到南回归线之间（-23.45°~23.45°）变化：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220302222024.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;赤纬角 $\delta$&lt;/strong&gt; 计算公式如下：&lt;/p&gt;
&lt;p&gt;$$
\delta =23.45sin[360×(284+n)/365]
$$&lt;/p&gt;
&lt;p&gt;其中，n 是一年中的日期序号（1~365）。&lt;/p&gt;
&lt;h2&gt;地平坐标系&lt;/h2&gt;
&lt;p&gt;地平坐标系以观察者所处的地平面为基本平面。在地平坐标系中，我们用 &lt;strong&gt;高度角&lt;/strong&gt; 和 &lt;strong&gt;方位角&lt;/strong&gt; 定义某个时刻太阳在天空中的位。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220302222855.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注：读此图需要有几何想象力，即圆是在纸面，太阳是在纸上方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高度角 $\alpha_s$&lt;/strong&gt; ：太阳光线到观察者间的连线，与这条线在地面上的投影之间的夹角。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方位角 $\gamma_s$&lt;/strong&gt;：太阳光线到观察者间的连线在地面上的投影，与正南方向线之间的夹角。数值上正南方向为 0°，向西为正值，向东为负值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;高度角 $\alpha_s$&lt;/strong&gt; 的计算公式：&lt;/p&gt;
&lt;p&gt;$$
sin \alpha_s =sin \varphi sin \delta+cos \varphi cos\delta cos \omega
$$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方位角 $\gamma_s$&lt;/strong&gt; 的计算公式：&lt;/p&gt;
&lt;p&gt;$$
sin \gamma_s=\frac{cos \delta sin \omega}{cos \alpha}
$$&lt;/p&gt;
&lt;p&gt;$$
cos \gamma_s=\frac{sin \alpha sin \varphi - sin \alpha}{cos \alpha cos \varphi}
$$&lt;/p&gt;
&lt;h2&gt;法定时间与真太阳时&lt;/h2&gt;
&lt;p&gt;法定时间是指行政的时间（比如北京时间），而真太阳时是以正午 12 点的时间。&lt;/p&gt;
&lt;p&gt;举个例子，北京和乌鲁木齐，太阳高度角最高时都是真太阳时 12 点；而在法定时间下，乌鲁木齐的太阳高度角最高（即正午）是 14 点左右。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/65Pi-s68-NaP2Qi3Ia3wdA&#34;&gt;一文掌握光伏系统中涉及的地理知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jingweidu.bmcx.com/&#34;&gt;经纬度查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asheshwor/solar-calculator&#34;&gt;Solar calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.360doc.com/content/18/0703/13/7941214_767348251.shtml&#34;&gt;浅谈光伏发电太阳能追踪系统的设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[AngleCalculations.pdf]&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A4%AA%E9%98%B3%E9%AB%98%E5%BA%A6%E8%A7%92%E8%AE%A1%E7%AE%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A4%AA%E9%98%B3%E9%AB%98%E5%BA%A6%E8%A7%92%E8%AE%A1%E7%AE%97/</guid>
      
    </item>
    
    <item>
      <title>如何准备一个逃生背包</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;怀抱着最好的希望，但预做最坏的打算。
—— 《肖申克的救赎》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;背包的选择&lt;/h2&gt;
&lt;p&gt;逃生背包的选择既要考虑容积足够大（能够装下足量的必需品和工具），又要保证长时间背负的舒适度，还要避免太过于显眼。&lt;/p&gt;
&lt;p&gt;如果以登山包的选购视角来看，无架包不适合用作逃生背包，一方面其体积较小，另一方面其负重全靠肩膀，不适合长时间徒步背负；而大部分外架包虽然适合长时间背负，但会容易因为其夸张的体积与背负系统，成为被抢劫的首选对象。&lt;/p&gt;
&lt;p&gt;逃生背包最合适的选择，是容积 40L 左右、带简单背负系统的内架包。此外，还需要考虑其耐撕扯、防水性能。&lt;/p&gt;
&lt;h2&gt;水与净水方式&lt;/h2&gt;
&lt;p&gt;在徒步逃生的路上，如果自带的矿泉水耗尽，不可避免地需要从大自然获取饮用水。&lt;/p&gt;
&lt;p&gt;最安全的净水方案就是把水煮开，能 100% 杀菌消毒，但有可能会因为缺少燃料、耗费时间长而无法进行。如果选择煮开水的方法，建议配备可拆分成煮水底座的金属水壶。&lt;/p&gt;
&lt;p&gt;物理的净水方法是各种各样的过滤器，比如手动泵、吸管过滤器、集成式过滤水壶，但它们仅能够过滤杂质，无法完全消杀病毒。&lt;/p&gt;
&lt;p&gt;化学的方法是二氧化氯净水片，它体积小、重量轻，但它只能净化比较清澈的水。&lt;/p&gt;
&lt;h2&gt;食物&lt;/h2&gt;
&lt;p&gt;在逃生的路上，食物应该尽量选择热量高，且便于携带的。一般选择是压缩干粮配牛肉干、外加复合维生素片。&lt;/p&gt;
&lt;h2&gt;衣物&lt;/h2&gt;
&lt;p&gt;衣物穿着尽可能避免棉质面料，应选用快干、耐湿、保暖的面料，且颜色尽量暗淡以便隐蔽。&lt;/p&gt;
&lt;p&gt;贴身的内衣物可以选择轻质速干面料的，中间层可选抓绒（轻，速干，保暖）、羽绒（可压缩性好，折叠后体积小）等保暖材质的，外套应选择防风、防水的冲锋衣。下身应选择弹性较好的长裤。另可准备护膝与折叠性佳的帽子备用。&lt;/p&gt;
&lt;p&gt;对于鞋子的选择，可以参考徒步、登山鞋等类别，需注重脚感、轻便、防水等性能，且需要先经过磨合&lt;/p&gt;
&lt;h2&gt;庇护所与寝具&lt;/h2&gt;
&lt;p&gt;庇护所可以选用体积较小的帐篷，辅以轻薄的睡袋，有条件可以增加充气式的防潮垫。&lt;/p&gt;
&lt;h2&gt;取火工具&lt;/h2&gt;
&lt;p&gt;取火工具大致有三类：打火机、打火棒、防水万用火柴，应尽量备齐两种以上，并用防水包装密封。&lt;/p&gt;
&lt;h2&gt;急救包&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;割伤类：消毒棉球 / 湿巾、创可贴、医用胶带、纱布、碘伏、棉签、绷带等。&lt;/li&gt;
&lt;li&gt;内服药品：布洛芬 / 阿司匹林（缓解发烧、头痛或炎症）、喇叭正露丸、茶苯海明（晕车止吐）、感冒药。&lt;/li&gt;
&lt;li&gt;医护工具：橡胶手套、镊子、驱虫剂（避蚊胺，亦可辅助生火）、N95 口罩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;电子产品&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;手机：需要多一个带 SIM 卡的备用机。&lt;/li&gt;
&lt;li&gt;充电宝：尽量准备两个以上。&lt;/li&gt;
&lt;li&gt;充电器：选择 GaN 多口充电器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;其他工具&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;镜子：自我医护、或发送求救信号。&lt;/li&gt;
&lt;li&gt;口哨：发送求救信号。&lt;/li&gt;
&lt;li&gt;应急救生毯：防寒保暖。&lt;/li&gt;
&lt;li&gt;洗漱用品：纸巾、牙刷、压缩洗脸巾、一次性内裤。&lt;/li&gt;
&lt;li&gt;工兵铲：一边开刃、另一边带锯齿，可选带小刀、指南针等求生工具的。&lt;/li&gt;
&lt;li&gt;钳子：剪钢丝用。&lt;/li&gt;
&lt;li&gt;头灯：用于夜间照明，注重轻巧与续航。&lt;/li&gt;
&lt;li&gt;无线电台：待补充，选择带 NOAA 气象广播模块的电台。&lt;/li&gt;
&lt;li&gt;重要文件：身份证、护照、少量现金、过敏信息等，需防水密封包装。&lt;/li&gt;
&lt;li&gt;纸质地图：GPS 失效时备用。&lt;/li&gt;
&lt;li&gt;550 伞绳手环：搭建避难所、钓线、紧急攀爬绳索、修理固定装备等。&lt;/li&gt;
&lt;li&gt;小针线包：缝合衣物。&lt;/li&gt;
&lt;li&gt;登山杖：分散重量，尽量选择重量轻、易收纳的。&lt;/li&gt;
&lt;li&gt;防雨用具：一次性雨衣 / 鞋套。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ysga1BXDQpRVofHTjlkqXg&#34;&gt;非常时期，百公里徒步物资配备清单和注意事项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/aahMSKVbSoc8Z9GzIOGTHA&#34;&gt;硬核生存指南目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU3MjU0Njc4NA==&amp;amp;mid=2247483690&amp;amp;idx=1&amp;amp;sn=b7e99bbab3f0b9797d4b1a4f3f148ec8&amp;amp;chksm=fcce0aa5cbb983b3226cc6ef0c90846ce47d86cf72427de22bea313992df826d3d57cc35354c&amp;amp;scene=21#wechat_redirect&#34;&gt;史上最全！生存狂的物资装备清单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/141610739&#34;&gt;揭秘！生存狂应急避难求生跑路包里放了啥？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/86673389&#34;&gt;推荐｜史上最全户外徒步装备清单（收藏版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《逃生背包 BOB·黄金 72 小时装备攻略》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E4%B8%80%E4%B8%AA%E9%80%83%E7%94%9F%E8%83%8C%E5%8C%85/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E4%B8%80%E4%B8%AA%E9%80%83%E7%94%9F%E8%83%8C%E5%8C%85/</guid>
      
    </item>
    
    <item>
      <title>如何合理配置个人资产</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210312135502.png&#34;&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A6%82%E4%BD%95%E5%90%88%E7%90%86%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E8%B5%84%E4%BA%A7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A6%82%E4%BD%95%E5%90%88%E7%90%86%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E8%B5%84%E4%BA%A7/</guid>
      
    </item>
    
    <item>
      <title>如何调制一杯鸡尾酒</title>
      
      
      
      
      <description>&lt;p&gt;介绍鸡尾酒的由来，以及几种经典鸡尾酒的调法。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117232614.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;基酒的种类&lt;/h2&gt;
&lt;p&gt;基酒是在鸡尾酒的调制中，起到主导作用的酒。基酒一般有 6 种：&lt;strong&gt;伏特加&lt;/strong&gt;、&lt;strong&gt;威士忌&lt;/strong&gt;、&lt;strong&gt;朗姆酒&lt;/strong&gt;、&lt;strong&gt;金酒&lt;/strong&gt;、&lt;strong&gt;白兰地&lt;/strong&gt;、&lt;strong&gt;龙舌兰酒&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;伏特加（VODKA）&lt;/h3&gt;
&lt;p&gt;伏特加是由水和蒸馏净化的乙醇调制而成的，一般要经过三重蒸馏得到更纯正的口味。&lt;br&gt;
其蒸馏过程中有时会加入马铃薯、糖浆、黑麦或小麦，也可能会加适量的调味料。&lt;br&gt;
伏特加酒精含量通常是 35% 到 50%，传统伏特加以 40% 为标准。&lt;br&gt;
通常来说，伏特加是一种百搭的酒，与什么搭配就会呈现什么样的味道。&lt;/p&gt;
&lt;h3&gt;威士忌（WHISKEY）&lt;/h3&gt;
&lt;p&gt;威士忌算得上一种烈酒（Spirits，即 &lt;em&gt;Hotel California&lt;/em&gt; 歌词中 &lt;code&gt;We haven&#39;t had that spirit here since 1969&lt;/code&gt;）。在苏格兰、加拿大产的威士忌拼法为 Whisky，而美国、爱尔兰产的则称为 Whiskey。一般分为以下几种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;苏格兰威士忌（Scotch Whisky）：苏格兰地区产的，传统做法会在制作过程加入煤灰。&lt;/li&gt;
&lt;li&gt;波本威士忌（Bourbon Whiskey）：使用玉米糖浆进行制造（偏甜），其生产手法类似制作酸面包，在原料发酵时加入一些去酒精的啤酒。&lt;/li&gt;
&lt;li&gt;爱尔兰威士忌（Irish Whiskey）：在威士忌的发源地爱尔兰地区产的，相传最早是通过从修道院里流传到民间的蒸馏术制作而成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210305001642.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;朗姆酒（RUM）&lt;/h3&gt;
&lt;p&gt;朗姆酒是由甘蔗副产品（甘蔗汁或糖蜜等）发酵和蒸馏制成的。其蒸馏出物是一种透明澄清的液体，传统做法是需要在橡木桶中进行陈年处理。&lt;/p&gt;
&lt;p&gt;其发源于古法提炼蔗糖，即加热甘蔗汁以蒸发水分结晶出蔗糖，到最后总有一些含高分子的残液不可继续加热（将碳化），只能制成焦糖。但后来新英格兰的殖民者发现可以用以酿酒，朗姆酒由此诞生。目前朗姆酒的生产为了符合现代人口味，增加了储存醇化期，因此比较绵软顺口，有焦糖香味。&lt;/p&gt;
&lt;p&gt;一个有趣的小知识是，朗姆酒与大航海时代的英国皇家海军、海盗们有着深厚的渊源；在三角贸易时期，也会用它充当货币的作用。&lt;/p&gt;
&lt;h3&gt;金酒（GIN）&lt;/h3&gt;
&lt;p&gt;金酒也名杜松子酒，因其主要调味成分是杜松子。琴酒源于荷兰，它最早的用途是药，而不是一种随性的饮品。它是一种以谷物为原料制造的中性烈酒（增添以杜松子为主的多种药材与香料）。&lt;/p&gt;
&lt;h3&gt;白兰地（BRANDY）&lt;/h3&gt;
&lt;p&gt;白兰地是我们通常说的洋酒，是经过蒸馏的葡萄酒，一升白兰地通常需要八升葡萄酒浓缩而来。其中常见的分级为 VS（三年以上）、VSOP（四年以上）、Napoleon（六年以上）、XO（十年以上）、Extra（十五年以上）。&lt;/p&gt;
&lt;p&gt;当然，好酒适合直接品，用于调酒就有点暴殄天物了。&lt;/p&gt;
&lt;h3&gt;龙舌兰酒（TEQUILA）&lt;/h3&gt;
&lt;p&gt;龙舌兰酒是「墨西哥的灵魂」，是用墨西哥植物龙舌兰制成的烈酒。其最早源自中美洲地区的印第安文明，他们取多糖而多汁的龙舌兰发酵成酒。后来经西班牙殖民者以蒸馏的方式提升了酒精度，逐渐取代了发酵方法的酒。&lt;/p&gt;
&lt;h2&gt;一些调酒的操作术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;build/pour&lt;/strong&gt;：直接倒入杯中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;straight-up&lt;/strong&gt;：纯喝&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;on the rocks&lt;/strong&gt;：加冰&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blend&lt;/strong&gt;：用果汁机搅拌&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;shake&lt;/strong&gt;：用大调酒杯加入冰块摇动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stir&lt;/strong&gt;：在调酒杯内，将透明无色的基酒放入冰块搅动，以降温&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;muddling&lt;/strong&gt;：将固体食材萃取出汁液（可用搅拌杵挤压）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;layer&lt;/strong&gt;：做出层次分明的效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;float&lt;/strong&gt;：做出上层液体向下淋透的效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;几种经典的鸡尾酒&lt;/h2&gt;
&lt;h3&gt;马天尼（MARTINI）&lt;/h3&gt;
&lt;p&gt;马天尼也译为马提尼，俗称鸡尾酒之王。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117224833.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;60 ml 金酒&lt;/li&gt;
&lt;li&gt;10 ml 干苦艾酒&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将所有成分倒入装有冰块的混合玻璃杯，搅拌均匀，滤入马提尼杯。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰：&lt;/strong&gt;适当添加柠檬皮挤出的汁或青橄榄。&lt;/p&gt;
&lt;h3&gt;自由古巴（CUBA LIBRE）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117230135.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;CUBA LIBRE 起源于 20 世纪初、在美西战争中取得了独立的古巴。因其配方简单、原料廉价变得流行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;50 ml 朗姆酒（百加得白朗姆）&lt;/li&gt;
&lt;li&gt;120 ml 可口可乐&lt;/li&gt;
&lt;li&gt;10 ml 鲜青柠汁或柠檬汁&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将所有配料加进装满冰块的高脚杯中。&lt;/p&gt;
&lt;h3&gt;长岛冰茶（LONG ISLAND ICE TEA）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117230624.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;长岛冰茶调制的主要成分为伏特加、龙舌兰酒和金酒，酒精浓度约为 30%。因其糖分较多、口味香甜，盖过浓烈的酒精味，容易使人不知觉饮用过量而醉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15 ml 伏特加&lt;/li&gt;
&lt;li&gt;15 ml 龙舌兰&lt;/li&gt;
&lt;li&gt;15 ml 白朗姆&lt;/li&gt;
&lt;li&gt;15 ml 金酒&lt;/li&gt;
&lt;li&gt;15 ml 君度橙酒&lt;/li&gt;
&lt;li&gt;30 ml 柠檬汁&lt;/li&gt;
&lt;li&gt;20 ml 糖浆（或一茶勺糖）&lt;/li&gt;
&lt;li&gt;用可乐灌满&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将所有材料加入装有冰块的高脚杯中，然后轻轻搅拌。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰：&lt;/strong&gt;柠檬片（可选）。&lt;/p&gt;
&lt;h3&gt;玛格丽特（MARGARITA）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117230055.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;50 ml 龙舌兰（100%）&lt;/li&gt;
&lt;li&gt;20 ml 君度或 Triple Sec 酒&lt;/li&gt;
&lt;li&gt;15 ml 鲜榨青柠汁（或 30 ml 屈臣氏青柠汁）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将所有配料加进有冰块的摇杯中，摇晃并过滤到冰过的的玛格丽特杯中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰：&lt;/strong&gt;可选盐边。&lt;/p&gt;
&lt;h3&gt;莫吉托（MOJITO）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117230116.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;45 ml 白朗姆酒&lt;/li&gt;
&lt;li&gt;20 ml 鲜青柠汁&lt;/li&gt;
&lt;li&gt;6 片薄荷叶&lt;/li&gt;
&lt;li&gt;2 茶勺砂糖&lt;/li&gt;
&lt;li&gt;苏打水&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将薄荷、糖、青柠汁混合，加入一抹苏打水，往杯子里加满冰块。倒入朗姆酒，再加入苏打水。轻轻搅拌，让所有成分混匀。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰：&lt;/strong&gt;薄荷叶和柠檬片。&lt;/p&gt;
&lt;h3&gt;龙舌兰日出（TEQUILA SUNRISE）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117230437.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;45 ml 龙舌兰酒&lt;/li&gt;
&lt;li&gt;90 ml 鲜橙汁&lt;/li&gt;
&lt;li&gt;15 ml 石榴糖浆（必得利）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将龙舌兰酒和橙汁直接倒入装有冰块的高脚杯中，加入石榴糖浆，营造色泽效果（日出），不要搅拌。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰：&lt;/strong&gt;用半片橙子或橙皮装饰。&lt;/p&gt;
&lt;h3&gt;威士忌酸（WHISKY SOUR）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221117230127.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配方：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;45 ml 波本威士忌&lt;/li&gt;
&lt;li&gt;25 ml 鲜柠檬汁&lt;/li&gt;
&lt;li&gt;20 ml 糖浆（或一茶勺糖）&lt;/li&gt;
&lt;li&gt;20 ml 生蛋青（可选）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;调制方法：&lt;/strong&gt;将所有材料倒入装满冰块的调酒器中，摇匀，滤入装有冰球的杯中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰：&lt;/strong&gt;用半片橙子和樱桃装饰，也可选用橙皮。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://iba-world.com/contemporary-classics/&#34;&gt;Contemporary Classics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://de.wikipedia.org/wiki/Wikipedia:Wiki_Loves_Cocktails/Ergebnisse&#34;&gt;Wikipedia:Wiki Loves Cocktails/Ergebnisse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/AO9cOWJMvcOg4qVcJYApKA&#34;&gt;六大基酒简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/68125&#34;&gt;居家不止冰啤酒 ，这份「家庭鸡尾酒」调制公式敬请收藏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A6%82%E4%BD%95%E8%B0%83%E5%88%B6%E4%B8%80%E6%9D%AF%E9%B8%A1%E5%B0%BE%E9%85%92/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E5%A6%82%E4%BD%95%E8%B0%83%E5%88%B6%E4%B8%80%E6%9D%AF%E9%B8%A1%E5%B0%BE%E9%85%92/</guid>
      
    </item>
    
    <item>
      <title>电路焊接比赛记录</title>
      
      
      
      
      <description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2019 年 11 月，野狼队电控组新生们经过两天的基础焊接培训后，在电协举办的焊接比赛中，取得了不错的成绩。&lt;br&gt;
以下为本次活动培训的资料总结，希望能够为新生的焊接入门提供帮助。&lt;/p&gt;
&lt;h2&gt;培训内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shimo.im/docs/dyRpp3HyHJgVj8VX&#34;&gt;硬件速成参考文档&lt;/a&gt; by Bobi &amp;amp; Power&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mubu.com/doc/kJeFad8-cI&#34;&gt;硬件基础课 - 教学大纲&lt;/a&gt; by Power&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shimo.im/sheets/tK3DTTpgkXpJYjtj/MODOC&#34;&gt;实物 - 原理对照图&lt;/a&gt; by Bobi&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mubu.com/doc/XHHCaWPZ1Y&#34;&gt;赛前准备 - 讲解大纲&lt;/a&gt; by Bobi &amp;amp; Power&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;比赛经验总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;洞洞板背面走线最好使用管脚配合注锡，又稳又快。比赛的时候需要特别注意时间分配。&lt;/li&gt;
&lt;li&gt;测试电源最好自带，焊好了可以测试一下能否正常工作。自己熟手的基本工具要带齐。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E7%94%B5%E8%B7%AF%E7%84%8A%E6%8E%A5%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E7%94%B5%E8%B7%AF%E7%84%8A%E6%8E%A5%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/</guid>
      
    </item>
    
    <item>
      <title>英语六级 - 备考</title>
      
      
      
      
      <description>&lt;h2&gt;听力&lt;/h2&gt;
&lt;h3&gt;要点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;听之前看选项，&lt;/li&gt;
&lt;li&gt;训练时掐时间，&lt;/li&gt;
&lt;li&gt;以名词为主挑重心（尤其是细节名词），明白这个选项讲的是什么东西，&lt;/li&gt;
&lt;li&gt;注意否定词，用 &#34;↓&#34; 标出，&lt;/li&gt;
&lt;li&gt;比较几个选项的异同：&lt;/li&gt;
&lt;li&gt;主语一致重宾语，&lt;/li&gt;
&lt;li&gt;动词开头重宾语，&lt;/li&gt;
&lt;li&gt;主语不一致，一般四个选项都不一样，&lt;/li&gt;
&lt;li&gt;一般来说，名词在句子或短语的末尾是重心，&lt;/li&gt;
&lt;li&gt;不轻易丢数字，&lt;/li&gt;
&lt;li&gt;注意细节名词。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;对话片段选项特征&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;He / She 做主语：注意听针对 He / She 的片段，&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;They 做主语：一般问谈论的对象所作的事情，&lt;/li&gt;
&lt;li&gt;It 做主语：问的是某个物体或某件事怎么样，&lt;/li&gt;
&lt;li&gt;动词原形开头：问题往往是 What … to do?&lt;/li&gt;
&lt;li&gt;To do 开头：问原因，一般用 why 或 what … purpose 提问，&lt;/li&gt;
&lt;li&gt;介词短语&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;速记&lt;/h3&gt;
&lt;p&gt;速度、不用写满整行，单词不用写完整，多用符号&lt;/p&gt;
&lt;h2&gt;背单词&lt;/h2&gt;
&lt;h3&gt;方法&lt;/h3&gt;
&lt;h4&gt;学术法&lt;/h4&gt;
&lt;p&gt;根据拼读：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接拼读单词（三遍）&lt;/li&gt;
&lt;li&gt;直接记忆中文含义（三遍）&lt;/li&gt;
&lt;li&gt;联想造句&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;词根法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前缀：in/in 里，ex/e 外，dis/di 分，com/con/col/co 合，de 数量下，sup/sub/sur/sus 位置下，pre/pro/pri 位置前，re 反复/返回，per 每一，en 使…&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;听力单词&lt;/h3&gt;
&lt;p&gt;抓关键词：actually/cause/although/still&lt;/p&gt;
&lt;h2&gt;写作词汇&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实现某人精神上的升华：increase one&#39;s spiritual level&lt;/li&gt;
&lt;li&gt;I have increase my spiritual level through reading this book.&lt;/li&gt;
&lt;li&gt;人际交往：interpersonal communication&lt;/li&gt;
&lt;li&gt;思辨能力：critical thinking ability&lt;/li&gt;
&lt;li&gt;We could enrich our critical thinking ability through the debate.&lt;/li&gt;
&lt;li&gt;换位思考：put oneself in others&#39; shoes&lt;/li&gt;
&lt;li&gt;Put yourself in other&#39;s shoes when you misunderstand sb.&lt;/li&gt;
&lt;li&gt;学习能力：learning ability&lt;/li&gt;
&lt;li&gt;将心比心：be aware of others&#39; feelings&lt;/li&gt;
&lt;li&gt;大学学历：university degree&lt;/li&gt;
&lt;li&gt;体谅他人：be empathetic to others&lt;/li&gt;
&lt;li&gt;职业规划：career planning&lt;/li&gt;
&lt;li&gt;Career planing is vitual for one&#39;s whole life.&lt;/li&gt;
&lt;li&gt;急人之所急：put oneself in others&#39;place&lt;/li&gt;
&lt;li&gt;丰富人生：enrich life&lt;/li&gt;
&lt;li&gt;Take part in different kinds of activity could enrich our life.&lt;/li&gt;
&lt;li&gt;关爱和包容：love and inclusivenes&lt;/li&gt;
&lt;li&gt;培养开放通达的气质：cultivate open-mindedness&lt;/li&gt;
&lt;li&gt;倾向于：tend to/ be inclined to do sth.&lt;/li&gt;
&lt;li&gt;培养独立自主的能力：cultivate independence&lt;/li&gt;
&lt;li&gt;We advise parents to cultivate independence of their children as soon as possible.&lt;/li&gt;
&lt;li&gt;尽力做：attempt to do sth.&lt;/li&gt;
&lt;li&gt;I attempt to pass this exam.&lt;/li&gt;
&lt;li&gt;脚踏实地的努力：the down-to-earth efforts&lt;/li&gt;
&lt;li&gt;博大胸怀：generous heart&lt;/li&gt;
&lt;li&gt;是金子总会发光：cream always rises to the top&lt;/li&gt;
&lt;li&gt;cream always rises to the top, don&#39;t get upset about these failures.&lt;/li&gt;
&lt;li&gt;宽大为怀：benevolent&lt;/li&gt;
&lt;li&gt;取得显著进步：make remarkable progress&lt;/li&gt;
&lt;li&gt;推己及人：considerate&lt;/li&gt;
&lt;li&gt;主动付出时间：volunteer ones&#39; time&lt;/li&gt;
&lt;li&gt;包容：tolerate&lt;/li&gt;
&lt;li&gt;带来快乐和成就感：bring happiness and fulfillment&lt;/li&gt;
&lt;li&gt;遵守：follow&lt;/li&gt;
&lt;li&gt;充满阳光：be full of sunshine Co mphis&lt;/li&gt;
&lt;li&gt;代价高的：costly&lt;/li&gt;
&lt;li&gt;以保证充分的休息时间：ensure enough time of rest&lt;/li&gt;
&lt;li&gt;疲劳：fatigue&lt;/li&gt;
&lt;li&gt;集中精力完成：make concentrated effort to complete sth.&lt;/li&gt;
&lt;li&gt;降低的作效率 decreasing productivity&lt;/li&gt;
&lt;li&gt;充分合理地利用某事：fully and properly use sth.&lt;/li&gt;
&lt;li&gt;虚度时光：idle time away&lt;/li&gt;
&lt;li&gt;高效地工作：be productive at work&lt;/li&gt;
&lt;li&gt;不明智的：inadvisable/ unwise&lt;/li&gt;
&lt;li&gt;应对挑战：meet/ face up to challenges&lt;/li&gt;
&lt;li&gt;\（过于、) 繁重的：overburdened 我们应该：it is advisable to&lt;/li&gt;
&lt;li&gt;扩展个人兴趣：explore private interest&lt;/li&gt;
&lt;li&gt;自我强加的：self- imposed ….&lt;/li&gt;
&lt;li&gt;生活：make sth. part of one&#39;s&#39; life&lt;/li&gt;
&lt;li&gt;更加专注和高效：be more focused and productive&lt;/li&gt;
&lt;li&gt;学业：academic study&lt;/li&gt;
&lt;li&gt;有意识地努力做某事：make conscious effort to do sth.&lt;/li&gt;
&lt;li&gt;课外活动：extracurricular activities&lt;/li&gt;
&lt;li&gt;美满的/充实的生活：fulfilling life&lt;/li&gt;
&lt;li&gt;以……为重：sth. comes first&lt;/li&gt;
&lt;li&gt;专业知识：professional knowledge&lt;/li&gt;
&lt;li&gt;充分发挥潜力：achieve ones&#39; full potential fulfill one&#39;s potential&lt;/li&gt;
&lt;li&gt;首要任务：primary duty&lt;/li&gt;
&lt;li&gt;敞开心扉：open one&#39;s heart&lt;/li&gt;
&lt;li&gt;精挑细选：be picky about&lt;/li&gt;
&lt;li&gt;个性自主的：individualistic&lt;/li&gt;
&lt;li&gt;时间管理：time management&lt;/li&gt;
&lt;li&gt;主观能动性：take initiative&lt;/li&gt;
&lt;li&gt;规划生活：organize one&#39;s&#39; life&lt;/li&gt;
&lt;li&gt;核心竞争力：core competitiveness&lt;/li&gt;
&lt;li&gt;让我们进步 facilitate our development&lt;/li&gt;
&lt;li&gt;肩负责任：take responsibilities to do sth.&lt;/li&gt;
&lt;li&gt;绝对信任：implicit trust&lt;/li&gt;
&lt;li&gt;信守承诺：honour one&#39;s&#39; promises&lt;/li&gt;
&lt;li&gt;大有助益：greatly facilitate&lt;/li&gt;
&lt;li&gt;大获裨益：benefit greatly from sth.&lt;/li&gt;
&lt;li&gt;毫无保留的：without reservation&lt;/li&gt;
&lt;li&gt;完全胜任：be well qualified for sth.&lt;/li&gt;
&lt;li&gt;归属感：sense of belonging&lt;/li&gt;
&lt;li&gt;极大乐趣：enormous interest&lt;/li&gt;
&lt;li&gt;值得信任：trustworthy&lt;/li&gt;
&lt;li&gt;竞争优势：competitive edge&lt;/li&gt;
&lt;li&gt;综合素质：comprehensive quality&lt;/li&gt;
&lt;li&gt;即时快乐：instant pleasures&lt;/li&gt;
&lt;li&gt;全面视角：comprehensive view&lt;/li&gt;
&lt;li&gt;攀登更高：more further up&lt;/li&gt;
&lt;li&gt;诸多益处：bunch of benefits&lt;/li&gt;
&lt;li&gt;拓宽眼界：broaden one&#39;s horizon&lt;/li&gt;
&lt;li&gt;与时俱进：keep oneself up to date&lt;/li&gt;
&lt;li&gt;巨大的成功：remarkable success&lt;/li&gt;
&lt;li&gt;事与愿违：end up disappointed&lt;/li&gt;
&lt;li&gt;如愿以偿：achieve successful outcome&lt;/li&gt;
&lt;li&gt;长远打算：lone- term plan&lt;/li&gt;
&lt;li&gt;长期规划：blueprint&lt;/li&gt;
&lt;li&gt;找工作：land job&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;阅读理解&lt;/h2&gt;
&lt;h3&gt;理解句子&lt;/h3&gt;
&lt;h4&gt;1. 基本语法&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;谓语动词&lt;/strong&gt;：一个句子有且仅有一个（拆解复合句）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非谓语动词&lt;/strong&gt;：to do 不定式；-ing 形式表动词名词或现在分词；-ed 表示过去分词&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;介词短语&lt;/strong&gt;：介词+n./ving（一定要接名词才完整）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从句&lt;/strong&gt;：（连词）+ 句子&lt;/p&gt;
&lt;p&gt;主动时态：&lt;/p&gt;
&lt;p&gt;| 时间/状态 | 完成                        | 进行                       | 一般               | 完成进行                            |
| :-------- | :-------------------------- | :------------------------- | :----------------- | :---------------------------------- |
| 过去      | had + Ved                   | was / were + Ving          | Ved                |                                     |
| 现在      | have / has + Ved            | be + Ving                  | V / Vs / Ves       | have / has + been + Ving            |
| 将来      | will + have + Ved           | will + be + Ving           | will + V           |                                     |
| 过去将来  | should / would + have + Ved | should / would + be + Ving | should / would + V | should / would + have + been + Ving |&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7-%E5%A4%87%E8%80%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7-%E5%A4%87%E8%80%83/</guid>
      
    </item>
    
    <item>
      <title>读《黑客与画家》</title>
      
      
      
      
      <description>&lt;h2&gt;「黑客精神」&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;黑客行为必须包含三个特点：&lt;strong&gt;好玩、高智商、探索精神&lt;/strong&gt;。只有其行为同时满足这三个标准，才能被称为「黑客」。&lt;/p&gt;
&lt;p&gt;对于黑客来说，关着的门就是一种挑衅，而锁着的门则是一种侮辱。……黑客相信，&lt;strong&gt;只要有助于改进现状、探索未知，人们就应该被允许自由地使用各种工具和信息&lt;/strong&gt;。当一个黑客需要一样东西来帮助自己创造、探索或者改正某种设备时，他不会自找麻烦，不会接受那些财产专有权的荒谬概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;「工作」&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;人类喜欢工作，在世界上大多数地方，你的工作就是你的身份证明。但是，我们那时做的所有事情根本就是无意义的，至少那时看来是这样。最好的情况下，那些事情也不过是遥远的将来我们可能从事的实际工作的练习。它所面向的目标是如此遥远，以至于当时我们都不知道自己练习这些到底是为了干什么。更常见的情况是，那些事情不过是一系列随意设置的绳圈，你被要求一个个跳过去。 &lt;strong&gt;你在学习中遇到的文字都是专为考试而设计的，目的就是为了出题，而不是为了讲清楚问题。&lt;/strong&gt; （南北战争的三个主要原因是……等到考试的时候，就会有一道题：请列出南北战争的三个主要原因。） 而且，&lt;strong&gt;没有办法回避那些事情。&lt;/strong&gt; 成年人已经达成共识，认定通往大学的途径就是这样的。&lt;strong&gt;逃离这种空虚生活的唯一方法，就是向它屈服。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与此同时，社会发生了什么变化？我们被迫面对一个更严峻的问题。它与当前的其他许多难题有着共同的起因，那就是 &lt;strong&gt;「专业化」（specialization）&lt;/strong&gt; 。当工作的专业程度越来越高时，我们就必须接受更长时间的训练。工业化时代来临之前，儿童最晚大约在 14 岁就要参加工作，如果是在农庄（那个时代大多数人生活在农村），参加工作的时间就更早。如今，只要一个青少年读大学，他就要等到 21 岁或 22 岁才开始全职工作。如果再读更髙的学位，比如医学博士或哲学博士，可能要拖到 30 岁才能完成学业。&lt;/p&gt;
&lt;p&gt;黑客如何才能做自己喜欢的事情？我认为这个问题的解决方法是一个几乎所有创作者都知道的方法：找一份养家糊口的「白天工作」(day job). 这个词是从音乐家身上来的，他们晚上表演音乐，所以白天可以找一份其他工作。更一般地说，「白天工作」的意思是，你有一份为了赚钱的工作，还有一份为了爱好的工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;专业化是现代社会的必需，但过度专业化可能会剥夺个人探索世界的能力。在科技发展迅猛的时代，在一种知识里钻研越深，当新的技术栈出现的时候，将更不易迁移。我想，应该保持「适度专业化」，留下来的时间和精力学一些自己喜好的知识，这样既满足了社会对专业能力的需求，又保持了持续发展的潜力，对于个人而言，是一个较好的平衡。&lt;/p&gt;
&lt;h2&gt;「创造方法论」&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;创造优美事物的方式往往不是从头做起，而是在现有成果的基础上做一些小小的调整，或者将已有的观点用比较新的方式组合起来。&lt;/p&gt;
&lt;p&gt;你把整个程序想清楚的时间点，应该是在编写代码的同时，而不是在编写代码之前。&lt;/p&gt;
&lt;p&gt;我喜欢直接坐在计算机前编程，而不是在纸上编程。更糟的是，我不是耐心地一步步写出整个程序，确保大体上是正确的，而是一股脑不管对错，先把代码堆上去，再慢慢修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编程不是在纸上写，一落笔便成文，而应该随时可修改的。如果说项目的成品是一栋大厦，在构建的时候一定不是每建一层就装修一层。在开发项目的时候，细节之处的灵感可以先记下来，但要避免「过早优化」，就像你刚建到三楼，便匆匆忙忙给二楼的窗户安玻璃，后来发现大厦的主结构不符合要求。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我认为，这也是多人共同开发一个软件的正确模式。需要合作，但是不要「合」得过头。如果一个代码块由三四个人共同开发，就没有人真正「拥有」这块代码。最终，它就会变得像一个公用杂物间，没人管理，又脏又乱，到处堆满了冗余代码。正确的合作方法是将项目分割成严格定义的模块，每一个模块由一个人明确负责。模块与模块之间的接口经过精心设计，如果可能的话，最好把文档说明写得像编程语言规范那样清晰。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于团队项目，分工时应该 &lt;strong&gt;按模块切分任务&lt;/strong&gt;，让每个人对自己负责的部分有掌管的权利。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;程序写出来是给人看的，附带能在机器上运行。&lt;/p&gt;
&lt;p&gt;只有在那些不太成熟、容易出现问题的地方，你才应该加上注释，提醒读者注意那里，就好像公路上只有在急转弯处才会出现警示标志一样。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此处联想「Python 之禅」:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple is better than complex.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;又要提到「奥卡姆剃刀」原则了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如无必要，勿增实体。 ( Entities should not be multiplied unnecessarily. )&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者在文中是这样阐述的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当你被迫把东西做得很简单时，你就被迫直接面对真正的问题。当你不能用表面的装饰交差时，你就不得不做好真正的本质部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于如何去构建好的设计，文中提出了这几个观点：&lt;strong&gt;简洁、符合历史精华的审美、模仿大自然&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好设计是简单的设计。从数学领域到绘画领域，你都可以听到这种说法。在数学中，它表示简短的证明往往是更好的证明。特别是对于数学公理来说，少即是多。在编程中，这种说法也基本适用。对于建筑师和设计者，它意味着美依赖于一些精心选择的结构性元素，而不依赖于表面装饰品的堆砌。（ &lt;strong&gt;装饰品本身并不是坏事，只有当它被用来掩盖结构的苍白时，才变成了一件坏事。&lt;/strong&gt; ）绘画也是类似的，认真观察的、非常有代表性的静物作品往往要比表面极尽华美、但是实质上只是无意义重复的「巨作」（比如再现非常复杂的花边的绘画作品）更有价值。在写作上，这种说法意味着只说必须要说的话，并且说得简短。&lt;/p&gt;
&lt;p&gt;说来奇怪，如果你希望自己的作品对未来的人们有吸引力，方法之一就是 &lt;strong&gt;让你的作品对上几代人有吸引力。&lt;/strong&gt; 我们很难猜想未来是什么样子，但是可以肯定，未来的人们不会在乎今天流行的风潮，这一点与上几代人是相同的。所以，如果你的作品对今天的人们以及 1500 年的人都有吸引力，那么它极有可能也会吸引 2500 年的人。&lt;/p&gt;
&lt;p&gt;好设计是模仿大自然的设计。我不是说模仿大自然这种行为本身有多么好，而是说 &lt;strong&gt;大自然在长期的演化中已经解决了很多设计问题&lt;/strong&gt; 。所以，如果你的设计与大自然很接近，那么它基本上不会很差。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后一点能很好地解释「人为什么不会进化出轮子」这个问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在历史的任何时刻都有一些热点项目，一些团体在这些项目上做出伟大的成绩。如果你远离这些中心，几乎不可能单靠自己就取得伟大成果。某种程度上，你个人最多可以对趋势产生一定的影响，但是你不可能决定趋势，实际上是趋势决定了你。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;个人对历史的影响大多是微乎极微的。如果时代没有特定的趋势，只能逆流而上。摸清时代的发展趋势，是创造出更大的成就的必要条件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;帕金森定律（Parkinson&#39;s Law）的一种原始表达形式是「工作总是到最后一刻才会完成」，后来引申到计算机领域就变成了「数据总是会填满所有空间」，更一般性的总结则是「对一种资源的需求总是会消耗光这种资源的所有供应」。&lt;/p&gt;
&lt;p&gt;做出优秀成果的人，在做的过程中常常觉得自己做得不够好。其他人看到他们的成果觉得棒极了，而创造者本人看到的都是自己作品的缺陷。这种视角的差异并非偶然，因为只有对现状不满，才会造就杰出的成果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;「自由思想」&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;塞缪尔·约翰逊说过，人们对一个作家的评价，需要 100 年才能达成一致。你必须先等他的那些有影响力的朋友都死了，然后再等他的追随者都死了，才能对他有一个公正的评价。&lt;/p&gt;
&lt;p&gt;但真正令人惊恐的是，流行一时的不仅有衣服，还有道德观念。明明是专横武断、毫无依据的错误观点，但是大多数人却深信不疑，受到影响而不自知。这是非常危险的。流行的衣服，其实是很难看的衣服；流行的道德观念，其实不是善而是恶。但是，如果别人都穿流行的衣服，而你不穿，你就会遭到嘲讽；如果别人都遵守流行的道德观念，而你不遵守，结果则要严重得多，你会被解雇、流放、监禁，甚至被杀。&lt;/p&gt;
&lt;p&gt;要是能坐上时间机器回到过去，不管哪一个年代，有一件事都是不会改变的，那就是「祸从口出」。你一定要小心自己说的话。自以为无害的言论会给你惹来大麻烦。今天，说地球围绕太阳运转真是再平常不过了，如果换在 17 世纪的欧洲，这么说就大难临头了。伽利略说了这样的话，结果遭到了宗教法庭的审判。&lt;/p&gt;
&lt;p&gt;有时候，别人会对你说：「要根据社会需要，改造自己的思想、(well-adjusted)。」这种说法隐含的意思似乎是，如果你不认同社会，那么肯定是你自己的问题。你同意这种说法吗？事实上，它不仅不对，而且会让历史倒退。如果你真的相信了它，凡是不认同社会之处，你连想都不敢想，马上就放弃自己的观点，那才会真正出问题。&lt;/p&gt;
&lt;p&gt;一旦发现了「不能说的话」，下一步怎么办？我的建议就是别说，至少也要挑选合适的场合再说，只打那些值得打的仗。与笨蛋辩论，你也会变成笨蛋。 这时你要明白，自由思考比畅所欲言更重要。如果你感到一定要跟那些人辩个明自，绝不咽下这口气，一定要把话说清楚，结果很可能是从此你再也无法自由理性地思考了。我认为这样傲不可取，更好的方法是在思想和言论之间划一条明确的界线。在心里无所不想，但是不一定要说出来。我就鼓励自己在心里默默思考那些最无法无天的想法。你的思想是一个地下组织，绝不要把那里发生的事情一股脑说给外人听。&lt;/p&gt;
&lt;p&gt;1638 年，英国诗人弥尔顿（John Milton）准备第一次访问意大利。曾经担任英国驻威尼斯大使的沃顿爵士（Hemy Wootton）告诉弥尔顿要记住一句座右铭「i pensieri stretti &amp;amp; il viso sciolto」。字面意思是「守口如瓶，笑脸相迎」，也就是说，你要对每一个人微笑，但是不要说出自己的真实想法。这所有反击方法之中，最好的一种可能就是幽默。狂热分子都有一个共同点：缺乏幽默感。他们无法平静地对待笑话。在幽默王国中，他们闷闷不乐，就像满身笨重盔甲的骑士走进了溜冰场，无所适从。一个现实的例子就是，维多利亚女王时代的英国人讲究宫廷礼仪，迂腐守旧，人们把这当作笑话看待，结果它好像就真的被笑话击垮了。它在当代的化身「政治正确」也将得到同样的命运。「我很高兴自己写了《萨勒姆的女巫》，」阿瑟·米勒写道，「但是回想起来，我常常希望自己有那种气质，写一出反映当时情况的荒诞喜剧。」&lt;/p&gt;
&lt;p&gt;如果自己就是潮水的一部分，怎么能看见潮流的方向呢？你只能永远保持质疑。问自己，什么话是我不能说的？为什么？&lt;/p&gt;
&lt;p&gt;幽默感是强壮的一种表现，始终拥有幽默感就代表你对厄运一笑了之，而丧失幽默感则表示你被厄运深深伤到。所以，强壮的标志（或者至少是特点）就是轻松面对自己的人生。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;「市场」&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;真正竞争软件设计的战场是新兴领域的市场，这里还没有人建立过防御工事。只要你能做出大胆的设计，由一个人或一批人同时负责设计和实现产品，你就能在这里战胜大公司。微软公司自己一开始就是这样走向成功的，苹果公司和惠普公司也是如此。我觉得几乎所有的创业公司都是这样取得成功的。&lt;/p&gt;
&lt;p&gt;没有盗版是一种「优势」，但也是一个问题。一定数量的盗版对软件公司是有好处的。不管你的软件定价多少，有些用户永远都不会购买。如果这样的用户使用盗版，你并没有任何损失。事实上，你反而赚到了，因为你的软件现在多了一个用户，市场影响力就更大了一些，而这个用户可能毕业以后就会出钱购买你的软件。&lt;/p&gt;
&lt;p&gt;麦当劳是快餐连锁集团，它的发展依靠的就是设计出了一个快餐服务体系，可以复制到全世界每一个角落。每一家麦当劳连锁店都必须严格遵守操作规定，这使得它就像软件一样运作。所以，麦当劳其实也符合「一次开发，普遍适用」的模式。&lt;/p&gt;
&lt;p&gt;这不仅是创业公司运作的好方法，更是创业公司的本质。风险投资商（VC）知道这个道理，为它起了一个名字——进入壁垒（bairiers to entry）。如果你有一个新点子去找 VC，问他是否投资，他首先就会问你几个问题，其中之一就是其他人复制你的模式是否很困难。也就是说，你为竞争对手设置的壁垒有多高^。你最好做出令人信服的解释，阐明你的技术难以复制的原因。否则一旦大公司看到了，它们就会做出自己的版本，再加上它们的品牌、资本、经销能力，一夜之间就把你的市场全部抢走。那时你就像来到开阔地带的游击队，会被正规军一举歼灭。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;「工具」&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;大多数时候，你不需要一台全功能的电脑（即本身可以运行软件的电脑）。你所需要的设备只要有键盘、屏幕、浏览器就够了，可能还有无线网卡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我也曾想过，既然性能与便携不可兼得，那么把消耗性能的计算与渲染工作放到云端，而用户终端只需要有基本性能的处理器，与屏幕、键鼠等交互设备。并且，云服务器映射到终端，一对多的方式，不仅可以节省成本，也可以做到无缝切换，适应更多场景。在家外接大屏幕，在外用平板就行了。&lt;/p&gt;
&lt;p&gt;目前主要的问题主要是连接速率与成本。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200328143324.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80&#34;&gt;奥卡姆剃刀 - 维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/36584002&#34;&gt;为什么地球生物没有进化出轮子这类结构？- 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E8%AF%BB%E3%80%8A%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6%E3%80%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E8%AF%BB%E3%80%8A%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6%E3%80%8B/</guid>
      
    </item>
    
    <item>
      <title>音乐相关</title>
      
      
      
      
      <description>&lt;h2&gt;&lt;em&gt;Goldberg-Variation&lt;/em&gt;&lt;/h2&gt;
&lt;h3&gt;钢琴谱&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/docs/Goldberg-Variation.pdf&#34;&gt;&lt;strong&gt;Goldberg-Variation.pdf&lt;/strong&gt;&lt;/a&gt;：BWV 988 系列所有曲目均有包含&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;演奏&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/av86981368#reply2336107317&#34;&gt;&lt;strong&gt;Aria from Goldberg-Variations BWV988&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;《不能说的秘密》&lt;/h2&gt;
&lt;h3&gt;吉他谱&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200215141455.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;架子鼓谱&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200215141644.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200215141727.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/37721158&#34;&gt;一张图大概学会架子鼓识谱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yoopu.me/view/BXjRgMXY#c=false&amp;amp;e=false&amp;amp;n=false&amp;amp;s=false&amp;amp;i=ukulele&amp;amp;k=0&#34;&gt;不能说的秘密&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%85%B3/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/LIFEHACK/%E9%9F%B3%E4%B9%90%E7%9B%B8%E5%85%B3/</guid>
      
    </item>
    
    <item>
      <title>Hello blog</title>
      
      
      
      
      <description>&lt;p&gt;终于，我还是给知识库加上了博客的功能。&lt;/p&gt;
&lt;p&gt;在听了 &lt;a href=&#34;https://podcasts.apple.com/cn/podcast/%E6%8D%95%E8%9B%87%E8%80%85%E8%AF%B4/id1471299491&#34;&gt;&lt;strong&gt;捕蛇者说&lt;/strong&gt;&lt;/a&gt; 的播客节目「个人知识管理体系系列」后，我思考了一番，发现之前倾向的单一知识库的做法，存在一些弊端：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日常一些零碎的观点或想法，不适合提出来长篇大论、单独成文。&lt;/li&gt;
&lt;li&gt;知识库的文风比较正式，需要引经据典、咬文嚼字，这样一来写作的周期也会被拉长，这也削弱了零碎写作的积极性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我希望把博客当 gist 用，简单记录一些零碎观点或想法。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-07-Hello-blog/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-07-Hello-blog/</guid>
      
    </item>
    
    <item>
      <title>None</title>
      
      
      
      
      <description>&lt;p&gt;最近因为吃了一顿麦当劳上火感冒了，在养病的几天里，我发现脸上的痘渐渐消了，而且也没有新长痘。&lt;/p&gt;
&lt;p&gt;之前小发也跟我讨论过，于是我想了想，大概是这几个原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;足够睡眠、不熬夜&lt;/strong&gt;。在那几天里，我每天晚上十一点半睡，早上七八点醒。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;饮食清淡&lt;/strong&gt;。那几天吃的都很清单，基本上都是汤面、汤饭，也不吃辣，不吃冷饮雪糕，所以一点儿上火或生寒的元素都不存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一直到现在我都保持着这些做法，所以到现在也不怎么长痘。&lt;/p&gt;
&lt;p&gt;一旦知道自己没长痘，整个人就精神多了，待人接物也自信了许多。这也反过来督促自己该早睡早起、饮食清淡。这是一个积极的正向循环，希望我能坚持下去。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-08-%E5%A6%82%E4%BD%95%E4%B8%8D%E9%95%BF%E7%97%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-08-%E5%A6%82%E4%BD%95%E4%B8%8D%E9%95%BF%E7%97%98/</guid>
      
    </item>
    
    <item>
      <title>None</title>
      
      
      
      
      <description>&lt;p&gt;我从闲鱼代理买了一台 DS220+。直接原因是因为，Google Photos 从六月以后取消了无限上传额度，且我也慢慢意识到，把从小到大整整几百个 G 的照片，都托付给垄断公司，是非常不保险的做法。甚至可以说，只要他们想，是可以找个借口，把用户数据丢掉的。&lt;/p&gt;
&lt;p&gt;不仅仅是照片，项目仓库、音乐、电影等等，我都急切需要一个反脆弱的数据存放方式。&lt;/p&gt;
&lt;p&gt;「让我的数字资产比我活得更久。」这是我的目标。&lt;/p&gt;
&lt;p&gt;最开始，我仅仅是把数据存在电脑单一硬盘上，但如果不巧碰上硬盘坏了无法修复，或者往极端点想，电脑被偷了，那数据就永远丢失了。大多数人会想到这个问题，并选择冷备份的办法。但是我们都知道，数据是不断更新的，冷备份有周期性，一旦在备份开始前发生意外，那么这一个周期的数据（甚至恰好有关键数据）也是找不回来的。而且这种办法非常不 geek，繁琐的流程应该交给机器来解决。&lt;/p&gt;
&lt;p&gt;后来我尝试用各种局域网 sync 工具和 git 的方法，但前者方案并不完善，而 git 虽然安全可靠，但不适合处理非二进制的大文件（所以我现在仅仅用 git 来处理项目仓库）。&lt;/p&gt;
&lt;p&gt;所以我索性上了白群晖，NAS 本地储存 + Cloud Sync 加密上传各大网盘，一步到位。而群晖的 Photos 套件，跟 Google Photos 的用户习惯相差无几，不难入手。&lt;/p&gt;
&lt;p&gt;数据的迁移还是挺花时间的，需要有耐心。这星期内我也会出炉一篇文章，讲讲我是如何「永久」保存数据的。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-09-%E4%B9%B0%E4%BA%86%E4%B8%80%E5%8F%B0NAS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-09-%E4%B9%B0%E4%BA%86%E4%B8%80%E5%8F%B0NAS/</guid>
      
    </item>
    
    <item>
      <title>None</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;这些年我一直提醒自己一件事情，千万不要自己感动自己。大部分人看似的努力，不过是愚蠢导致的。什么熬夜看书到天亮，连续几天只睡几小时，多久没放假了，如果这些东西也值得夸耀，那么富士康流水线上任何一个人都比你努力多了。人难免天生有自怜的情绪，唯有时刻保持清醒，才能看清真正的价值在哪里。 —— 于宙《我们这一代人的困惑》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该工作工作，该学习学习，该睡觉睡觉，该玩就放开玩。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-10-%E4%B8%8D%E8%A6%81%E8%87%AA%E5%B7%B1%E6%84%9F%E5%8A%A8%E8%87%AA%E5%B7%B1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-10-%E4%B8%8D%E8%A6%81%E8%87%AA%E5%B7%B1%E6%84%9F%E5%8A%A8%E8%87%AA%E5%B7%B1/</guid>
      
    </item>
    
    <item>
      <title>为什么要抵制智能推荐算法</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;我认为，对人工智能的恐惧，大多数情况下，就是对资本主义的恐惧。我们担心资本主义将如何通过技术来利用我们。
现在，技术与资本主义息息相关，已经很难区分两者了。&lt;/p&gt;
&lt;p&gt;-- Ted Chiang，美国科幻小说作家&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-23-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%8A%B5%E5%88%B6%E6%99%BA%E8%83%BD%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-04-23-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%8A%B5%E5%88%B6%E6%99%BA%E8%83%BD%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/</guid>
      
    </item>
    
    <item>
      <title>关于新能源行业的一些观点</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;其实在互联网工作了这么多年，各个巨头无非都在抢一个东西 —— &lt;strong&gt;流量入口，车是未来的流量入口，互联网公司争抢造车这块市场也无非是这个原因。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在我看来，未来 3-5 年之内，新造车的战局就会稳定下来，到时候国内应该会有 1-2 家特别大的新能源车公司，就像之前的大众集团一样，吃掉大部分的市场，就像当年的美团、滴滴一样。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其实造车行业在各个行业吸了很多血，包括金融、互联网以及其他行业，人、财、物都往这个行业聚拢，洗牌之后可能并不需要这么多的从业人员。&lt;/strong&gt;人是会跟着行业趋势走的，如果这个行业洗牌后依然能保持不错的增长，我会在这个行业工作比较长的时间。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-06-13-%E5%85%B3%E4%BA%8E%E6%96%B0%E8%83%BD%E6%BA%90%E8%A1%8C%E4%B8%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%82%E7%82%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-06-13-%E5%85%B3%E4%BA%8E%E6%96%B0%E8%83%BD%E6%BA%90%E8%A1%8C%E4%B8%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%82%E7%82%B9/</guid>
      
    </item>
    
    <item>
      <title>内卷与未来的职业趋势</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;经济不景气，更有利于早点去朝阳行业。&lt;/p&gt;
&lt;p&gt;早早去站位，早早去占坑。&lt;/p&gt;
&lt;p&gt;本科生去了，几年后，就会发现，读研的同学还没有你混的好。&lt;/p&gt;
&lt;p&gt;内卷，是无意义的做功。&lt;/p&gt;
&lt;p&gt;一群人在无意义的做功，我们只要找到新方向的风口，过去占位。&lt;/p&gt;
&lt;p&gt;占位，不卷。等到占稳了位置，就会有人卷过来。&lt;/p&gt;
&lt;p&gt;到时候门槛水涨船高，但进入的早，便能卡住位置。&lt;/p&gt;
&lt;p&gt;熟悉历史规律，自然能够找到合理的策略。&lt;/p&gt;
&lt;p&gt;就像是在历史上，历次大萧条后，都会出现的洗牌。&lt;/p&gt;
&lt;p&gt;对普通人来说，这恰恰是珍贵的机会。&lt;/p&gt;
&lt;p&gt;—— 「立华说」&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-06-14-%E5%86%85%E5%8D%B7%E4%B8%8E%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%81%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-06-14-%E5%86%85%E5%8D%B7%E4%B8%8E%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%81%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF/</guid>
      
    </item>
    
    <item>
      <title>RoboMaster 赛后随笔</title>
      
      
      
      
      <description>&lt;p&gt;终于是打完比赛了，今年的成绩较前两年有突破，从南部赛区打进了国赛。但也仅仅是止步于国赛。&lt;/p&gt;
&lt;p&gt;今年的问题在于硬实力。战术只能弥补一定的实力差距，带我们进国赛。但若说机器人在场上的基本功能都不能保证，那么无论多好的战术，都是弥补不来的。&lt;/p&gt;
&lt;p&gt;最后一场打北科大，可以称得上是终局之战了。一号英雄被击毁，二号工程图传过热抓瞎，三号步兵翻车，五号步兵不能动，哨兵被摧毁，飞镖已打出但没击中前哨战。在操作间里，我们已经知道比赛无望了，所以尝试让四号步兵飞坡，结果也翻车了。最后一分钟金钱到位，只能启动无人机当哨兵用，倒是将敌方击退并造成两百多伤害（自瞄稳健）。无人机打完所有弹丸之后，也无力回天了。&lt;/p&gt;
&lt;p&gt;还记得打川大那一局，本来第一局已经输了，但后来却扳回两局。他们三局的飞镖全都打中前哨战，到后来我们完全放弃守塔了。不过最后还是靠着地面推进，硬是赢回了比赛。&lt;/p&gt;
&lt;p&gt;希望能一年比一年好吧。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-08-05-RoboMaster%E8%B5%9B%E5%90%8E%E9%9A%8F%E7%AC%94/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-08-05-RoboMaster%E8%B5%9B%E5%90%8E%E9%9A%8F%E7%AC%94/</guid>
      
    </item>
    
    <item>
      <title>8 月深圳小记</title>
      
      
      
      
      <description>&lt;p&gt;8 月 28 日的午后，我来到车站等候回学校的火车。转眼间 8 月匆匆过去，我决定记录在深圳的这一个月。&lt;/p&gt;
&lt;p&gt;月初，在 RM 比赛因疫情延期了两个月之后，我们的队伍终于来到了深圳。这是我第一次踏上赛场（去年因疫情变成了线上赛），在比赛中有幸作为云台手进入操作间，淋漓尽致地体验了一回比赛的氛围。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828183700.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;刚来到赛场的前两天，我们的准备完全不充分，在适应性训练和第一场比赛之中，各兵种机器人都遇到了大大小小的问题。不过，在接踵而至的比赛中，我们且战且进，逐渐适应了比赛的节奏。也感谢技术组的队员们，在团队士气最低落的时刻，依然默默坚守，修复机器人的各种问题。&lt;/p&gt;
&lt;p&gt;小组赛，击败重庆理工和厦门理工后，却与福建工程学院打平，使我们非常被动地去迎战四川大学。在前年的比赛中，我们输给川大，从而无缘国赛。第一局，我们非常没有信心。川大的飞镖一开局就拆掉了我们的前哨战，而高佬的步兵下坎一急就翻车了，我们只能硬撑着局面。虽然第一小局输了，但坤坤发现，似乎我们少一台步兵，却勉强还能打得过。第二局开始了，我看着雷达的画面，十分焦虑，于是在麦克风里对大家说，我们要记住，我们是没有前哨战的，破釜沉舟，背水一战才有可能赢（事实上，三局对面的飞镖都把我们前哨战给拆掉了……）。川大虽然有飞镖这个杀器，但他们的地面单位没有战术配合。于是，我们根据演练了三个多月的战术配合，逐个击破。第二局的扳回，我们信心大增，在第三局的决战中，我们稳中求进，拿下了国赛的门票。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828174510.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;国赛无弱队，我们最终止步于国赛二等的奖项，只能期待明年下一届的比赛了。&lt;/p&gt;
&lt;p&gt;打完了比赛，我就拖着行李箱往公司去了。读初中的时候，我开始接触单片机，Seeed 和柴火创客空间于我而言，一直是写在未来的愿望清单上的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828174630.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这里的每一天都充满成就感，因为工作的内容就是兴趣所在，而且还能与优秀的伙伴们一起共事，这实在是一种享受。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828174646.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在深圳的内卷的大环境下，生活仍然可以有甜点。偶然去了福田市中心的酒展，虽然酒一般般，但还是挺开心的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828175619.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828175638.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;周末午后书店的柠檬茶和苏打水：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828175611.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;终于与来深圳打工的朋友们聚了一回，晚上的啤酒搭烧烤还挺不错：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828175555.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;有天下班去地铁站的路上，一片晚霞搭起了一座虹桥，我才发现很久没有抬头仰望过天空了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210828174751.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;8 月底，开学了，接下来该何去何从呢？
回想起在赛场上喊得震天的口号，「脚踏实地，仰望星空」，我已经有了答案。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-08-28-8%E6%9C%88%E6%B7%B1%E5%9C%B3%E5%B0%8F%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-08-28-8%E6%9C%88%E6%B7%B1%E5%9C%B3%E5%B0%8F%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>当下与永恒</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;当年，古罗马人在宏伟华丽的浴宫中吹着口哨，认为帝国就像身下的浴池一样，建在整块花岗岩上，将永世延续。&lt;/p&gt;
&lt;p&gt;现在人们知道，没有不散的宴席，一切都有个尽头。&lt;/p&gt;
&lt;p&gt;—— 刘慈欣《三体 Ⅲ·死神永生》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;置身于浓厚的节日气氛里，看着身边欢乐的人们，我也不禁被融入其中。&lt;/p&gt;
&lt;p&gt;「如果每一天都能如此快乐就好了」。但仔细一想，如果每天都一样地快乐着，那还能称之为快乐吗？先前读过一段话，「快乐是生活的点缀，无聊和痛苦才是生活的本质」。&lt;/p&gt;
&lt;p&gt;远看到人的一生，生命之于宇宙的刻度，是尤其短暂的。如果可以永生，那活着的每天，还会有新鲜感吗？&lt;/p&gt;
&lt;p&gt;经历过无聊和痛苦，才能明白快乐的来之不易；人知道生命会有终将逝去的一天，才会去珍惜在这个世界上的每一天。&lt;/p&gt;
&lt;p&gt;如何把有限的生命，刻进永恒的宇宙维度，这是我一直在追寻的谜题。&lt;/p&gt;
&lt;p&gt;不过，尚存一点我们可以把握的，是去珍惜身边的美好，珍惜你所爱的人，别待失去才追悔。&lt;/p&gt;
&lt;p&gt;预祝中秋快乐~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一杯敬明天 一杯敬過往
支撐我的身體 厚重了肩膀
雖然從不相信所謂山高水長
人生苦短何必念念不忘&lt;/p&gt;
&lt;p&gt;一杯敬自由 一杯敬死亡
寬恕我的平凡 驅散了迷惘
好吧天亮之後總是潦草離場
清醒的人最荒唐
……
—— 毛不易《消愁》&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-09-19-%E5%BD%93%E4%B8%8B%E4%B8%8E%E6%B0%B8%E6%81%92/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2021-09-19-%E5%BD%93%E4%B8%8B%E4%B8%8E%E6%B0%B8%E6%81%92/</guid>
      
    </item>
    
    <item>
      <title>雨</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;雨下了四年十一个月零两天。间或有细雨绵绵的日子，一开始人人都还身着盛装，带着久病初愈的神情预备庆祝天晴，但很快便习惯了将这些间歇当作滂沱重现的前奏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;🎵Who&#39;ll Stop the Rain🎵&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;那是最昌明的时世，那是最衰微的时世；
那是睿智开化的岁月，那是混沌蒙昧的岁月；
那是信仰笃诚的年代，那是疑云重重的年代；
那是阳光灿烂的季节，那是长夜晦暗的季节；
那是欣欣向荣的春天，那是死气沉沉的冬天；
我们眼前无所不有，我们眼前一无所有。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每天早晨，太阳升上地平线，爬到最高点再回落，这一天就宣告结束，为下一天让路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大低谷纪念碑是纪念大低谷的建筑群，是一只只从沙漠中向上伸展的枯树干般的手，其都对着天空做出各种扭曲的姿态。
在雕塑群的边缘，罗辑看到了一块肃穆的方碑，上面刻着一行金色的大字：
给岁月以文明，而不是给文明以岁月。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在疫情汹涌而至前的岁月，大家的目光都向着前方；居家办公的日子里，外面的世界似乎愈发向着低谷在塌陷，瘟疫、战争的阴霾挥之不去，天启四骑士正逐一降临，巴别塔一次次被推倒。在人类漫长的历史岁月里，和平、开放、富足的年代是短暂的、火花一般闪耀了一下，随即跌入漫漫长夜之中。&lt;/p&gt;
&lt;p&gt;白昼之光，岂知夜色之深。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;危机出现后的一个世纪，曾经在黄金时代生活过的人们都离开了人世。……这个时代在今后一直被人不断地回忆，经历过这段美好岁月的老人像反刍动物似的不断把那段记忆吐出来，甜蜜地咀嚼，最后总是加上一句：「唉，那时咋就不懂得珍惜呢？」而听他们讲述的年轻人目光中充满嫉妒，同时也将信将疑：那神话般的和平、繁荣和幸福，那世外桃源般的无忧无虑，是否真的存在过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假如某些相当偶然的事件发生，就会很容易就被视为传统，因而再也无法打破，或者几乎牢不可破。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Long as I remember the rain been comin&#39; down
Clouds of mystery pourin&#39; confusion on the ground
Good men through the ages tryin&#39; to find the sun
And I wonder, still I wonder, who&#39;ll stop the rain?
I went down Virginia, seekin&#39; shelter from the storm
Caught up in the fable, I watched the tower grow
Five Year Plans and New Deals, wrapped in golden chains
And I wonder, still I wonder, who&#39;ll stop the rain?
Heard the singers playin&#39;, how we cheered for more
The crowd had rushed together, tryin&#39; to keep warm
Still the rain kept pourin&#39;, fallin&#39; on my ears
And I wonder, still I wonder, who&#39;ll stop the rain?&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-03-18-%E9%9B%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-03-18-%E9%9B%A8/</guid>
      
    </item>
    
    <item>
      <title>现代都市与末日田园</title>
      
      
      
      
      <description>&lt;p&gt;🎵Nowwhere Man🎵&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He&#39;s a real nowhere man,
Sitting in his nowhere land,
Making all his nowhere plans for nobody.&lt;/p&gt;
&lt;p&gt;Doesn&#39;t have a point of view,
Knows not where he&#39;s going to,
Isn&#39;t he a bit like you and me?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现代都市能解决你的大部分需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;饿了？去楼下全家买个饭团填饱肚子，或者干脆下馆子&lt;/li&gt;
&lt;li&gt;想消费？走几步就能逛 mall&lt;/li&gt;
&lt;li&gt;出行？地铁公交网约车能带你去任何地方&lt;/li&gt;
&lt;li&gt;生病了？药店医院也不少&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在赛博空间里也是一样的。微信、网易云音乐、淘宝……新时代的人们，能够随时享受到它们带来的便利。&lt;/p&gt;
&lt;p&gt;曾几何时，我们以为它们是永恒的，不会对我们关闭入场权限，至少也不应该那么突然。&lt;/p&gt;
&lt;p&gt;当下载的音乐因版权无法收听，当聊天与文字因敏感而被屏蔽，当现代都市因封锁而休克。我们开始意识到，面对它们的强势，我们是十分被动的。&lt;/p&gt;
&lt;p&gt;于是，我们只能开始开垦自己的末日田园。「深挖洞，广积粮」，以末日生存的标准来做灾备，即使这样做会失去很多便利性。&lt;/p&gt;
&lt;p&gt;自建博客、导航站、书库、音乐影视库、使用 RSS 订阅与播客，使用 NAS 进行分布式储存备份。&lt;/p&gt;
&lt;p&gt;虽然我们尚未有条件去构筑现实世界的末日田园，但是至少可以在赛博空间内先实验一番，首先让精神得到安抚。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文明像一场五千年的狂奔，不断的进步推动着更快的进步，无数的奇迹催生出更大的奇迹，人类似乎拥有了神一般的力量……但最后发现，真正的力量在时间手里，留下脚印比创造世界更难，在这文明的尽头，他们也只能做远古的婴儿时代做过的事：把字刻在石头上。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-05-01-%E7%8E%B0%E4%BB%A3%E9%83%BD%E5%B8%82%E4%B8%8E%E6%9C%AB%E6%97%A5%E7%94%B0%E5%9B%AD/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-05-01-%E7%8E%B0%E4%BB%A3%E9%83%BD%E5%B8%82%E4%B8%8E%E6%9C%AB%E6%97%A5%E7%94%B0%E5%9B%AD/</guid>
      
    </item>
    
    <item>
      <title>硬件行业趋势与个人的选择</title>
      
      
      
      
      <description>&lt;h2&gt;对硬件行业的一些观点&lt;/h2&gt;
&lt;h3&gt;供需关系不匹配&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的教育培养了一种不太正确的思维方式，认为难的东西就更值钱。其实现实中并非如此。一个东西的价格主要是由供需关系决定的。供不应求价格就会上涨，供大于求价格就会下跌。&lt;/p&gt;
&lt;p&gt;一个职位的工资高低并不取决于该职位的技术难度，而是取决于该职位的市场价值。而市场价值又是由市场需求来决定。&lt;/p&gt;
&lt;p&gt;一个人的技能是否值钱和这个技能的难度是没有一丁点关系的，只和市场需求有关系。市面上如果需要 100000 个熟练前端，但是只能培养出 5000 个熟练前端，这些人的薪资当然高了。反之，如果全中国每年只需要 20 个做编译器的软件工程师，但是每年光做编译器的博士研究生都有 30 个毕业的话。那些本科生是一丁点机会都没有的，无论你在大学四年中学了多么难且艰深的理论，连免费实习的机会都没有，别人嫌你浪费电。&lt;/p&gt;
&lt;p&gt;作为基础设施的硬件行业，其本身的发展需要依赖于实实在在的基础科学与工程技术，与业务关联性没有很强，所以其更新换代的速度就没有那么快，也就限制了从业人员需求的增长。所以，即使某些硬件工程的门槛高，也架不住需要的人少呀。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;扩张边际效益低、试错成本高、产品开发周期长&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对于实体制造业，每扩张一倍，就意味着与之对应的其他各项成本（包括人力成本，机器成本，土地成本等等）至少也要扩张一倍，考虑到效率的因素，扩张的边际成本甚至是在增加的。而且这个过程需要大量的时间准备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;芯片器件集成度变高&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;芯片厂家的生态、参考设计越来越成熟，应用开发的门槛越来越低。&lt;/p&gt;
&lt;p&gt;板级硬件现在都只剩抄抄图，看看芯片说明书。芯片说明书甚至帮你把外围电路都说了个七七八八。只需要一个高级的拼装工。&lt;/p&gt;
&lt;p&gt;至于为什么需求这么小，前面也提到了，板级硬件技术发展了这么多年，很多东西都集成化，模块化了，没有硬件工程师发挥创造的舞台了，招一个牛逼的和一般的差不了太多。尤其在联发科创造的 turnkey 解决方案推动下，几乎所有的芯片原厂都会提供全套参考设计，也就是可以抄作业，抄好作业甚至还可以请芯片原厂检查一下作业。一旦作业完成之后，硬件工程师的活就剩下日常打杂，失效分析，产线故障处理，配合软件调试软件之类，再也没有设计与创作的空间。一个产品上市如果需要持续的硬件设计改进，说明这个产品的硬件设计一开始就是一坨屎，这种事情是绝对不允许发生的。而对软件而言，无论什么阶段，都可以持续改进，提高创新。说不定，还能引出一点新问题出来，大不了后续来个 OTA 升级修复就得了，可这些工作都需要人去干吧，需要软件去干吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;职业发展选择&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;硬件工程师虽然待遇低，但公司与公司之间差距也是很大的。待遇按供应链分，欧美芯片原厂 &amp;gt; 国内芯片厂（包括台湾省）&amp;gt; OEM&amp;amp;ODM 终端厂 &amp;gt; 方案公司。所以，在跳槽的时候，尽量从右往左跳，工资待遇和技术竞争力会越来越好。凡事都有例外，像 OPPO/VIVO 这样的终端厂硬件待遇长期碾压芯片原厂，但我仍然建议一个硬件工程师至少有一段在芯片原厂的工作经历，以夯实技术，丰富经验，拓展视野，这只有原厂才能给你的，终端厂是给不了。然后再居高临下，傲视天下的姿态下嫁到有钱的终端厂，才是一个完美的结局。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基于以上各家的观点，我们能够得出来的结论是：如果还没入行，快逃，逃往嵌入式软件或纯软件领域；如果已经入行，&lt;strong&gt;往上游走，往原厂走，往硬件领域最核心的地方谋发展。&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/303073976/answer/2409911089&#34;&gt;硬件工程师有哪些发展方向和具体的发展前景？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/418963577&#34;&gt;硬件明明比软件更难，国内的硬件技术也不如软件，为什么硬件工程师待遇还不如软件？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-06-27-%E7%A1%AC%E4%BB%B6%E8%A1%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF%E4%B8%8E%E4%B8%AA%E4%BA%BA%E7%9A%84%E9%80%89%E6%8B%A9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-06-27-%E7%A1%AC%E4%BB%B6%E8%A1%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF%E4%B8%8E%E4%B8%AA%E4%BA%BA%E7%9A%84%E9%80%89%E6%8B%A9/</guid>
      
    </item>
    
    <item>
      <title>有限与无限世界</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;Take a piano. The keys begin, the keys end. You know there are 88 of them, nobody can tell you any different. They are not infinite. You are infinite. And on these keys the music that you can make is infinite. I like that. That I can live by. -- &lt;em&gt;The legend Of 1900&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在构想一个有限的世界，它是被约束在一个小区域内，你只能在其中进行探索，而不能越出其边界。&lt;/p&gt;
&lt;p&gt;这样的描述也许过于抽象，但是可以有具体的实例来比喻：它是 iPod 里有限层级且功能很少的菜单、它是封闭式的学校、疫情下不进不出的社区、抑或是《海上钢琴师》中 1900 一生所在的船上。&lt;/p&gt;
&lt;p&gt;它们都有一些共同的特征：因为是有限的范围内，所以探索程度会随时间推进而逐渐饱和，且呈现出边际效益递减的趋势。&lt;/p&gt;
&lt;p&gt;生活在有限世界中，我们每天都经历着重复的景色。但是，如果你愿意花心思去探索，也许能发现彩蛋，有时转瞬即逝，有时微乎其微，但我们仍能惊叹于它的出现，感受着它带来不一样的体验。&lt;/p&gt;
&lt;p&gt;在大学封校的那段日子里，我爬上了学校几乎所有楼的楼顶，仔细欣赏形色各异的落日与景色。在一栋文科楼的楼顶，我发现了围墙上的涂鸦。这种感觉，正如在孤独的银河系中找到了人类以外的其它智慧生命体一般。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212810.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;这就是有限的世界，每天重复的景色也许会使你感到无聊，但也在无形中让你思考，在已知中发掘未知。&lt;/p&gt;
&lt;p&gt;继而说到无限世界。在这里，每一步都可以是全新的探索，沿途的景色可以永不重复，探索永远不会趋向饱和。&lt;/p&gt;
&lt;p&gt;现代人生活在无限世界中。我们每天都在摄入新的信息，但我们鲜有想过，如何将它们消化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以前的世界并没有现在这么过量的信息流，普通人想要获得一些信息需要拼尽全力，因此他们有大把的时间去反复咀嚼自己已经获得的信息。&lt;/p&gt;
&lt;p&gt;一本书翻来覆去看几十上百遍，每一句话都会在他们脑中无意识的回想，在日常生活里，在他们那些闲着没事的时间里，突然蹦出来，突然有了新的感悟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但到了我们这里，我们每天花很少的时间思考，我们追求干货、追求结论，直接将别人整理好的观点拿来用，并对其坚信不疑。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;结果每个人的脑中都充满了思想，但这些思想绝大部分都不是自己的，只是一个片面的结论，大家很擅长用这些已经得出来的结论去互相攻击，但却少有人知道这些结论得出来的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人类所有的问题，都源于人无法独自安静地坐在房间里。身处于无限世界中的我们，有时候也需要为自己构建一个有限世界，任思想纷飞、碰撞、绽放出火花。&lt;/p&gt;
&lt;p&gt;参考与致谢：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Ag3n5Znhg2cdBzcX6MdbIw&#34;&gt;浪费掉的时间，才是自己的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-07-03-%E6%9C%89%E9%99%90%E4%B8%8E%E6%97%A0%E9%99%90%E4%B8%96%E7%95%8C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-07-03-%E6%9C%89%E9%99%90%E4%B8%8E%E6%97%A0%E9%99%90%E4%B8%96%E7%95%8C/</guid>
      
    </item>
    
    <item>
      <title>星夜漫游</title>
      
      
      
      
      <description>&lt;p&gt;🎵Sgt. Peppers Lonely Hearts Club Band🎵&lt;/p&gt;
&lt;p&gt;当我踏出实验室时，已是午夜时分。&lt;/p&gt;
&lt;p&gt;跨上驾驶位，点火。披头士的 Sgt. Peppers Lonely Hearts Club Band 如同热浪一般，从音响中喷涌而出。好久没回顾经典摇滚了，我想，就接着听这部专辑吧。&lt;/p&gt;
&lt;p&gt;最开始喜欢上这首富有张力的摇滚，是源自披头士波普风格的动画 Yellow Submarine. 经典从未消逝，在一次又一次的演绎中得以重生。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yellow Submarine is the tenth studio album by English rock band the Beatles, released on 13 January 1969 in the United States and on 17 January in the United Kingdom. It was issued as the soundtrack to the animated film of the same name, which premiered in London in July 1968. The album contains six songs by the Beatles, including four new songs and the previously released &#34;Yellow Submarine&#34; and &#34;All You Need Is Love&#34;. The remainder of the album is a re-recording of the film&#39;s orchestral soundtrack by the band&#39;s producer, George Martin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;游弋在城市快速路上，四下空无一人，震耳欲聋的音乐灌满了整个车舱。我置身于自己的黄色潜水艇中，一边琢磨着星空与月夜。或许在百万年前，这片土地也曾是深不可测的海洋。我心无旁骛，发现舱外逐渐现出寒武纪的三叶虫，三叠纪的长颈龙，头顶还有蓝鲸的庞大身影。它们呈半透明态，泛着荧光。它们丝毫不受惊扰，仿佛这片海洋就是自己的常驻之地。&lt;/p&gt;
&lt;p&gt;一只胭脂色的水母朝我游过来。虽然我也在漫游，但它仍随我而动，游动姿态是那么的优雅。我很想把手伸出窗外触摸它，但却不想破坏了这般奇幻的美景。鲨鱼在不远处捕食一头海龟，自然的规律一直都存在于曾经或正生存在地球的生物上，人类创造的文明也仅仅是块遮羞布。&lt;/p&gt;
&lt;p&gt;云层重新散开，月光再次漫无目的地洒落，夜色寂静如空。
没有鱼群，没有海洋，我恍过神来，到家了。
唯留下清澈的夜空，月明，星稀。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-09-23-%E6%98%9F%E5%A4%9C%E6%BC%AB%E6%B8%B8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-09-23-%E6%98%9F%E5%A4%9C%E6%BC%AB%E6%B8%B8/</guid>
      
    </item>
    
    <item>
      <title>浅谈深圳开立医疗用户服务质量的细节与心得</title>
      
      
      
      
      <description>&lt;p&gt;作者：王彬 日期：2022-11-8&lt;/p&gt;
&lt;p&gt;服务是公司产品在客户端的具体表现，那服务质量就是产品制造质量的延伸和完善。近 两年，用服部不断提出新的服务理念，引进和开创了新的服务模式，尤其是在客户关系管理 方面做了很多工作。其中包括：用户服务信息化建设，服务质量业务能力的提升，主动服务 模式的开展，服务细节体现与完善，增值服务的拓展，渠道商服务网络的建设等。这些工作 只为一个共同目的，提高客户服务满意度，提升服务质量。&lt;/p&gt;
&lt;p&gt;细节与心得，分享以下几点：&lt;/p&gt;
&lt;p&gt;第一，建立装机客户数据库：用服上线的信息化工具，把全国客户装机信息，以电子信 息化形式呈现在用服中控系统中，微信小程序上；各区域工程师把设备信息进行更新和完善， 把医院和设备信息做了关联。当客户拨打我司 400 报修电话时，接听人员就会关联到客户设 备对应的医院、型号、sn 号、机器所在的楼层诊室等，这样比用户自己还要清楚机器状态， 首先给客户留下好的第一印象。这个系统同时也是现场工程师一件趁手的利器，随时随地， 查询机器自装机以来，所有保养、所有维修的情况，当工程师进行服务前，调出以往的服务 记录，结合设备报修情况，可以很快分析出机器当前的运行状态和快速提供给客户最优的处 理方案，做到心中有数。&lt;/p&gt;
&lt;p&gt;第二，打铁必须自身硬：用服部每月开展超声、内镜产品技术交流会，请各地的 TS 技 术支持轮流进行授课，现场和一线服务工程师互动提问、分享经验，总结规律，优化服务流 程，提高服务水平，对棘手的 ECN 等进行详细讲解，并跟踪更改的效果，会后进行交流会考 核，考核成绩体现在 KPI 中。每个季度还进行讲师报名考核，TS工程师必须参加，同时鼓励 CS工程师积极报名，通过远程在线考核，考察讲解 PPT 的流畅度和正确性，并回答随机问题 等，通过的小伙伴，获取相应的讲师资格，可以服务于区域内渠道商工程师的授课。&lt;/p&gt;
&lt;p&gt;第三，最好的防守就是主动进攻：我司产品在客户端的使用频率很高，如果采用事后维 修的方式，不但会影响设备的利用效率，而且还会导致设备的使用寿命缩短。因此用服部制 定了保养规范，针对二级及以上公立医院开展了“立影行动”、美年大健康用户开展了“美 立行动”、⺠营 VIP 医院开展了“春⻛行动”等一系列主动保养措施，通过这种预防式的巡 检方式，使超声设备和内镜设备的故障率大幅度降低，同时和高端医院的设备科科⻓、使科室主任、操作医生、护士⻓、护士等建立了密切的客情关系，分享服务工单、并提出巡检 建议，微信传给他们，保持高频次无障碍的沟通交流，增加了粘性和互动性。&lt;/p&gt;
&lt;p&gt;第四，服务细节体现与完善：在设备保养过程中，工程师认真记录设备巡检情况、机器 目前存在问题，录入微信小程序中，并且把电子报告微信分享给科室主任和设备科科⻓，就 非机器故障，可能出现的隐患，会提供一些改进方案给到设备科和科室主任。比如说：该科 室市电电压、零地电压不合格，电压的不稳定会引起设备运行异常，会引起图像异常干扰， 这种情况就要及时汇报给设备科和科室主任，说明其厉害之处，让其整改电路，并跟踪整改 效果是否达到要求；再比如：出保的超声探头始波有黑道衰减等，拍出来照片给主任、设备 科⻓微信发过去，并指出问题，说明害处，探头暗道这个影响图像诊断效果，继续使用会出 现漏诊误诊情况，会引起医疗事故，必须及时更换，把事情将明白，让科室负责人充分了解 到这件事的弊端，从而从心里愿意改善这个问题；这样的细节提醒，在工程师服务当中体现 的还有很多，同时也是创造服务营销的机会。&lt;/p&gt;
&lt;p&gt;第五，增值服务的拓展：每年年中和年底，各整理两次立影行动报告，统计近半年，机 器使用年限、运行状况、巡检保养记录、存在问题、机器延保建议等内容的报告，交给使用 科室和设备科，并给他们说明机器目前的状态，可能会出现的故障趋势，给予预防性的保修 建议；报告同时给到销售经理，市场医生，让其也反馈给医院院⻓、设备科科⻓，让医院各 部⻔都了解到我们的服务保养工作，同时衡量设备使用频率和年限，推荐延保方案或者购置 新设备方案，作为可靠的依据。&lt;/p&gt;
&lt;p&gt;第六，开创新的服务模式：去年开始用服部引进了服务渠道商模式，即筛选核心渠道商， 让其配备服务工程师，通过我司严格的培训考核，获取相应产品的服务资质，进行中低端产 品的服务分包，偏远地区的服务覆盖，弥补了服务及时率的短板，让我司用服工程师把更多 时间资源，用到高端 VIP 客户的服务上。渠道商工程师的管理，分配给各办事处工程师专人 负责，服务流程、服务标准、服务交付成果均体现在小程序报告上，并进行电话回访，跟踪 服务考核打分。&lt;/p&gt;
&lt;p&gt;第七，沟通的重要性：用服工程师与科室之间的沟通是提高服务质量的重要手段，与销 售、市场、经销商、和其它各部⻔间的沟通协调，也是我们工作中各环节得以顺利开展的关 键。作为用服人员，我们每个人都是公司各部⻔与客户之间的桥梁，也是结点，及时了解科 室的意⻅和反馈，不断改进工作中存在的不足，提高服务质量，增加科室对我们的信任度。&lt;/p&gt;
&lt;p&gt;以上这些是用服工程师一部分工作的具体体现，当然提高服务质量并不仅仅是以上几点还需要我们用服不断掌握扎实的业务技能，与客户打交道的方式方法也需要在实践中不断地 优化更新，和医院内镜室护士、超声科医生、设备科科员等开展各种形式的合作培训项目， 渠道商工程师服务能力提升和服务规范的把控，这些服务质量的巩固再提升，都是用服工程 师下一步继续跟进的方向。&lt;/p&gt;
&lt;p&gt;用户服务是一个既要有耐心，恒心，又要细心、细致的一个工作，用服工作能优秀地完 成必须要有强烈的责任心，而责任心的培养来源于工程师对本职工作的热爱、数十年如一日 的坚持和各种规章制度的保证，因此在总部用服部领导的带领下，用服部同事共同研讨后， 优化了一整套流程，如：报修流程、现场服务标准流程、配件备用镜申请返回流程、电话回 访流程、服务改进流程等等，这套科学的流程为工程师提高服务质量指明了方向。用服部即 将还要上线一些信息化工具、服务规范和激励措施，在这些规范和措施的加持下，工程师服 务质量必然更进一步。&lt;/p&gt;
&lt;p&gt;服务质量是我司的生命线，也是我司赖以生存的基石，服务质量的好坏决定着客户的使 用感受，也是用服工程师的立身立命之本。用服工程师应该把个人的服务质量和为客户解决 问题的责任心，作为从业根本的出发点，使我司优秀的服务质量植根在客户心里，如此才能 走得更远。&lt;/p&gt;
&lt;hr&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-11-08-%E6%B5%85%E8%B0%88%E6%B7%B1%E5%9C%B3%E5%BC%80%E7%AB%8B%E5%8C%BB%E7%96%97%E7%94%A8%E6%88%B7%E6%9C%8D%E5%8A%A1%E8%B4%A8%E9%87%8F%E7%9A%84%E7%BB%86%E8%8A%82%E4%B8%8E%E5%BF%83%E5%BE%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-11-08-%E6%B5%85%E8%B0%88%E6%B7%B1%E5%9C%B3%E5%BC%80%E7%AB%8B%E5%8C%BB%E7%96%97%E7%94%A8%E6%88%B7%E6%9C%8D%E5%8A%A1%E8%B4%A8%E9%87%8F%E7%9A%84%E7%BB%86%E8%8A%82%E4%B8%8E%E5%BF%83%E5%BE%97/</guid>
      
    </item>
    
    <item>
      <title>探索之路 - 2022 小记</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221229234748.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2022 年转眼即逝，有趣之事蛮多，挑一些记录下来吧。&lt;/p&gt;
&lt;h2&gt;在专业领域的探索&lt;/h2&gt;
&lt;p&gt;2022 年，我在自己的专业领域 - 硬件与嵌入式的基础上，在射频、信号完整性、电源、半导体 ATE 等领域有了新的探索。也画了很多很多的电路板，焊接了数不清的元件。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202212311312231.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在我的知识库体系下，各个分类的知识也在蓬勃增长着。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/202212311240781.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;重新思考未来的方向&lt;/h2&gt;
&lt;p&gt;在职业生涯的路上，我看到供需关系不匹配、扩张边际效益低、试错成本高、开发周期长这一系列的问题，正压缩着硬件解决方案从业者的天花板。&lt;/p&gt;
&lt;p&gt;认真调研了一番，我发现往上游的路似乎更好走。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的进程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正值半导体行业火热，我决定去试试。于是，我离开了实习的公司。诚然，在 2022 年末看，半导体行业虽然会受经济传导到消费电子市场的影响，带来持续的下行周期，但从长期看来仍然是一个朝阳行业。&lt;/p&gt;
&lt;h2&gt;抓住每一个机会&lt;/h2&gt;
&lt;p&gt;江湖上说，半导体行业去原厂香，并且欧美原厂更香。记得有一段时间，我隔三岔五就有面试。在家、在火车上、开车在路上、甚至在毕业旅行在酒店里，我都在与面试官们谈笑风生。&lt;/p&gt;
&lt;p&gt;在某一回大厂的面试后，面试官告诉我，有一个好消息和一个坏消息。好消息是我通过了面试，坏消息是此岗位只招实习生。面试官私底下给了我隔壁厂工程师的邮箱，说可以投个简历试试看。看似虚无缥缈的线索，我还是认真准备了简历，即使成功的概率很低，我也要努力去试试看。&lt;/p&gt;
&lt;p&gt;后来令我没想到的是，居然能够成功通过面试并拿到 Offer。还记得去年在 RoboMaster 打进国赛后，我们激励自己，抓住机会，输了不亏，赢了血赚。实践再一次证明，这个思路还是非常具有可行性的。&lt;/p&gt;
&lt;h2&gt;复前行，豁然开朗&lt;/h2&gt;
&lt;p&gt;新的工作在上海，得开始动身了，这是我第一回去离家这么远的大城市打工。查了查地图，发现还是挺远的，1500 公里的距离，一个人开长途，为了不疲劳驾驶，同时还要给车规划充电，我只好把行程拆分成了好几天。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221229225212.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从深圳到上海，路过惠州、瑞金、上饶、杭州，小跨了半个中国。一路上，我听完了全集「易中天品三国」，在服务区与别的车抢充电桩，途中还因为感冒浑浑噩噩开了两天，终于在某一天的清晨开在了上海的高架路上。&lt;/p&gt;
&lt;p&gt;在旅途中，我在西湖边上玩了两天。从南方到北方（广东人看来），一路上看着植被的变化，长途自驾其实还是挺有趣的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221230000204.JPG&#34;&gt;&lt;/p&gt;
&lt;h2&gt;跟 Covid 躲猫猫&lt;/h2&gt;
&lt;p&gt;疫情三年来，我一直与 Covid 玩躲猫猫。4 月的上海，9 月的广州深圳，我一直在避着毒圈跑，也时时处在幻阳的笼罩下。&lt;/p&gt;
&lt;p&gt;所幸运气足够好，也感谢我身体细胞们的共同努力，又苟过一年，我们决赛圈见。&lt;/p&gt;
&lt;h2&gt;展望&lt;/h2&gt;
&lt;p&gt;2022 于我而言还是挺幸运的，不过现阶段尚未稳定下来，半场开香槟是不明智的。2023 年将会是一个不错的开始，有什么想法就勇敢去想，大胆放开去做吧。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-12-31-%E6%8E%A2%E7%B4%A2%E4%B9%8B%E8%B7%AF-2022%E5%B0%8F%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%94%9F%E6%B4%BB%E7%90%90%E8%AE%B0/%E5%8D%9A%E5%AE%A2/2022-12-31-%E6%8E%A2%E7%B4%A2%E4%B9%8B%E8%B7%AF-2022%E5%B0%8F%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>Basics of Signal and Power Integrity 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;References &amp;amp; Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Signal and Power Integrity - Simplified, 3rd Edition&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
This post is protected by &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; agreement, should be reproduced with attribution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Signal Integrity (SI)&lt;/strong&gt; refers to the quality of the signal on the signal line. Good signal integrity means that the level on the &lt;strong&gt;signal line reaches the preset value&lt;/strong&gt; as expected, no more or less.&lt;/p&gt;
&lt;p&gt;As clock frequencies and data rates increase, identifying and solving signal-integrity problems becomes critical.&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/Basics_of_Signal_and_Power_Integrity/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/Basics_of_Signal_and_Power_Integrity/</guid>
      
    </item>
    
    <item>
      <title>EMC 设计指南</title>
      
      
      
      
      <description>&lt;p&gt;电磁兼容性（Electromagnetic Compatibility, EMC）指的是设备在其电磁环境中能正常工作且不对环境中任何事物构成不能承受的电磁骚扰的能力，通俗地说，就是你的板子不怕别人干扰，也尽量不去干扰别人，达到「兼容」的状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;电磁兼容性（EMC）&lt;/strong&gt; 包括l了 &lt;strong&gt;电磁干扰（EMI，Electro-Magnetic Interference）&lt;/strong&gt; 和 &lt;strong&gt;电磁耐受性（EMS，Electro-Magnetic Susceptibility）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;EMI 有以下要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;辐射发射（RE，Radiated Emission）&lt;/strong&gt;：指干扰源通过空间把其信号耦合（干扰）到另一个电网络。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传导发射（CE，Conducted Emission）&lt;/strong&gt;：指通过导电介质把一个电网络上的信号耦合（干扰）到另一个电网络。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;谐波（Harmonic）&lt;/strong&gt;：谐波电流骚扰测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;闪烁（Flicker）&lt;/strong&gt;：电压变化和闪烁测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EMS 有以下要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;辐射抗扰（RS）&lt;/strong&gt;：射频电磁场辐射抗扰度测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传导抗扰（CS）&lt;/strong&gt;：射频场感应的传导骚扰抗扰度测试（大电流注入）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防静电（ESD）&lt;/strong&gt;：静电抗扰度测试（静电放电实验）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;瞬态脉冲干扰（EFT）&lt;/strong&gt;：电快速瞬变脉冲群抗扰度测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电压暂降（DIP）&lt;/strong&gt;：短时中断和电压变化抗扰度测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;浪涌、雷击（SURGE）&lt;/strong&gt;：浪涌（雷击）抗扰度测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工频磁场抗扰（PFMF）&lt;/strong&gt;：工频磁场抗扰度测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;EMC 优化基本方法&lt;/h2&gt;
&lt;p&gt;产生 EMC 问题的要素是：电磁干扰源、耦合途径、敏感设备。&lt;/p&gt;
&lt;p&gt;规律：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高频电流环路面积 S 越大, EMI 辐射越严重。&lt;/li&gt;
&lt;li&gt;环路电流频率 f 越高，引起的 EMI 辐射越严重，电磁辐射场强随电流频率 f 的平方成正比增大。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本应对方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传输通道抑制：具体的方法有滤波、屏蔽、接地、搭接、合理的布线；&lt;/li&gt;
&lt;li&gt;空间分离：即通过加大骚扰源和敏感电路间的距离，抑制空间辐射骚扰和感应耦合骚扰的有效方法；&lt;/li&gt;
&lt;li&gt;时间分离：有用信号在干扰信号发射时短暂关闭，而在干扰信号停止的时间内传输；&lt;/li&gt;
&lt;li&gt;频谱处理：频谱改变、展频技术；&lt;/li&gt;
&lt;li&gt;电气隔离：光电隔离、继电器隔离、变压器隔离、DC/DC 变换。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;最小化高频线和电源环路的面积&lt;/h3&gt;
&lt;p&gt;基本原则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;信号总是返回到源端。&lt;/li&gt;
&lt;li&gt;信号回流总是走阻抗最小的路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在高频信号中，信号回流路径通常是最小电感的路径，这通常也是环路面积最小的路径。在低频中（通常为 KHz 频率及以下），信号回流往往走阻值最小的路径。&lt;/p&gt;
&lt;h3&gt;尽量保持信号回流屏幕完整&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211215190631.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，如果切割了信号回流平面，则信号电流将不能经最优化（最短）路径返回源头，在寻找替代回流路径的时候将变得不可预期，增大信号环路面积。&lt;/p&gt;
&lt;p&gt;特殊情况下，数字地和模拟地需要隔离，防止串扰。&lt;/p&gt;
&lt;h3&gt;高速信号远离连接器&lt;/h3&gt;
&lt;p&gt;通过连接器连接到 PCB 的线缆是高效的天线，而高速信号容易产生电位差，这些电压会驱动电流到连接的线缆上，引发辐射超标。&lt;/p&gt;
&lt;h3&gt;抑制高速信号上升沿和下降沿时间&lt;/h3&gt;
&lt;p&gt;通过减慢数字信号的上升沿和下降沿时间，可以很好地控制高次谐波频率。过长的转换时间会导致信号完整性和过热问题。&lt;/p&gt;
&lt;h2&gt;EMC 元器件&lt;/h2&gt;
&lt;p&gt;EMC 常用元件有共模电感、磁珠与滤波电容器。&lt;/p&gt;
&lt;p&gt;常见滤波器模型：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211219173751.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;共模电感&lt;/h3&gt;
&lt;p&gt;共模电感的等效模型：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211219173856.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211219174546.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;磁珠&lt;/h3&gt;
&lt;p&gt;磁珠的介绍与选型请见 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E6%84%9F%E4%B8%8E%E7%A3%81%E7%8F%A0#%E7%A3%81%E7%8F%A0&#34;&gt;&lt;strong&gt;基本元器件-电感与磁珠 · 磁珠&lt;/strong&gt;&lt;/a&gt; 部分。&lt;/p&gt;
&lt;h3&gt;滤波电容&lt;/h3&gt;
&lt;p&gt;电容的介绍与选型请见 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E5%AE%B9&#34;&gt;&lt;strong&gt;基本元器件 - 电容&lt;/strong&gt;&lt;/a&gt; 部分。&lt;/p&gt;
&lt;h2&gt;PCB 的 EMC 设计 🚧&lt;/h2&gt;
&lt;h3&gt;3W 与 20H 原则&lt;/h3&gt;
&lt;p&gt;3W 原则指的是线中心距不少于 3 倍线宽时，则可保持 70%的线间电场不互相干扰。如要达到 98% 的电场不互相干扰，则使用 10W 规则。&lt;/p&gt;
&lt;p&gt;20H 原则指的是确保电源平面的边缘要比地平面边缘至少缩入相当于两个平面间层距的 20 倍，是为抑制边缘辐射效应，可以将 70% 的电场限制在接地边沿内；内缩 100H 则可以将 98% 的电场限制在内。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.infonet.io/2021/04/04/%E7%94%B5%E7%A3%81%E5%85%BC%E5%AE%B9%E4%BB%8B%E7%BB%8D/&#34;&gt;电磁兼容介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/142866381&#34;&gt;电磁兼容（EMC）：简单粗暴的 EMC 设计指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mr-wu.cn/emc-emi-she-ji-mi-ji/&#34;&gt;EMI/EMC 设计秘籍–电子产品设计工程师必备手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.richtek.com/Design%20Support/Technical%20Document/AN008?sc_lang=zh-CN&#34;&gt;利用混成式共模电感抑制传导电磁干扰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhenhuizhang.tk/post/dian-lu-emc-ji-chu-gai-nian-_-gong-mo-chai-mo-gan-rao/&#34;&gt;[电路]EMC 基础概念_共模差模干扰&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/EMC%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/EMC%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>ESD 基础知识</title>
      
      
      
      
      <description>&lt;p&gt;ESD（Electrostatic discharge）即静电释放。指两个物体在接近或接触时，发生的电子迅速转移的现象。众所周知，物体会在与其他物体的接触与摩擦中产生并积累电荷。比如我们的手跟外界摩擦时就会积累很多正电荷。当积累了很多正电荷的物体与一个导体距离非常近或接触的时候，电子将会快速从导体转移到积累正电荷的物体上。这个电子快速转移的过程就是静电释放（ESD）。&lt;/p&gt;
&lt;p&gt;电子设备上通常会有很多接口，接口再通过导线连接到芯片的管脚上，然后连到芯片内部。静电释放时产生的高电压（一般高达上千伏）可能会击穿管子，如果是大电流，还可能会烧熔器件，所以要避免。&lt;/p&gt;
&lt;p&gt;ESD 防护的关键在于为静电提供一条单独的放电通道（原理就像避雷针）。ESD 器件主要分为四类：TVS 二极管、压敏电阻、MLCC、ESD 抑制器。&lt;/p&gt;
&lt;h2&gt;ESD 测试模型&lt;/h2&gt;
&lt;p&gt;|                                 | HBM      | MM      | CDM      | IEC 61000-4-2 MODEL |
| ------------------------------- | -------- | ------- | -------- | ------------------- |
| 测试电压（V）                   | 500-2000 | 100-200 | 500-2000 | 2000-15000          |
| 脉冲时间（ns）                  | ~150     | ~80     | ~1       | ~150                |
| 施加 2kV 时的峰值电流（$A_pk$） | 1.33     | -       | ~5       | 7.5                 |
| 上升时间                        | 25ns     | -       | &amp;lt;400ps   | &amp;lt;1ns                |
| 电压冲击次数                    | 2        | 2       | 2        | 20                  |&lt;/p&gt;
&lt;h3&gt;人体模型（HBM, Human Body Model）&lt;/h3&gt;
&lt;p&gt;假设由人体静电放电时的测试，模拟出人用手触摸芯片时的情况。&lt;/p&gt;
&lt;h3&gt;机器模型（MM, Machine Model）&lt;/h3&gt;
&lt;p&gt;假设由机械静电放电时的测试，模拟出通过机械手或者其他电阻较小的工具触碰芯片时发生静电释放的情形。&lt;/p&gt;
&lt;p&gt;它与人体模型的区别在于电容更大、没有电阻，因此可想而知放电电流会大得多，而且由于导线的电感效应还会出现震荡电流，即对芯片放电的电流是正负变化的。&lt;/p&gt;
&lt;h3&gt;带电设备模型（CDM, Charged Device Model）&lt;/h3&gt;
&lt;p&gt;前两种模型模拟的都是带电体向芯片放电的情况，带电设备模型则模拟的是芯片自身带电，对地放电的情形。从在仓库存放了一段时间的包装里把芯片拿出来时会发生这种现象。这种情况下没有电阻、电容，而是芯片通过管脚直接对地放电。&lt;/p&gt;
&lt;h2&gt;ESD 参考标准&lt;/h2&gt;
&lt;p&gt;常见的 HBM 测试规格：&lt;/p&gt;
&lt;p&gt;| 标准         | 充电电容 $C_d (pF)$ | 放电电阻 $R_d (Ω)$ |
| ------------ | ------------------- | ------------------ |
| AEC-Q200-002 | 150                 | 2000               |
| IEC61000-4-2 | 150                 | 330                |&lt;/p&gt;
&lt;p&gt;以 AEC-Q200-002 标准为例，其 ESD HBM 测试电路如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211215164751.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，$C_x$ 为测试对象的电容，$C_d$ 为充电电容，$R_d$ 为放电电阻，$R_c$ 为保护电阻。ESD 测试方法如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开关 1 闭合，开关 2 开路：高压电源将电荷充进 $C_d$&lt;/li&gt;
&lt;li&gt;开关 1 开路，开关 2 闭合：$C_d$ 中储存的电荷将施加在 $C_x$ 上，进行 ESD 测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;放电电流曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211215165312.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;ESD 测试流程&lt;/h2&gt;
&lt;p&gt;以 AEC-Q200-002 标准，HBM 测试流程可以按照下图进行：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211215165447.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试出来的耐压等级按下表分类：&lt;/p&gt;
&lt;p&gt;| 分类级别 | 最大耐压                         |
| -------- | -------------------------------- |
| 1A       | 小于 500V (DC)                   |
| 1B       | 0.5 kV (DC) 以上, 小于 1 kV (DC) |
| 1C       | 1 kV (DC) 以上, 小于 2 kV (DC)   |
| 2        | 2 kV (DC) 以上, 小于 4 kV (DC)   |
| 3        | 4 kV (DC) 以上, 小于 6 kV (DC)   |
| 4        | 6 kV (DC) 以上, 小于 8 kV (DC)   |
| 5A       | 8 kV (DC) 以上, 小于 12 kV (AD)  |
| 5B       | 12 kV (AD) 以上, 小于 16 kV (AD) |
| 5C       | 16 kV (AD) 以上, 小于 25 kV (AD) |
| 6        | 25 kV (AD) 以上                  |&lt;/p&gt;
&lt;p&gt;DC（Direct Contact Discharge）为直接接触放电；AD（Air Discharge）为空气放电。&lt;/p&gt;
&lt;h2&gt;测试对象的电容容值与 ESD 耐性的关系&lt;/h2&gt;
&lt;p&gt;测试对象的电容 $C_x$ 的容值大小会影响其两端的电压，满足以下的关系：&lt;/p&gt;
&lt;p&gt;$$
V_x=\frac{C_d}{C_d+C_x}V_d
$$&lt;/p&gt;
&lt;p&gt;电源电压（$V_d$）和充电电容（$C_d$）的容值恒定时，测试对象的电容（$C_x$）容值的变大，会导致出现在其两侧的电压（$V_x$）降低。&lt;/p&gt;
&lt;p&gt;因此一般来说，$C_x$ 的容值越大，ESD 耐性有变大的趋势。但实际上，因电介质的种类及厚度之类的设计上的差异，耐电压的性能范围也有不同，并不完全符合上述趋势。&lt;/p&gt;
&lt;h3&gt;电容容值与 ESD 耐性的参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;$C_x$ 电容参数：GCM 系列 / 0402 封装 / X7R / 50V&lt;/li&gt;
&lt;li&gt;测试条件：$C_d=150pF,R_d=2kΩ$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211215172528.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;按图表曲线可得，如果我们要抵御 1kV 的 ESD，则可以用 1000pF 的电容来进行防御。在实际的电路设计中，最好给电容并联一个大电阻，在消除 ESD 后对电容里的电释放掉。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mazhaoxin.github.io/2021/08/01/Reliability_and_ESD_Introduction/&#34;&gt;可靠性与 ESD 介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haipeng.me/2019/09/03/esd-protection/&#34;&gt;电子工程师手记：ESD 基本知识及 ESD 保护的选取&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://article.murata.com/en-us/article/esd-resistance-of-capacitors&#34;&gt;ESD Resistance of Capacitors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://murata.eetrend.com/article/2021-11/1004974.html&#34;&gt;一文搞懂 ESD 器件在 PCB 设计当中的作用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/ESD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/ESD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>信号地与机壳地间的 EMC 设计</title>
      
      
      
      
      <description>&lt;p&gt;通常，在 PCB 的信号地与机壳地之间，我们会使用一个高压电容（1~100nF/2kV）与大电阻（1MΩ）并联连接，以提高 EMC 性能：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220620162528.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，电容的作用是通交阻直。从 EMI 角度看，可将电路内部产生的高频干扰会经过机壳流入大地，避免产生天线辐射；从 EMS 角度看，可抑制高频干扰源和电路之间的瞬态共模压差，因电路有时不可直连（220VAC 过整流桥后的 GND 不可直连机壳地）或直连不够安全。&lt;/p&gt;
&lt;p&gt;电阻的作用是泄放电荷，防 ESD 损害电路。假如只有电容连接信号地与机壳地，那么信号地是浮空的。ESD 测试时，信号地会逐渐积累高压电荷，一旦超过两个地之间最近的地方所能耐受的电压，就会发生电弧放电，将在几纳秒之内产生很大的电流，损害电路。并联了这个电阻，即可缓慢泄放掉电荷。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vAdoDyBed4uIfISrP0Zeyw&#34;&gt;PCB 地与金属机壳用阻容连接，什么说法？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%9C%B0%E4%B8%8E%E6%9C%BA%E5%A3%B3%E5%9C%B0%E9%97%B4%E7%9A%84EMC%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%9C%B0%E4%B8%8E%E6%9C%BA%E5%A3%B3%E5%9C%B0%E9%97%B4%E7%9A%84EMC%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 串扰 🚧</title>
      
      
      
      
      <description>&lt;p&gt;一根信号线上有信号通过时，在 PCB 板上与之相邻的信号线上就会感应出相关的信号，我们称之为串扰。串扰通常表现为毛刺。串扰是传输线之间相互的寄生电感产生耦合引发的，带来的危害是使信号畸变。&lt;/p&gt;
&lt;p&gt;串扰分为近端（NEXT）串扰与远端串扰（FEXT）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014143734.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图可见，上方信号线传过来了一个跳变的信号，在粉色的区域内，两根导线靠得很近（不符合 3W 原则），所以会产生串扰。下方的导线是受干扰的线。&lt;/p&gt;
&lt;p&gt;在跳变信号进入干扰区域（粉色区域）时，开始发生串扰：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014144817.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014145322.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以观察到，&lt;strong&gt;由于干扰源在移动，且同时向两个方向发出&lt;/strong&gt;，所以随着时间的推进，与信号同向的干扰波形会叠加，而与信号反向波形高度保持不变。&lt;/p&gt;
&lt;p&gt;当跳变信号传出干扰区域后，受干扰线上的凸起波形开始消失，并向各自的方向推进：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014145143.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终，在近端 / 远端接收的干扰如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014150220.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;减少串扰的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加走线间距：3W 原则&lt;/li&gt;
&lt;li&gt;信号线距离地线距离拉近&lt;/li&gt;
&lt;li&gt;减小平行走线的耦合长度&lt;/li&gt;
&lt;li&gt;增大信号的上升时间或下降时间：在时序条件允许的情况下，这可以减少高频信号所带来的影响&lt;/li&gt;
&lt;li&gt;合理采用端接匹配技术：减弱甚至消耗信号的反射，从而减弱串扰强度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;li&gt;《信号完整性揭秘-于博士 SI 设计手记》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EF7SxgcDfCo&#34;&gt;What Every PCB Designer Should Know - Crosstalk Explained (with Eric Bogatin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《硬件信号质量 SI 测试规范》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_40877615/article/details/95329866&#34;&gt;传输线串扰分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E4%B8%B2%E6%89%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E4%B8%B2%E6%89%B0/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 传输线 🚧</title>
      
      
      
      
      <description>&lt;p&gt;传输线是一种理想元件，由任意两条一定长度的导线组成，分别称为 &lt;strong&gt;信号路径&lt;/strong&gt; 和 &lt;strong&gt;返回路径（参考路径）&lt;/strong&gt;。传输线有两个重要的特征：&lt;strong&gt;特性阻抗&lt;/strong&gt; 与 &lt;strong&gt;时延&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210160107.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;信号的传输方式&lt;/h2&gt;
&lt;p&gt;观察信号的传输，需要同时看信号路径与返回路径。如何确定信号路径和返回路径呢？如果两根线是一模一样的（例如双绞线），则没有严格的区分；如果是微带线，一般会指定平面为返回路径。需要注意的是，在信号完整性的范畴中，我们会用「返回路径」这个概念代替「接地」，因为需要分析的情况远比单纯「接地」复杂得多。&lt;/p&gt;
&lt;p&gt;信号进入传输线后，将在其中以介质中的光速传输。我们可将信号表示为信号路径和返回路径上，相邻两点间的电压差：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221221001014.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果假设一对足够长且末端开路的传输线，分别在源端和末端都串接电流表，检测信号电流。在实际实验中可以观察到，当信号刚开始进入信号路径时，在返回路径上就已经开始检测到电流了。所以，电流的回路并非从从头到尾从源端到末端、再从返回路径流回来，而是通过信号和返回路径产生的电位差而产生电流（类似电容的充电）。随着信号的传播，产生电流的位置也不断向前。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/currentonline.gif&#34;&gt;&lt;/p&gt;
&lt;h2&gt;均匀传输线与平衡传输线&lt;/h2&gt;
&lt;p&gt;对传输线进行分类，如果按它的几何结构，则可通过这两个特征：沿线横截面的均匀程度、两条导线的相似与对称程度。&lt;/p&gt;
&lt;p&gt;如果沿着导线，任一位置横截面都相同，则称为 &lt;strong&gt;均匀传输线&lt;/strong&gt;，也称 &lt;strong&gt;可控阻抗传输线&lt;/strong&gt;，例如双绞线、微带线带状线等：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210160253.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;信号完整性设计的一个目标，就是把所有高速互连都设计成均匀传输线，并努力减小所有非均匀传输线的长度。&lt;/p&gt;
&lt;p&gt;另一个分类的特征，是看两条导线的相似 / 对称程度。如果两条导线形状大小都一模一样，那么它是 &lt;strong&gt;平衡传输线&lt;/strong&gt;，例如双绞线（twisted pair）。而非平衡传输线的例子是同轴电缆（coax），因为它中间导线比外面一圈的横截面小。&lt;/p&gt;
&lt;h2&gt;信号传播的速度&lt;/h2&gt;
&lt;p&gt;传输线上信号传播的速度，并不取决于导体中电子的速度。&lt;/p&gt;
&lt;p&gt;如果可知每秒通过导线截面的电子数、导线中的电子密度、导线的横截面积，就能算出导线中电子的速度。因为导体中电流（$I$）可由以下公式计算：&lt;/p&gt;
&lt;p&gt;$$
I=\frac{\Delta Q}{\Delta t}=\frac{qnAv\Delta t}{\Delta t}=qnAv
$$&lt;/p&gt;
&lt;p&gt;其中，$\Delta Q$ 表示 $\Delta t$ 内流过导线的电量（单位为 $C$）,$q$ 表示一个自由电子所带的电量，为常数 $1.6\times 10^{-19}C$，$n$ 表示自由电子的密度（单位为 $#/m^3$）,$A$ 表示导线的横截面积（$m^2$）。所以可得到电子的速度（$m/s$）：&lt;/p&gt;
&lt;p&gt;$$
v=\frac{I}{qnA}
$$&lt;/p&gt;
&lt;p&gt;在常见的介质中，电子的运动速度是很低的。例如一条直径为 $1mm$ 的铜导线（铜原子间隔约为 $1nm$，每个铜原子能提供两个自由电子，可算出自由电子密度约为 $10^{27}/m^3$）,通过 $1A$ 电流时电子的速度约为 $1cm/s$。可见，&lt;strong&gt;电子的速度是远低于信号传播速度的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;不仅如此，减少互连的电阻，并不能提高信号传播的速度。只有在非常极端的情况下，互连线的电阻才会轻微影响到信号传播的速度。一般情况下，导线电阻小并不意味着信号传输速度快。&lt;/p&gt;
&lt;p&gt;信号通过电子传输的原理，是靠电子之间的相互作用。&lt;/p&gt;
&lt;p&gt;可以把导线想象为一个装满弹珠的长管子，若在一端推动一个弹珠，在另一端将会有一个弹珠几乎同时被挤出。这里弹珠传递信号的速度，比弹珠实际运动速度要快得多。同理，导线中电子受相邻电子推动时，信号传播的快慢并不取决于电子本身的运动速度，而是受电子之间的相互扭结影响。&lt;/p&gt;
&lt;p&gt;当信号在传输时，会在信号与返回路径之间的导体中、导体周围的空间中产生交变电磁场。而决定信号传播速度的因素，就是电磁场的建立和传播速度。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210160322.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电磁场变化（场链）的速度可以由以下公式计算得到：&lt;/p&gt;
&lt;p&gt;$$
v=\frac{1}{\sqrt{\varepsilon_0\varepsilon_r\mu_0\mu_r}}
$$&lt;/p&gt;
&lt;p&gt;其中，$\varepsilon_0$ 表示自由空间中的介电常数，取 $8.89\times 10^{-12}F/m$；$\varepsilon_r$ 表示材料的相对介电常数，在空气中为 1；$\mu_0$ 表示自由空间的磁导率，取 $4\pi\times10^{-7}H/m$；$\mu_r$ 表示材料的相对磁导率，几乎所有互连介质都取值为 1。将以上常量代入后可得：&lt;/p&gt;
&lt;p&gt;$$
v=\frac{2.99\times 10^8}{\sqrt{\varepsilon_r}} m/s =\frac{12}{\sqrt{\varepsilon_r}}inch/ns
$$&lt;/p&gt;
&lt;p&gt;相比空气，其他材料的介电常数 $\varepsilon_r$ 总大于 1，而光速约为 $12 inch/ns$，则可说明互连中的光速总小于 $12 inch/ns$，其实际的速度为：&lt;/p&gt;
&lt;p&gt;$$
v=\frac{12}{\sqrt{\mu_r}}inch/ns
$$&lt;/p&gt;
&lt;p&gt;相对介电常数也常简称介电常数，绝大多数聚合物的值为 4。一般来说，介电常数会随着频率的升高而降低，但在常用的 PCB 板材中变化比较小。比如，FR4 的介电常数在 3.5~4.5 之间浮动，高速板材则在 3~4 之间浮动。根据公式可以模糊推出，信号在 FR4 中的速度约为 $6 inch/ns$（未考虑空气介质的电磁场影响）。&lt;/p&gt;
&lt;h2&gt;前沿的空间延伸&lt;/h2&gt;
&lt;p&gt;信号的上升沿 RT，通常表示从最大电压的 10% 变化到 90% 的时间长度。当信号在传输线上传播的时候，会把这个边沿往前推，产生一个空间延伸：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221221233250.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个延伸的长度取决于信号的速度与上升沿的时间：&lt;/p&gt;
&lt;p&gt;$$
Len=RT\times v
$$&lt;/p&gt;
&lt;p&gt;我们假设信号的速度为 $6inch/ns$，信号上升沿时长为 $1 ns$，则前沿的空间延伸长度为 $6 inch$。信号就推着这个 $6 inch$ 长的边沿向前传播。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;传输线的分布电容&lt;/h2&gt;
&lt;p&gt;当存在多个导体时，两两之间都会存在电容。对于 PCB 上的走线，因为空间结构长，走线导体每一部分与周围的导体都存在电容，分布在走线的整个长度区间之内，所以说传输线的电容是分布式的。当信号前进的时候，每走一步都能感受到电容的存在。&lt;/p&gt;
&lt;p&gt;在高速互连模型中，许多现象如阻抗不连续、反射、串扰等，都与导体间的分布电容有关系。&lt;/p&gt;
&lt;h2&gt;单位长度电容&lt;/h2&gt;
&lt;p&gt;PCB 上的传输线，如果横截面积不变，那么可以使用集总电容模型，用单位长度电容来表示电容参数，这样总电容就与传输线长度成比例，这样会方便建模。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;集总元件：指元件大小远小于电路工作频率相对之电磁波波长时，对所有元件之统称。对于信号而言，不论任何时刻，元件特性始终保持固定，与频率无关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用单位长度电容来表示传输线的电容效应的前提是：电场沿传输线的方向没有分量，即电磁波的传播近似为均匀平面波。PCB 的走线刚好满足这个条件。&lt;/p&gt;
&lt;h2&gt;传输线的分布电感&lt;/h2&gt;
&lt;p&gt;阻抗不连续、反射、串扰、地弹噪声等，也与分布电感有关。PCB 上的走线每一部分都存在自感，且和周围的导体之间都存在互感。电感分布在走线的整个长度区间内，是分布式的，信号每走一步都能感受到电感的存在。&lt;/p&gt;
&lt;h2&gt;回路电感&lt;/h2&gt;
&lt;p&gt;因为传输线可以把信号和返回路径当成一个整体看待，信号电流与返回电流同时存在且构成一个完整的电流回路，使用回路电感分析会更方便。回路电感的计算公式：&lt;/p&gt;
&lt;p&gt;$$
L_{loop}=L_{Ss}+L_{Fs}-2L_{SFm}
$$&lt;/p&gt;
&lt;p&gt;其中，$L_{SS}$ 表示信号路径的自感，$L_{FS}$ 表示返回路径的自感，$L_{SFm}$ 信号与返回路径间的互感。&lt;/p&gt;
&lt;p&gt;把回路当成一个整体，那么回路电感描述的是回路本身的电感特性，相当于回路本身的自感。&lt;/p&gt;
&lt;h2&gt;单位长度电感&lt;/h2&gt;
&lt;p&gt;为了建模方便，传输线的电感也可以等效成多个电感串联的形式。把传输线划分为许多小段的单位电感（每个小段包括信号和返回路径），长度为 $\Delta Z$，那么 $\Delta Z$ 越长，该区域信号和返回路径构成的区域面积越大，磁通量也越大。因为磁通量与 $\Delta Z$ 区域面积成线性关系，进而与 $\Delta Z$ 也称线性关系。因此只要知道单位长度的回路电感，就可以得到任意长度的回路电感。&lt;/p&gt;
&lt;h2&gt;瞬态阻抗与特性阻抗 √&lt;/h2&gt;
&lt;p&gt;根据前面的定义，我们知道阻抗是指传输线上某一位置上的电压与电流的比值。因为传输线不一定均匀，信号每走一步遇到的阻抗可能都不一样，这是一种 &lt;strong&gt;瞬时阻抗&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果传输线是均匀的，那么用一个阻抗值就可以表示整个传输线的阻抗特性，这个阻抗值就称为传输线的 &lt;strong&gt;特性阻抗&lt;/strong&gt;，可以用单位长度电感和单位长度电容来表示：&lt;/p&gt;
&lt;p&gt;$$
Z_0=\sqrt{\frac{L}{C}}
$$&lt;/p&gt;
&lt;p&gt;我们在设计 PCB 时常用的 50Ω 阻抗，指的就是特性阻抗。对 FR4 板材，当线宽为介质厚度两倍时，微带线的阻抗就为 50Ω。传输线间距相同时，特性阻抗越高，串扰的问题就越严重；而特性阻抗越低，功率损耗则越严重。所以 50Ω 是一个相对平衡的取值，后来也沿用为一般的标准，但并不意味着所有的互连都必须是 50Ω，仍可按照需求定制阻抗的大小。&lt;/p&gt;
&lt;h2&gt;特性阻抗的影响因素 √&lt;/h2&gt;
&lt;p&gt;特性阻抗的影响因素主要有 4 种：&lt;strong&gt;线宽、介质厚度、介电常数、走线铜箔厚度&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;线宽通过影响单位长度电感和电容，从而影响特性阻抗。对电感来说，线宽越大，电感就越小，电流越分散；反之线宽越小，电流越集中，电感越大。对电容来说，线宽越大，走线和平面间的电力线越多集中在介质区域，单位长度电容也越大（类比平行板电容器，面积越大，电容越大）；线宽越小，电容越小。综上所述，线宽越大，特性阻抗就越小。&lt;/p&gt;
&lt;p&gt;介质厚度增大会导致两个导体的间距增大，从而导致互感减小，单位长度的电感就会增加，会导致传输线的特性阻抗增大。&lt;/p&gt;
&lt;p&gt;介电常数会通过影响单位长度的电容而影响特性阻抗。节点常数增加，电容会变大，特性阻抗就越小。&lt;/p&gt;
&lt;p&gt;铜箔厚度越大，电感越小，电容增大，因此阻抗越小。&lt;/p&gt;
&lt;h2&gt;传输线的驱动与内阻&lt;/h2&gt;
&lt;p&gt;驱动器可以等效为高速开关的电压源加上内阻：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210160639.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当开路时，加到传输线上的电压非常接近于源电压。内阻大小取决于器件的工艺，通常在 5-60Ω 范围内。内阻串联接入电路，可等效为一个分压器，会产生一部分压降。&lt;/p&gt;
&lt;p&gt;所以，为了更好驱动传输线，就要使驱动器的内阻与传输线的特性阻抗尽可能小。举个例子，如果传输线的特性阻抗为 50Ω，则内阻应小于 10Ω。如果驱动器的内阻很低，那么它称为线驱动器，可以把绝大部分电压加到传输线上。&lt;/p&gt;
&lt;p&gt;计算驱动器的内阻，可以不加传输线，驱动器直接端接外部电阻，分别测量接大电阻和小电阻时电阻两端的电压，根据等式就可计算出内阻大小。&lt;/p&gt;
&lt;h2&gt;返回路径与参考平面&lt;/h2&gt;
&lt;p&gt;电流总是在回路中流动，有去路必有回路。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210160711.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照传输线的零阶模型，传输线信号与返回路径间是一连串小电容。电压就像浪头，边沿经过的地方，电压发生改变，就有电流经过电容流到返回路径。&lt;/p&gt;
&lt;p&gt;一旦有信号进入传输线，就会以波的形式向外传播。电流会在信号路径、线电容、返回路径构成的回路中流动。这个电流回路的波前与电压前沿同时向外传播。所以，信号受到的瞬时阻抗就是信号电压与电流的比值。&lt;/p&gt;
&lt;p&gt;如果返回路径是一个平面（与走线不同层），那么称为参考平面。对于表层信号线，只能与相邻的内层平面构成传输线，也可以说表层走线只有一个参考平面。而对于内层走线，有上下两个相邻平面，所以有两个参考平面。位于不同层且与信号走线重叠的平面都可以作为参考平面，构成传输线。&lt;/p&gt;
&lt;p&gt;参考平面的返回电流并非均匀分布在整个参考平面内，而是有趋肤效应，会集中在走线正下方附近。表层微带线参考平面上的返回电流与信号电流的大小相等。对于带状线，因为有上下两个参考平面，所以返回电流会集中于信号线上下方附近，且根据到平面的距离按比例分配。信号频率越高，电流越挤近。&lt;/p&gt;
&lt;h2&gt;传输线的延时 🚧&lt;/h2&gt;
&lt;p&gt;信号需要经过一段时间才能从源端传到末端，有一定的延迟。&lt;/p&gt;
&lt;h2&gt;理想传输线的一阶模型 🚧&lt;/h2&gt;
&lt;p&gt;理想传输线有两个重要的特征：恒定的瞬时阻抗和相应的时延。一阶模型在零阶模型的基础上，把信号和返回路径导线的每一小节都抽象为回路电感：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210160828.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当电容和电感无穷小，LC 电路节数趋向于无穷时，单位长度电容 $C_L$ 和单位长度电感 $L_L$ 都趋向于常数，为传输线的线参数。如果传输线的总长为 $Len$，那么总电容电感为：&lt;/p&gt;
&lt;p&gt;$$
C_{total}=C_L*Len
$$&lt;/p&gt;
&lt;p&gt;$$
L_{total}=L_L*Len
$$&lt;/p&gt;
&lt;p&gt;所以，传输线的特性阻抗 $Z_0$ 和时延 $T_D$ 如下：&lt;/p&gt;
&lt;p&gt;$$
Z_0=\sqrt{\frac{L_L}{C_L}}
$$&lt;/p&gt;
&lt;p&gt;$$
T_D=\sqrt{C_{total}&lt;em&gt;L_{total}}=Len&lt;/em&gt;\sqrt{C_L*L_L}
$$&lt;/p&gt;
&lt;p&gt;$$
v=\frac{Len}{T_D}=\frac{1}{\sqrt{C_L*L_L}}
$$&lt;/p&gt;
&lt;p&gt;又因为传输线的特性阻抗和时延必须与零阶模型的结果相一致，所以关联起来可以得到一些等式。&lt;/p&gt;
&lt;p&gt;因为信号的速度取决于材料的介电常数 $\varepsilon_r$（音 varepsilon），又取决于单位长度电容和电感，所以得出等式：&lt;/p&gt;
&lt;p&gt;$$
\because v=\frac{c}{\sqrt{\varepsilon_r}}=\frac{Len}{T_D}=\frac{1}{\sqrt{C_L*L_L}}
$$&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;li&gt;《信号完整性揭秘 - 于博士 SI 设计手记》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E4%BC%A0%E8%BE%93%E7%BA%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E4%BC%A0%E8%BE%93%E7%BA%BF/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 基础概念</title>
      
      
      
      
      <description>&lt;p&gt;信号完整性（Signal Integrity, SI）是指信号在传输线上的质量。信号完整性良好的表现，是指 &lt;strong&gt;传输线上的电平能按预期、不多不少地达到预设值&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;信号完整性问题产生的原因是，真实世界的数字电平（0/1）并不是理想的，信号本身是个模拟量。在低速电路中，信号完整性问题并不明显，因为互连线对于电信号来说是通畅透明的，模拟电路效应可被忽略；但如果往高速走（超过 100Mhz 或上升沿小于 1ns），数字电平的电压或电流波形就会开始出现畸变，从而导致接收的信息与发出的信息差别太大，出现错误。因此，在设计高速电路时，就需要考虑信号完整性问题。&lt;/p&gt;
&lt;p&gt;广义的信号完整性，涵盖了这三类问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;信号完整性（Signal Integrity, SI）&lt;/strong&gt;：指信号波形的失真。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电源完整性（Power Integrity, PI）&lt;/strong&gt;：指供电网络的互连线，相关元件上的噪声。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电磁兼容性（Electro Magnetic Compatibility, EMC）&lt;/strong&gt;：电子设备在电磁场中能够正常工作的能力，不会受到电磁场干扰或对其他设备造成电磁干扰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;信号完整性的基本原则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任何信号互连，都是由信号路径和返回路径构成的传输线。信号在传输线上前进的每一步，都会感受到瞬时阻抗。&lt;strong&gt;想要让信号传输质量最佳，则应让瞬时阻抗恒为常量&lt;/strong&gt;，比如让传输线有均匀的横截面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每一路信号都有返回路径，并非仅仅是接地&lt;/strong&gt;。可通过分析返回路径去解决问题。&lt;/li&gt;
&lt;li&gt;对于电容而言，变化较快的边沿，会使其有很低的阻抗。此电容不仅指外部电容，也包括传输线上的寄生电容。&lt;/li&gt;
&lt;li&gt;对于电感而言，只要电流大小或磁力线匝数发生突变，其两端就会产生电压，将有可能导致反射噪声、串扰、开关噪声、地弹、轨道塌陷、电磁干扰等。当流经接地回路电感上的电流发生突变时，在接地回路上产生的电压称为地弹，是造成开关噪声和电磁干扰的原因。&lt;/li&gt;
&lt;li&gt;信号带宽指的是有效正弦波分量的最高频率值（参照的是同频率方波）。互连模型的带宽指的是，在此最高正弦频率上，模型仍能准确预估互连的实际性能。&lt;/li&gt;
&lt;li&gt;大多数情况下，信号完整性的公式计算出来都是定义值或近似值。&lt;/li&gt;
&lt;li&gt;有损传输线引起的问题是上升沿退化。由于趋肤效应和截止损耗，信号的损耗会随着频率的升高而增大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;信号完整性的基本问题&lt;/h2&gt;
&lt;p&gt;广义的信号完整性归根到底，可分为以下四类问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单一网络的信号失真&lt;/li&gt;
&lt;li&gt;反射（瞬时阻抗突变导致）&lt;/li&gt;
&lt;li&gt;信号质量问题（频率相关损耗造成互连线中的上升沿退化）&lt;/li&gt;
&lt;li&gt;时序错误（互连线电气特性差异、或长度差异引起的多个信号之间的时延差错位，会导致差分信号失真）&lt;/li&gt;
&lt;li&gt;两个或多个网络之间的串扰（包括电源弹和地弹两种特殊形式）&lt;/li&gt;
&lt;li&gt;电源和地分配中的轨道塌陷（PI）&lt;/li&gt;
&lt;li&gt;来自整个系统的电磁干扰和辐射（EMC）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;li&gt;《信号完整性揭秘-于博士 SI 设计手记》&lt;/li&gt;
&lt;li&gt;《硬件信号质量 SI 测试规范》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_40877615/article/details/95329866&#34;&gt;传输线串扰分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=anX8QZMhVjI&amp;amp;t=626s&#34;&gt;Understanding Signal Integrity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EF7SxgcDfCo&#34;&gt;What Every PCB Designer Should Know - Crosstalk Explained (with Eric Bogatin)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 失真 🚧</title>
      
      
      
      
      <description>&lt;p&gt;单一网络上的信号失真问题分为三个方面：&lt;strong&gt;反射、信号质量问题、时序错误&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;反射&lt;/h2&gt;
&lt;p&gt;反射产生的根本原因，是 &lt;strong&gt;信号前进方向的瞬时阻抗发生改变&lt;/strong&gt;。有可能造成阻抗发生改变的源头：互连线的末端、走线横截面积改变、换层、返回路径平面上的间隙、附加元件如接插件、布线拓扑结构。&lt;/p&gt;
&lt;h3&gt;反射的来源&lt;/h3&gt;
&lt;h4&gt;阻抗突变处的反射&lt;/h4&gt;
&lt;p&gt;当传输线上的瞬时阻抗发生突变，部分信号将沿着相反方向反射，另一部分将继续传输，但幅度有改变。反射信号的量值取决于瞬时阻抗的变化量，假设第一个区域瞬时阻抗为 $Z_1$，第二个区域为 $Z_2$，则反射与入射信号幅值之比（反射系数）为：&lt;/p&gt;
&lt;p&gt;$$
\rho=\frac{V_{reflected}}{V_{incident}}=\frac{Z_2-Z_1}{Z_2+Z_1}
$$&lt;/p&gt;
&lt;p&gt;可见，两个区域阻抗相差越多，反射的信号量就越大。举个例子，如果 1V 的信号沿着特性阻抗为 50Ω 的传输线传播，进入特性阻抗为 75Ω 的区域时，反射系数算出来是 20%，则反射的电压为 0.2V。&lt;/p&gt;
&lt;h4&gt;阻性负载的反射&lt;/h4&gt;
&lt;p&gt;传输线的端接匹配有三种特殊情况：开路、短路、匹配。以下假设传输线特性阻抗为 50Ω，信号由源端到远端，入射电压为 1V。&lt;/p&gt;
&lt;p&gt;终端为开路的情况下，末端瞬时阻抗无穷大，反射系数无限逼近 1，意味着入射的信号全部按照源路径反射回去，开路处入射波和反射波的电压之和为 2V。&lt;/p&gt;
&lt;p&gt;终端为短路的情况下（与返回路径相短路），末端阻抗为 0，此时反射系数为 -1。入射信号到达远端时，将产生 -1V 的反射信号，向源端传播，所以此处电压为 0。&lt;/p&gt;
&lt;p&gt;终端阻抗与特性阻抗相匹配的情况下（即终端阻抗也为 50Ω），反射系数为 0，此时不会存在反射电压，终端上的电压仅仅是入射信号的。&lt;/p&gt;
&lt;p&gt;一般情况下（50Ω 阻抗），区域 2 阻抗与反射系数之间的关系大致如下图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210182554.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当区域 2 的阻抗小于区域 1 时，反射系数为负值，反射电压是负电压。假设终端阻性负载为 25Ω，那么反射系数为 -0.33，所以有 -0.33V 的电压被反射回源端，终端实际电压为 1+(-0.33)=0.67V。&lt;/p&gt;
&lt;h3&gt;反弹图&lt;/h3&gt;
&lt;p&gt;如果知道传输线的时延、信号通过各区域的阻抗与驱动器的初始电压，就可以计算处每个反射面的电压 / 任意一时间的电压。&lt;/p&gt;
&lt;p&gt;假设驱动器源电压 1V，内阻 10Ω，传输线末端为开路，那么可以根据反射公式得出下面的反弹图与曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210182654.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210182717.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;反射的表现形式&lt;/h3&gt;
&lt;p&gt;反射通常表现为过冲、下冲、振铃。&lt;/p&gt;
&lt;h4&gt;过冲&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220091443.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;过冲指的是振荡的第一个峰值，分为正过冲和负过冲。危害是可能会冲击损伤器件（大于 VCC 或小于 GND）。另外，正过冲会形成干扰源，对其他器件造成串扰；负过冲导致管脚上的负电压使器件 PN 衬底（寄生二极管）前向偏置，大电流会熔断产生开路。&lt;/p&gt;
&lt;h4&gt;振荡（回冲 / 振铃）&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220094236.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;回冲指多次跨越电平临界值，而振铃指经过多次反复才回归正常电平。&lt;/p&gt;
&lt;p&gt;回冲 / 振铃的危害类似于多次过冲，在高低电平之间是一种不确定的状态。其产生原因是阻抗匹配不当（过大或过小）。&lt;/p&gt;
&lt;h3&gt;反射的解决方法&lt;/h3&gt;
&lt;p&gt;反射的解决办法，是尽量让互连线的阻抗保持恒定。具体有以下措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用可控阻抗互连&lt;/li&gt;
&lt;li&gt;增加电阻匹配，参考做法是始端串电阻或者末端并电阻&lt;/li&gt;
&lt;li&gt;采用沿线拓扑的阻抗维持恒定的布线规则，最小化支路长度&lt;/li&gt;
&lt;li&gt;对线的几何特征进行精细设计，比如避免直角或锐角&lt;/li&gt;
&lt;li&gt;PCB 布线避开干扰源和耦合路径&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;时序错误&lt;/h2&gt;
&lt;p&gt;两个或以上信号路径间的时延差称为错位。当信号线与时钟线存在超出预期的错位时，可能产生误触发和逻辑错误；当差分线存在错位时，部分查问信号可能会变成共模信号，造成失真。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;li&gt;《信号完整性揭秘-于博士 SI 设计手记》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EF7SxgcDfCo&#34;&gt;What Every PCB Designer Should Know - Crosstalk Explained (with Eric Bogatin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《硬件信号质量 SI 测试规范》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_40877615/article/details/95329866&#34;&gt;传输线串扰分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220093258.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;信号边沿缓慢的产生原因也有可能是是驱动能力不够，或者负载过大（例如链路阻抗太大）。&lt;/p&gt;
&lt;p&gt;解决信号边沿缓慢的方法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提高驱动能力；&lt;/li&gt;
&lt;li&gt;减小负载。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于驱动不足或者负载过大，信号边沿缓慢也常伴随着信号幅度较低的现象。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;上升沿退化&lt;/h2&gt;
&lt;h3&gt;有损线的不良影响&lt;/h3&gt;
&lt;p&gt;边沿快速变化的信号经过一段实际的传输线后，上升沿将被拉长：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220105174702.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上升沿退化导致的信号质量问题，是因为导线 / 介质中与频率相关的损耗，这种损耗高频比低频更大，会导致信号边沿缓慢。当上升沿退化到接近信号的单位间隔时，1bit 的信息将会泄露到下一个甚至下几个 bit，会造成数据采样错误。这种效应称为符号间干扰（ISI），在数据率大于或等于 1Gbps 时是引起问题的主要原因。&lt;/p&gt;
&lt;p&gt;如果上升沿的退化使得上升沿拉长到接近单位间隔，那么就可能产生符号间干扰：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220110093600.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对高速信号质量的评估可以用眼图，可测量误码率（左图为有少许损耗，右图损耗较大）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220110104943.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;传输线中的损耗&lt;/h3&gt;
&lt;p&gt;当信号沿传输线传播时，接收端有以下 5 种能量损耗的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;辐射损耗&lt;/li&gt;
&lt;li&gt;耦合到相邻走线&lt;/li&gt;
&lt;li&gt;阻抗不匹配&lt;/li&gt;
&lt;li&gt;导线损耗&lt;/li&gt;
&lt;li&gt;介质损耗&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;导线损耗（导线电阻与趋肤效应）&lt;/h4&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E5%A4%B1%E7%9C%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E5%A4%B1%E7%9C%9F/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 时域与频域</title>
      
      
      
      
      <description>&lt;p&gt;一般来说，我们会从时域和频域两个角度，分别对信号进行分析。&lt;/p&gt;
&lt;h2&gt;时域&lt;/h2&gt;
&lt;p&gt;时域是真实世界存在的域，按时间顺序呈现。例如，在某个时钟信号的时域图中，可以观察到两个重要的参数，波形的周期和上升沿：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210154412.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;时钟周期即信号循环重复一次所花的时间，通常它的单位是纳秒级，时钟频率就是 1s 内循环的次数，即周期的倒数。例如，周期为 1ns 的时钟信号，频率就是 1/10ns=0.1GHz。&lt;/p&gt;
&lt;p&gt;上升沿，通常定义为信号以最高点为标准的 20% 跳变到 80% 所花的时间（有时也会定义为 10% 到 90%）。下降沿通常比上升沿要短，这是因为典型 CMOS 结构中，N-MOS 比 P-MOS 导通速度要快，所以下降沿通常比上升沿短，也更容易产生信号完整性问题。&lt;/p&gt;
&lt;h2&gt;频域&lt;/h2&gt;
&lt;p&gt;频域是一个存在于数学定义中的域。通常在频域中使用正弦波，因为时域中的任何波形，都能用正弦波合成出来。&lt;/p&gt;
&lt;p&gt;频域可以用更简洁的语言描述相同的信息。如下图可见，左边是时域中对正弦波的描述，正弦波可以用频率、幅度、相位这 3 个参数完全表示出来；而右边是频域中的描述，频率和幅度可以仅用一个点表示出来（在大多数场合会忽略相位的使用）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210154759.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样，在频域中表示一个正弦波就只需要一个点。如果有若干个频率点，那么这个集合就称为频谱。&lt;/p&gt;
&lt;p&gt;将一般互连的电气问题放在频域中，并使用正弦波描述，会变得更容易理解并解决。&lt;/p&gt;
&lt;h2&gt;时域到频域的变换&lt;/h2&gt;
&lt;p&gt;从时域到频域，转换方法就是傅里叶变换。傅变有三种类型：傅里叶积分（FI）、离散傅里叶变换（DFT）、快速傅里叶变换（FFT）。&lt;/p&gt;
&lt;p&gt;傅里叶积分用于将时域内的理想数学表达式变换为频域表示，是将时域时间轴从负无穷到正无穷积分，得出从零到正无穷上连续的频域函数。&lt;/p&gt;
&lt;p&gt;但实际上时域的波形是由一系列离散点组合而成的。这时候使用离散傅里叶变换，可以把波形转换到频域中（前提是时域为周期性的）。不比傅里叶积分，傅里叶变换只需要通过求和就可以实现转换。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210155042.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;快速傅里叶变换使用了快速矩阵代数学的方法，只应用于时域中数据点个数是 2 的整数次幂的情况（如 256、512、1024 点）。根据计算点个数的数量，计算速度可以比普通离散傅里叶变换快很多。&lt;/p&gt;
&lt;p&gt;需要注意的是，快速傅里叶变换要求信号是周期重复的，所以需要对原始信号进行相干采样，或在采样后加窗处理。&lt;/p&gt;
&lt;h2&gt;频域到时域的逆变换&lt;/h2&gt;
&lt;p&gt;频域包含波形中所有正弦波的频率和幅度，如果要获取它的时域波形，那么只需要将每个频率分量逆变换乘它的时域正弦波，再叠加起来即可，这个过程称为傅里叶逆变换。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210155139.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;方波就是正弦波的多次谐波分量叠加，叠加次数越多，上升沿越陡，越接近于理想方波：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221210155202.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;带宽与上升沿&lt;/h2&gt;
&lt;p&gt;带宽表示频谱中最高 &lt;strong&gt;有效&lt;/strong&gt; 正弦波频率分量值（因为在数字信号中，最低频永远是直流），表示信号频谱中的频率范围。带宽的选择对时域波形的最短上升沿有直接的影响。以理想方波为例，带宽越大，上升沿就会越短，波形就越接近理想方波。&lt;/p&gt;
&lt;p&gt;注意，「有效」表示信号谐波幅度高于相同基频理想方波中对应谐波幅度的 70%。&lt;/p&gt;
&lt;p&gt;例如，如果只用第 0、1、3 次谐波合成时域波形，那么波形的带宽为第 3 次谐波的值即 3GHz。&lt;/p&gt;
&lt;p&gt;根据实验得出的经验法则，带宽与上升沿的关系为 $BW=\frac{0.35}{RT}$，其中 BW 为带宽（GHz）,RT 为 10%-90% 上升沿（ns）。举个例子，如果信号的上升沿为 0.1ns，那么信号的带宽就是 0.35GHz，反之也成立。（注意单位对应，GHz 对应 ns，MHz 对应 us）&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=q31UcMOuds4&#34;&gt;图解傅里叶级数&amp;amp;傅里叶变换&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_3D2yPVlh-w&amp;amp;list=PLEUKC88yR4_al2oa2LF0SKS2RPpxmWg3n&#34;&gt;傅立叶变换基础系列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E6%97%B6%E5%9F%9F%E4%B8%8E%E9%A2%91%E5%9F%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E6%97%B6%E5%9F%9F%E4%B8%8E%E9%A2%91%E5%9F%9F/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 电阻的物理基础 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E7%94%B5%E9%98%BB%E7%9A%84%E7%89%A9%E7%90%86%E5%9F%BA%E7%A1%80/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E7%94%B5%E9%98%BB%E7%9A%84%E7%89%A9%E7%90%86%E5%9F%BA%E7%A1%80/</guid>
      
    </item>
    
    <item>
      <title>信号完整性 - 阻抗与电气模型</title>
      
      
      
      
      <description>&lt;p&gt;阻抗（Electrical Impedance, Z）是电路中电阻、电感、电容对交流电的阻碍作用的统称，定义为电压与电流之比（$Z=V/I$）。阻抗是一个复数，实部称为电阻，虚部称为电抗。其中电容在电路中对交流电所起的阻碍作用称为容抗，电感在电路中对交流电所起的阻碍作用称为感抗，容抗和感抗合称为电抗。&lt;/p&gt;
&lt;p&gt;对于恒定的电压，阻抗越高，流经电流就越小，反之同理。极端情况下，开路的阻抗是无穷大的，短路的阻抗为零。在互连线中，阻抗是影响信号的关键因素。信号传播时，会不断根据瞬时阻抗做出相应的反应。&lt;/p&gt;
&lt;h2&gt;基本电气模型&lt;/h2&gt;
&lt;p&gt;在建立基本电气模型的过程中，我们会构想以下这几种理想的两端口元件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;理想电阻器&lt;/li&gt;
&lt;li&gt;理想电容器&lt;/li&gt;
&lt;li&gt;理想电感器&lt;/li&gt;
&lt;li&gt;理想传输线&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中，理想阻容感的特性可以集中到一个点上，故称为 &lt;strong&gt;集总电路元件&lt;/strong&gt;；而理想传输线的特性是沿着线分布的。目标是建立一个等效电路模型，使其阻抗尽可能贴近实际元件测得的阻抗。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221219164410.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;时域中理想电阻器的阻抗&lt;/h2&gt;
&lt;p&gt;理想电阻器的阻抗是恒定的，数值大小与其电阻值相等，与电压、电流无关。&lt;/p&gt;
&lt;h2&gt;时域中理想电容器的阻抗&lt;/h2&gt;
&lt;p&gt;对理想电容器而言，两块极板之间储存的电荷与电压差有一定的关系，其容值的定义如下：&lt;/p&gt;
&lt;p&gt;$$
C=\frac{Q}{V}
$$&lt;/p&gt;
&lt;p&gt;其中，C 表示电容值（单位 F），Q 表示极板间储存的电荷（C，库伦），V 表示两极板间电压（单位 V）。&lt;/p&gt;
&lt;p&gt;电容的阻抗是通过其两端电压与流过的电流求得。实际上，电流并非真正流过电容，只是在电容两极板电压改变时，看似有电流在流动。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221219215752.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，上极板增加了一些正电荷，下极板增加了一些负电荷的同时，把下极板原来存在的正电荷从推出去，这样看起来就像有电流穿过电容。这种在极化电介质中由束缚电荷位移形成的电流，称为 &lt;strong&gt;位移电流&lt;/strong&gt;，它并不是真正的电流，而只是电荷的移动。其定义如下：&lt;/p&gt;
&lt;p&gt;$$
I=\frac{dQ}{dt}=C\frac{dV}{dt}
$$&lt;/p&gt;
&lt;p&gt;从上式可看出，只有在电容两端电压发生变化时，才会有电流流过，如果电压固定不变，就不会有位移电流。&lt;/p&gt;
&lt;p&gt;因此，理想电容的阻抗可以表示为：&lt;/p&gt;
&lt;p&gt;$$
Z=\frac{V}{I}=\frac{V}{C\frac{dV}{dt}}
$$&lt;/p&gt;
&lt;p&gt;电容的阻抗与其两端电压波形有关。如果电压变化快（波形斜率大），则流过电流就大，阻抗也会越小；同理，当电压变化速率相同时，容值越大，阻抗就越小。&lt;/p&gt;
&lt;h2&gt;时域中理想电感器的阻抗&lt;/h2&gt;
&lt;p&gt;对理想电感器而言，其两端的电压定义如下：&lt;/p&gt;
&lt;p&gt;$$
V=L\frac{dI}{dt}
$$&lt;/p&gt;
&lt;p&gt;其中，$V$ 表示电感两端电压，$L$ 表示电感值，$I$ 表示流过电感的电流。可以看出，电感两端电压与流过电流变化的快慢有关，而电流快慢取决于两端电压差。两端电压差与电流变化速度谁是因谁是果，则取决于哪个是驱动源。电感的阻抗，可以表示为其两端电压与流经电流之比：&lt;/p&gt;
&lt;p&gt;$$
Z=\frac{V}{I}=L\frac{\frac{dI}{dt}}{I}
$$&lt;/p&gt;
&lt;p&gt;如果流过电感的电流迅速增大，则阻抗就变得很大，反之同理；而如果电流为直流，则阻抗接近为 0。当然，电感的实际阻抗与电流的具体波形有着密切的关系。&lt;/p&gt;
&lt;h2&gt;频域中的阻抗&lt;/h2&gt;
&lt;p&gt;在上文可以看出，在时域中，电感器、电容器阻抗的计算公式都是相对复杂的函数，但是放在频域中分析，则会简单得多。&lt;/p&gt;
&lt;p&gt;在频域中进行分析，正弦波是唯一存在的波形，所以只能通过研究它与理想元件的相互作用进行分析。正弦波的 3 个特征是：频率、幅度和相位。一般我们用弧度描述，角频率（$rad/s$）与频率（$f$）的关系为：&lt;/p&gt;
&lt;p&gt;$$
\omega=2\pi f
$$&lt;/p&gt;
&lt;p&gt;我们在理想元件两端加上正弦电压，观察流经电流情况。阻抗仍定义为电压与电流之比，只不过现在是电压正弦波和电流正弦波之比了。而因为理想元件和理想传输线都是线性元件，所以呈现的电流与输入电压的频率是一致的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20221219231954.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据阻抗的定义，阻抗的幅值可以表示为：&lt;/p&gt;
&lt;p&gt;$$
|Z|=\frac{|V|}{|I|}
$$&lt;/p&gt;
&lt;p&gt;同时，需要计算两个波形之间的相位差。在频域中，可以这样表示阻抗：在 10MHz 下，阻抗幅值为 20Ω，相位是 30°（电压比电流超前 30°）。这三个要素缺一不可，因为阻抗幅值和相位都与频率相关，会随着频率的变化而变。除此之外，也可用复数表示频域中的阻抗，把相位信息囊括进复数中，以此简化计算。&lt;/p&gt;
&lt;h2&gt;频域中理想电阻器的阻抗&lt;/h2&gt;
&lt;p&gt;我们接着分析在频域中理想元件的阻抗。因为频域中仅需处理正弦电压与电流，所以如果使用电流源，施加正弦电流流过电阻器，就会在其两端产生一个正弦电压，可以表示为：&lt;/p&gt;
&lt;p&gt;$$
V=I_0 sin(\omega t) \cdot R
$$&lt;/p&gt;
&lt;p&gt;正弦电压为 R 与正弦电流的乘积。根据上面的公式，理想电阻器的阻抗可以表示为：&lt;/p&gt;
&lt;p&gt;$$
Z=\frac{V}{I}=\frac{I_0 sin(\omega t) \cdot R}{I_0 sin(\omega t)}=R
$$&lt;/p&gt;
&lt;p&gt;其实理想电阻器的阻抗就是其电阻值，且与频率无关，相位差为零。此结果与在时域中的结论一致。&lt;/p&gt;
&lt;h2&gt;频域中理想电容器的阻抗&lt;/h2&gt;
&lt;p&gt;分析频域中理想电容器的阻抗，需要在其两端加一个正弦电压，所以流经的电流可以表示为：&lt;/p&gt;
&lt;p&gt;$$
I=C\frac{d V_0sin(\omega t)}{dt}=C\omega V_0 cos(\omega t)
$$&lt;/p&gt;
&lt;p&gt;可以看出，即使电压不变，电流也会随频率而变，频率越高，流经电流幅度越大。也就是说，电容器的阻抗会随频率升高而减小，可以表示为：&lt;/p&gt;
&lt;p&gt;$$
Z=\frac{V}{I}=\frac{V_0 sin(\omega t)}{C\omega V_0 cos(\omega t)}=\frac{1}{\omega C}\cdot \frac{sin(\omega t)}{cos(\omega t)}
$$&lt;/p&gt;
&lt;p&gt;可见，阻抗幅值为 $\frac{1}{\omega C}$，角频率增加时，阻抗会减小。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为阻抗的相位是电压正弦波与电流正弦波的相位差，在电容器中就是正弦与余弦之间的相位差 $-90°$，在复数中就是 $-i$，所以用复数形式表示电容器阻抗就是 $\frac{-i}{\omega C}$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个实际的例子，如果有一个理想的 10nF 去耦电容器，则在 $1kHz$ 下其阻抗就是 $\frac{1}{2\pi \cdot 1kHz \cdot 10nF}\approx 16kΩ$。如果频率降为 $1Hz$，则阻抗约为 $16MΩ$。&lt;/p&gt;
&lt;h2&gt;频域中理想电感器的阻抗&lt;/h2&gt;
&lt;p&gt;对频域中理想电感器，我们施加正弦电流，则产生电压为：&lt;/p&gt;
&lt;p&gt;$$
I=L\frac{d I_0sin(\omega t)}{dt}=L\omega I_0 cos(\omega t)
$$&lt;/p&gt;
&lt;p&gt;当电流幅度固定不变时，频率越高，两端电压就越大。也就是说，随着频率升高，需要更高的电压，才能维持电流幅度不变。电感器的阻抗随频率升高而增大，根据阻抗的定义可表示为：&lt;/p&gt;
&lt;p&gt;$$
Z=\frac{V}{I}=\frac{L\omega I_0 cos(\omega t)}{\omega I_0 sin(\omega t)}=\omega L \cdot \frac{cos(\omega t)}{sin(\omega t)}
$$&lt;/p&gt;
&lt;p&gt;可见，由于电感器的特性，频率越高，交流电流流经电感器就变得越困难。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;与电容器同理，对于电感器的阻抗，其相位是 $+90°$，用复数 $i$ 表示。电感器阻抗复数表现形式为 $Z=i\omega L$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在实际去耦电容器中，其自身形状和封装会带来寄生电感，大约为 $2nH$。如果视其为理想电感器，那么在 $1GHz$ 下，会带来 $Z=2\pi \cdot 1GHz \cdot 2nH=12Ω$ 的阻抗。因为在相同频率下，理想电容器的阻抗仅为 $0.01Ω$，故可解释为在高频下，实际电容器表现为感性。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性与电源完整性分析》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E9%98%BB%E6%8A%97%E4%B8%8E%E7%94%B5%E6%B0%94%E6%A8%A1%E5%9E%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7-%E9%98%BB%E6%8A%97%E4%B8%8E%E7%94%B5%E6%B0%94%E6%A8%A1%E5%9E%8B/</guid>
      
    </item>
    
    <item>
      <title>电源完整性设计</title>
      
      
      
      
      <description>&lt;p&gt;电源完整性是指电源波形的质量，研究的是电源分配网络（PDN）。并从系统供电网络综合考虑，消除 / 降低噪声对电源的影响。电源完整性的设计目标是把电源噪声控制在运行的范围内，为芯片提供干净稳定的电压，并使它能够维持在一个很小的容差范围内（通常为 5% 以内），实时响应负载对电流的快速变化，并能够为其他信号提供低阻抗的回流路径。&lt;/p&gt;
&lt;p&gt;电源噪声的主要来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;供电模块（VRM，包括 LDO/DC-DC）的输出噪声&lt;/li&gt;
&lt;li&gt;走线的直流电阻与寄生电感&lt;/li&gt;
&lt;li&gt;同步开关噪声（SSN）&lt;/li&gt;
&lt;li&gt;电源与地平面谐振噪声&lt;/li&gt;
&lt;li&gt;临近电源网络耦合噪声&lt;/li&gt;
&lt;li&gt;其他部件耦合噪声&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220113527.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;大量的芯片引脚在进行逻辑状态切换时，会有一个大的瞬态电流流过回路，造成地平面的波动，会造成芯片的地与系统地不一致，称为地弹；造成芯片和系统的电源有差压，称为电源弹。在进行 PCB 叠层设计时，尽可能增大电源平面叠层之间的垂直距离，减少电源平面和地平面之间的垂直间距。&lt;/p&gt;
&lt;h2&gt;电源完整性设计策略&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;关注过孔、走线和电源平面的通流能力；当在一个平面上布置多个电源时，需要进行电源平面的分割，分割方式要简洁合理，分割区域的大小要满足载流能力的要求；&lt;/li&gt;
&lt;li&gt;尽可能使电源平面与地平面成对相邻出现，且尽可能接近；&lt;/li&gt;
&lt;li&gt;关注去耦电容的设计，电容的去耦作用是有一定的距离要求的，即去耦半径。电容焊盘的扇出方式推荐采用多过孔的方式。&lt;/li&gt;
&lt;li&gt;关注同步开关噪声（SSN，地弹和电源弹）的影响，可增加去耦电容；在满足系统整体性能需求前提下，尽可能使用平缓的驱动信号（减缓驱动器的上升沿和下降沿时间）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;电源完整性的测试项目&lt;/h2&gt;
&lt;h3&gt;电压值（精度）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测试仪器：万用表&lt;/li&gt;
&lt;li&gt;测试方法：分别在测试空载 / 满载下测试&lt;/li&gt;
&lt;li&gt;测试点：电源芯片输出管脚、用电芯片的电源管脚&lt;/li&gt;
&lt;li&gt;合格标准：一般在标称电压值 ±5% 范围内（根据芯片的电压要求来确定）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电源噪声 / 纹波&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;定义&lt;/li&gt;
&lt;li&gt;纹波：出现在输出端子间的一种与输入频率和开关频率同步的成分，用有效值表示，一般在输出电压的 0.5% 以下&lt;/li&gt;
&lt;li&gt;噪声：出现在输出端子间的纹波以外的一种高频成分，也用峰 - 峰（peak to peak）值表示，一般在输出电压的 1% 以下&lt;/li&gt;
&lt;li&gt;纹波噪声：两者合成，用峰 - 峰（peak to peak）值表示，要求一般在输出电压的 2% 以下&lt;/li&gt;
&lt;li&gt;测试仪器：示波器&lt;/li&gt;
&lt;li&gt;测试方法&lt;/li&gt;
&lt;li&gt;分别在测试空载 / 满载下测试&lt;/li&gt;
&lt;li&gt;纹波：采用地线环靠接测量法（靠接测量），示波器设置带宽（bandwidth）为 20MHz，直流偏置电压（offset）为上面电压精度测量值。&lt;/li&gt;
&lt;li&gt;纹波噪声：把示波器带宽设置成全带宽（Full）&lt;/li&gt;
&lt;li&gt;测试点：输出电容两端&lt;/li&gt;
&lt;li&gt;合格标准：&lt;/li&gt;
&lt;li&gt;一般要求纹波 &amp;lt; 输出电压的 1%（在 20MHz 带宽下测试，结果可视为单纯的纹波）&lt;/li&gt;
&lt;li&gt;一般要求纹波噪声 &amp;lt; 输出电压的 2%（在全带宽下测试，结果可视为纹波 + 噪声）&lt;/li&gt;
&lt;li&gt;注意事项&lt;/li&gt;
&lt;li&gt;测试时注意就近原则，保持地环线最短&lt;/li&gt;
&lt;li&gt;测试使用无源探头&lt;/li&gt;
&lt;li&gt;测试纹波时记录其频率，以便分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电压上下电波形&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测试仪器：示波器&lt;/li&gt;
&lt;li&gt;测试方法：示波器设置为上升 / 下降沿触发，开关电源观察上下电波形，能完整显示出来以看出问题&lt;/li&gt;
&lt;li&gt;测试点：电源芯片的输出管脚、系统上的电源线&lt;/li&gt;
&lt;li&gt;合格标准&lt;/li&gt;
&lt;li&gt;电源输出端电压上下电过冲一般要求不超过被测电压的 10％。在芯片前端测试时，可参考电平通用标准&lt;/li&gt;
&lt;li&gt;电源上电时电压不得有很大的跌落，下电时不能有很大的反冲和回勾（跌落和反冲不能跨越芯片启动工作电压），如出现台阶现象需要评估影响。&lt;/li&gt;
&lt;li&gt;如果出现负电压，就需要结合实际情况讨论&lt;/li&gt;
&lt;li&gt;注意芯片的上下电时序要求&lt;/li&gt;
&lt;li&gt;注意事项：需要遍历系统上下电、单板插拔、电源板插拔的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;缓启动电路参数&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220112247.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试仪器：示波器&lt;/li&gt;
&lt;li&gt;测试方法：使用多通道测试，上电观察时间差&lt;/li&gt;
&lt;li&gt;测试点：一路在缓启动之前的电路，一路在缓启动之后&lt;/li&gt;
&lt;li&gt;合格标准&lt;/li&gt;
&lt;li&gt;延迟时间（$T_{delay}$）：一般要求其范围 20 ～ 200ms&lt;/li&gt;
&lt;li&gt;上升时间（$T_{rise}$，输出电压从 10% 上升到 90% 的时间）：要求其范围越小越好，但同时要求冲击电流满足合格标准&lt;/li&gt;
&lt;li&gt;没有多次振荡现象&lt;/li&gt;
&lt;li&gt;注意事项：需要遍历系统上下电、单板插拔、电源板插拔的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电源电流和冲击电流&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测试仪器：示波器&lt;/li&gt;
&lt;li&gt;测试方法：&lt;/li&gt;
&lt;li&gt;电源电流：使用电流探头，观察电源上电电流波形和上电后电流的平稳波形&lt;/li&gt;
&lt;li&gt;冲击电流：同上。上电冲击电流最好在冷机时测试（冲击电流最大）；下电冲击电流最好在单板满载时进行&lt;/li&gt;
&lt;li&gt;测试点：将电流探头卡在被测试电流通路上&lt;/li&gt;
&lt;li&gt;合格标准&lt;/li&gt;
&lt;li&gt;电源电流稳定值不能超过 90％ 最大额定输出电流&lt;/li&gt;
&lt;li&gt;冲击电流值不能超过额定输出电流的 5 倍（3 倍以上应引起注意）&lt;/li&gt;
&lt;li&gt;任何情况下的电流一定要大于电源的最小负载，且须满足最大容性负载要求&lt;/li&gt;
&lt;li&gt;注意事项&lt;/li&gt;
&lt;li&gt;需要遍历系统上下电、单板插拔、电源板插拔的情况&lt;/li&gt;
&lt;li&gt;测试冲击电流，需要取下感性元件如电感，因为感性器件本身具有抑制冲击电流的作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电源告警信号&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测试方法：使系统产生告警条件，测试告警信号的电平大小&lt;/li&gt;
&lt;li&gt;测试点：告警信号的接收末端&lt;/li&gt;
&lt;li&gt;合格标准：参考电源芯片的规格书&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;冗余电源的均流参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测试方法：用测试电源输出电流的方法，测试冗余电源的每路电流的输出值，比较每路输出电流的大小&lt;/li&gt;
&lt;li&gt;测试点：冗余电源的每路电流输出链路&lt;/li&gt;
&lt;li&gt;合格标准：系统电源、其冗余电源（均流）的各路电流输出值相差 10％ 以下&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_40877615/article/details/93598336&#34;&gt;电源完整性(PI)概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《硬件信号质量 SI 测试规范》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>高速电路的设计 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;高速 PCB 设计需考虑因素&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;成本控制&lt;/li&gt;
&lt;li&gt;叠层排布原则&lt;/li&gt;
&lt;li&gt;布局原则&lt;/li&gt;
&lt;li&gt;布线原则&lt;/li&gt;
&lt;li&gt;阻抗设计&lt;/li&gt;
&lt;li&gt;信号完整性&lt;/li&gt;
&lt;li&gt;电源完整性&lt;/li&gt;
&lt;li&gt;EMC 设计&lt;/li&gt;
&lt;li&gt;热设计&lt;/li&gt;
&lt;li&gt;DFM 设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;两层板与多层板的区别&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;参考平面与阻抗的计算&lt;/li&gt;
&lt;li&gt;多层板回流路径更短&lt;/li&gt;
&lt;li&gt;更容易布线&lt;/li&gt;
&lt;li&gt;多层板成本高&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;叠层规范&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;元件、焊接面为完整的地平面（屏蔽作用）&lt;/li&gt;
&lt;li&gt;尽可能的无相邻平行布线层（避免互相干扰）&lt;/li&gt;
&lt;li&gt;所有信号层尽可能与地平面相邻；关键信号与地层相邻，不跨分割区（减小回流路径）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上，可参考的叠层方案是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顶层：信号 1&lt;/li&gt;
&lt;li&gt;中间 1 层：地&lt;/li&gt;
&lt;li&gt;中间 2 层：电源&lt;/li&gt;
&lt;li&gt;底层：信号 2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了减少边沿辐射，电源层要相对地层内缩（pullback）1 mm 以上。&lt;/p&gt;
&lt;h2&gt;不同通信协议的 PCB 阻抗设计要求&lt;/h2&gt;
&lt;p&gt;| 高速信号   | 阻抗要求 | 误差 | 走线 |
| ---------- | -------- | ---- | ---- |
| DDR        | 100Ω     | ±10% |      |
| eMMC       | 50Ω      | ±10% |      |
| PCIe       |          |      |      |
| USB        | 90Ω      | ±10% | 差分 |
| HDMI       | 100Ω     | ±10% |      |
| eDP        | 90Ω      | ±10% | 差分 |
| MIPI       | 100Ω     | ±10% | 差分 |
| SDIO/SDMMC | 50Ω      | ±10% |      |&lt;/p&gt;
&lt;h2&gt;一些基本概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;信号完整性（Signal Integrity）&lt;/strong&gt;：信号完整性是指信号在信号线上的质量。信号具有良好的信号完整性是指当在需要的时候具有所必需达到的电压电平数值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输线（Transmission Line）&lt;/strong&gt;：由两个具有一定长度的导体组成回路的连接线，我们称之为传输线，有时也被称为延迟线。它的电流返回到地或电源。传输线的基本特性是特性阻抗和信号的传输延迟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集总电路（Lumped circuit）&lt;/strong&gt;：在一般的电路分析中，电路的所有参数，如阻抗、容抗、感抗都集中于空间的各个点上，各个元件上，各点之间的信号是瞬间传递的，这种理想化的电路模型称为集总电路。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式系统（Distributed System）&lt;/strong&gt;：实际的电路情况是各种参数分布于电路所在空间的各处，当这种分散性造成的信号延迟时间与信号本身的变化时间相比已不能忽略的时侯，整个信号通道是带有电阻、电容、电感的复杂网络，这就是一个典型的分布参数系统。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上升/下降时间（Rise/Fall Time）&lt;/strong&gt;：信号从低电平跳变为高电平所需要的时间，通常是量度上升/下降沿在 10%-90% 电压幅值之间的持续时间，记为 Tr。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;截止频率（Knee Frequency）&lt;/strong&gt;：这是表征数字电路中集中了大部分能量的频率范围（0.5/Tr），记为 Fknee，一般认为超过这个频率的能量对数字信号的传输没有任何影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特征阻抗（Characteristic Impedance）&lt;/strong&gt;：交流信号在传输线上传播中的每一步遇到不变的瞬间阻抗就被称为特征阻抗，也称为浪涌阻抗，记为 Z0。可以通过传输线上输入电压对输入电流的比率值（V/I）来表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输延迟（Propagation delay）&lt;/strong&gt;：指信号在传输线上的传播延时，与线长和信号传播速度有关，记为 tPD。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;趋肤效应（Skin effect）&lt;/strong&gt;：指当信号频率提高时，流动电荷会渐渐向传输线的边缘靠近，甚至中间将没有电流通过。与此类似的还有集束效应，现象是电流密集区域集中在导体的内侧。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反射（Reflection）&lt;/strong&gt;：指由于阻抗不匹配而造成的信号能量的不完全吸收，发射的程度可以有反射系数 ρ 表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过冲/下冲（Over shoot/under shoot）&lt;/strong&gt;：过冲就是指接收信号的第一个峰值或谷值超过设定电压 —— 对于上升沿是指第一个峰值超过最高电压；对于下降沿是指第一个谷值超过最低电压，而下冲就是指第二个谷值或峰值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;振荡&lt;/strong&gt;：在一个时钟周期中，反复出现过冲和下冲，我们就称之为振荡。振荡根据表现形式可分为振铃（Ringing）和环绕振荡，振铃为欠阻尼振荡，而环绕振荡为过阻尼振荡。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻抗匹配（Termination）&lt;/strong&gt;：指为了消除反射而通过添加电阻或电容器件来达到阻抗一致的效果。因为通常采用在源端或终端，所以也称为端接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;振铃&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;振铃效应（Ringingeffect）就是影响复原图像质量的众多因素之一，其典型表现是在图像灰度剧烈变化的临域出现类吉布斯（Gibbs）分布的震荡。&lt;/li&gt;
&lt;li&gt;振铃现象，来源于变压器漏感和寄生电容引起的阻尼振荡。由于变压器的初级有漏感，当电源开关管由饱和导通到截止关断时会产生反电动势，反电动势又会对变压器初级线圈的分布电容进行充放电，从而产生阻尼振荡，即产生振铃。变压器初级漏感产生反电动势的电压幅度一般都很高，其能量也很大，如不采取保护措施，反电动势一般都会把电源开关管击穿，同时反电动势产生的阻尼振荡还会产生很强的电磁辐射，不但对机器本身造成严重干扰，对机器周边环境也会产生严重的电磁干扰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;串扰&lt;/strong&gt;：串扰是指当信号在传输线上传播时，因电磁耦合对相邻的传输线产生的不期望的电压噪声干扰，这种干扰是由于传输线之间的互感和互容引起的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信号回流（Return current）&lt;/strong&gt;：指伴随信号传播的返回电流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自屏蔽（Self shielding）&lt;/strong&gt;：信号在传输线上传播时，靠大电容耦合抑制电场，靠小电感耦合抑制磁场来维持低电抗的方法称为自屏蔽。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前向串扰（Forward Crosstalk）&lt;/strong&gt;：指干扰源对牺牲源的接收端产生的第一次干扰，也称为远端干扰（Far-end crosstalk）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后向串扰（Forward Crosstalk）&lt;/strong&gt;：指干扰源对牺牲源的发送端产生的第一次干扰，也称为近端干扰（Near-end crosstalk）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;屏蔽效率（SE）&lt;/strong&gt;：是对屏蔽的适用性进行评估的一个参数，单位为分贝。吸收损耗：吸收损耗是指电磁波穿过屏蔽罩的时候能量损耗的数量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反射损耗&lt;/strong&gt;：反射损耗是指由于屏蔽的内部反射导致的能量损耗的数量，他随着波阻和屏蔽阻抗的比率而变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;校正因子&lt;/strong&gt;：表示屏蔽效率下降的情况的参数，由于屏蔽物吸收效率不高，其内部的再反射会使穿过屏蔽层另一面的能量增加，所以校正因子是个负数，而且只使用于薄屏蔽罩中存在多个反射的情况分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;差模 EMI&lt;/strong&gt;：传输线上电流从驱动端流到接收端的时候和它回流之间耦合产生的 EMI，就叫做差模 EMI。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共模 EMI&lt;/strong&gt;：当两条或者多条传输线以相同的相位和方向从驱动端输出到接收端的时候，就会产生共模辐射，既共模 EMI。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发射带宽&lt;/strong&gt;：即最高频率发射带宽，当数字集成电路从逻辑高低之间转换的时候，输出端产生的方波信号频率并不是导致 EMI 的唯一成分。该方波中包含频率范围更宽广的正弦谐波分量，这些正弦谐波分量是工程师所关心的 EMI 频率成分，而最高的 EMI 频率也称为 EMI 的发射带宽。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电磁环境&lt;/strong&gt;：存在于给定场所的所有电磁现象的总和。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电磁骚扰&lt;/strong&gt;：任何能引起装置、设备或系统性能降低或者对有生命或者无生命物质产生损害作用的电磁现象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电磁干扰&lt;/strong&gt;：电磁骚扰引起设备、传输通道和系统性能的下降。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电磁兼容性&lt;/strong&gt;：设备或者系统在电磁环境中能正常工作且不对该环境中任何事物构成不能承受的电磁骚扰的能力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统内干扰&lt;/strong&gt;：系统中出现由本系统内部电磁骚扰引起的电磁干扰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统间干扰&lt;/strong&gt;：有其他系统产生的电磁干扰对一个系统造成的电磁干扰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静电放电&lt;/strong&gt;：具有不同静电电位的物体相互接近或者接触时候而引起的电荷转移。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建立时间（Setup Time）&lt;/strong&gt;：建立时间就是接收器件需要数据提前于时钟沿稳定存在于输入端的时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保持时间（Hold Time）&lt;/strong&gt;：为了成功的锁存一个信号到接收端，器件必须要求数据信号在被时钟沿触发后继续保持一段时间，以确保数据被正确的操作。这个最小的时间就是我们说的保持时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;飞行时间（Flight Time）&lt;/strong&gt;：指信号从驱动端传输到接收端，并达到一定的电平之间的延时，和传输延迟和上升时间有关。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tco&lt;/strong&gt;：是指器件的输入时钟边缘触发有效到输出信号有效的时间差，这是信号在器件内部的所有延迟总和，一般包括逻辑延迟和缓冲延迟。缓冲延迟（buffer delay）：指信号经过缓冲器达到有效的电压输出所需要的时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抖动（Jitter）&lt;/strong&gt;：信号的某特定时刻从其理想时间位置上的短期偏离为抖动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时钟抖动（Clock Jitter）&lt;/strong&gt;：时钟抖动是指时钟触发沿的随机误差，通常可以用两个或多个时钟周期之间的差值来量度，这个误差是由时钟发生器内部产生的，和后期布线没有关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时钟偏移（Skew）&lt;/strong&gt;：是指由同样的时钟产生的多个子时钟信号之间的延时差异。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;钟&lt;/strong&gt;: 假时钟是指时钟越过阈值（threshold）无意识地改变了状态（有时在 VIL 或 VIH 之间）。通常由于过分的下冲（undershoot）或串扰（crosstalk）引起。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电源完整性（Power Integrity）&lt;/strong&gt;： 指电路系统中的电源和地的质量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步开关噪声（Simultaneous Switch Noise）&lt;/strong&gt;：指当器件处于开关状态，产生瞬间变化的电流（di/dt），在经过回流途径上存在的电感时，形成交流压降，从而引起噪声，简称 SSN。也称为 Δi 噪声。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地弹（Ground Bounce）&lt;/strong&gt;：指由于封装电感而引起地平面的波动，造成芯片地和系统地不一致的现象。同样，如果是由于封装电感引起的芯片和系统电源差异，就称为电源反弹（Power Bounce）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PLL（Phase Locked Loops，锁相环路&lt;/strong&gt;）：一种反馈控制系统，也是闭环跟踪系统，其输出信号的频率跟踪输入信号的频率。当输出信号频率与输入信号频率相等时，输出电压与输入电压保持固定的相位差值。它由鉴相器（PD， Phase Detector）、环路滤波器（LP， Loops Filter）、和压控振荡器（VCO， Voltage Control Oscillator）三部分组成。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CRU（Clock Recovery Unit，时钟恢复单元）&lt;/strong&gt;：当需要测试一个高速串行信号眼图时，需要一个时钟恢复单元，从被测信号中恢复出. 事实上，一个真实的高速器件内部就有一个时钟恢复单元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ISI（Inter-Symbol interference，码间干扰）&lt;/strong&gt;：不同长度的连续“1”与“0”在带宽有限的系统中受到不同的衰减，导致长连续的“1”或“0”到达比短“1”与短“0”更高的电平，在接续这些长“1”或长“0”后的跳变，信号需要比短“1”与短“0”更多的时间才能到达门限电平，这些时间上的偏离就导致信号的抖动，不同长短“1”与“0”之间的干扰导致数据相关抖动即 ISI。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DCD（Data dependant distortion，数据信赖失真、占空比失真）&lt;/strong&gt;：因上升沿速率与下降沿速率的不对称性所造成的时钟周期上的偏离，即占空比失真。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;眼图&lt;/strong&gt;：一些列数字信号在示波器上累积而显示的图形。它包含丰富的信息，体现了数字信号的整体特征，能够很好的评估数字信号的品质，因而眼图分析是高速互联系统信号完整性分析的核心。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.infonet.io/2021/04/04/%E9%AB%98%E9%80%9F%E4%BF%A1%E5%8F%B7PCB%E8%AE%BE%E8%AE%A1/&#34;&gt;高速信号 PCB 设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://murata.eetrend.com/article/2019-07/1002919.html&#34;&gt;高速电路设计很难学？熟悉这 48 个基本概念，你就入门了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E9%AB%98%E9%80%9F%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%94%B5%E6%BA%90%E5%AE%8C%E6%95%B4%E6%80%A7/%E9%AB%98%E9%80%9F%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>ADC 与 DAC 基础知识</title>
      
      
      
      
      <description>&lt;p&gt;在现实世界中，常见的信号大都是模拟量，像温度、声音、气压等，但在信号的处理与传输中，为了减少噪声的干扰，较多使用的是数字量。因此我们经常会将现实中的模拟信号，通过 ADC 转换为数字信号进行运算、传输、储存，再通过 DAC 转换为模拟信号，呈现出来。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220724210409.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但要注意的是，现实中的模拟量连续的，意味着它有无限的分辨率，但转换为数字量之后，将会丢失一定的精度，在时间和幅度上都会变成离散的值。&lt;/p&gt;
&lt;h2&gt;ADC 基本原理&lt;/h2&gt;
&lt;p&gt;ADC（Analog-to-Digital Converter）指模拟 / 数字转换器，可将真实世界的模拟信号，例如温度、压力、声音或者图像等，转换成更容易储存、处理和发射的数字形式。&lt;/p&gt;
&lt;h3&gt;采样&lt;/h3&gt;
&lt;p&gt;因为输入的模拟信号是连续的，而将要输出的数字信号是离散的，所以只能进行瞬时采样，再将采样值转换为输出的数字量，再重新开始下一轮的采样。&lt;/p&gt;
&lt;p&gt;为了能准确无误用信号 $v_s$ 表示出模拟输入信号 $v_1$，至少需要满足采样定理，即采样频率 $f_s$ 在模拟输入信号最高频率分量 $f_{i(max)}$ 的 2 倍以上（通常会取 3~5 倍，但太高的频率需要更快的工作速度，需要综合成本考虑）：&lt;/p&gt;
&lt;p&gt;$$
f_s≥2\cdot f_{i(max)}
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220724180529.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;只要满足了采样定理，即可用低通滤波器，将 $v_s$ 还原为 $v_1$。滤波器电压传输系数应在低于 $f_{i(max)}$ 时保持不变，在 $f_s-f_{i(max)}$ 前迅速下降为 0。&lt;/p&gt;
&lt;h3&gt;保持&lt;/h3&gt;
&lt;p&gt;保持电路能够采样结束后，让信号保持一段时间，使 ADC 有充分时间进行转换。一般采样脉冲频率越高、采样越密，采样值就越多，采样保持电路的输出信号就越接近输入信号的波形。采样 - 保持电路的基本形式如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220723161306.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;采样 - 保持的基本步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当采样控制信号 $v_L$ 为高电平时，使 MOS 管 $T$ 导通，$v_1$ 经过电阻 $R_1$ 和 MOS 管 $T$，给电容 $C_H$ 充电。&lt;/li&gt;
&lt;li&gt;若取 $R_1=R_F$，则充电结束后 $v_0=v_c=-v_1$。&lt;/li&gt;
&lt;li&gt;当采样控制信号 $v_L$ 跌落回电平时，MOS 管 $T$ 截止，电容 $C_H$ 上的电压不会突变，所以 $v_0$ 也能保持一段时间，采样结果得以被记录下来。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;量化&lt;/h3&gt;
&lt;p&gt;采样得到的数字量，必须为某个规定的最小数值单位的整数倍，这个转换过程称为量化，所取的最小数量单位称为量化单位 $\Delta$。数字信号最低有效位 LSB 的 1 所代表的数量大小就等于 $\Delta$。&lt;/p&gt;
&lt;p&gt;因为模拟电压是连续的，不一定能被 $\Delta$ 整除，因此会出现量化误差。&lt;/p&gt;
&lt;p&gt;量化级越细，量化误差就越小，所用二进制代码的位数就越多，电路也越复杂。&lt;/p&gt;
&lt;h3&gt;编码&lt;/h3&gt;
&lt;p&gt;将量化的结果用二进制（或其他进制）表示出来，称为编码。&lt;/p&gt;
&lt;h2&gt;ADC 常见类型&lt;/h2&gt;
&lt;h3&gt;并联比较型（Flash）&lt;/h3&gt;
&lt;p&gt;并联比较型 ADC 又称 Flash ADC，属于直接 ADC，能将输入的模拟电压直接转换为输出的数字量，不需要经过中间变量转换。它由一系列电压比较器组成，每个比较器将输入信号与唯一的分压后的参考电压进行比较。比较器的输出连接编码器电路的输入，产生二进制的输出。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220723163931.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;不仅在操作理论方面是最简单的，而且在速度方面也是最有效的 ADC 技术，仅受比较器和栅极传播延迟的限制。不幸的是，对于任何给定数量的输出位，它是最密集的组件&lt;/p&gt;
&lt;p&gt;并联比较型 ADC 的转换速度是最快的，但缺点是需要使用很多电压比较器和大规模的代码转换电路（常见的并联比较型输出大都在 8 位以下）。&lt;/p&gt;
&lt;h3&gt;逐次逼近型&lt;/h3&gt;
&lt;p&gt;逐次逼近型（Successive Approximation）ADC 采用的是一种反馈比较型电路结构。由比较器、DAC、寄存器、时钟脉冲源和控制逻辑等组成：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220723211839.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其原理是，设定一个数字量，通过 DAC 得到一个对应的输出模拟电压。将这个模拟电压和输入的模拟电压信号从最高位开始顺序地相比较，如果两者不相等，则调整所取的数字量，直到两个模拟电压相等为止，最后所取的这个数字量就是所求的转换结果。其过程像用天平去称量位置重量的物体，先加大砝码，再逐次添加或换用小砝码。&lt;/p&gt;
&lt;p&gt;逐次逼近型 ADC 的优点是速度高，功耗低，在低分辨率（12 位）下具有性价比优势；缺点是转换速率一般，电路规模中等。&lt;/p&gt;
&lt;h3&gt;双积分型（V-T）&lt;/h3&gt;
&lt;p&gt;双积分型 ADC 是一种间接 ADC，它首先将输入的模拟电压信号转换成与之成正比的时间宽度信号，随后在此时间宽度内，对固定频率的时钟进行脉冲计数，计数的值就是正比于模拟输入电压的数字信号。因此，也将这种 ADC 称为电压 - 时间变换型（V-T）ADC。&lt;/p&gt;
&lt;p&gt;双积分型 ADC 由积分器、比较器、计数器、控制逻辑和时钟信号源组成，如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220723213208.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;双积分型 ADC 的优点是工作性能稳定（两次积分，排除 RC 参数差异）、抗干扰能力强（积分受噪声影响不大）；缺点是转换速率低（转换精度依赖于积分时间）。&lt;/p&gt;
&lt;h3&gt;Σ-Δ 型&lt;/h3&gt;
&lt;p&gt;Σ-Δ 调制型 ADC 的原理与上文的并联型与逐次逼近型 ADC 不同，它不是将采样信号的绝对值进行量化编码，而是将两次相邻采样值之差（增量）进行量化与编码的。其基本结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220723230949.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;它由线性电压积分器、1 位输出量化器、1 位输入 DAC 和一个求和电路组成。经过量化器处理输出的数字信号 $V_0$，经过 DAC 转换为模拟信号 $V_F$，并负反馈至输入端的求和电路，与输入信号 $v_1$ 相减，得到差值 $v_D$。积分器对 $v_D$ 作线性积分，输出电压 $v_{INT}$ 至量化器，由量化器量化为 1 位的数字量输出。由于采用 1 为输出的量化器，所以在连续工作的状态下，输出信号 $V_0$ 是由 0 和 1 组成的数据流。&lt;/p&gt;
&lt;p&gt;Σ-Δ 调制型 ADC 的优点是可以容易地做到高分辨率测量；缺点是转换速率低、电路规模大。&lt;/p&gt;
&lt;h3&gt;电压 - 频率变换型（V-F）&lt;/h3&gt;
&lt;p&gt;电压 - 频率变换型（V-F）ADC 是一种间接 ADC。主要由 V-F 变换器（也称为压控振荡器 Voltage Controlled Oscillator，简称 VCO）、计数器及其时钟信号控制闸门、寄存器、单稳态触发器等几部分构成：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220723233236.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其原理是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将输入的模拟电压信号转换为对应的频率信号。&lt;/li&gt;
&lt;li&gt;在固定的时间内对频信号率计数。&lt;/li&gt;
&lt;li&gt;计数结果正比于输入电压的幅值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ADC 主要参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分辨率&lt;/strong&gt;：输出数字量变化一个相邻数值所需输入模拟电压的变化量，一般用二进制的位数表示，分辨率为 n 表示是满刻度 Fs 的 2 的 n 次方分之一。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;量化误差&lt;/strong&gt;：ADC 的有限位数对模拟量进行量化而引起的误差。要准确表示模拟量，ADC 的位数需要很大甚至无穷大，所以 ADC 器件都有量化误差。一个分辨率有限的 ADC 的阶梯状转换特性曲线与具有无限分辨率的 ADC 转化特性曲线之间的最大偏差就是量化误差。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转换速率&lt;/strong&gt;：每秒进行转换的次数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转换量程&lt;/strong&gt;：ADC 所能测量的最大电压，一般等于参考电压，超过此电压有可能损毁 ADC。当信号较小时可以考虑降低参考电压来提高分辨率，改变参考电压后，对应的转换值也会改变，计算实际电压时需要将参考电压考虑进去，所以说一般参考电压都要做到很稳定且不带有高次谐波。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;偏移误差&lt;/strong&gt;：ADC 输入信号为 0 时，但 ADC 转换输出信号不为 0 的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;满刻度误差&lt;/strong&gt;：ADC 满刻度输出时对应的输入信号与理想输入信号值之差。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线性度&lt;/strong&gt;：实际 ADC 的转移函数和理想直线的最大偏移。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAC 基本原理&lt;/h2&gt;
&lt;p&gt;DAC（Digital-to-Analog Canverter），指数字 / 模拟转换器。可将数字量转换为成比例的模拟电压或电流。举个例子，计算机可能产生范围从 &lt;code&gt;00000000&lt;/code&gt; 到 &lt;code&gt;11111111&lt;/code&gt; 的数字输出，DAC 将其转换为范围从 0 到 10V 的电压。DAC 从基本原理上可以分两类：电流求和型、分压器型。&lt;/p&gt;
&lt;h2&gt;DAC 常见类型&lt;/h2&gt;
&lt;h3&gt;开关树型&lt;/h3&gt;
&lt;p&gt;开关树型 DAC 是最简单粗暴的 DAC，由电阻分压器和树状的开关网络组成：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220724172844.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这些开关分别受 3 位输入 $d_0,d_1,d_2$ 控制，由此可得：&lt;/p&gt;
&lt;p&gt;$$
v_0=\frac{V_{REF}}{2^1} d_2+\frac{V_{REF}}{2^2} d_1+\frac{V_{REF}}{2^3} d_0
$$&lt;/p&gt;
&lt;p&gt;$$
v_0=\frac{V_{REF}}{2^3} (d_2 2^2+d_1 2^1+d_0 2^0)
$$&lt;/p&gt;
&lt;p&gt;进一步看，对于 n 位二进制输入的开关树型 DAC，输出为：&lt;/p&gt;
&lt;p&gt;$$
v_0=\frac{V_{REF}}{2^n} (d_{n-1} 2^{n-1}+d_{n-2} 2^{n-2}+...+d_1 2^1+d_0 2^0)
$$&lt;/p&gt;
&lt;p&gt;开关树型 DAC 特点是电阻种类单一，且在输出端基本不取电流的情况下，对开关导通电阻要求不高；但缺点是用的开关太多。&lt;/p&gt;
&lt;h3&gt;权电阻网络&lt;/h3&gt;
&lt;p&gt;权指的是一个多位二进制数中，每一位 1 所代表的数值。例如，一个 n 位二进制数 $D_n=d_{n-1}d_{n-2}...d_1 d_0$ 从最高位（Most Significant Bit, MSB）到最低位（LSB）的权依次为 $2^{n-1},2^{n-2}...2^1,2^0$。&lt;/p&gt;
&lt;p&gt;权电阻网络型 DAC（属于电压输出型）的原理如下图所示（4 位），它由权电阻网络，4 个模拟开关和 1 个求和放大器组成：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220724003300.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，$S_0,S_1,S_2,S_3$ 是 4 个电子开关，受 $d_0,d_1,d_2,d_3$ 4 个信号的控制，输入为 1 时开关拨到 $V_{REF}$，输入为 0 时开关接地。所以，当 $d_i=1$ 时有之路电流 $I_i$ 流向求和放大器，$d_i=0$ 时之路电流为零。求和放大器是一个负反馈放大器，当反相输入端 $V_-$ 的电位低于同相输入端的电位 $V_+$ 时，输出端对地电压 $v_0$ 为正；当 $V_-&amp;gt;V_+$ 时，$v_0$ 为负。且当 $V_-$ 稍高于 $V_+$ 时，即可在 $v_0$ 产生大幅度的负输出电压。$v_0$ 经 $R_F$ 反馈回 $V_-$，使得 $V_-$ 降低回 $V_+$（0V）。&lt;/p&gt;
&lt;p&gt;假设运算放大器为理想器件（输入电流为零），则可得到：&lt;/p&gt;
&lt;p&gt;$$
v_O=-R_F i_{\sum}=-R_F (I_3+I_2+I_1+I_0)
$$&lt;/p&gt;
&lt;p&gt;又因为 $V_-\approx 0$，因此各支路电流分别为：&lt;/p&gt;
&lt;p&gt;$$
I_3=\frac{V_{REF}}{2^0 R} d_3
$$&lt;/p&gt;
&lt;p&gt;$$
I_2=\frac{V_{REF}}{2^1 R} d_2
$$&lt;/p&gt;
&lt;p&gt;$$
I_1=\frac{V_{REF}}{2^2 R} d_1
$$&lt;/p&gt;
&lt;p&gt;$$
I_0=\frac{V_{REF}}{2^3 R} d_0
$$&lt;/p&gt;
&lt;p&gt;其中，$d_n$ 可取 0 或 1。代入上式，并假设反馈电阻 $R_F=\frac{R}{2}$ 时，可得到输出电压：&lt;/p&gt;
&lt;p&gt;$$
v_O=-\frac{V_{REF}}{2^4}(d_3 2^3+d_2 2^2+d_1 2^1+d_0 2^0)
$$&lt;/p&gt;
&lt;p&gt;进一步看，对于 n 位权电阻网络 DAC，当反馈电阻 $R_F=\frac{R}{2}$ 时，输出电压计算公式是：&lt;/p&gt;
&lt;p&gt;$$
v_O=-\frac{V_{REF}}{2^n}(d_{n-1} 2^{n-1}+d_{n-2} 2^{n-1}+...+d_{1} 2^{1}+d_{0} 2^{0})
$$&lt;/p&gt;
&lt;p&gt;$$
v_O=-\frac{V_{REF}}{2^n}D_n
$$&lt;/p&gt;
&lt;p&gt;所以，输出的模拟电压正比于输入的数字量 $D_n$，其变化范围是 0 至 $-\frac{2^n-1}{2^n}V_{REF}$。另外一方面，如果需要得到正输出电压，则应该提供负的 $V_{REF}$。&lt;/p&gt;
&lt;p&gt;权电阻网络型 DAC 的优点是结构简单，但缺点是个电阻阻值相差较大，在现实中有可能造成比较大的精度差。为了改善，可以采用双极权电阻网络，此处不展开说明，但仍无法从根本上解决。&lt;/p&gt;
&lt;h3&gt;倒 T 形电阻网络&lt;/h3&gt;
&lt;p&gt;为了改善权电阻网络 DAC 阻值相差太大的问题，可以采用倒 T 形电阻网络 DAC，它只用了 R 和 2R 两种阻值的电阻（所以也称为 R2R DAC），对于控制精度有很大的帮助：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220724165753.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当求和放大器反馈电阻阻值为 R 时，输出电压：&lt;/p&gt;
&lt;p&gt;$$
v_O=-Ri_{\sum}=-\frac{V_{REF}}{2^n}D_n
$$&lt;/p&gt;
&lt;p&gt;可见，倒 T 形电阻网络与权电阻网络 DAC 的计算公式是相同的。&lt;/p&gt;
&lt;h3&gt;权电流型&lt;/h3&gt;
&lt;p&gt;在分析权电阻网络与倒 T 形电阻网络时，会将模拟开关当理想器件看待，但实际中它们存在一定的导通电阻和压降，开关之间的一致性又有差别，所以会产生转换误差而影响精度。解决方法是采用权电流型 DAC，它有一组恒流源，每个恒流源电流大小依次为前一个的一半，与输入二进制对应位的权成正比。采用恒流源使得每个支路电流大小不再受开关导通电阻和压降的影响。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220724171436.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当输入数字量的某位为 1 时，对应的开关将恒流源接至运算放大器的输入端；当输入代码为 0 时，对应的开
关接地，故输出电压为：&lt;/p&gt;
&lt;p&gt;$$
v_O=\frac{R_F V_{REF}}{2^n R_R}D_n
$$&lt;/p&gt;
&lt;h2&gt;DAC 主要参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分辨率&lt;/strong&gt;：最小输出电压（也就是输入数字量为 1 时的电压）与最大输出电压（也就是输入数字量为最大，每一位都是 1 时的电压）之比。一般通过输入数字量的位数来表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转换量程&lt;/strong&gt;：DAC 能输出的最大电压，一般的关于参考电压或其倍数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建立时间&lt;/strong&gt;：从输入数字量到输出模拟量之间的延时时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转换精度&lt;/strong&gt;：与 ADC 的转换精度类似。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picture.iczhiku.com/resource/eetop/syIFpRpWgQqgOXnx.pdf&#34;&gt;《ADC/DAC 应用设计宝典》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/redlightASl/p/15542623.html&#34;&gt;数模转换与模数转换&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLwjK_iyK4LLCnW-df-_53d-6yYrGb9zZc&#34;&gt;ADC and DAC (Analog to Digital And Digital to Analog Converters)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/read/cv4873472/&#34;&gt;漫谈 DAC 原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《Analog Engineer’s Pocket Reference》&lt;/li&gt;
&lt;li&gt;《数字电子技术（第六版）_阎石》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/ADC%E4%B8%8EDAC%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/ADC%E4%B8%8EDAC%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>个人 PCB 设计规范</title>
      
      
      
      
      <description>&lt;h2&gt;PCB 布局规范&lt;/h2&gt;
&lt;h3&gt;分模块布局&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;按功能模块&lt;/strong&gt;：完成同一功能的电路（指由分立元件组成，实现特定功能的模块），应尽量靠近放置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;按电气性能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字电路区：&lt;strong&gt;即怕干扰、又产生干扰&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;模拟电路区：&lt;strong&gt;怕干扰&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;功率驱动区：&lt;strong&gt;产生干扰&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;布局原则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;较大的元器件优先排布&lt;/li&gt;
&lt;li&gt;元器件全部放置于顶层（焊接方便）&lt;/li&gt;
&lt;li&gt;时钟产生器 （晶振等） ：尽量靠近用到该时钟的器件&lt;/li&gt;
&lt;li&gt;在每个模块的电源输入端 &lt;strong&gt;增加去耦电容&lt;/strong&gt;：滤除电源上的干扰信号。注意尽量靠近取电模块。&lt;/li&gt;
&lt;li&gt;继电器线圈处加上放电二极管（如 1N4148 ）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PCB 布线规范&lt;/h2&gt;
&lt;h3&gt;布线原则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;线之间 &lt;strong&gt;避免平行&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;勿出现一端浮空（可能产生天线效应）&lt;/li&gt;
&lt;li&gt;走线总长度能短就短&lt;/li&gt;
&lt;li&gt;走线拐弯角度应大于 90°&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3W&lt;/strong&gt; 规则：当线中心间距不少于 3 倍线宽时，则可保持 70% 的电场不互相干扰&lt;/li&gt;
&lt;li&gt;环路最小规则，走线 &lt;strong&gt;尽量不要形成环路&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;关键信号处可预留测试点&lt;/li&gt;
&lt;li&gt;元件焊盘两边的引线宽度要一致（用泪滴功能）&lt;/li&gt;
&lt;li&gt;布线完成后开启 &lt;strong&gt;泪滴&lt;/strong&gt; 功能（增加美观度，增强 EMC）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不在元件焊盘上打过孔&lt;/strong&gt;（SMT 容易引起漏锡虚焊）&lt;/li&gt;
&lt;li&gt;单片机芯片下面尽量不走线 / 不铺铜&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;布线顺序&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;电源线&lt;/li&gt;
&lt;li&gt;一般走线&lt;/li&gt;
&lt;li&gt;地线（铺铜）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在为 PCB 布线时，我们一般先布电源线，在绝大多数情况下，电源线要求 &lt;strong&gt;短、粗、直、较少过孔&lt;/strong&gt; ，所以布线优先权最高。&lt;/p&gt;
&lt;p&gt;在完成一般信号线的布线之后，最终我们要铺铜。对于普通双层板，铺铜属性一般设置为 &lt;strong&gt;地&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;规则设置&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;走线宽度&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电源线：&lt;strong&gt;30~50&lt;/strong&gt; mil&lt;/li&gt;
&lt;li&gt;信号线：&lt;strong&gt;12&lt;/strong&gt; mil&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;过孔大小&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内径：&lt;strong&gt;0.45&lt;/strong&gt; mm&lt;/li&gt;
&lt;li&gt;外径：&lt;strong&gt;0.75&lt;/strong&gt; mm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;铺铜连接&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;用 Direct 的方式&lt;/p&gt;
&lt;p&gt;（有点解释不清，待有空补充说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;铺铜安全间距：&lt;strong&gt;10&lt;/strong&gt; mil&lt;/li&gt;
&lt;li&gt;属性：&lt;strong&gt;GND&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;铺铜选择：Pour Over All Same Net Objectc,&lt;/li&gt;
&lt;li&gt;去除死铜：Remove Dead Copper&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;字符大小&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最小线宽：&lt;strong&gt;6&lt;/strong&gt; mil&lt;/li&gt;
&lt;li&gt;最小字符高：&lt;strong&gt;32&lt;/strong&gt; mil&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小于以上值，印制在板子上的字符可能会不清晰。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PCB 线宽与电流的关系&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;|  线宽/铜箔厚度  | 70µm（2 oz） | 50µm（1.5 oz） | 35µm（1 oz） |
| :-------------: | :----------: | :------------: | :----------: |
| 2.50mm（98mil） |    6.00A     |     5.10A      |    4.50A     |
| 2.00mm（78mil） |    5.10A     |     4.30A      |    4.00A     |
| 1.50mm（59mil） |    4.20A     |     3.50A      |    3.20A     |
| 1.20mm（47mil） |    3.60A     |     3.00A      |    2.70A     |
| 1.00mm（40mil） |    3.20A     |     2.60A      |    2.30A     |
| 0.80mm（32mil） |    2.80A     |     2.40A      |    2.00A     |
| 0.60mm（24mil） |    2.30A     |     1.90A      |    1.60A     |
| 0.50mm（20mil） |    2.00A     |     1.70A      |    1.35A     |
| 0.40mm（16mil） |    1.70A     |     1.35A      |    1.10A     |
| 0.30mm（12mil） |    1.30A     |     1.10A      |    0.80A     |
| 0.20mm（8mil）  |    0.90A     |     0.70A      |    0.55A     |
| 0.15mm（6mil）  |    0.70A     |     0.50A      |    0.20A     |&lt;/p&gt;
&lt;p&gt;一般需多预留 15% 的余量。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sz-jlc.com/portal/vtechnology.html&#34;&gt;嘉立创 PCB 工艺加工能力范围说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzI4NDAwOTgzMw==&amp;amp;mid=2650625562&amp;amp;idx=1&amp;amp;sn=29d145ed112c23464ac74bfeeb212aa1&amp;amp;chksm=f388021cc4ff8b0a2e1701726340afb0b60738f8ae448e8f8d0c3b0dee0758a89fe954433011&amp;amp;scene=126&amp;amp;sessionid=1607139114&amp;amp;key=f9ff6c6605e545f8046d3325f95411b620e846faa9864c6589c1a6b69f1ce0d00f26f595bea2995ab23bf54727f1c9f219239f6d2c840605db0dac7f884190fcd2134daa54c87cbf6f249bfa9c29f8ddd39b20d50744335451d3acb3466ebcc44d8918dba7d35a22569e0b7a780088439cf35fe0ff5ea9bddbafef36c64bfd3f&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10+x64&amp;amp;version=6300002f&amp;amp;lang=zh_CN&amp;amp;exportkey=A1GQK2ccX%2BvsjA6n1%2BOfSNU%3D&amp;amp;pass_ticket=kq2QkQn3wCfkzXnTBMjx4zRHCHr2TH9lX0mMASdXW7ugPzIdfcJaNdCq2VwvOmMs&amp;amp;wx_header=0&#34;&gt;PCB 在走线时线宽为多大才合适？已经帮你整理好了！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%B8%AA%E4%BA%BAPCB%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%B8%AA%E4%BA%BAPCB%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid>
      
    </item>
    
    <item>
      <title>保险丝的选型</title>
      
      
      
      
      <description>&lt;h2&gt;通用选型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;耐压值（最大电压）：需大于电源的电压，并留合适的余量。&lt;/li&gt;
&lt;li&gt;额定电流：需大于正常使用时的工作电流（额定电流非熔断电流）。&lt;/li&gt;
&lt;li&gt;工作温度：留余量 25% 以上。&lt;/li&gt;
&lt;li&gt;电压降/冷电阻：一般越小越好（功率损耗小）&lt;/li&gt;
&lt;li&gt;熔断特性：保险丝最主要的电性能指标。表示当电流超额时，熔体温度逐渐上升，直至最后保险丝被烧断。根据熔断特性不同，可以把保险丝分为快速型和延时型。延时型常用在电路状态变化时有较大浪涌电流的感性或容性电路中，能承受开关机时浪涌脉冲的冲击；快速型常用在阻性电路中，保护一些对电流变动特别敏感的元器件。&lt;/li&gt;
&lt;li&gt;分断能力：表示在规定的电压下，保险丝能安全地切断的最大电流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PPTC 选型&lt;/h2&gt;
&lt;p&gt;自恢复保险丝（PPTC，Polymeric Positive Temperature Coefficient）正常工作时电阻很小（压降很小），当电路出现过流使其温度升高时，电阻急剧增大几个数量级，使电路中的电流减小到安全值以下，从而使后面的电路得到保护，过流消失后自动恢复为低阻，免除电流保险丝经常更换的麻烦。&lt;/p&gt;
&lt;p&gt;参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大电压 $V_{max}$（Rated Voltage）：额定电流下可承受的最大电压。&lt;/li&gt;
&lt;li&gt;最大电流 $I_{max}$（Maximum Current）：额定电压下可承受的最大电流。&lt;/li&gt;
&lt;li&gt;保持电流 $I_{hold}$（Hold Current）：不动作（不会使电阻值突变）的最大电流。&lt;/li&gt;
&lt;li&gt;触发电流 $I_{trip}$（Trip Current）：发生动作（使电阻值突然变大）的最小电流，一般为保持电流的两倍。&lt;/li&gt;
&lt;li&gt;动作功率 $P_d$（Typical power）：动作状态下的消耗功率。&lt;/li&gt;
&lt;li&gt;最大动作时间 $T_{trip}$（Max Time to Trip）：规定电流下的最大的动作时间。&lt;/li&gt;
&lt;li&gt;静态电阻 $R_{i_{min/max}}$（Resistance Tolerance）：焊接前初始阻值。&lt;/li&gt;
&lt;li&gt;焊接一小时后电阻 $R_{1_{max}}$：焊接 / 跳闸一小时后的最大阻值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tergy.com/297/933.html&#34;&gt;贴片自恢复保险丝的额定电压参数值所代表什么意思？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/uJp8fnafHpVfJFnVWkfAWg&#34;&gt;什么？！选保险丝还有技巧？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://semiware.com/pptc/pptc03.html&#34;&gt;自恢复保险丝 PPTC 的参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BF%9D%E9%99%A9%E4%B8%9D%E7%9A%84%E9%80%89%E5%9E%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BF%9D%E9%99%A9%E4%B8%9D%E7%9A%84%E9%80%89%E5%9E%8B/</guid>
      
    </item>
    
    <item>
      <title>共模信号与差模信号</title>
      
      
      
      
      <description>&lt;p&gt;差模信号又称串模信号，指的是两根线之间的信号差值；而共模信号又称对地信号，指的是两根线分别对地的信号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;差模信号：大小相等，方向相反的信号。&lt;/li&gt;
&lt;li&gt;共模信号：大小相等，方向相同的信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于两输入系统来说，共模是两输入端的算术平均值，差模是两输入端的差值。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211216134434.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于一对信号线 A、B，差模干扰相当于在 A 与 B 之间加上一个干扰电压，共模干扰相当于分别在 A 与地、B 与地之间加上一个干扰电压；像平常看到的用双绞线传输差分信号就是为了消除共模噪声，原理很简单，两线拧在一起，受到的共模干扰电压很接近，Ua - Ub 的值依然没什么变化。实际应用中，温度的变化各种环境噪声的影响都可以视作为共模干扰，但如果在传输过程中，两根线的对地噪声哀减的不一样大，使得两根线之间存在了电压差，这时共模噪声就转变成了差模噪声。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://murata.eetrend.com/article/2018-05/1001554.html&#34;&gt;共模与差模的理解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%85%B1%E6%A8%A1%E4%BF%A1%E5%8F%B7%E4%B8%8E%E5%B7%AE%E6%A8%A1%E4%BF%A1%E5%8F%B7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%85%B1%E6%A8%A1%E4%BF%A1%E5%8F%B7%E4%B8%8E%E5%B7%AE%E6%A8%A1%E4%BF%A1%E5%8F%B7/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 二极管</title>
      
      
      
      
      <description>&lt;p&gt;伏安特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导通后分电压值约为 0.7 V（LED 约为 1-2 V，电流 5-20 mA）。&lt;/li&gt;
&lt;li&gt;反向不导通，但如果达到反向击穿电压，那将导通（超过反向最大电压可能烧坏）。&lt;/li&gt;
&lt;li&gt;正向电压很小时不导通（0.5 V 以上时才导通）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;二极管的主要参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;最大整流电流 $I_F$&lt;/strong&gt;：表示长期运行允许的最大正向平均电流，超出可能因结温过高烧坏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最高反向工作电压 $U_R$&lt;/strong&gt;：允许施加的最大反向电压，超出可能击穿。（$U_R$ 通常为击穿电压的一半）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反向电流 $I_R$&lt;/strong&gt;：未击穿时的反向电流，越小导电性越好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最高工作频率 $f_M$&lt;/strong&gt;：上线截止频率。因结电容作用，超出可能不能很好体现的单向导电性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;二极管的分类&lt;/h2&gt;
&lt;p&gt;类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;整流管&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;普通二极管&lt;/strong&gt;：恢复速度相对慢，不适用于高频电路&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快恢复二极管&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;肖特基二极管&lt;/strong&gt;：应用于 &amp;lt;200V 的场景&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳压管&lt;/strong&gt;：持续击穿，应用于低功率场景&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TVS&lt;/strong&gt;：瞬间击穿，应用于高功率场景&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;整流二极管&lt;/h3&gt;
&lt;p&gt;用途：利用单向导通性，把交流电变成脉动直流电。&lt;/p&gt;
&lt;h3&gt;快恢复二极管（FRD）&lt;/h3&gt;
&lt;p&gt;快速恢复二极管的结构和功能与整流二极管相同。整流二极管用于 500 Hz 以下的低频应用，而 FRD 则用于从几千赫兹到 100 kHz 的高频开关。因此，FRD 具有反向恢复时间（trr）很短的特性，这对高速开关非常重要。一般整流二极管的 trr 为几微秒到几十微秒；而 FRD 的 trr 是几十毫微秒到几百毫微秒，约为整流二极管的 1/100。它应用于开关电源、逆变器、DC/DC 转化器等。&lt;/p&gt;
&lt;h3&gt;稳压（齐纳）二级管&lt;/h3&gt;
&lt;p&gt;定义：能稳定一定电压的二极管。&lt;/p&gt;
&lt;p&gt;稳压二极管利用了 PN 结的反向特性。持续击穿，并得到恒定的电压，应用于低功率场景。&lt;/p&gt;
&lt;p&gt;稳压条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作在反向击穿状态下&lt;/li&gt;
&lt;li&gt;反向电压大于稳压电压&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;稳压二级管的参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;稳定电压 $U_Z$&lt;/strong&gt;：表示在规定电流下的反向击穿电压，对于同一型号的稳压管，稳定电压是确定值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反向电流 $I_Z$&lt;/strong&gt;：工作在稳压态下的参考电流，电流低于此值时稳压效果变差，也称 ${I_Z}_{min}$。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额定功耗 $P_{ZM}$&lt;/strong&gt;：等于稳定电压 $U_Z$ 与最大稳定电流 $I_{ZM}$ 的乘积。超出可能因结温过高损坏。只要不超额定功率，电流越大，稳压效果越好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本稳压电路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210605133717.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;限流电阻的选择：&lt;/p&gt;
&lt;p&gt;在稳压电路中，需要串联一个限流电阻，保护稳压二极管（用于分掉输入电压和稳定电压之间的电压差值）。电阻两端的电压取输入电压和稳定电压之间的差值，电流取稳压二极管 ${I_Z}&lt;em&gt;{min}$ 与 ${I_Z}&lt;/em&gt;{max}$ 之间，加上负载路的总电流。&lt;/p&gt;
&lt;h3&gt;瞬态电压抑制器（TVS）&lt;/h3&gt;
&lt;p&gt;TVS 管是为了防止瞬态高能量冲击，保护精密元器件。TVS 管有单向与双向之分，单向 TVS 管的特性与稳压二极管相似，双向 TVS 管的特性相当于两个稳压二极管反向串联。&lt;/p&gt;
&lt;p&gt;TVS 并联在电路中，正常情况下电流不走 TVS 的支路，TVS 表现出二极管单向导通的特性：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210725114841.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当发生过压时，TVS 进入击穿，将电流分流到地，使后续电路的电压保持在二极管的钳位电压：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210725114952.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加在信号与电源线上，可防静电、交流浪涌或噪声。&lt;/li&gt;
&lt;li&gt;能释放超过 10000 V、60 A 以上的脉冲，持续 10 ms，可防止元器件损坏或总线间开关引起的干扰。&lt;/li&gt;
&lt;li&gt;放置在信号线和地之间，避免数据和控制总线受噪声干扰。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TVS 管的主要参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;反向截止电压 VRWM 与反向漏电流 IR&lt;/strong&gt;：反向截止电压 VRWM 表示 TVS 管不导通的最高电压，在这个电压下只有很小的反向漏电流 IR。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;击穿电压 VBR&lt;/strong&gt;：TVS 管通过规定的测试电流时的电压，这是表示 TVS 管导通的标志电压。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;脉冲峰值电流 IPP&lt;/strong&gt;：TVS 管允许通过的 10/1000μs 波的最大峰值电流（8/20 μs 波的峰值电流约为其 5 倍左右），超过这个电流值就可能造成永久性损坏。在同一个系列中，击穿电压越高的管子允许通过的峰值电流越小，一般是几安 - 几十安。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最大钳位电压 VC&lt;/strong&gt;：TVS 管流过脉冲峰值电流 IPP 时两端所呈现的电压。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;脉冲峰值功率 Pm&lt;/strong&gt;：$Pm=IPP*VC$。在给定的最大钳位电压下，功耗 PM 越大，其浪涌电流承受能力越大，在给定的功耗 PM 下，钳位电压越 低，其浪涌电流的承受能力越大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳态功率 P0&lt;/strong&gt;：TVS 管也可以作稳压二极管用，这时要使用稳态功率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;极间电容 Cj&lt;/strong&gt;：与压敏电阻一样，TVS 管的极间电容 Cj 也较大，且单向的比双向的大，功率越大的电容也越大，极间电容会影响 TVS 的响应时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TVS 管与稳压（齐纳）二极管的差异：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210725115837.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210725121636.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;TVS 管在短时间内吸收很高的过电压，保护后续电路；而稳压（齐纳）二极管将输入电压钳制为恒定电压，并将钳制的恒定电压提供给后续电路。&lt;/p&gt;
&lt;h3&gt;开关二极管&lt;/h3&gt;
&lt;p&gt;为了开关设计而定制的二极管，截至 / 导通切换时间比较短，防止反向电流烧坏精密元器件&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210605134740.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中的 1N4148 起保护作用，当右侧灌入负电压时，能导通接地，保护三端稳压器&lt;/p&gt;
&lt;h3&gt;肖特基二极管（SBD）&lt;/h3&gt;
&lt;p&gt;肖特基二极管是一种采用半导体和金属结合，而不是采用 PN 结的器件（trr 会随着温度的升高而变长）。由于其正向电压小，反向恢复时间短，所以适合于高速开关应用。&lt;/p&gt;
&lt;p&gt;肖特基二极管的伏安特性曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210725123204.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;正偏与反偏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正向偏置&lt;/strong&gt;：指 P 接高电位、N 接低电位，电流流动将顺着 PN 结方向，将显示出其单向导电的性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反向偏置&lt;/strong&gt;：相反，形成由 N 区流向 P 区的反向电流，通常可以认为反向偏置的 PN 结不导电，基本上处于截止状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;常用封装&lt;/h2&gt;
&lt;p&gt;|   封装名称   |     备注     |
| :----------: | :----------: |
| DO-214AC/SMA | 通流能力 2 A |
| DO-214AA/SMB | 通流能力 4 A |
| DO-214AB/SMC | 通流能力 5 A |
|  DPAK/D2PAK  |              |&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/5H46gHF3RjfWq_1rkswTjw&#34;&gt;二极管选型规范（仅供参考）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://toshiba-semicon-storage.com/cn/semiconductor/knowledge/e-learning/discrete.html&#34;&gt;分立半导体器件 - 第 Ⅱ 章：二极管&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxNDAyMzc0Mg==&amp;amp;mid=2683480567&amp;amp;idx=1&amp;amp;sn=15304136c6e9a478f2096982c5048155&amp;amp;chksm=819fa4a6b6e82db053ec4a5a26c05e7b160c4f2b13a300e1d6aadd5b815343d017b0d34bbe8c&amp;amp;scene=132#wechat_redirect&#34;&gt;TVS 管性能及选型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haipeng.me/2021/01/27/diode-guide/&#34;&gt;电子工程师手记：二极管选择指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E4%BA%8C%E6%9E%81%E7%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E4%BA%8C%E6%9E%81%E7%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 光电耦合器</title>
      
      
      
      
      <description>&lt;p&gt;光耦是将发光二极管（LED）和光电探测器集成于一个封装中的器件。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210725130317.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;光耦的作用&lt;/h2&gt;
&lt;p&gt;在光耦中，一次侧（LED 侧）和二次侧（受光器件侧）是电绝缘的。因此，即使一次侧和二次侧的电位（甚至 GND 电位）不同，也可以将一次侧电信号传输到次级侧。光耦将两端电路隔离开来。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://toshiba-semicon-storage.com/cn/semiconductor/knowledge/e-learning/discrete.html#Chapter5&#34;&gt;分立半导体器件 - 第 Ⅴ 章：光半导体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eefocus.com/e/483370&#34;&gt;光耦的参数有哪些 光耦参数如何理解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;光耦的参数&lt;/h2&gt;
&lt;p&gt;LED 侧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正向工作电压 Vf（Forward Voltage）：Vf 是指在给定的工作电流下，LED 本身的压降。常见的小功率 LED 通常以 If=20mA 来测试正向工作电压，当然不同的 LED，测试条件和测试结果也会不一样。&lt;/li&gt;
&lt;li&gt;反向电压 Vr（Reverse Voltage）：指 LED 所能承受的最大反向电压，超过此反向电压，可能会损坏 LED。在使用交流脉冲驱动 LED 时，要特别注意不要超过反向电压。&lt;/li&gt;
&lt;li&gt;反向电流 Ir（Reverse Current）：通常指在最大反向电压情况下，流过 LED 的反向电流。&lt;/li&gt;
&lt;li&gt;允许功耗 Pd（Maximum Power Dissipation）：LED 所能承受的最大功耗值。超过此功耗，可能会损坏 LED。&lt;/li&gt;
&lt;li&gt;中心波长 λp（Peak Wave Length）：是指 LED 所发出光的中心波长值。波长直接决定光的颜色，对于双色或多色 LED，会有几个不同的中心波长值。&lt;/li&gt;
&lt;li&gt;正向工作电流 If（Forward Current）：If 是指 LED 正常发光时所流过的正向电流值。不同的 LED，其允许流过的最大电流也会不一样。&lt;/li&gt;
&lt;li&gt;正向脉冲工作电流 Ifp（Peak Forward Current）：Ifp 是指流过 LED 的正向脉冲电流值。为保证寿命，通常会采用脉冲形式来驱动 LED，通常 LED 规格书中给中的 Ifp 是以 0.1ms 脉冲宽度，占空比为 1/10 的脉冲电流来计算的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;光敏三极管侧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集电极电流 Ic（Collector Current），光敏三极管集电极所流过的电流，通常表示其最大值。&lt;/li&gt;
&lt;li&gt;集电极-发射极电压 Vceo（C-E Voltage），集电极-发射极所能承受的电压。&lt;/li&gt;
&lt;li&gt;发射极-集电极电压 Veco（E-C Voltage），发射极-集电极所能承受的电压。&lt;/li&gt;
&lt;li&gt;反向截止电流 Iceo&lt;/li&gt;
&lt;li&gt;C-E 饱和电压 Vce(sat)（C-E Saturation Voltage）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传输特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电流传输比 CTR（Current Transfer Radio）：通常用直流电流传输比来表示。当输出电压保持恒定时，它等于直流输出电流 IC 与直流输入电流 IF 的百分比。&lt;/li&gt;
&lt;li&gt;上升时间 Tr （Rise Time）&amp;amp; 下降时间 Tf（Fall Time）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;隔离特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;入出间隔离电压 Vio（Isolation Voltage），光耦合器输入端和输出端之间绝缘耐压值。&lt;/li&gt;
&lt;li&gt;入出间隔离电容 Cio（Isolation Capacitance），光耦合器件输入端和输出端之间的电容值&lt;/li&gt;
&lt;li&gt;入出间隔离电阻 Rio：（Isolation Resistance），半导体光耦合器输入端和输出端之间的绝缘电阻值。&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E5%85%89%E7%94%B5%E8%80%A6%E5%90%88%E5%99%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E5%85%89%E7%94%B5%E8%80%A6%E5%90%88%E5%99%A8/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 场效应管</title>
      
      
      
      
      <description>&lt;p&gt;场效应管是一种 &lt;strong&gt;电压控电流&lt;/strong&gt; 的器件。其中，我们常用的 MOS 管是由是金属（metal）、氧化物（oxide）、半导体（semiconductor）组成的场效应晶体管。下文着重介绍以增强型 N 管。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211209085909.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210602163957.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;场效应管的引脚与三极管相对应：栅极 / 门极（G）对应基极（b），漏极（D）对应集电极（c），源极（S）对应发射级（e）。箭头指电子运动的方向。&lt;/p&gt;
&lt;p&gt;所有场效应管在正常工作时，门级都不会有电流。所以，漏极电流一定等于源极电流。其核心是用 GS 两端电压来控制漏极电流。所以也称为压控型元器件。&lt;/p&gt;
&lt;h2&gt;MOS 管的引脚定义&lt;/h2&gt;
&lt;p&gt;MOS 管有三个引脚（G，S，D）其定义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;G：gate / 栅极&lt;/li&gt;
&lt;li&gt;S：source / 源极&lt;/li&gt;
&lt;li&gt;D：drain / 漏极&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;N 沟道的电源一般接在 D，输出接 S；P 沟道的电源一般接在 S，输出接 D，增强型 / 耗尽型接法基本一样。&lt;/p&gt;
&lt;p&gt;MOS 管的 source 和 drain 是可以对调的，他们都是在 P 型 backgate 中形成的 N 型区，在大多数情况下，这个两个区是一样的，即使对调也不会影响性能。&lt;/p&gt;
&lt;h2&gt;寄生二极管&lt;/h2&gt;
&lt;p&gt;由于生产工艺，MOS 管会有寄生二极管，或称体二极管。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211209090114.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当满足 MOS 管的导通条件时，MOS 管的 D 极和 S 极会导通，这个时候体二极管是截止状态。因为 MOS 管导通内阻很小，不足以使寄生二极管导通。&lt;/p&gt;
&lt;h2&gt;MOS 管的导通条件&lt;/h2&gt;
&lt;p&gt;MOS 管是压控型，由 G 和 S 极之间压差决定是否导通。&lt;/p&gt;
&lt;p&gt;对 N-MOS 来说，当 $V_g-V_s&amp;gt;V_{gs(th)}$ 即可导通。&lt;/p&gt;
&lt;p&gt;对 P-MOS 来说，当 $V_s-V_g&amp;gt;V_{gs(th)}$ 即可导通。&lt;/p&gt;
&lt;h2&gt;增强型 MOS 管的特性&lt;/h2&gt;
&lt;p&gt;增强型 MOS 管的结构，是在 P 型硅衬底上，制作两个 N 型沟槽，用铝从其引出两个电极分别作为源极 S 和漏极 D（此时 D/S 可互换），然后在半导体的表面覆盖一层很薄的 SiO2 绝缘层，在漏源极间的绝缘层上再装上一个铝电极，作为栅极 G，在衬底上也引出一个电极 B。因为出厂时大多把衬底已经和源极连在一起，所以此时 D/S 不可互换&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210604120853.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图是增强型 MOSFET 的伏安特性曲线，左图为转移特性，右图为输出特性，他们共用纵轴。&lt;/p&gt;
&lt;p&gt;伏安特性的关键要素：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;开启电压 $U_{GS_(th)}$&lt;/strong&gt;：从图中可以看出 $U_{GS_(th)} = 1 V$。当 $U_{GS} &amp;lt; U_{GS_(th)}$ 时，无论 $U_{DS}$ 多大，电流 $i_D$ 始终为 0。当 $U_{GS} &amp;gt; U_{GS_(th)}$ 时，MOSFET 才算开启。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恒流区方程&lt;/strong&gt;：$i_D = K(u_{GS}-U_{GS_(th))^2$，其中，K 影响转移特性曲线的增长速率（单位是 $A/V^2$）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可变电阻区和恒流区的分界线&lt;/strong&gt;：随着 $U_{GS}$ 增加，分界点电压 $U_{DS_{dv}}$ 也在增加，且满足 $U_{DS_{dv}}=U_{GS} - U_{GS_(th)}$&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;MOSFET 工作状态&lt;/h2&gt;
&lt;p&gt;MOSFET 不同于三极管，因为某些型号封装内有并联二极管，所以其 D 和 S 极是不能反接的，且 N 管必须由 D 流向 S，P 管必须由 S 流向 D。可以用下表判断工作状态：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210602210930.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210604120745.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;几个工作区:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;截止区&lt;/strong&gt;：当 $U_{GS}$ 小于开启电压 $U_{GS_(th)}$ 时，MOS 不导通。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可变电阻区&lt;/strong&gt;：$U_{DS}$ 很小，$I_D$ 随 $U_{DS}$ 增大而增大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恒流区&lt;/strong&gt;：$U_{DS}$ 变化，$I_D$ 变化很小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;击穿区&lt;/strong&gt;：$U_{DS}$ 达到一定值时，MOS 被击穿，$I_D$ 突然增大，如果没有限流电阻，将被烧坏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过损耗区&lt;/strong&gt;：功率较大，需要加强散热，注意最大功率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;MOSFET 主要参数&lt;/h2&gt;
&lt;p&gt;直流参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开启电压 $U_{GS_(th)}$&lt;/strong&gt;：增强型 MOS 的参数。指当 $U_{DS}$ 不变时，使得 $i_D &amp;gt; 0$ 所需最小的 $\left| u_{GS} \right|$ 的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;夹断电压 $U_{GS_(off)}$&lt;/strong&gt;：结型场效应管和耗尽型 MOS 的参数，与 $U_{GS_(th)}$ 相似，代表当 $U_{DS}$ 不变时，$i_D$ 为规定的微小电流时的 $u_{GS}$。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直流输入电阻 $U_{GS_(DC)}$&lt;/strong&gt;：栅 - 源电压与栅极电流之比，一般 MOS 的 $U_{GS_(DC)} &amp;gt; 10^9 \Omega$。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选型关键参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;击穿电压 V_BRDSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;随温度变化，应留足余量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导通电阻 R_DS(on)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;导通电阻正温度系数，适合并联工作&lt;/li&gt;
&lt;li&gt;导通电阻越小，导通损耗越小&lt;/li&gt;
&lt;li&gt;导通电阻越小，Qg 就越大，相应的开关速度变慢&lt;/li&gt;
&lt;li&gt;带来的开关损耗越大，高频工作下需要折中考虑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最大结温&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;永远不能超过最大结温&lt;/li&gt;
&lt;li&gt;只能测量壳温后通过热阻计算而得&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态电容和 Qg&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;不是固定值，取决于工作条件&lt;/li&gt;
&lt;li&gt;作为开关时希望快速打开，需要一个驱动芯片提供瞬间大电流&lt;/li&gt;
&lt;li&gt;作为缓启动 MOS，需要慢慢打开，有效抑制浪涌电流&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;N-MOS：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;门极需要一个比源极更高的电压驱动&lt;/li&gt;
&lt;li&gt;更好的性能&lt;/li&gt;
&lt;li&gt;更多的选择&lt;/li&gt;
&lt;li&gt;更低的成本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P-MOS：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;门极需要一个比源极低的电压驱动&lt;/li&gt;
&lt;li&gt;不需要更高的电压驱动，驱动简单&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;三极管与场效应管的对比&lt;/h2&gt;
&lt;p&gt;|          |   三极管   |  场效应管  |
| :------: | :--------: | :--------: |
|   特性   | 电流控电流 | 电压控电流 |
| 输入阻抗 |     低     |     高     |
|   噪声   |     大     |     小     |
| 反应速度 |     快     |     慢     |&lt;/p&gt;
&lt;h2&gt;反馈&lt;/h2&gt;
&lt;p&gt;定义：将放大电路输出端信号（电压 / 电流）一部分或全部引回到输入端，与输入信号进行叠加。&lt;/p&gt;
&lt;p&gt;负反馈：返回的信号对输入信号进行削弱。&lt;br&gt;
正反馈：返回的信号对输入信号进行增强。&lt;/p&gt;
&lt;h2&gt;MOS 管常见的封装&lt;/h2&gt;
&lt;h3&gt;SOT 封装&lt;/h3&gt;
&lt;p&gt;SOT（Small Out-Line Transistor，小外形晶体管封装）封装一般用于小功率 MOS 管。&lt;/p&gt;
&lt;p&gt;SOT-23 封装：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210331162749.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;SOT-89 封装：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210331162842.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;TO 封装&lt;/h3&gt;
&lt;p&gt;TO（Transistor Out-line，晶体管外形）是比较早期的封装规格，原来多为直插封装（例如 TO-92，TO-220，TO-252），后来也慢慢进化到标贴式封装。TO252 和 TO263 是其典型，其中 TO-252 又称之为 D-PAK，TO-263 又称之为 D2PAK。&lt;/p&gt;
&lt;p&gt;D-PAK 封装的 MOS 管有 3 个电极，其中漏极（D）的引脚被剪断不用，而是用背面的散热板作为漏极，能输出更大电流的同时也能更好地散热。&lt;/p&gt;
&lt;p&gt;TO-252 封装：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210331163718.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;TO-263 封装：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210331163731.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;SOP 封装&lt;/h3&gt;
&lt;p&gt;SOP（Small Out-Line Package，小外形封装），也叫 SO、SOL 或 DFP。通常有 SOP-8、SOP-16、SOP-20、SOP-28 等等（数字表示引脚数）。MOS 的 SOP 封装多数采用 SOP-8 规格。&lt;/p&gt;
&lt;p&gt;SOP-8 封装：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210331165427.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.yushin88.com/news/1670.html&#34;&gt;贴片 mos 管的封装知识和排列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picture.iczhiku.com/weixin/message1604984792157.html&#34;&gt;MOS 管的知识，看这一篇就可以了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E5%9C%BA%E6%95%88%E5%BA%94%E7%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E5%9C%BA%E6%95%88%E5%BA%94%E7%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 晶体三级管</title>
      
      
      
      
      <description>&lt;p&gt;晶体三极管是一种 &lt;strong&gt;电流控电流&lt;/strong&gt; 的元器件。&lt;/p&gt;
&lt;h2&gt;区分极性&lt;/h2&gt;
&lt;p&gt;除基极外，带箭头是发射极，不带则是集电极。箭头朝外是 NPN，指向里面是 PNP.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210519231240.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;不同封装引脚辨认&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210519231429.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;基本电流关系&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210519231648.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;三极管电流方向依托于发射级电流方向。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NPN：发射级流出，所以基极和集电极都是流入。&lt;/li&gt;
&lt;li&gt;PNP：发射级流入，所以基极和集电极都是流出。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;规律：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;满足基尔霍夫电流定律 $i_B + i_C = i_E$&lt;/li&gt;
&lt;li&gt;处于放大状态下，集电极电流只受控于基极电流（$i_C = \beta i_B$），与集电极发射极间的电压无关。&lt;/li&gt;
&lt;li&gt;基极与发射极导通时，分压值 $U_{BE}$ 约为 0.7V&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以三极管就是一个受控电流源，由小电流 $i_B$ 去控大电流 $i_C$，取决于晶体管恒定的放大倍数 $\beta$。&lt;/p&gt;
&lt;p&gt;所以，$i_E=(1+\beta)i_B = \frac{1+\beta}{\beta}·i_C$&lt;/p&gt;
&lt;h2&gt;输出伏安特性&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210601095910.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，三极管的输出伏安特性分以下几个区域：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;放大区&lt;/strong&gt;：在此区域内，晶体管的 $i_C$ 几乎不随 $u_{CE}$ 变化，近似满足 $i_C = \beta i_B$。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;饱和区&lt;/strong&gt;：在此区域内，晶体管的 $i_C$ 随着 $u_{CE}$ 增大而增大。一般认为当 $u_{CE}$ 小于饱和压降 $U_{CES}$（一般为 0.3 V）时，晶体管工作在饱和区。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;截止区&lt;/strong&gt;：即 $I_B = 0$ 的那根曲线。但此时 $i_C$ 并不为 0，因为存在与 $u_{CE}$ 相关的漏电流。截止区代表晶体管处于几乎没有任何电流进出的状态，近似于完全关闭。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果我们想用数学公式描述伏安特性，那么需要将曲线简化一下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210601100847.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;简化后，可以这么认为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;放大区&lt;/strong&gt;：满足 $i_C = \beta i_B$，与 $u_{CE}$ 无关。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;饱和区&lt;/strong&gt;：$i_C$ 随着 $u_{CE}$ 增大而增大，近似为线性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$U_{CES}$ 垂直线&lt;/strong&gt;：饱和区与放大区的分界线。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;阻容耦合放大电路&lt;/h2&gt;
&lt;h2&gt;晶体管的工作状态&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;截止状态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;指基极未产生明显电流（$I_{BQ}$ 非常小导致 $I_{CQ}$ 也很小），集电极与发射极之间相当于开路。&lt;/li&gt;
&lt;li&gt;$I_{BQ} = 0, I_{CQ} = 0, I_{EQ} = I_{BQ}+I_{CQ}=0$。发射结零偏 / 反偏、集电结反偏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;放大状态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;指晶体管处于 $I_{BQ}$ 合适，且满足 $I_{CQ} = \beta I_{BQ},I_{EQ} = (1+ \beta)I_{BQ}, I_{BQ} = \frac{V_{CC}-U_{BE}}{R_B}$&lt;/li&gt;
&lt;li&gt;发射结正偏、集电结反偏。&lt;/li&gt;
&lt;li&gt;这是模电最常用的状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;饱和状态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;$I_{CQ} &amp;lt; \beta I_{BQ}$，但还是随 $U_{CEQ}$ 变化。$I_{BQ}$ 和 $I_{CQ}$ 都很大，$I_{CQ}$ 已经不完全受 $I_{BQ}$ 控制，且 $U_{CEQ}$ 所占的电压很小。&lt;/li&gt;
&lt;li&gt;只要 $U_{CEQ} &amp;lt; U_{CES}$，就进入饱和状态。此时，再增加 $I_{BQ}$，$I_{CQ}$ 也几乎不再增加。&lt;/li&gt;
&lt;li&gt;发射结正偏、集电结正偏。&lt;/li&gt;
&lt;li&gt;在模电中应该避免进入饱和状态，而在数电中则期望进入饱和或截至状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;倒置状态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;集电极和发射极接反了。虽然也不是不能用，但是会造成 $\beta$ 下降严重。&lt;/li&gt;
&lt;li&gt;饱和状态就好比水龙头打开了，但水箱里没水，此时就是有多少水来多少水。&lt;/li&gt;
&lt;li&gt;发射结反偏，集电结正偏。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;判断工作状态有三种方法，分别是估算法、函数求解法、图解法。估算法的核心是假设 $U_{BEQ}$ 约等于 0.7 V，但有误差（电压越大误差越小）；函数求解法必须知道输入、输出伏安特性的数学表达式，通过方程求解，一般不会用到；图解法的核心是用伏安特性图和另一直线的交点，求解静态工作点的位置，然后目测结果。&lt;/p&gt;
&lt;h2&gt;三极管的主要参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电流放大系数 $\beta$&lt;/strong&gt;：一般为 10-100 倍，但在应用中取 30-80 倍为宜（太小放大不明显，太大工作不稳定）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集电极最大允许电流 $I_{CM}$&lt;/strong&gt;：超过可能导致烧坏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集电极最大允许功耗 $P_{CM}$&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集电极发射极间反向击穿电压 $V_{CEO}$&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;判断三极管的工作状态&lt;/h2&gt;
&lt;h2&gt;估算法&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210601113429.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中的 &lt;code&gt;估算静态工作点&lt;/code&gt;，即用简单的方法大致估算出晶体管电路的静态（各支路电流、各节点电位），核心就是假设 $U_{BEQ}$ 约等于 0.7 V（一般要算出 $I_{CQ}$ 和 $U_{CEQ}$），具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据 $U_{BEQ} = 0.7 V$，算出 $I_{BQ}$&lt;/li&gt;
&lt;li&gt;假设处于放大状态，即 $I_{CQ} = \beta I_{BQ}$，求解出 $U_{CEQ}$&lt;/li&gt;
&lt;li&gt;此时如果 $U_{CEQ} &amp;gt;= 0.3 V$，则假设成立，晶体管处于放大状态，$I_{CQ}$ 与 $U_{CEQ}$ 为所求。&lt;/li&gt;
&lt;li&gt;如果 $U_{CEQ} &amp;lt; 0.3 V$，则假设不成立，晶体管处于饱和状态。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;图解法&lt;/h2&gt;
&lt;p&gt;图解法的核心，是用伏安特性图和另一直线的交点，求解静态工作点的位置，然后目测结果。&lt;/p&gt;
&lt;h2&gt;基本放大电路&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210605162906.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，各部分的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$C_1$/$C_2$：隔直通交。排除 $U_{CC}$ 的影响。取值几微法到几十微法。&lt;/li&gt;
&lt;li&gt;$U_{CC}$：为电路功能；提供合适的静态工作点。&lt;/li&gt;
&lt;li&gt;$R_B$：提供合适的 $I_B$，取值一般为几十欧到几百千欧。&lt;/li&gt;
&lt;li&gt;$R_C$：取值几千欧到几十千欧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总基极电压 $U_{BE} = U_{BEQ}+u_i$&lt;/li&gt;
&lt;li&gt;总基极电流 $i_B=I_{BQ}+i_b$&lt;/li&gt;
&lt;li&gt;总集电极电流 $i_C=I_{CQ}+i_c$&lt;/li&gt;
&lt;li&gt;总的 $u_CE=V_{CC}-{i_C}{R_C}=V_{CC}-(I_{CQ}+i_c)R=U_{CEQ}+({-i_C}{R_C})$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此电路的不足：虽结构简单，但静态工作点不稳定，受各元器件影响大。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E6%99%B6%E4%BD%93%E4%B8%89%E7%BA%A7%E7%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E6%99%B6%E4%BD%93%E4%B8%89%E7%BA%A7%E7%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 电容</title>
      
      
      
      
      <description>&lt;h2&gt;单位换算&lt;/h2&gt;
&lt;p&gt;$$1F=1\cdot10^3mF=1\cdot10^6\mu F=1\cdot10^9nF=1\cdot10^{12}pF$$&lt;/p&gt;
&lt;h2&gt;电容的选型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;耐压值&lt;/strong&gt;：降额使用，3.3V 选 10V，5V 选 10V，12V 选 25V，24V 选 50V，48V 选 100V&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;电容的材质分类&lt;/h2&gt;
&lt;p&gt;|              |                   铝电解电容                    |                                           钽电容                                           |                              陶瓷电容                              |
| :----------: | :---------------------------------------------: | :----------------------------------------------------------------------------------------: | :----------------------------------------------------------------: |
|    电容量    |                    0.1uF-3F                     |                                        0.1uF-1000uF                                        |                            0.5pF-100uF                             |
|     极性     |                       有                        |                                             有                                             |                                 无                                 |
|     耐压     |                     5V-500V                     |                                           2V-50V                                           |                              2V-1000V                              |
|     ESR      |        几十毫欧 -2.5 欧姆 （100KHZ/25℃）        |                              几十毫欧-几百毫欧（100KHZ/25℃）                               |                   几毫欧-几百毫欧（100KHZ/25℃）                    |
|     ESL      |                  不超过 100nH                   |                                          2nH 左右                                          |                               1-2nH                                |
| 工作频率范围 |              低频滤波，小于 600KHz              |                                中低频滤波，几百 KHZ-几 MHz                                 |                      高频滤波，几 MHZ-几 GHz                       |
|    薄弱点    |   窄温度范围，电解液会挥发，纹波电流导致发热    |                                必须降额使用，否则失效会爆炸                                | 焊接温度冲击容易导致失效，抗弯曲能力较差，不同材料温度特性差异巨大 |
|     建议     | 用于储能，低于 75℃ 环境，不建议用于高频开关电源 | 耐压按２倍选择；15V 以上直流电压滤波不建议使用，特别是电源变化较快的场合，浪涌冲击失效显著 |                 布线不要放在应力区，避开高温区域。                 |&lt;/p&gt;
&lt;h2&gt;电容的用途&lt;/h2&gt;
&lt;h3&gt;滤波&lt;/h3&gt;
&lt;p&gt;滤除杂波。大电容滤低频，小电容滤高频。&lt;/p&gt;
&lt;h3&gt;去耦 / 旁路&lt;/h3&gt;
&lt;p&gt;简单地说，旁路靠近电源，去耦靠近芯片。&lt;/p&gt;
&lt;p&gt;去耦 / 旁路电容的作用是将系统中的高频噪声旁路到 GND，一般是在电源引脚与 GND 间并联小容值电容（典型为 0.1uF），用来滤除高频噪声，使电压稳定干净。&lt;/p&gt;
&lt;p&gt;去耦与旁路电容的区别的，去耦电容是用于滤除输出信号的干扰（例如稳压器的输出引脚），而旁路电容是用于滤除输入信号的干扰（例如单片机的电源引脚）。去耦电容一般比较大（10uF 以上），而旁路电容一般根据谐振频率选定（0.1/0.01uF）。&lt;/p&gt;
&lt;h3&gt;调谐&lt;/h3&gt;
&lt;p&gt;调谐电容用于调节振荡电路的频率，使其与另一个正在发生振荡的电路谐振。&lt;/p&gt;
&lt;h3&gt;耦合&lt;/h3&gt;
&lt;p&gt;耦合电容的作用是阻直通交，电容与其后面的负载形成滤波器，滤除了低频信号，保留了高频信号，形成一个高通滤波器。&lt;/p&gt;
&lt;p&gt;耦合电容用于连接两个电路，只允许交流信号通过给电容充放电，传输到下一级电路。&lt;/p&gt;
&lt;h3&gt;储能&lt;/h3&gt;
&lt;p&gt;储能电容用于收集电荷，储能并使用。&lt;/p&gt;
&lt;h2&gt;电容选用注意事项&lt;/h2&gt;
&lt;p&gt;注意耐压值，有极性的电容不可反接。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《硬件十万个为什么-无源器件篇》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/ima_xu/article/details/85008406&#34;&gt;360° 详解去耦电容，真正的理解及在真正工程中的使用！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HUWal1ooXUn9PYKf89oGSQ&#34;&gt;电源大师课连载（2）| 你不知道的电阻、电容小事儿&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E5%AE%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E5%AE%B9/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 电感与磁珠</title>
      
      
      
      
      <description>&lt;h2&gt;电感&lt;/h2&gt;
&lt;h3&gt;电感的选型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;体积大小&lt;/li&gt;
&lt;li&gt;电感值所在工作频率&lt;/li&gt;
&lt;li&gt;开关频率下的电感值为实际需要的电感值&lt;/li&gt;
&lt;li&gt;线圈的直流阻抗（DCR）越小越好&lt;/li&gt;
&lt;li&gt;工作电流应降额至额定饱和电流的 0.7 倍以下，额定 rms 电流；&lt;/li&gt;
&lt;li&gt;交流阻抗（ESR）越小越好；&lt;/li&gt;
&lt;li&gt;Q 因子越大越好；&lt;/li&gt;
&lt;li&gt;屏蔽类型：屏蔽式或非屏蔽式，优先选择屏蔽式。&lt;/li&gt;
&lt;li&gt;工作频率和绕组电压不可降额；&lt;/li&gt;
&lt;li&gt;品牌：贴片电感优选 TDK、MURATA（村田）、三礼、SUMIDA（胜
  美达）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;电感的关键参数&lt;/h2&gt;
&lt;h4&gt;感值 L&lt;/h4&gt;
&lt;p&gt;一般误差有 10% 或 20%（测试条件是 1MHz 频率）。&lt;/p&gt;
&lt;p&gt;感值大小区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小感值：低 DCR，高饱和电流，更好的动态，更大的纹波电流。&lt;/li&gt;
&lt;li&gt;大感值：小纹波电流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;直流电阻 DCR&lt;/h4&gt;
&lt;p&gt;可以理解为寄生参数，和电感的封装大小以及感值有很大关系，选型时最好选择较小 DCR 的电感。&lt;/p&gt;
&lt;p&gt;感值、尺寸与 DCR 的关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电感感值相同，尺寸越小，DCR 越大。&lt;/li&gt;
&lt;li&gt;电感尺寸相同，感值越大，DCR 越大。&lt;/li&gt;
&lt;li&gt;电感感值相同，有磁屏蔽的电感，DCR 小于没有磁屏蔽的电感。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;自谐振频率 SRF&lt;/h4&gt;
&lt;p&gt;因为电感寄生电容的存在，会发生 LC 振荡，和电容一样，只有在特定的频率下，才能发挥电感的特性。&lt;br&gt;
按照经验值，SRF 一般是信号频率的 10 倍，此时的电感特性发挥的比较好。&lt;/p&gt;
&lt;h4&gt;电感饱和电流 Isat&lt;/h4&gt;
&lt;p&gt;电感感值下降 30% 时所容许通过的直流电流。&lt;/p&gt;
&lt;h4&gt;电感温升电流 Irms&lt;/h4&gt;
&lt;p&gt;在 20℃ 环境下，电感温度上升 40℃ 所容许通过的直流电流。&lt;/p&gt;
&lt;p&gt;一般取 Isat 和 Irms 中较小的一个值作为电感的额定电流，且此额定电流应是电路中最大输出电流的 1.3 倍，留有一定的余量，降额使用。&lt;/p&gt;
&lt;h3&gt;磁屏蔽特性&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210723134135.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般情况下，屏蔽特性：工字型 ＜ 半屏蔽型 ＜ 一体成型。&lt;/p&gt;
&lt;h2&gt;🚧磁珠&lt;/h2&gt;
&lt;p&gt;磁珠是一种电感型 EMI 静噪滤波器，实物和电感很像，其等效模型可以简化为一个电感和一个电阻串联。磁珠的单位是欧姆，根据型号的不同，可以抑制几 MHz-GHz 的噪声，经常被用在信号线和电源线上（串联使用）。&lt;/p&gt;
&lt;p&gt;磁珠的单位是欧姆（Ω），电感单位是亨（H）。磁珠由氧磁体组成，电感由磁芯和线圈组成，磁珠把交流信号转化为热能，电感把交流存储起来，缓慢的释放出去，所以说电感是储能，而磁珠是能量转换（消耗）器件。&lt;/p&gt;
&lt;p&gt;磁珠主要解决辐射干扰问题，信号线上多用磁珠，某一些高频电路如 RF、振荡电路、DDR SDRAM 等都需要在电源输入部分加磁珠；电感主要解决传导干扰问题，高频电感主要用于中低频滤波电路、RF 匹配等，功率电感主要用于 DC-DC 电路中。&lt;/p&gt;
&lt;h3&gt;磁珠的主要参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阻抗 Z&lt;/strong&gt;：阻抗越大，抑制噪声的效果越好。（一般测试条件为 100 MHz）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直流电阻 DCR&lt;/strong&gt;：指直流电流通过磁珠时，磁珠呈现的电阻值。DCR 一般越小越好，对有用信号的衰减越小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额定电流 Rated Current&lt;/strong&gt;：指磁珠正常工作时允许的最大电流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/d0rs7d7HB1IaxVe6KhHV2g&#34;&gt;电感如何选型？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《硬件十万个为什么-无源器件篇》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3b5ImnLcfIQbvO-lG-h7PQ&#34;&gt;关于磁珠的 6 个问题，你能接住吗？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E6%84%9F%E4%B8%8E%E7%A3%81%E7%8F%A0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E6%84%9F%E4%B8%8E%E7%A3%81%E7%8F%A0/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 电阻3</title>
      
      
      
      
      <description>&lt;h2&gt;电阻的选型111&lt;/h2&gt;
&lt;p&gt;一般来说，要考虑以下四个因素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阻值&lt;/strong&gt;：根据具体应用电路的需要而定&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精度&lt;/strong&gt;：通常为 1%，如果用于电流检测回路（Rsense），通常低阻值大功率更高精度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额定功率&lt;/strong&gt;：满足 50% 降额，不同封装对应功率请见下表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;尺寸&lt;/strong&gt;：尺寸与功率相关，应考虑功率和加工难度而定&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作温度、湿度等&lt;/strong&gt;：特定时候需要考虑的因素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;温漂&lt;/strong&gt;：如果用于高精度（传感器应用），则必须考虑&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;贴片封装的参数&lt;/h2&gt;
&lt;p&gt;| 英制 | 公制 |  长 (mm)  |  宽 (mm)  |  高 (mm)  | 额定功率 (W) | 耐压 (V) |
| :--: | :--: | :--------: | :--------: | :--------: | :----------: | :------: |
| 0201 | 0603 | 0.60±0.05 | 0.30±0.05 | 0.23±0.05 |     1/20     |    25    |
| 0402 | 1005 | 1.00±0.10 | 0.50±0.10 | 0.30±0.10 |     1/16     |    50    |
| 0603 | 1608 | 1.60±0.15 | 0.80±0.15 | 0.40±0.10 |     1/10     |    50    |
| 0805 | 2012 | 2.00±0.20 | 1.25±0.15 | 0.50±0.10 |     1/8     |   150   |
| 1206 | 3216 | 3.20±0.20 | 1.60±0.15 | 0.55±0.10 |     1/4     |   200   |
| 1210 | 3225 | 3.20±0.20 | 2.50±0.20 | 0.55±0.10 |     1/3     |   200   |
| 1812 | 4832 | 4.50±0.20 | 3.20±0.20 | 0.55±0.10 |     1/2     |   200   |
| 2010 | 5025 | 5.00±0.20 | 2.50±0.20 | 0.55±0.10 |     3/4     |   200   |
| 2512 | 6432 | 6.40±0.20 | 3.20±0.20 | 0.55±0.10 |      1      |   200   |&lt;/p&gt;
&lt;h2&gt;电阻的阻值&lt;/h2&gt;
&lt;h3&gt;丝印表示方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;三位数标注法&lt;/strong&gt;：$XXY = XX * 10^Y$&lt;/li&gt;
&lt;li&gt;例如，丝印为 272 的电阻，实际阻值为 $27 * 10^2=27 * 100=2.7k$&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;四位数标注法&lt;/strong&gt;：$XXXY = XXX * 10^Y$&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字母表示小数点位置法&lt;/strong&gt;：&lt;code&gt;R&lt;/code&gt; 表示小数点。&lt;/li&gt;
&lt;li&gt;例如，丝印为 5R6 的电阻，实际阻值为 5.6 Ω&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt; &lt;code&gt;k&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; 也都可以表示小数点，分别代表 &lt;code&gt;MΩ&lt;/code&gt; &lt;code&gt;kΩ&lt;/code&gt; &lt;code&gt;mΩ&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;三位数乘数代码标注法&lt;/strong&gt;：&lt;code&gt;XXY&lt;/code&gt; 中，&lt;code&gt;XX&lt;/code&gt; 表示有效数的代码，&lt;code&gt;Y&lt;/code&gt; 指是 10 的多少次幂，可参考下方的标准电阻取值表&lt;/li&gt;
&lt;li&gt;例如，丝印为 01C 的电阻，实际阻值为 $100*10^2=10 kΩ$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;标准电阻取值&lt;/h3&gt;
&lt;p&gt;根据约定俗成的优先数规范，一般比较多使用的是 E96 系列，其阻值与乘数代码表如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210704112625.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;电阻的失效&lt;/h2&gt;
&lt;p&gt;按可能发生的几率排行，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开路&lt;/strong&gt;：电阻膜缺陷或退化；瞬时功率过大冲击时可能导致&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻值漂移超规范&lt;/strong&gt;：老化后有可能发生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;引脚断裂&lt;/strong&gt;：焊接工艺缺陷、焊点污染；插件电阻引脚反复弯曲时可能发生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;烧毁&lt;/strong&gt;：长时间工作在额定功率以上，有可能烧毁导致开路&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;焊接问题&lt;/strong&gt;：虚焊等问题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;断线开路&lt;/strong&gt;：受机械应力或瞬时过功率冲击时可能发生&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;0 欧姆电阻的使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;当跳线用，跨过布不下线的区域&lt;/li&gt;
&lt;li&gt;作为短接座用&lt;/li&gt;
&lt;li&gt;单点连接数字地和模拟地（有时也用电感或磁珠）&lt;/li&gt;
&lt;li&gt;预留阻值用于调试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同封装的 0 欧电阻过电流能力（一般以额定电流降额 50% 使用）：&lt;/p&gt;
&lt;p&gt;|    封装    | 额定电流（最大电流）/A |
| :---------: | :--------------------: |
|    0201    |        0.5（1）        |
|    0402    |         1（2）         |
|    0603    |         2（3）         |
| 0805 及以上 |         2（5）         |&lt;/p&gt;
&lt;h2&gt;电阻的使用场景&lt;/h2&gt;
&lt;h3&gt;分压电路&lt;/h3&gt;
&lt;p&gt;将电阻串联以分压，其电路特点是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过各电阻的电流是同一电流，即各电阻中的电流相等，即 $I = I_1 = I_2 = I_3$&lt;/li&gt;
&lt;li&gt;总电压等于各电阻上的电压降之和，即 $V= V_1 + V_2 + V_3$&lt;/li&gt;
&lt;li&gt;总电阻等于各电阻之和，即 $R=R_1 + R_2 +R_3$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举个例子，电源稳压器的反馈引脚，一般接就是由两个电阻组成的分压电路，通过分压得到与内部参考电压接近的输出电压值。&lt;/p&gt;
&lt;h3&gt;分流电路&lt;/h3&gt;
&lt;p&gt;将电阻并联以分流，其电路特点是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各支路两端电压相等&lt;/li&gt;
&lt;li&gt;总电流等于各支路电流之和，即 $I= I_1 + I_2 + I_3$&lt;/li&gt;
&lt;li&gt;总电阻的倒数等于各支路倒数之和，即 $\frac{1}{R}=\frac{1}{R_1}+\frac{1}{R_2}+\frac{1}{R_3}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在实际电路设计中，多用于并联在三极管的集电极与发射极之间，作为保护电阻；在一些线性电源稳压器功率不够的场合，也可以在输入端与输出端之间病来你电阻，以提高输出电流。&lt;/p&gt;
&lt;h3&gt;限流电路&lt;/h3&gt;
&lt;p&gt;一般用于 LED 的限流。将电阻串联进 LED 所在的电路，以 LED 的导通压降（一般为 0.7 V）和 LED 额定电流，来确定阻值。需要注意的是，一般计算出来的实际工作电流，要小于 LED 的额定工作电流。&lt;/p&gt;
&lt;p&gt;限流电路也可以用于热插拔电路。&lt;/p&gt;
&lt;h3&gt;阻抗匹配电路&lt;/h3&gt;
&lt;p&gt;阻抗匹配的目的，是为了让负载获得最大功率，即负载电阻等于信号源电阻。推导过程如下：&lt;/p&gt;
&lt;p&gt;假设负载电阻为 R，电源电动势为 U，内阻为 r，则通过 R 的电流为：&lt;/p&gt;
&lt;p&gt;$$
I=\frac{U}{R+r}
$$&lt;/p&gt;
&lt;p&gt;可以看出，R 越小，则电流越大。而 R 两端的电压为：&lt;/p&gt;
&lt;p&gt;$$
U_R=IR=\frac{U}{1+\frac{r}{R}}
$$&lt;/p&gt;
&lt;p&gt;R 越大，则输出电压 $U_R$ 越大。R 的功率为：&lt;/p&gt;
&lt;p&gt;$$
P=I^2R=(\frac{U}{R+r})^2R=\frac{U^2R}{R^2+r^2+2Rr}=\frac{U^2}{\frac{(R-r)^2}{R}+\frac{4Rr}{R}}
$$&lt;/p&gt;
&lt;p&gt;因为 r 不变，所以当 R=r 时，$\frac{(R-r)^2}{R}=0$，此时可获得最大功率 $P_{max}=\frac{U^2}{4r}$&lt;/p&gt;
&lt;h3&gt;RC 充放电电路&lt;/h3&gt;
&lt;p&gt;$\tau=RC$（若 R 和 C 的单位为 Ω 和 F，则结果的单位为 s。&lt;/p&gt;
&lt;p&gt;RC 电路可视为延时电路或滤波电路，将脉冲信号上升下降沿都进行了滤波，使其变得平缓，可以通过调整 R、C 值，以实现不同上升时间。&lt;/p&gt;
&lt;h3&gt;上下拉电路&lt;/h3&gt;
&lt;p&gt;上拉是将不确定的信号通过电阻钳制在高电平（同时也起限流作用）；下拉反之。&lt;/p&gt;
&lt;p&gt;一般来说，50 Ω 以下的电阻为强上 / 下拉，100 kΩ 以上的电阻为弱上 / 下拉。&lt;/p&gt;
&lt;h3&gt;其他电路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;运算放大器外围电路&lt;/li&gt;
&lt;li&gt;抗干扰电路，提高抗浪涌电压能力&lt;/li&gt;
&lt;li&gt;负载电路（防止电路空载）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《硬件十万个为什么-无源器件篇》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fxdzw.com/rmjb/%E8%B4%B4%E7%89%87%E7%94%B5%E9%98%BB%E5%B0%81%E8%A3%85%E3%80%81%E5%B0%BA%E5%AF%B8%E3%80%81%E5%8A%9F%E7%8E%87%E5%AF%B9%E5%BA%94%E8%A1%A8.pdf&#34;&gt;贴片电阻封装、尺寸、功率对应表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HUWal1ooXUn9PYKf89oGSQ&#34;&gt;电源大师课连载（2）| 你不知道的电阻、电容小事儿&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E9%98%BB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E7%94%B5%E9%98%BB/</guid>
      
    </item>
    
    <item>
      <title>基本元器件 - 运算放大器</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606212720.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;俗话说，运算放大器就是模电的终极目标。运算放大器（Operational Amplifier）是一种能够实现电信号（电压/电流/功率）放大的器件。不仅仅如此，它还可以作为缓冲器、滤波器、各种运算功能（积分、微分、乘法、对数）等。&lt;/p&gt;
&lt;p&gt;运放拥有一对差分输入端（同相 $u_+$ 与反相 $u_-$ 电压输入），一个单端输出端 $u_o$，一对供电引脚 $V_+$ 和 $V_-$（大多数时候不画出）。它通过同相 $u_+$ 和反相 $u_-$ 电压进行输入，在内部进行比较运算，并通过输出端 $u_o$ 放大输出。输出端 $u_o$ 输出阻抗为 0，流出的电流由正电源端子 $V_+$ 提供，流入的电流由负电源端子 $V_-$ 提供。&lt;/p&gt;
&lt;p&gt;当运算放大器工作在 &lt;strong&gt;线性区域&lt;/strong&gt; 的时候，满足关系：&lt;/p&gt;
&lt;p&gt;$$
u_o=A_{uo}(u_+-u_-)
$$&lt;/p&gt;
&lt;p&gt;其中，$A_{uo}$ 称为运算放大器的 &lt;strong&gt;开环电压增益&lt;/strong&gt;（u 代表电压，o 代表 open），一般无穷大。&lt;/p&gt;
&lt;h2&gt;运放的工作状态&lt;/h2&gt;
&lt;p&gt;集成运放的电压传输特性如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210819134709.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中分为线性区和非线性区：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作在线性放大区：斜线的斜率为开环电压增益。&lt;/li&gt;
&lt;li&gt;工作在非线性区：即饱和状态，在图中是左右两端的水平线，输出电压为 $-U_{om}$（负电源端子 $V_-$ 的电压），或 $+U_{om}$（等同于正电源端子 $V_+$ 的电压）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;运放的供电&lt;/h2&gt;
&lt;p&gt;运放的供电方式一般分 &lt;strong&gt;单电源&lt;/strong&gt; 或 &lt;strong&gt;双电源&lt;/strong&gt;。单电源下，$V_+$ 接正电压，$V_-$ 接地。双电源一般指 $V_+$ 接正电压，$V_-$ 接负电压。不同的供电方式带来了不同的频率性能和输入输出的范围。&lt;/p&gt;
&lt;p&gt;除此之外，运放可以工作在正负电源（$V_+$/$V_-$）不对称的情况下（比如 $V_+$ 为 5V，$V_-$ 为 -3V），它并不需要知道地的位置，但依然可以正常工作。&lt;/p&gt;
&lt;p&gt;运放的轨至轨，指的是输出的电压能达到电源电压。比如，如果是一个非轨对轨的运放，假如供电为 0~5V，输出有可能只能达到 0.7~4.3V，而轨对轨输出则可以 0~5V。&lt;/p&gt;
&lt;h2&gt;运放的虚短与虚断&lt;/h2&gt;
&lt;h3&gt;虚短&lt;/h3&gt;
&lt;p&gt;虚短是从电压的角度看的，&lt;strong&gt;在负反馈的条件下，正负两个输入端电压基本保持相等，近似于短路（但并不是真正短路），称为虚短。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606211723.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;参考负反馈的电路，可以看到，如果同相输入端电压略高于反相输入端，则负反馈电路会拉高反相输入端电压，直到与同相输入端电压相当；反之，如果同相输入端电压略低于反相输入端，则反相输入端电压也会跟随到此时同相输入端的电压。&lt;/p&gt;
&lt;h3&gt;虚断&lt;/h3&gt;
&lt;p&gt;虚断是从电流的角度看的，&lt;strong&gt;运放两个输入端输入阻抗很大，流入的的电流只有微安级别，近似为无电流流入也就是断路，称为虚断。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注：运放两个输入端输入阻抗很大，是对于一般情况而言。也有特例，比如电流反馈运放。&lt;/p&gt;
&lt;h2&gt;常用运放电路&lt;/h2&gt;
&lt;p&gt;因为运放的开环电压增益无穷大，所以需要通过特殊的电路结构来实现合适的放大效果。&lt;/p&gt;
&lt;h3&gt;电压跟随器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606221550.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电压跟随器（也称 Buffer）用于高阻抗信号源和低阻性负载之间的缓冲。&lt;/p&gt;
&lt;h3&gt;同相放大器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606221659.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;同相放大器输出与输入是同相的，可将信号同相放大。&lt;/p&gt;
&lt;p&gt;效果：通过调节 $R_G$ 与 $R_F$ 的阻值，使 $V_{OUT}$ 与 $V_{IN}$ 呈正比放大的关系。&lt;/p&gt;
&lt;p&gt;原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;因为虚短，所以 $V_- = V_{IN}$&lt;/li&gt;
&lt;li&gt;因为续断，所以 $V_-$ 端输入电流可忽略不计，所以 $I_{R_G}=I_{R_F}$，根据欧姆定律，$\frac{0–V_-}{R_G}=\frac{V_- - V_{OUT}}{R_F}$，得出 $V_{OUT}=V_{IN}(\frac{R_F}{R_G}+1)$。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;反相放大器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606221844.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;反相放大器输出与输入是反相的，可将信号放大并反转输出。&lt;/p&gt;
&lt;h3&gt;电压减法器 / 差动放大器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606222121.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电压减法器 / 差动放大器可放大两个电压之差，抑制共模电压。&lt;/p&gt;
&lt;h3&gt;电压加法器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606222430.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电压加法器用于多个电压求和。&lt;/p&gt;
&lt;h3&gt;低通滤波器 / 积分器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606222539.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;低通滤波器 / 积分器用于对信号的低通滤波，限制信号带宽。&lt;/p&gt;
&lt;h3&gt;高通滤波器 / 微分器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606222649.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;高通滤波器 / 微分器用于隔离直流信号、放大交流信号。&lt;/p&gt;
&lt;h3&gt;差分放大器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606222820.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;差分放大器用于从差分或单端信号源驱动差分输入 ADC。&lt;/p&gt;
&lt;h3&gt;仪表放大器&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220606223014.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;仪表放大器用于放大低电平差分信号，抑制共模信号。其中，$V_{IN}$ 为两个输入端之间的电压差值&lt;/p&gt;
&lt;h2&gt;运放的参数&lt;/h2&gt;
&lt;h3&gt;开环电压增益&lt;/h3&gt;
&lt;p&gt;开环电压增益 $A_{uo}$ 表示运放工作在线性放大区下的放大倍数，用 dB 表示。&lt;/p&gt;
&lt;h3&gt;失调 / 偏移电压&lt;/h3&gt;
&lt;p&gt;失调电压 $V_{OS}$（Input Offset Voltage）有时候也称输入偏置电压。指的是运放输入端为 0V 的条件下，理想运放输出应为零，但实际运放输出不为零，则实际输出电压除以增益得到的等效输入电压称为失调电压。失调电压实际上反映了运放内部的对称性。&lt;/p&gt;
&lt;p&gt;失调电压的影响因素有温度（对应失调电压的温漂）、电源波动（对应电源抑制比）。失调电压是直流偏置，会叠加在输出上，如果输出为交流信号，只需考虑叠加后是否会超过供电电压导致信号失真。&lt;/p&gt;
&lt;p&gt;我们知道，同相放大器的放大公式是 $V_{OUT}=V_{IN}(\frac{R_F}{R_G}+1)$，如果考虑失调电压的影响，那么输出为 $V_{OUT}=(V_{IN}+V_{OS})(\frac{R_F}{R_G}+1)$。&lt;/p&gt;
&lt;h3&gt;失调电压温漂&lt;/h3&gt;
&lt;p&gt;失调电压温漂 $T_C V_{OS}$ 表示输入失调电压变化量与温度变化量的比值（芯片工作温度范围内）。&lt;/p&gt;
&lt;p&gt;失调电压温漂会导致失调电压发生变化，影响运放输出。&lt;/p&gt;
&lt;h3&gt;输入失调电流&lt;/h3&gt;
&lt;p&gt;失调电流 $I_{OS}$ 指当运放输出为零时，两个输入端流入 / 流出直流电流的差值。失调电流受制造工艺的影响。&lt;/p&gt;
&lt;p&gt;$$
I_{OS}=I_{B+}+I_{B-}
$$&lt;/p&gt;
&lt;h3&gt;输入偏置电流&lt;/h3&gt;
&lt;p&gt;偏置电流 $I_B$ 指当运放输出为零时，两个输入端流入 / 流出直流电流的均值。&lt;/p&gt;
&lt;p&gt;$$
I_B=\frac{I_{B+}+I_{B-}}{2}
$$&lt;/p&gt;
&lt;p&gt;偏置电流受制造工艺的影响，双极型工艺输入偏置电流在 10nA~1μA 之间；场效应管工艺输入偏置电流一般低于 1nA。&lt;/p&gt;
&lt;p&gt;可通过在同相端增加匹配电阻，消除误差。&lt;/p&gt;
&lt;h3&gt;增益带宽积&lt;/h3&gt;
&lt;p&gt;增益带宽积 $GBW$（Gain–bandwidth product，GBWP/GBW/GBP/GB）指在某频率（一般为运放增益衰减 -3dB）下开环电压增益与测量频率（带宽）的乘积。&lt;/p&gt;
&lt;p&gt;$$
GBW=A_{uo}*BW
$$&lt;/p&gt;
&lt;p&gt;增益带宽积受运放内结电容的频率响应特性影响。在设计中如果发现高频信号增益大小受限，则必须选用 $GBP$ 参数较大的运放。&lt;/p&gt;
&lt;h3&gt;共模抑制比&lt;/h3&gt;
&lt;p&gt;共模抑制比 $CMRR$（Common Mode Rejection Ratio，CMRR）指的是共模电压范围（$CMVR$）与此范围内的输入失调电压（$\Delta V_{O_{OS}}$）变化的比值，结果用 dB 表示。&lt;/p&gt;
&lt;p&gt;$$
CMRR=20log(\frac{CMVR}{V_{O_{OS}}})
$$&lt;/p&gt;
&lt;p&gt;共模抑制比受电路对称性（失调电流等参数）、线性工作范围的影响。此参数是为了表示差分放大电路抑制共模信号、放大差模信号的能力。共模抑制比高，意味着可以更加抑制共模输入的干扰信号，提高信噪比。&lt;/p&gt;
&lt;h3&gt;转换速度&lt;/h3&gt;
&lt;p&gt;转换速度 $SR$（Slew Rate，SR）也称压摆率。表示在大信号条件下，输出电压变化的最大速率。&lt;/p&gt;
&lt;p&gt;$$
SR=2 \pi f V_{pk}
$$&lt;/p&gt;
&lt;p&gt;其中，$f$ 为最大频率（一般为带宽），$V_{pk}$ 是放大输出信号的最大峰峰值。&lt;/p&gt;
&lt;p&gt;转换速度用于评价运放对信号变化速度的适应能力，是衡量运放在大幅度信号作用时工作速度的参数。当输入信号变化斜率的绝对值小于 SR 时，输出电压才按线性规律变化。&lt;/p&gt;
&lt;h3&gt;其他参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;共模电压范围 $CMVR$：也称为输入电压范围，如果两个输入端输入电压超出此范围，输出将发生削波或过大非线性现象。&lt;/li&gt;
&lt;li&gt;全功率带宽：指在单位增益下测得的最大频率，在此频率下可以得到一个正弦信号的额定输出电压，且压摆率不会导致信号失真。&lt;/li&gt;
&lt;li&gt;工作电源电压范围：运放正常工作时，能施加的电源电压范围。&lt;/li&gt;
&lt;li&gt;电源抑制比 $PSRR$：电源电压的变化与输入失调电压的变化之比，结果用 dB 表示。&lt;/li&gt;
&lt;li&gt;建立时间：施加一个阶跃输入后，放大器建立至某一预定的精度水平或输出电压百分比所需的时间。&lt;/li&gt;
&lt;li&gt;电源电流：放大器空载工作时电源电压需提供的电流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;根据参数选型&lt;/h2&gt;
&lt;p&gt;根据参数挑选运放，大致有以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;判断输入信号类型：直流需注意失调电流、失调电压；差分输入需判断是否选择仪表放大器；高频交流信号需注意增益带宽积 $GBW$ 和转换速度 $SR$。&lt;/li&gt;
&lt;li&gt;判断精度要求：需要考虑失调电压、偏置电流、失调电流、共模抑制比对精度影响，判断是否选用高阻运放或精密运放。&lt;/li&gt;
&lt;li&gt;判断环境条件：需要注意运放的温度量程，注意温漂，注意电源纹波抑制比 $PSRR$ 的影响。&lt;/li&gt;
&lt;li&gt;判断其他要求：通道数、单 / 双电源供电（轨对轨信号失真小，可满幅值输出）、功率大小（高压 / 大电流情况下）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;根据用途选型&lt;/h3&gt;
&lt;p&gt;按照用途，运放大致分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通用运放：对各类要求均不高的器件，注重通用与性价比。&lt;/li&gt;
&lt;li&gt;音频运放：超低噪声（高保真）、低功耗（高续航）。&lt;/li&gt;
&lt;li&gt;高速运放（$GBW ≥ 50 MHz$）：低功耗、低噪声 SNR。&lt;/li&gt;
&lt;li&gt;功率运放：高电压、大电流。&lt;/li&gt;
&lt;li&gt;精密运放（$V_{os} &amp;lt; 1mV$）：低失调电压，或低温漂、低噪声、低功耗、宽带宽。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Zc9J0nQhVcpZTCbujJf5SQ&#34;&gt;我懂了！运算放大器的工作原理讲得好！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kGG7MhBRJPRi3rt50yMWwQ&#34;&gt;三个经典的运放电路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ez.analog.com/cfs-file/__key/telligent-evolution-components-attachments/00-595-00-00-00-09-21-14/attachment.pdf&#34;&gt;运算放大器选型指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAwNTA3MTE0OQ==&amp;amp;mid=100000105&amp;amp;idx=1&amp;amp;sn=cf052524b2e808967cb1aa5583410b08&amp;amp;scene=19#wechat_redirect&#34;&gt;运放选型速记指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nuedc-training.com.cn/index/live/playback/live_id/14.html&#34;&gt;TI 运算放大器选型指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mouser.eetrend.com/files/2017-07/%E8%AE%A8%E8%AE%BA%E7%89%88%E4%B8%BB%E9%A2%98/100007054-22676-dian_ya_.pdf&#34;&gt;运算参数的详细解释和分析【TI FAE 分享】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8/</guid>
      
    </item>
    
    <item>
      <title>存储器的分类</title>
      
      
      
      
      <description>&lt;p&gt;储器一般可以分为内部存储器（内存，RAM）、外部存储器（外存，ROM）、缓冲存储器（缓存，Cache）及闪存（Flash）极大类别。&lt;/p&gt;
&lt;h2&gt;内存 RAM&lt;/h2&gt;
&lt;p&gt;内存 RAM（random access memory）是随机存取存储器，存储单元的内容可以按照需要随机取出或者存入（不需要线性依次存储），存取数据比较快，掉电会丢失数据，容量相对小。一般 CPU（MCU）运行时会把程序从 ROM 拷贝到 RAM 里面执行，所以一般 RAM 是作为和 CPU（MCU） 直接交换数据的内部存储器，也叫主存或者内存。&lt;/p&gt;
&lt;p&gt;内存有以下的类别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SRAM：静态随机存取存储器（Static RAM），具有静态存取功能。不需要刷新电路就能保存它内部存储的数据，特点是高性能、低集成度（占地面积大）、功耗大、速度可以非常快，但价格高、容量小。一般在 MCU 或者 SOC 会内置一小块 SRAM，用于高速缓存（Cache）。缓存是数据交换的缓冲区。当某一设备需要读取数据时，会首先从缓存中查找，如果找到了则直接运行，找不到才去内存中找。因为缓存的读写速度比内存快得多，故缓存的意义就是帮助系统更快地运行。&lt;/li&gt;
&lt;li&gt;PSRAM：伪静态存储器，内部自带刷新机制。&lt;/li&gt;
&lt;li&gt;SSRAM：同步静态随机存取存储器（Synchronous SRAM），有时钟线，读写以时钟信号为基准。&lt;/li&gt;
&lt;li&gt;DRAM：动态随机存取存储器（Dynamic RAM），每隔一段时间固定对 DRAM 刷新充电一次，否则内部数据会消失。现在电脑用的 DDR 内存条都属于 DRAM。&lt;/li&gt;
&lt;li&gt;DARAM：双口 RAM，一个时钟周期可访问两次。&lt;/li&gt;
&lt;li&gt;SDRAM：同步动态随机存取存储器（Synchronous DRAM），数据的收发以时钟信号为基准。&lt;ul&gt;
&lt;li&gt;SDR SDRAM：单倍速率（Single-Data-Rate）SDRAM，采用单端（Single-Ended）时钟信号，在时钟上升沿采样。&lt;/li&gt;
&lt;li&gt;DDR SDRAM：双倍速率（Double-Data-Rate）SDRAM，在时钟上升下降沿采样，工作频率比 SDR 翻倍，采用差分的时钟信号以加强抗干扰。工作电压 2.5V/2.6V。&lt;/li&gt;
&lt;li&gt;DDR2 SDRAM：内存时钟 200~533MHz，工作电压 1.8V。&lt;/li&gt;
&lt;li&gt;DDR3 SDRAM：8bit 预取机制，内存时钟 400~1066MHz，工作电压 1.5V/1.35。&lt;/li&gt;
&lt;li&gt;DDR4 SDRAM：16bit 预取机制，工作电压 1.2V。&lt;/li&gt;
&lt;li&gt;DDR5 SDRAM：工作电压 1.1V。&lt;/li&gt;
&lt;li&gt;GDDR SDRAM：图形 DDR，目前有 GDDR2~6。&lt;/li&gt;
&lt;li&gt;LPDDR SDRAM：低功率 DDR，时钟 166MHz，LPDDR2 其工作电压 1.2V，时钟 100~533MHz。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DDR 三个版本的参数比较：&lt;/p&gt;
&lt;p&gt;| 条目         | DDR3                    | DDR2                 | DDR                  |
| ------------ | ----------------------- | -------------------- | -------------------- |
| 工作频率     | 400/533/667/800 MHz     | 200/266/333/400 MHz  | 100/133/166/200 MHz  |
| 数据传输速率 | 800/1066/1333/1600 MT/s | 400/533/667/800 MT/s | 200/266/333/400 MT/s |
| 预取位宽     | 8-bit                   | 4-bit                | 2-bit                |
| 输入时钟类型 | 差分时钟                | 差分时钟             | 差分时钟             |
| 突发长度     | 8，4                    | 4，8                 | 2，4，8              |
| DQS          | 差分数据选通            | 差分数据选通         | 单端数据选通         |
| 电源电压     | 1.5V                    | 1.8V                 | 2.5V                 |
| 数据电平标准 | SSTL_15                 | SSTL_18              | SSTL_2               |
| CL           | 5，6，7，8，9 时钟      | 3，4，5 时钟         | 2，2.5，3 时钟       |
| ODT          | 支持                    | 支持                 | 不支持               |&lt;/p&gt;
&lt;h2&gt;外存 ROM&lt;/h2&gt;
&lt;p&gt;外存 ROM（Read Only Memory）也称为辅助存储器，不能与 CPU 之间直接进行信息交换。它的储存速度相对慢得多、但容量相对大，在简单的系统上常与内存配合使用，作为储存程序与其他文件的空间。&lt;/p&gt;
&lt;p&gt;ROM 最开始是一次性的，只能写入一次，后续只能读取操作，数据掉电不会消失，如 CD-ROM、DVD-ROM，后面出现的 PROM、EPROM、EEPROM 可有条件地写入。&lt;/p&gt;
&lt;p&gt;外存有以下的类别（按时间推进）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PROM：可编程 ROM，内部是行列式熔断丝，可以自己写入一次，写错了，只能再换一片。&lt;/li&gt;
&lt;li&gt;EPROM：紫外线可擦除，写入时需要用编程器产生高压脉冲信号。&lt;/li&gt;
&lt;li&gt;OTP-ROM：一次可编程 ROM，写入原理与 EPROM 相同。&lt;/li&gt;
&lt;li&gt;EEPROM：电可擦除可编程只读存储器（Electrically Erasable Programmable），在 EPROM 的基础上进一步发展形成，可电擦除，可以按照字节操作，但是集成度不高、价格比较贵。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;闪存 Flash&lt;/h2&gt;
&lt;p&gt;闪存 Flash 是一种长寿命的非易失性（掉电保存）的存储器，算是广义的 EEPROM，因为它也是可电擦除的 ROM，它与 EEPROM 最大的区别就是，只能按照扇区（block）操作读写，但其成本比 EEPROM 低。FALSH 分为 NOR FLASH 和 NAND FLASH。&lt;/p&gt;
&lt;p&gt;闪存有以下的类别（按时间推进）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NOR Flash：数据线和地址线分开，可以实现像 RAM 的随机寻址 / 读取功能，也就是说程序可以在 NOR Flash 上直接运行，不需要拷贝到 RAM 中。但容量小，分为 Parallel/Serial NOR Flash。&lt;/li&gt;
&lt;li&gt;Nand Flash：数据线和地址线复用，不能利用地址线随机寻址，不能直接运行程序，容量大，有 SLC、MLC、TLC、QLC&lt;/li&gt;
&lt;li&gt;MMC：MMC 接口、NAND Flash、主控制器&lt;/li&gt;
&lt;li&gt;eMMC Flash：嵌入式存储解决方案，带有 MMC 接口（并行数据总线）、NAND Flash、主控制器&lt;/li&gt;
&lt;li&gt;UFS：串行数据总线、Nand Flash、主控制器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;其他知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;eMMC 的最新 5.1 标准理论最高值最高可以达到 400MB/s，UFS 的最大优势就是双通道双向读写，UFS3.0 接口带宽最高 23.2Gbps，也就是 2.9GB/s。&lt;/li&gt;
&lt;li&gt;eMMC 的电路接口与 SD 卡是一样的，SD 卡只是焊接在 PCB 上，然后做上金手指和外壳。eMMC 支持 8 位和 4 位数据总线，SD 卡标准是 4 位数据总线。&lt;/li&gt;
&lt;li&gt;eMMC 有两条总线，分别传输指令数据输入和输出，而且因为是并行总线还要有额外的 data strobe。而 UFS 则是有两条差分的数据 lane，指令和数据都是以 packet 的形式发送的。&lt;/li&gt;
&lt;li&gt;SSD = 主控 + DRAM 缓存 + Nand Flash&lt;/li&gt;
&lt;li&gt;eMMC = 主控 + Nand Flash + 标准封装接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.infonet.io/2021/04/04/RAM-ROM-Flash-%E5%8C%BA%E5%88%AB/&#34;&gt;RAM ROM Flash UFS 区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/hOew2ym8SSbse5RrZ5ehcw&#34;&gt;存储知识和 AUTOSAR NVM 存储服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzg5NDYyMzg3NQ==&amp;amp;mid=2247484794&amp;amp;idx=1&amp;amp;sn=b9f8acc771de990dcd941795330894d8&amp;amp;chksm=c01d8c96f76a0580216939860c46bf5edd289f14a306a92b60888f785e7146b7f71846eb9f46&amp;amp;token=203917856&amp;amp;lang=zh_CN#rd&#34;&gt;DDR3 总结笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E5%88%86%E7%B1%BB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E5%88%86%E7%B1%BB/</guid>
      
    </item>
    
    <item>
      <title>推挽与开漏输出</title>
      
      
      
      
      <description>&lt;p&gt;一般来说，微控制器的引脚都会有一个驱动电路，可以配置不同类型的数字和模拟电路接口。输出模式一般会有推挽与开漏输出。&lt;/p&gt;
&lt;h2&gt;推挽输出&lt;/h2&gt;
&lt;p&gt;推挽输出（Push-Pull Output），故名思意能输出两种电平，一种是推（拉电流，输出高电平），一种是挽（灌电流，输出低电平）。推挽输出可以使用一对开关来实现，在芯片中一般使用晶体管 / 场效应管。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211227095254.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，分别是推和挽，详细过程是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推：当输入信号为低电平时，P-MOS 导通，电流从 VDD 经过它到输出引脚。此时 N-MOS 截止。&lt;/li&gt;
&lt;li&gt;挽：当输入信号为高电平时，N-MOS 导通，电流从输出引脚经过它到 GND。此时 P-MOS 截止。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推挽操作不允许在总线配置中把多个设备连接在一起，只能单向线路的接口（例如 SPI、UART），如果当两个推挽输出结构相连在一起，一个输出高电平，即上管导通，下管闭合；同时另一个输出低电平，即上管闭合，下管导通时。电流会从第一个引脚的 VCC 通过上管再经过第二个引脚的下管直接流向 GND。整个通路上电阻很小，会发生短路，进而可能损害端口。这也是为什么推挽输出不能实现线与的原因。&lt;/p&gt;
&lt;p&gt;推挽输出因为能驱动高低电平，有更高的驱动能力，在数字信号中有更好的上升/下降沿（斜率较大），意味着更好的性能。&lt;/p&gt;
&lt;p&gt;推挽输出一般也可以被配置为输入模式，通过关闭上下管，在线路上呈高阻抗状态。&lt;/p&gt;
&lt;h2&gt;开漏输出&lt;/h2&gt;
&lt;p&gt;开漏（OD，Open Drain Output）指打开 MOS 管的漏极，历史上也有开集输出（OC，Open Collect Output）&lt;/p&gt;
&lt;p&gt;最原始的开漏输出只有两种状态：低、高阻。如果需要输出高电平，则需要外加上拉电阻。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211228172532.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最原始的开漏输出是用一个 N-MOS 管实现的，当输入信号为高电平时，输出脚被拉低到地；但输入信号为低电平时，输出脚呈高阻浮空态。&lt;/p&gt;
&lt;p&gt;开漏输出最主要的特性就是高电平没有驱动能力，需要借助外部上拉电阻才能真正输出高电平。&lt;/p&gt;
&lt;p&gt;开漏输出常用在通信接口，有多个设备连接在同一线上（例如 I2C、One-Wire）。线路默认被上拉电阻拉至高电平，当任意设备有信号触发时，就会将整条线电平拉低。&lt;/p&gt;
&lt;p&gt;用于开漏输出的上拉电阻必须平衡以下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边沿斜率：线路本身有电容，上拉电阻与其耦合会构成低通滤波器，不同阻值会影响上升 / 下降沿的斜率。电阻越小，边沿越陡，信号传输效果越好。&lt;/li&gt;
&lt;li&gt;功耗：如果上拉电阻阻值过小，当线被上拉时会导致过高的功耗&lt;/li&gt;
&lt;li&gt;噪声：如果上拉电阻阻值过大，上拉会变弱，外部干扰噪声会更容易被线路拾取。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;对比&lt;/h2&gt;
&lt;p&gt;|                | 推挽输出 | 开漏输出                               |
| -------------- | -------- | -------------------------------------- |
| 高电平驱动能力 | 高       | 看外部上拉电阻                         |
| 低电平驱动能力 | 高       | 高                                     |
| 电平跳变速度   | 快       | 由外部上拉电阻决定，越小越快但功耗越大 |
| 线与           | 不支持   | 支持                                   |
| 电平转换       | 不支持   | 支持                                   |&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推挽输出一般用于单向线通信；开漏通常用于双向线通信。&lt;/li&gt;
&lt;li&gt;因为有上拉电阻，所以开漏输出功耗会相对高。&lt;/li&gt;
&lt;li&gt;一般来说，推挽比开漏切换速度快。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/41942876&#34;&gt;开漏输出与推挽输出&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open4tech.com/open-drain-output-vs-push-pull-output/&#34;&gt;Open Drain Output vs. Push-Pull Output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bNfSBfYKt_IKnFPvrCYD9Q&#34;&gt;什么是 GPIO 的推挽输出和开漏输出&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%8E%A8%E6%8C%BD%E4%B8%8E%E5%BC%80%E6%BC%8F%E8%BE%93%E5%87%BA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%8E%A8%E6%8C%BD%E4%B8%8E%E5%BC%80%E6%BC%8F%E8%BE%93%E5%87%BA/</guid>
      
    </item>
    
    <item>
      <title>数字电路中的竞争与冒险</title>
      
      
      
      
      <description>&lt;p&gt;在数字电路中，信号传输与状态变换时都会有一定的延时，从而导致竞争和冒险的现象。&lt;/p&gt;
&lt;h2&gt;原因&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;竞争（Competition）&lt;/strong&gt;：在组合逻辑电路中，不同路径的输入信号变化，传输到同一点门级电路时，在时间上有先后之分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;冒险（Hazard）&lt;/strong&gt;：由于竞争的存在，输出信号需要经过一段时间才能达到期望状态，过渡时间内可能产生瞬间的错误输出，例如尖峰脉冲。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;竞争不一定会导致冒险，但冒险一定会有竞争存在。&lt;/p&gt;
&lt;p&gt;举个例子，对于同一个输入信号 A，信号 A&#39; 由于会经过反相器，到达与门的时间会比 A 滞后，会导致与门的输出出现干扰脉冲：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220622163331.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220622163337.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;对于冒险现象的发生，可以用以下方法消除：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加输出滤波电容：用于消除冒险的窄脉冲。但缺点是会让波形变得平缓，在高速信号中容易产生错误。&lt;/li&gt;
&lt;li&gt;延时读取输出值：略过窄脉冲的影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/w3cnote/verilog-competition-hazard.html&#34;&gt;Verilog 竞争与冒险&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E4%B8%AD%E7%9A%84%E7%AB%9E%E4%BA%89%E4%B8%8E%E5%86%92%E9%99%A9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E4%B8%AD%E7%9A%84%E7%AB%9E%E4%BA%89%E4%B8%8E%E5%86%92%E9%99%A9/</guid>
      
    </item>
    
    <item>
      <title>数字电路基础知识</title>
      
      
      
      
      <description>&lt;h2&gt;数制与码制&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数制&lt;/strong&gt;：表示数量的规则。每一位的构成、从低位向高位的进位规则，例如十进制。
&lt;strong&gt;码制&lt;/strong&gt;：表示事物的规则，编码时遵循的规则。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模拟电路&lt;/strong&gt;：用连续的模拟电压 / 电流值来表示信息
&lt;strong&gt;数字电路&lt;/strong&gt;：用一个离散的电压序列来表示信息&lt;/p&gt;
&lt;p&gt;常用到的进制：
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-03-19-42-56.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;任意进制的数转为十进制：&lt;/p&gt;
&lt;p&gt;$(526)&lt;em&gt;8=5&lt;em&gt;8^2+2&lt;/em&gt;8^1+6*8^0=(342)&lt;/em&gt;{10}$&lt;/p&gt;
&lt;p&gt;$(2A.7F)_H=2&lt;em&gt;16^1+10&lt;/em&gt;16^0+7&lt;em&gt;16^{-1}+15&lt;/em&gt;16^{-2}=(42.4960937)_D$&lt;/p&gt;
&lt;p&gt;$D=\sum K_iN^i$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;二进制的补码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;最⾼高位为符号位（0 为正，1 为负）&lt;/li&gt;
&lt;li&gt;正数的补码和它的原码相同&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;负数的补码 = 数值位逐位求反 + 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-11-51-43.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;+5 = （0 0101）&lt;br&gt;
-5 = （1 1011）&lt;/p&gt;
&lt;p&gt;1101.0110&lt;br&gt;
= –2 3 + 2 2 + 2 0 + 2 -2 + 2 -3&lt;br&gt;
= – 8 + 4 + 1 + 0.25 + 0.125&lt;br&gt;
= – 2.625&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;码制&lt;/h3&gt;
&lt;p&gt;等长编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 位 BCD 码&lt;/li&gt;
&lt;li&gt;ASCII&lt;/li&gt;
&lt;li&gt;格雷码：编码顺序依次变化，按表中顺序变化时，相邻代码只有⼀一位改变状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;逻辑代数基础&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-18-59.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-19-13.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-19-31.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-16-43-58.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异或&lt;/strong&gt;：不同为 1，相同为 0&lt;br&gt;
$Y=A&#39;B+AB&#39;$
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-24-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同或&lt;/strong&gt;：相同为 1，不同为 0
$Y=AB+A&#39;B&#39;$
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-24-28.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;逻辑运算基本公式&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-38-23.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;$(A B) &#39; = A&#39; + B&#39;$&lt;br&gt;
$(A+ B)&#39; = A&#39;B&#39;$&lt;br&gt;
$A + B C = (A +B)(A +C)$&lt;/p&gt;
&lt;h3&gt;逻辑运算常用公式&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-40-28.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;逻辑代数基本定理&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-46-01.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-46-22.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-12-46-49.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;逻辑函数的表示方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;真值表&lt;/li&gt;
&lt;li&gt;逻辑式&lt;/li&gt;
&lt;li&gt;逻辑图&lt;/li&gt;
&lt;li&gt;波形图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-13-46-50.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-13-47-09.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-13-47-21.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-13-47-34.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-13-47-52.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;逻辑函数的公式化简法&lt;/h3&gt;
&lt;h4&gt;逻辑式的最简形式&lt;/h4&gt;
&lt;p&gt;最小项&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实就是真值表中的行数&lt;br&gt;
代表所有可能、唯一的情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;公式化简法&lt;/h4&gt;
&lt;p&gt;反复应用基本公式和常用公式，消去多余的与项和
多余的因子。
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-15-07-16.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;卡诺图化简法&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-15-44-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;不必全化为最小项。&lt;br&gt;
如果最小项重复，则填 1.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-15-52-44.png&#34;&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2020-03-05-15-52-57.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果 0 比较少，也可以圈 0 后取反。&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;门电路&lt;/h2&gt;
&lt;h3&gt;正逻辑与负逻辑&lt;/h3&gt;
&lt;p&gt;如果以高电平表示逻辑 1，以低电平表示逻辑 0，则称这种表示方法为正逻辑；反之，则称这种表示方法为负逻辑。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210606150111.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;CMOS 管门电路&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210606153349.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《编码：隐匿在计算机软硬件背后的语言》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>编码器的几种输出方式</title>
      
      
      
      
      <description>&lt;h2&gt;开集输出（OC）&lt;/h2&gt;
&lt;p&gt;开集输出（Open Collector），就是打开三极管的集电极。开集输出是以输出电路的晶体管发射极作为公共端，且集电极悬空的输出电路。一般分为 NPN 和 PNP 开集输出。&lt;/p&gt;
&lt;p&gt;NPN 开集：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211208154257.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;PNP 开集：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211208154320.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用时，需要将信号脚上拉，才能实现开集输出的功能。&lt;/p&gt;
&lt;h2&gt;电压输出&lt;/h2&gt;
&lt;p&gt;电压输出是在集电极开路输出的电路基础上，在电源间和集电极之间接了一个上拉电阻，使得集电极和电源之间能有一个稳定的电压状态。使用时不需要上拉电阻。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211208154330.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;互补输出&lt;/h2&gt;
&lt;p&gt;互补输出是输出上具备 NPN 和 PNP 两种输出晶体管的输出电路。根据输出信号的高/低，两个输出晶体管交互进行开/关动作，比集电极开路输出的电路传输距离能稍远，也可与集电极开路输入机器（NPN、PNP）连接。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211208154343.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;线性驱动输出&lt;/h2&gt;
&lt;p&gt;线性驱动输出是采用 RS-422 标准，用 AM26LS31 芯片应用于高速、长距离数据传输的输出模式。信号以差分形式输出，因此抗干扰能力更强。输出信号需专门能接收线性驱动输出的设备才能接收。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211208154352.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/xuyaosong/article/details/78351208&#34;&gt;旋转编码器的集电极开路输出、电压输出、互补输出和线性驱动输出之间的区别是什么&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A0%81%E5%99%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E8%BE%93%E5%87%BA%E6%96%B9%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A0%81%E5%99%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E8%BE%93%E5%87%BA%E6%96%B9%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>锂电池选型指南</title>
      
      
      
      
      <description>&lt;p&gt;锂电池的选型，一般考虑以下几点：&lt;/p&gt;
&lt;h2&gt;电压&lt;/h2&gt;
&lt;p&gt;锂电池用 &lt;code&gt;串联级数 + s&lt;/code&gt; 来表示电压。单节锂电池的额定电压为 3.7v，充满时为 4.2v，放空为 3.5v. 所以，不同电压级数的锂电池对应电压关系如下：&lt;/p&gt;
&lt;p&gt;| 电池级数 | 额定电压（V） | 电压范围（V） |
| :------: | :-----------: | :-----------: |
|    2s    |      7.4      |   7.0 – 8.4   |
|    3s    |     11.1      |  10.5 – 12.6  |
|    4s    |     14.8      |  14.0 – 16.8  |
|    5s    |     18.5      |  17.5 – 21.0  |
|    6s    |     22.2      |  21.0 – 25.2  |&lt;/p&gt;
&lt;h2&gt;容量&lt;/h2&gt;
&lt;p&gt;锂电池的容量表示其存储电能的多少。举个例子，2000mAH 表示以 2000mA 的电流持续放电一个小时。&lt;/p&gt;
&lt;h2&gt;放电倍率&lt;/h2&gt;
&lt;p&gt;锂电池放电倍率用来表示电池充放电电流大小的比率（&lt;code&gt;最大放电电流 = C * 容量&lt;/code&gt;）。举个例子，容量是 1000mAh 的电池，如果放电倍率是 1C, 那么放电电流就是 1000mA; 如果是 10C，放电电流就是 10000mA.&lt;/p&gt;
&lt;p&gt;选择足够的放电倍率是很重要的。在机器人系统的电机启动瞬间或换向时，或者在 PID 控制下想要达到系统瞬态响应的需求，就有可能需要很大的瞬时输出电流。如果不能给够电流，就有可能拉低电压，造成控制部分电压抖动，甚至单片机重启。&lt;/p&gt;
&lt;p&gt;如何推算系统的最大电流？一般来说，优先考虑电机等用电大户。由于电机属于感性负载，启动瞬间电流可达到额定电流的 4~7 倍。所以，在设计中，假设电机启动瞬间，&lt;strong&gt;电流为额定电流的 7 倍&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在总体计算过后，再留出 20% 的余量即可。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/259899605&#34;&gt;ROS 机器人硬件平台搭建----供电系统之锂电池选型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yfworld.com/?p=1114&#34;&gt;锂电池的主要参数与选型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%94%82%E7%94%B5%E6%B1%A0%E9%80%89%E5%9E%8B%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%94%82%E7%94%B5%E6%B1%A0%E9%80%89%E5%9E%8B%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>防反接电路的设计</title>
      
      
      
      
      <description>&lt;p&gt;防反接电路在电路设计中还是挺重要的，因为你永远不知道你的用户会有用什么样的骚操作，把电源接反导致炸板。&lt;br&gt;
一个好的防反接电路，以增加了一点点元器件的代价，换来对用户 / 产品的安全负责。&lt;/p&gt;
&lt;h2&gt;二极管防反接电路&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211201155111.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，在电源正 / 负极的路上，增加二极管（单向导通性），实现防反接。此电路简单，成本最低。缺点是压降大（0.6V 左右）；电流越大，发热越严重；反向电压过大时，会有漏电流，应留足余量。可以选用成本相对高但较低压降的肖特基二极管。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;;## P-MOS 管防反接电路
;
;![](https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226214710.png)
;
;以上图为例。刚上电时，MOS 管的寄生二极管导通，S 级电压为 VCC-0.6V，G 级为 0V，P-MOS 导通；当电源反接时，G 级为高电平，不导通，保护后级。
;
;实际应用中，可以在 P-MOS 栅极与源级之间再加一个电阻。这种办法也有 P-MOS 跟 N-MOS 之分，都是利用 MOS 管的寄生二极管以及其导通性，不过 N-MOS 的导通电阻比 P-MOS 小，因此会降低一点点功耗。电源反接后，MOS 管就是断路，可以很好的保护后级电路。这种方法应用比较广泛，推荐实际中使用 N-MOS.&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;MOSFET 防反接&lt;/h2&gt;
&lt;p&gt;MOSFET 拥有较低的导通电阻（$R_{DS(on)}$），用作防反接保护电路，只有很小的功率损耗。因为 N-MOS 是 G 极高电平导通，P-MOS 是 G 极低电平导通，所以 N-MOS 一般用于低端侧防反接，P-MOS 则用于高端侧：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211201152709.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211201152720.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;正确接入电源时，MOS 管导通，后续电路能正常接受供电；反接时，MOS 管截止，断开以保护后续电路。&lt;/p&gt;
&lt;p&gt;MOSFET 防反接的损耗为 $R_{DS(on) * I_{load}}$。挑选 MOSFET 的指标是 $R_{DS(on)}$ 尽可能小，$U_GS{th}$ 在电源电压以下。相比而已，N-MOS 比 P-MOS 导通电阻小，而且选型更加丰富。&lt;/p&gt;
&lt;h2&gt;整流桥防反接电路&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226220430.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;桥式整流电路有两个二极管产生压降，功耗与发热都比较大，如果不是一些特殊场合，一般不推荐使用。&lt;/p&gt;
&lt;h2&gt;保险丝 + 稳压二极管&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226220653.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;此电路设计非常巧妙，既可以防反接，又可以防过压。其原理是：&lt;/p&gt;
&lt;p&gt;当电源 Vin 接反时，稳压二极管 D1 正向导通，负载的负压为二极管的导通电压 Vf，而 Vf 一般比较低，不会烧坏后级负载电路。同时，电压主要落在 F1 上，因此开始时电流会迅速上升，直至超过 F1 的熔断电流后，保险丝 熔断，电源断开，这样也不会因为电流过大，而烧坏 D1.&lt;/p&gt;
&lt;p&gt;当正接但电压过高时（例如大于稳压管的 5.6V），因为稳压管 D1 存在，所以负载端获得电源约为 5.6V。而 F1 上就会有比较大的电压（Vin-5.6V），电流上升直至熔断，保护了后端电路。此为防过压保护。&lt;/p&gt;
&lt;p&gt;这个电路要注意的几个点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保险丝的选型。熔断电流要大于后级负载正常的工作电流（电路正常使用时不能熔断）&lt;/li&gt;
&lt;li&gt;稳压二极管的选型。稳压值要大于正常 Vin 的电源输入（正常电源输入时不能击穿稳压），但是要小于后级能允许的最大输入电压（稳压值不能烧坏后级电路）&lt;/li&gt;
&lt;li&gt;满足 &lt;code&gt;稳压二极管的最大允许电流 + 上电时负载电流 &amp;gt; 保险丝的击穿电流&lt;/code&gt; 这个条件。在电源过压输入时、保险丝被击穿之前，稳压管才不会因通过的电流过大而烧坏&lt;/li&gt;
&lt;li&gt;反接电路时产生的负压 Vf 一般小于 1.5V。后端电路应能承受 1.5V 的负压，不会被烧坏&lt;/li&gt;
&lt;li&gt;此电路尽量用于功率小于 500mW 的电路中&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzI4NTQ4NTA3NA==&amp;amp;mid=2247488589&amp;amp;idx=1&amp;amp;sn=74aa6b74d214ac69729d64b525740f80&amp;amp;chksm=ebea2530dc9dac26a8e74a9f100e8a809d784ad25e6b21c0c546f56d09ba8ba8dca17549e0f6&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0226oplrUSzm6gc9CByvmgA8&amp;amp;sharer_sharetime=1582713417799&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=41c07c1199c0727c4030cc712f41de6d8a0e4db2516999aaa98854f2019a9adfe9a6e2f89a840d15c3ae1c3560f741b592f9b412994ae690bb777310a2b497bfa438831d7bf2da52fc89cc19bbc0d467&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=Azacss9x1N9t3FWOKDTbFKA%3D&amp;amp;pass_ticket=%2B%2Fs5mqUBkUbYMJV1cZ6LLdT4rpwnoGiQAvz1QyQpMhfrKWb9GbpDgnop6Filiqkd&#34;&gt;4 种常用的防反接电路，你都 Get 到了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com/lit/an/slva139/slva139.pdf?ts=1638334707859&#34;&gt;Reverse Current/Battery Protection Circuits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%98%B2%E5%8F%8D%E6%8E%A5%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%98%B2%E5%8F%8D%E6%8E%A5%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>一般天线匹配电路的设计</title>
      
      
      
      
      <description>&lt;p&gt;天线的匹配，最理想的情况是希望源端输出阻抗、传输线阻抗、负载端输入阻抗都是一致的（一般为 50Ω）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531150107.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但在实际情况下，比如连接器、焊接、天线阻抗的误差值等，源端之后电路的阻抗，可能与源端的阻抗不匹配。所以天线电路一般需要预留匹配电路，且一般会预留 π 型匹配电路，下文将以其展开说明。&lt;/p&gt;
&lt;h2&gt;测量原始阻抗&lt;/h2&gt;
&lt;p&gt;我们首先要知道没有匹配电路的情况。这时候 π 型匹配电路串联器件焊接 0Ω 电阻（不能直接使用焊锡短路，会导致寄生参数不同），对地并联的器件留空不焊。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531150242.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用网络分析仪进行测量，具体方法可参考文章 &lt;a href=&#34;https://wiki-power.com/%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E4%BB%AA%E7%9A%84%E4%BD%BF%E7%94%A8&#34;&gt;&lt;strong&gt;网络分析仪的使用&lt;/strong&gt;&lt;/a&gt;。此时可测量出初始负载阻抗值，假设我们测出来的初始阻抗非常接近 50Ω，那么可以直接不用匹配电路，不仅可以降低成本，也可以降低器件导致的损耗；假设测出来为 (40.6-13j)Ω，接下来就在史密斯圆图上调节匹配，将负载阻抗调到 50Ω 上。&lt;/p&gt;
&lt;h2&gt;调节匹配&lt;/h2&gt;
&lt;p&gt;在史密斯圆图上调节匹配，可以使用 &lt;a href=&#34;http://www.ae6ty.com/smith_charts.html&#34;&gt;&lt;strong&gt;SimNEC&lt;/strong&gt;&lt;/a&gt; 这个软件。史密斯圆图的原理可参考文章 &lt;a href=&#34;https://wiki-power.com/%E5%8F%B2%E5%AF%86%E6%96%AF%E5%9C%86%E5%9B%BE%E5%9F%BA%E7%A1%80&#34;&gt;&lt;strong&gt;史密斯圆图基础&lt;/strong&gt;&lt;/a&gt;，通过从负载端往源端加器件，将负载阻抗调到 50Ω。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531150624.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531151108.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;匹配的原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电感、电容值不应过小（减小误差值的影响），且尽量为常用值（增加可替换性）。&lt;/li&gt;
&lt;li&gt;落地电容值不应过大（容值越大，容抗越小，导致大量信号流向地）。&lt;/li&gt;
&lt;li&gt;尽可能设计为低通滤波器（顺便可抑制高频谐波）。&lt;/li&gt;
&lt;li&gt;两个电感之间距离不要太近，否则可能会产生互感影响匹配效果。&lt;/li&gt;
&lt;li&gt;整个频带的阻抗轨迹尽可能收敛。&lt;/li&gt;
&lt;li&gt;在 PCB layout 时，匹配电路要尽可能靠近天线，才能尽量减少传输线的延时，使实际值更接近理论设定值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://momodiyer.work/20past/201901250p/201901250p.html&#34;&gt;天线匹配电路总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E4%B8%80%E8%88%AC%E5%A4%A9%E7%BA%BF%E5%8C%B9%E9%85%8D%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E4%B8%80%E8%88%AC%E5%A4%A9%E7%BA%BF%E5%8C%B9%E9%85%8D%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>史密斯圆图与匹配电路基础</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601144205.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;史密斯圆图是复数反射系数（伽玛 $\Gamma$）的极坐标图。这种图以复数阻抗的实部和虚部同时绘制。其中，实部 R 的范围为 0 到无穷大（$\infty$），虚部 X 的范围为从负无穷大到正无穷大，都能绘制在一张图上。史密斯圆图能表现的参数与功能包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复阻抗&lt;/li&gt;
&lt;li&gt;复反射系数&lt;/li&gt;
&lt;li&gt;电压驻波比 VSWR&lt;/li&gt;
&lt;li&gt;传输线效应&lt;/li&gt;
&lt;li&gt;设计阻抗匹配网络&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;归一化阻抗&lt;/h2&gt;
&lt;p&gt;我们首先要把复阻抗转化为归一化阻抗，然后才能绘制在史密斯圆图上。归一化阻抗等于 &lt;strong&gt;实际阻抗&lt;/strong&gt; 除以 &lt;strong&gt;系统阻抗&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;$$
Normalized Z=\frac{Actual Z}{System Z_0}
$$&lt;/p&gt;
&lt;p&gt;在大多数情况下，系统阻抗为 50Ω，所以基本是实际阻抗除以 50Ω。举个例子，假如实际阻抗值是 (37+j55)Ω，则归一化阻抗的值算出来约为 (0.74+j1.10)Ω。&lt;/p&gt;
&lt;h2&gt;史密斯圆图详解&lt;/h2&gt;
&lt;p&gt;在史密斯圆图上，中间横向的主轴为纯电阻轴（R）。在此轴上，电抗恒为 0。在主轴上方的区域（R+jX），电抗呈现感性；而在下方的区域（R-jX），负电抗呈现容性。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531174443.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;关键点&lt;/h3&gt;
&lt;p&gt;史密斯圆图上有一些关键点。最中间的点表示系统阻抗（在 50Ω 阻抗的系统中，中间这一点就代表 50Ω 阻抗值）。沿着主轴，最右边的点代表开路（阻抗无穷大）；最左边的点代表短路（阻抗为 0）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531174646.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;恒电阻圆&lt;/h3&gt;
&lt;p&gt;在恒电阻圆上的点，其归一化电阻（实部）为常数。比如其中通过中心点的圆，其电阻为 1（50Ω），即归一化阻抗的实部为 1。在图中呈现的，分别还有归一化阻抗的实部为 0.4 和 3.0 的恒电阻圆：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220531174740.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;恒电抗弧&lt;/h3&gt;
&lt;p&gt;恒电抗弧从开路点延伸出来，落在弧上面的点，表示的是电抗的值，即复阻抗的虚部。弧度越大，电抗的绝对值越大，随着弧度变小，电抗的绝对值会越来越小，直到变为 0（落在纯电阻轴，不呈现感性或容性）。在图中呈现的，分别还有电抗值 ±0.5（虚部为 ±j0.5），±1.0（虚部为 ±j1.0）的恒电抗弧：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220613092622.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;将复阻抗转换为复导纳&lt;/h3&gt;
&lt;p&gt;导纳（Admittance，Y）是阻抗的倒数，电导（Conductance，G）是电阻的倒数，电纳（Susceptance，B）是电抗的倒数。如果它们是复数，计算起来会非常复杂。但在史密斯圆图上，我们只需要以中心点为圆心，画一个经过复阻抗 Z&#39; 点的圆，即可在它的另一侧找到对应的复导纳值 Y&#39;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601103327.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;举个例子，假如 Z&#39;=1+j1.1，则其对应的 Y&#39;=0.45-j0.5。&lt;/p&gt;
&lt;p&gt;如果是一条复阻抗曲线，那么可以把史密斯圆图旋转 180°，得到的曲线就是复导纳曲线了。&lt;/p&gt;
&lt;h3&gt;恒电导圆和恒电纳弧&lt;/h3&gt;
&lt;p&gt;完整的史密斯圆图上，还呈现了 &lt;strong&gt;恒电导圆&lt;/strong&gt; 和 &lt;strong&gt;恒电纳弧&lt;/strong&gt;，在下图以蓝线标记：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601144830.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;在史密斯圆图上标定一般值&lt;/h3&gt;
&lt;p&gt;在史密斯圆图标定一般值，如 Z=25+j40。首先我们先按 50Ω 阻抗对其进行归一化处理，计算得 Z&#39;=0.5+j0.8。由此，我们可以在图上寻找 R&#39;=0.5 的圆与 X&#39;=0.8 的弧，它们的交点就是所求的 Z&#39;：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601101322.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;史密斯圆图的径向缩放参数&lt;/h3&gt;
&lt;p&gt;一般来说，史密斯圆图底下还有径向缩放参数轴。假设图中有一复阻抗点，连接它与中心点，并沿着半径旋转到主轴上，投影到径向缩放参数轴上，如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220613105800.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在此轴上可读出一些参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电压驻波比（VSWR）：2.3:1&lt;/li&gt;
&lt;li&gt;回波损耗（Return Loss）：8.10dB&lt;/li&gt;
&lt;li&gt;反射系数（Reflection Coefficient）&lt;/li&gt;
&lt;li&gt;电压：0.155&lt;/li&gt;
&lt;li&gt;功率：0.39&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不仅如此，我们也可以发现，出现在这个半径圆上的点，这些参数都是相同的。&lt;/p&gt;
&lt;h3&gt;驻波比与传输线的关系&lt;/h3&gt;
&lt;p&gt;在前文我们提到，在以系统阻抗（中心点）为圆心，到复阻抗点的距离为半径绘制的圆，圆上不同阻抗的点，其驻波比（SWR）都是相等的。在圆上转一圈的长度，相当于 1/2 波长值。所以，&lt;strong&gt;传输线长度每增加一半波长值时，复阻抗会沿着圆转多一圈&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601172933.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;由此可得，从源端到天线的传输线的长度，应尽量控制在天线半波长的整数倍，才能使观测的阻抗与天线的实际阻抗不发生偏移。如果长度为一般值，则可在 &lt;a href=&#34;http://www.ae6ty.com/smith_charts.html&#34;&gt;&lt;strong&gt;SimNEC&lt;/strong&gt;&lt;/a&gt; 仿真软件内使用传输线的模型进行补偿。&lt;/p&gt;
&lt;p&gt;还有一个有趣的现象，如果末端为开路的传输线长度为 1/4 波长值（转半圈），那么它看起来就像是短路的；反之如果末端为短路的传输线，长度为 1/4 波长值，则观测出来的特征就像是开路的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601172903.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;匹配电路的设计&lt;/h2&gt;
&lt;p&gt;通常我们会在电路中串联或并联电感和电容，移动复阻抗点，以匹配阻抗。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;串联电感&lt;/strong&gt;：沿恒电阻圆顺时针方向移动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;串联电容&lt;/strong&gt;：沿恒电阻圆逆时针方向移动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并联电感&lt;/strong&gt;：沿恒电导圆逆时针方向移动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并联电容&lt;/strong&gt;：沿恒电导圆顺时针方向移动。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220601162955.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;定性地看，不管是串联还是并联，加电感会使复阻抗点往上走，而加电容会往下走。&lt;/p&gt;
&lt;h2&gt;简单的 L 型匹配电路&lt;/h2&gt;
&lt;p&gt;假设当前电路实测复阻抗值为 $Z_L$，我们需要把它调到理想的 $Z_0$（最好的是中心点，次之在 50Ω 的电阻圆上），则可以用电感或电容组成简单的 L 型状的匹配电路，使复阻抗点在史密斯圆图上移动。电感或电容的组合，取决于初始 $Z_L$ 在史密斯圆图上的位置。可根据下图 $Z_L$ 的分布，挑选合适的组合构建 L 型匹配电路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220613100034.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;举个例子，初始复阻抗值 $Z_L$ 如下图（黑点），我们可根据小图提供的 L 型匹配电路的构造，把它调到理想的 $Z_0$ 上（红点）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220613102205.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;为了方便调试，我们在图上勾勒出标准恒导圆与恒阻圆。接下来的步骤可在 &lt;a href=&#34;http://www.ae6ty.com/smith_charts.html&#34;&gt;&lt;strong&gt;SimNEC&lt;/strong&gt;&lt;/a&gt; 仿真软件内进行：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220613103303.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;串电感，沿恒电阻圆顺时针方向移动，直到碰到恒导圆。&lt;/li&gt;
&lt;li&gt;并电容，沿恒电导圆顺时针方向移动，直到中心点上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法大致可以归结为：&lt;strong&gt;从近负载端开始&lt;/strong&gt;，添加第一个器件，使复阻抗点移动到标准恒导圆或恒阻圆上；添加第二个器件，使之沿着标准恒导圆或恒阻圆移动到中心点上。所选器件的值可在软件中读出。&lt;/p&gt;
&lt;p&gt;对于实际匹配电路的调试，可跳转文章 &lt;a href=&#34;https://wiki-power.com/%E4%B8%80%E8%88%AC%E5%A4%A9%E7%BA%BF%E5%8C%B9%E9%85%8D%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1&#34;&gt;&lt;strong&gt;一般天线匹配电路的设计&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digikey.cn/zh/blog/the-smith-chart-its-history-and-why-its-so-important&#34;&gt;史密斯圆图：史密斯圆图的历史以及为什么对射频设计者如此重要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=TsXd6GktlYQ&amp;amp;list=PL4ZSD4omd_AzQ7T0Dt4zTBW8sHLQHjqMQ&amp;amp;index=7&#34;&gt;Basics of the Smith Chart - Intro, impedance, VSWR, transmission lines, matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cds.cern.ch/record/1417989/files/p95.pdf&#34;&gt;RF engineering basic concepts: the Smith chart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%8F%B2%E5%AF%86%E6%96%AF%E5%9C%86%E5%9B%BE%E4%B8%8E%E5%8C%B9%E9%85%8D%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%8F%B2%E5%AF%86%E6%96%AF%E5%9C%86%E5%9B%BE%E4%B8%8E%E5%8C%B9%E9%85%8D%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80/</guid>
      
    </item>
    
    <item>
      <title>射频 - S 参数</title>
      
      
      
      
      <description>&lt;p&gt;S 参数（Scattering parameters，S-Parameters，散射参数）用于反映反射信号 / 传输信号在频域范围内的特性（幅度 / 相位），它是一个复数矩阵。我们可以将电路内部视作一个黑盒子（不考虑内部电路元素），通过 S 参数测量它的端口特性。&lt;/p&gt;
&lt;h2&gt;S 参数的详细说明&lt;/h2&gt;
&lt;p&gt;S 参数的名称规范是，第一个数字代表测量的端口，第二个代表参考的端口，比如，S21 代表相对于端口 1 信号激励源，测出来端口 2 的信号。S 参数波的形式可以是功率、电压或电流。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220627100338.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，S11、S22 代表反射系数（反射 / 输入），S21、S12 代表传输系数（传输 / 输入）。&lt;/p&gt;
&lt;h3&gt;S11&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220621000000.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;S11 指的是相对于端口 1 的入射信号，端口 1 的反射信号，$S11=\frac{S_{Reflection}}{S_{Incident}}$。&lt;/p&gt;
&lt;h3&gt;S21&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220621000001.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;S21 指的是相对于端口 1 的入射信号，端口 2 的传输信号，$S21=\frac{S_{Transmission}}{S_{Incident}}$。&lt;/p&gt;
&lt;h3&gt;S12&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220621000002.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;S12 指的是相对于端口 2 的入射信号，端口 1 的传输信号，$S12=\frac{S_{Transmission}}{S_{Incident}}$。&lt;/p&gt;
&lt;h3&gt;S22&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220621000003.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;S22 指的是相对于端口 2 的入射信号，端口 2 的反射信号，$S22=\frac{S_{Reflection}}{S_{Incident}}$。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jietaipu.com/resource/88.html&#34;&gt;S 参数的意义及矢网实操测量方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《S-Parameter Measurements Basics for High Speed Digital》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-S%E5%8F%82%E6%95%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-S%E5%8F%82%E6%95%B0/</guid>
      
    </item>
    
    <item>
      <title>射频 - 基础知识 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIwODc4NzE1OA==&amp;amp;mid=2247494220&amp;amp;idx=3&amp;amp;sn=0a2a4ff15bf752ac3de76916f07837c8&amp;amp;chksm=977f69f5a008e0e3b039f88ade18aff8c8f93a7e828d9adcb064f935a37084ee983e486f0729&amp;amp;scene=178&amp;amp;cur_album_id=1792389424626860033#rd&#34;&gt;PPT：射频基础知识培训讲义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/404881296&#34;&gt;射频工程师基础知识大全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>射频 - 天线基础知识</title>
      
      
      
      
      <description>&lt;p&gt;本文将对天线的原理与基本的参数展开介绍。&lt;/p&gt;
&lt;h2&gt;天线的原理&lt;/h2&gt;
&lt;p&gt;天线（Antenna）是传导波与空间中自由电磁波之间的转换器，可以将导线上的电信号转化为无线电波发射到空间，也可以收集空间中的无线电波并转化为电信号（这两种模式从原理上可一视同仁，但有源天线例外）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220616150343.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;天线来源于由电感与平行板电容器组成的共振器，把平行板拉开，电感感量将减少。拉开一定距离，并把导线本身的电感当作谐振电感，就可以形成一个偶极子天线。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220616151447.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;天线的参数&lt;/h2&gt;
&lt;h3&gt;辐射密度（Radiation Density）&lt;/h3&gt;
&lt;p&gt;假设有一个理想的各向同性微波发射器，它是空间中一个点，产生球面波且各方向辐射均匀。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615094625.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在此微波发射器上施加一个发射功率 $P_S$ 时，在距离 $r$ 处的辐射密度（也称功率密度）为：&lt;/p&gt;
&lt;p&gt;$$
S=\frac{P_S}{4\pi r^2}
$$&lt;/p&gt;
&lt;p&gt;辐射密度也可用远场中的电场和磁场强度的乘积定义：&lt;/p&gt;
&lt;p&gt;$$
S=E \cdot H
$$&lt;/p&gt;
&lt;h3&gt;辐射方向图（Radiation Pattern）&lt;/h3&gt;
&lt;p&gt;辐射方向图用于描述天线远场三维辐射的效果。对于各向同性辐射发生器（下文称点源天线）来说，对空间中每个方向的辐射大小都是相同的，但它不能在特定方向上极化。对于一般天线，如偶极子和单极子天线，就具有方向性。举个例子，短偶极子天线在自由空间中的 3D 辐射方向图如下图所示。可以观察到，在天线轴的方向上，是没有辐射密度的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615110744.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;除了用 3D 图表示辐射，通常也用水平、垂直两个轴向的 2D 剖面图来表示（也称为主平面方向图）。下图是偶极天线的水平方向与垂直方向图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615140313.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615140336.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;辐射方向图一般在极坐标系下绘制，这样可以直观看出每个方向的辐射程度。而在某些情况下（如高指向性天线），也可在笛卡尔坐标系（X-Y 系）下表示辐射图，可更清晰地突出主波束和相邻旁瓣的细节：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615140902.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据辐射图，可以看出天线的更多参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;旁瓣抑制（Side Lobe Suppression，或旁瓣电平）&lt;/strong&gt;：表示主瓣与最高旁瓣之间的差值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;水平半功率波束宽度（Half-Power Beamwidth, HPBW）&lt;/strong&gt;：表示从主瓣最大高度下降 3dB 的左右两个角度之间的范围，通常在水平和垂直两个 2D 辐射方向图中呈现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前后功率比（Front-to-Back Ratio）&lt;/strong&gt;：表示定向天线正向峰值增益与背面（180°）增益的比值，通常用 dB 表示。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615142430.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;方向性（Directivity）&lt;/h3&gt;
&lt;p&gt;天线的方向性因数 $D$（也称指向性系数）表示的是其辐射主方向上的辐射强度 $F_{max}$ 与同功率（$P_t$）下无损耗的点源天线的辐射强度 $F_i$ 之比。在这里，我们以坡印亭向量（Poynting vector）表示功率密度，以此替代辐射强度：&lt;/p&gt;
&lt;p&gt;$$
\vec S=\vec E \times \vec H
$$&lt;/p&gt;
&lt;p&gt;注：在远场中，$\vec S$ 垂直于 $\vec E$，$\vec S$ 和 $\vec E$ 垂直于 $\vec H$。&lt;/p&gt;
&lt;p&gt;功率密度是在离天线相同的距离 $r$ 处测量的，因此，当 $F_i=\frac{P_t}{4\pi}$ 时，可得出：&lt;/p&gt;
&lt;p&gt;$$
D=\frac{F_{max}}{F_i}
$$&lt;/p&gt;
&lt;h3&gt;效率（Efficiency）&lt;/h3&gt;
&lt;p&gt;天线效率 $\eta$ 一般定义为天线的辐射功率与输入功率之比。高效率天线能将输入的大部分能量辐射出去，而低效率天线大部分被吸收为天线内的损耗，或因为阻抗不匹配而被反射回来。对于无源天线而言，不管是作为发射还是接收天线，其效率都是相同的，此特性称为天线互易性（Antenna Reciprocity）。天线辐射效率 $\varepsilon_R$ 的公式表达如下：&lt;/p&gt;
&lt;p&gt;$$
\varepsilon_R=\frac{P_{refl}}{P_{forw}}\cdot 100\%
$$&lt;/p&gt;
&lt;p&gt;天线效率不仅以百分数表示，也常用 dB 表示。例如，10% 的效率等同于 -10dB，50% 的效率等同于 -3dB。&lt;/p&gt;
&lt;p&gt;以上的公式表示的是天线的辐射效率，还有另一种效率称为天线的总效率 $\varepsilon_r$。它们之间的关系是，总效率等于辐射效率乘以阻抗匹配损耗 $M_L$：&lt;/p&gt;
&lt;p&gt;$$
\varepsilon_r=M_L\cdot\varepsilon_R
$$&lt;/p&gt;
&lt;p&gt;因阻抗匹配损耗值是介于 0~1 之间的，所以天线的总效率始终会小于辐射效率。如果阻抗完全匹配，则两个效率是相等的。在实际中，天线的效率通常指考虑阻抗匹配损耗后的总效率，因此，更好地匹配阻抗，能提高天线的实际效率。&lt;/p&gt;
&lt;h3&gt;增益（Gain）&lt;/h3&gt;
&lt;p&gt;天线增益用来衡量天线朝一个特定方向收发信号的能力。增益与天线方向图密切相关，方向图主瓣波束宽度越窄，副瓣越小，增益越高。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615161740.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在相同的条件下，增益越高，能量越集中，波瓣越窄，电波传播的距离越远，但覆盖角度会变小，所以在实际中应合理选择天线的增益。&lt;/p&gt;
&lt;p&gt;天线的增益对应于方向性系数，表示辐射主方向上的辐射强度 $F_{max}$ ，与同功率（$P_{t0}$）下无损耗的点源天线产生的辐射强度 $F_{i0}$ 之比。当 $F_{i0}=\frac{P_t}{4\pi}$ 时，可得出：&lt;/p&gt;
&lt;p&gt;$$
G=\frac{F_{max}}{F_{i0}}
$$&lt;/p&gt;
&lt;p&gt;不同于方向性系数的是，增益将天线的效率 $\eta$ 也考虑了进来：&lt;/p&gt;
&lt;p&gt;$$
G=\eta \cdot D
$$&lt;/p&gt;
&lt;p&gt;如果天线的效率是 100%，则增益与方向性系数是相等的，但现实中效率不可能达到 100%，所以在实际测量中，增益会比方向性系数更常用。&lt;/p&gt;
&lt;p&gt;增益和方向性系数通常以 dB 表示，增益 $g(dB)=10logG$，方向性系数 $d(dB)=10logD$。由此衍生出 dBd（相对于半波偶极子天线）与 dBi（相对于点源天线）单位，它们之间的关系是 dBi=dBd+2.15。&lt;/p&gt;
&lt;p&gt;关于增益的一些补充说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;天线是无源器件，不产生能量。天线增益只是一种将能量有效集中向某特定方向辐射 / 接受电磁波的能力。&lt;/li&gt;
&lt;li&gt;天线的增益由振子叠加而产生。增益越高，天线长度越长。增益每增加 3dB，体积就就会增大一倍。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;实际增益（Practical Gain）&lt;/h3&gt;
&lt;p&gt;增益的定义，前提是天线与源端之间阻抗完全匹配，但实际情况下很少能实现。所以，将实际非理想匹配下测量到的增益值，称为天线的实际增益。其公式定义如下：&lt;/p&gt;
&lt;p&gt;$$
G_{pract}=(1-|r|^2)\cdot G
$$&lt;/p&gt;
&lt;p&gt;其中，$r$ 表示反射系数，在下文将详细介绍。&lt;/p&gt;
&lt;h3&gt;有效面积（Effective Area）&lt;/h3&gt;
&lt;p&gt;天线的有效面积 $A_W$ 是专门为接收天线定义的参数，用于衡量天线拾取信号的能力，定义为从拾取的最大接收功率 $P{rmax}$ 与平面波功率密度为 $S$ 之比：&lt;/p&gt;
&lt;p&gt;$$
A_W=\frac{P{rmax}}{S}
$$&lt;/p&gt;
&lt;p&gt;对于抛物面反射器或平板阵列等孔径天线，有效面积是物理面积乘以孔径效率 $q$（Aperture Efficiency）：&lt;/p&gt;
&lt;p&gt;$$
A_W=A_g\cdot q
$$&lt;/p&gt;
&lt;p&gt;天线的有效面积也与增益有关系（正反可互推）：&lt;/p&gt;
&lt;p&gt;$$
A_W=\frac{\lambda ^2}{4\pi}\cdot G
$$&lt;/p&gt;
&lt;h3&gt;输入阻抗（Input Impedance）&lt;/h3&gt;
&lt;p&gt;天线的输入阻抗是个至关重要的参数，它是一个复数值，由实部电阻与虚部电抗组成：&lt;/p&gt;
&lt;p&gt;$$
Z_{in}=R_{in}+jX_{in}
$$&lt;/p&gt;
&lt;p&gt;其中，实部电阻 $R_{in}$ 由辐射电阻 $R_R$ 与损耗电阻 $R_L$ 组成：&lt;/p&gt;
&lt;p&gt;$$
R_{in}=R_R+R_L
$$&lt;/p&gt;
&lt;p&gt;对于小部分天线来说，辐射电阻 $R_R$ 计算时需要指定其在天线上的位置，因为它是空间相关的（辐射功率与天线电流均方根的商值）。对于天线电流也同理，需要指定天线馈电点，得出最大电流值。&lt;/p&gt;
&lt;p&gt;如果天线工作在谐振状态，则输入阻抗的虚部为 0。电短线性天线通常表现为容性（$X_{in}&amp;lt;0$），电长线性天线通常表现为感性（$X_{in}&amp;gt;0$）。&lt;/p&gt;
&lt;h3&gt;额定阻抗（Nominal Impedance）&lt;/h3&gt;
&lt;p&gt;额定阻抗 $Z_n$ 通常规定为天线连接线的特性阻抗，通常为 50Ω。通常天线阻抗须与之相匹配。&lt;/p&gt;
&lt;h3&gt;阻抗匹配（Impedance Matching）&lt;/h3&gt;
&lt;p&gt;如果天线、连接线、源端之间的阻抗不匹配，就会出现不连续性。如下图的例子，从源端发射出的一部分能量被反射，无法到达天线，从而影响发射效果；反过来从天线接收的能量也不能全部传输到接收机：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615173026.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;阻抗匹配可以用发射天线的等效电路图来看，当满足 $Z_S=Z_{in}$ 时，才能获得最大传输功率：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615173346.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;驻波比（Voltage Standing Wave Ratio, VSWR）&lt;/h3&gt;
&lt;p&gt;如果阻抗不匹配，可能会造成一些能量被反射回来，导致驻波（Standing Waves）的产生。我们用驻波比 $s$ 来描述驻波的特征，定义为传输线上最大和最小电压的比值（也可以根据电流的比值计算而得）：&lt;/p&gt;
&lt;p&gt;$$
s=\frac{V_{max}}{V_{min}}=\frac{I_{max}}{I_{min}}
$$&lt;/p&gt;
&lt;p&gt;除此之外，也可以通过入射电压 $V_{forw}$ 与反射电压 $V_{vref}$ 的振幅（或功率）来计算驻波比：&lt;/p&gt;
&lt;p&gt;$$
s=\frac{|V_{forw}|+|V_{refl}|}{|V_{forw}|-|V_{refl}|}=\frac{\sqrt{P_{forw}}+\sqrt{P_{forw}}}{\sqrt{P_{forw}}-\sqrt{P_{forw}}}
$$&lt;/p&gt;
&lt;p&gt;反射电压 $V_{vref}$ 与入射电压 $V_{forw}$ 的振幅之比称为反射系数 $r$（Reflection Roefficient）：&lt;/p&gt;
&lt;p&gt;$$
r=\frac{V_{refl}}{V_{forw}}
$$&lt;/p&gt;
&lt;p&gt;因此，驻波比也可以通过反射系数计算而得：&lt;/p&gt;
&lt;p&gt;$$
r=\frac{1+|r|}{1-|r|}
$$&lt;/p&gt;
&lt;p&gt;另外，我们定义反射系数的对数形式为回波损耗 $a_r$（Return Loss）：&lt;/p&gt;
&lt;p&gt;$$
a_r=-20log|r|
$$&lt;/p&gt;
&lt;p&gt;$$
=-20log\frac{V_{refl}}{V_{forw}}=-10log\frac{P_{refl}}{P_{forw}}
$$&lt;/p&gt;
&lt;p&gt;衡量阻抗匹配质量的参数有很多，它们之间的简单对应关系如下：&lt;/p&gt;
&lt;p&gt;| VSWR  | R     | $a_r$ | 反射的能量 |
| ----- | ----- | ----- | ---------- |
| 1.002 | 0.001 | 60dB  | \          |
| 1.01  | 0.005 | 46dB  | \          |
| 1.1   | 0.05  | 26dB  | 0.2%       |
| 1.2   | 0.1   | 20dB  | 0.8%       |
| 1.5   | 0.2   | 14dB  | 4%         |
| 2.0   | 0.33  | 9.5dB | 11.1%      |
| 2.0   | 0.5   | 6dB   | 25%        |
| 5.0   | 0.67  | 3.5dB | 44.4%      |&lt;/p&gt;
&lt;h3&gt;天线因子（Antenna Factor）&lt;/h3&gt;
&lt;p&gt;天线因子（天线系数 / 天线因数）也称传感器系数或转换系数，通常用于接收天线，定义是电场强度与在馈电点（50Ω 下）测得的输出电压之比：&lt;/p&gt;
&lt;p&gt;$$
K=\frac{E}{V}
$$&lt;/p&gt;
&lt;p&gt;大部分时候也用它的对数形式（dBm）表示：&lt;/p&gt;
&lt;p&gt;$$
k=20log K
$$&lt;/p&gt;
&lt;p&gt;如果天线有经过出厂校准，一般天线因子的值是固定的。天线因子与实际增益之间的关系是：&lt;/p&gt;
&lt;p&gt;$$
K=\frac{9.73}{\lambda \cdot \sqrt{G}}
$$&lt;/p&gt;
&lt;p&gt;$$
k=-29dB+20log(\frac{f}{MHz})-g
$$&lt;/p&gt;
&lt;h3&gt;带宽（Bandwidth）&lt;/h3&gt;
&lt;p&gt;天线的带宽参数用于衡量其可用频率范围，在这个范围内，天线的性能能满足要求。带宽的标准通常是阻抗匹配（VSWR&amp;lt;1.5），增益或旁瓣抑制等其他参数也可以作为带宽标准。&lt;/p&gt;
&lt;p&gt;对宽带天线（Broadband Antennas）而言，最高与最低可用频率的比率是确定的。举个例子，2:1 的比率称为两倍频，10:1 的比率称为十倍频：&lt;/p&gt;
&lt;p&gt;$$
BW=\frac{f_H}{f_L}
$$&lt;/p&gt;
&lt;p&gt;宽带天线指的是 BW≥2。此外，有另一个带宽的定义，仅对窄带天线（Narrowband
Antennas）有效：&lt;/p&gt;
&lt;p&gt;$$
BW=\frac{f_H-f_L}{f_C}\cdot100\%
$$&lt;/p&gt;
&lt;p&gt;其中，$f_C$ 表示中间频率。此 BW 的值可超过 100%（≤200%）。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Antenna-Basics_Rohde&amp;amp;Schwarz》&lt;/li&gt;
&lt;li&gt;《如何選擇天線於微波系統_Rohde&amp;amp;Schwarz》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.huawei.com/enterprise/zh/doc/EDOC1000062973/cb29154d&#34;&gt;天线增益 | WLAN 天线快速入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netxl.com/blog/networking/antenna-gain/&#34;&gt;What Is Antenna Gain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E5%A4%A9%E7%BA%BF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E5%A4%A9%E7%BA%BF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>射频 - 天线的分类与选型 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;天线的分类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;半波偶极子天线&lt;/li&gt;
&lt;li&gt;单极天线&lt;/li&gt;
&lt;li&gt;指向天线&lt;/li&gt;
&lt;li&gt;对数周期偶极子天线（LPDA）&lt;/li&gt;
&lt;li&gt;主动天线&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;半波偶极子天线&lt;/h3&gt;
&lt;p&gt;偶极子天线是天线的最基本形式，其中以半波（调谐）偶极子天线最具代表性。它的总长度略小于半个波长，谐振时的输入阻抗一般介于 50~70Ω 之间（具体取决于其长度与直径之比），因此它比较适配 50Ω 标准阻抗的传输线与负载。偶极子天线上的电流分布如图中红线所示（近似为正弦曲线）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220620095017.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;偶极子天线的辐射图在上一篇文章有提及，其所在的参考平面（E 平面）辐射图看起来像数字「8」，而垂直于轴（H 平面）的辐射图看上去是较为均匀的圆形：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220615110744.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;半波偶极子天线的局限是智能工作在特定频率下，因为其天线输入阻抗很大程度上取决于天线的长度与波长的比值，所以当天线离半波谐振频率越远，阻抗失配的问题就会愈发明显。阻抗变化幅度会随着长度与直径之比变小而变小，如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220620142357.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Antenna-Basics_Rohde&amp;amp;Schwarz》&lt;/li&gt;
&lt;li&gt;《如何選擇天線於微波系統_Rohde&amp;amp;Schwarz》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/51098683&#34;&gt;通俗易懂！看完你就是半个天线专家了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E5%A4%A9%E7%BA%BF%E7%9A%84%E5%88%86%E7%B1%BB%E4%B8%8E%E9%80%89%E5%9E%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E5%A4%A9%E7%BA%BF%E7%9A%84%E5%88%86%E7%B1%BB%E4%B8%8E%E9%80%89%E5%9E%8B/</guid>
      
    </item>
    
    <item>
      <title>射频 - 无线电波与天线 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;无线电波与超短波&lt;/h2&gt;
&lt;h3&gt;无线电波的概念&lt;/h3&gt;
&lt;p&gt;无线电波是一种能量传输形式，在传播过程
中，电磁在空间上相互垂直，同时又都垂直于传播方向。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328151806.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328152954.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;无线电波像池塘中的波浪，在传播时会减弱。&lt;/p&gt;
&lt;p&gt;无线电波在真空中的传播速度等于光速（c,300000km/s），在非真空环境下，传播速度受介质影响，计算公式如下：&lt;/p&gt;
&lt;p&gt;$$
v=\frac{c}{\varepsilon^{\frac{1}{2}}}
$$&lt;/p&gt;
&lt;p&gt;其中，$\varepsilon$ 为传播介质的介电常数。&lt;/p&gt;
&lt;p&gt;无线电波的波长、频率和传播速度的关系：&lt;/p&gt;
&lt;p&gt;$$
\lambda=\frac{V}{f}
$$&lt;/p&gt;
&lt;p&gt;其中，$\lambda$ 为波长（m），$V$ 为传播速度（m/s），$f$ 为频率（Hz）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328153416.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;无线电波的极化&lt;/h3&gt;
&lt;p&gt;无线电波的极化，指的是无线电波在空间传播时，其电场方向按一定的规律而变化。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328153533.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;天线&lt;/h2&gt;
&lt;h3&gt;天线的极化&lt;/h3&gt;
&lt;p&gt;天线辐射电磁场的电场方向，就是天线的极化方向。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328153749.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;天线的原理&lt;/h3&gt;
&lt;p&gt;导线载有交变电流时，就可以形成电磁波的辐射，其辐射的能力与导线的长短和形状有关。&lt;/p&gt;
&lt;p&gt;当导线的长度增大到可与波长相比拟时，导线上的电流就大大增加，因而就能形成较强的辐射。通常将上述能产生显著辐射的直导线称为振子。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328154244.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328154355.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;天线相当于一个四端网络：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328154327.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果振子两臂长度相等，那么称之为对称振子或半波振子：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328154512.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如，400MHz 的对称振子长度大约为 400mm；800MHz 的对称振子长度大约为 200mm。&lt;/p&gt;
&lt;p&gt;对称振子上的各种场的分布：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220328154749.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;天线的输入阻抗&lt;/h3&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《天线-无线电波学习资料_华为》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rf.eefocus.com/article/id-335204&#34;&gt;天线增益，精通天线的第一课&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E6%97%A0%E7%BA%BF%E7%94%B5%E6%B3%A2%E4%B8%8E%E5%A4%A9%E7%BA%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E6%97%A0%E7%BA%BF%E7%94%B5%E6%B3%A2%E4%B8%8E%E5%A4%A9%E7%BA%BF/</guid>
      
    </item>
    
    <item>
      <title>射频 - 组件与系统 - 导线</title>
      
      
      
      
      <description>&lt;p&gt;在射频（radio frequency, RF）电路中，阻容感这些基本元器件，表现出来并不是只有阻性、容性、感性单一特性。我们将从最基本的元器件开始分析。&lt;/p&gt;
&lt;p&gt;射频电路中的导线可有多种形式。频频谱中导线的行为在很大程度上取决于导线的直径和长度。在 AWG（American Wire Gauge）规范中，规定了每种线规及对应的直径（AWG 值每相差 6，英制直径就相差一倍）：&lt;/p&gt;
&lt;p&gt;| AWG 值 | 直径（mil） |
| ------ | ----------- |
| 50     | 1           |
| 44     | 2           |
| 38     | 4           |
| 32     | 8           |
| 36     | 16          |
| 20     | 32          |
| 14     | 64          |&lt;/p&gt;
&lt;h2&gt;趋肤效应&lt;/h2&gt;
&lt;p&gt;导体在低频下，电子的传输覆盖整个导体截面。随着频率增加，截面中心磁场的增强，会对电子的传输产生阻抗，将电子挤向边缘，使截面中心的电流密度低于边缘处，这就是 &lt;strong&gt;趋肤效应&lt;/strong&gt;（也译为集肤效应）。趋肤效应在所有导体（包括阻容感的管脚）。&lt;/p&gt;
&lt;p&gt;导体中电流密度下降到边缘的 $\frac{1}{e} (37\%)$ 的深度，叫做 &lt;strong&gt;趋肤深度&lt;/strong&gt;，这是与频率、导体磁导率、电导率相关的函数，因此不同的导体有不同的趋肤深度。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220408141754.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;趋肤效应造成的影响是让导体的有效横截面减小，让交流阻抗变大。对于敷铜而言，趋肤深度在 60 Hz 时约为 0.85 cm，在 1 MHz 时约为 0.007 cm（即 63% 的 RF 电流在表面到距离表面 0.007cm 的宽度范围内流动）。&lt;/p&gt;
&lt;h2&gt;直线电感&lt;/h2&gt;
&lt;p&gt;任何载流介质都会产生磁场，如果介质中是交流电，那这个磁场也会交替变化，因此在导线上产生一个电压，它将阻止任何电流的变化，这种现象称为 &lt;strong&gt;自感&lt;/strong&gt;，我们把有这种性质的称为电感。直线电感虽然微不足道，但在高频下就需要注意了。&lt;/p&gt;
&lt;p&gt;直线电感的大小取决于长度与直径，计算公式如下：&lt;/p&gt;
&lt;p&gt;$$
L=0.002l[2.3\log(\frac{4l}{d})-0.75] uH
$$&lt;/p&gt;
&lt;p&gt;其中，电感大小 $L$ 的单位是 $uH$，导体长度 $l$ 和直径 $d$ 的单位为 $cm$。&lt;/p&gt;
&lt;p&gt;电感是 RF 设计中不可忽视的因素，所有电感和 RF 电路（包括连接线、管脚等等）都会表现出感性。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《RF-Circuit-Design(second-edition)_Chris-Bowick》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B3%BB%E7%BB%9F-%E5%AF%BC%E7%BA%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B3%BB%E7%BB%9F-%E5%AF%BC%E7%BA%BF/</guid>
      
    </item>
    
    <item>
      <title>射频 - 组件与系统 - 电容</title>
      
      
      
      
      <description>&lt;p&gt;电容也广泛用于射频，如旁路、级间耦合、谐振电路、滤波器。&lt;/p&gt;
&lt;h2&gt;平行板电容&lt;/h2&gt;
&lt;p&gt;电容器是由绝缘材料或电介质隔开的两个导电表面组成的任何设备。电介质通常是陶瓷、空气、纸、云母、塑料、薄膜、玻璃或油。电容器的电容是当导体之间存在电位差时允许存储电荷的特性。电容以法拉为单位测量。&lt;/p&gt;
&lt;p&gt;电容是由绝缘材料或电介质隔开的两个导电表面组成的。电介质通常是陶瓷、空气、纸、云母、塑料、薄膜、玻璃或油。电容值是表示两导体存在电位差时，允许储存电荷的特性：&lt;/p&gt;
&lt;p&gt;$$
C=\frac{Q}{V}
$$&lt;/p&gt;
&lt;p&gt;其中，电容值 $C$ 的单位是 $F$（法），电荷值 $Q$ 的单位是 $C$（库伦）。因为 $F$ 的单位太大，所以有 $1uF=10^{-6}F$，$1pF=10^{-12}F$&lt;/p&gt;
&lt;p&gt;如果我们知道平行板面积 $A$，平行板间距离 $A$（单位是英寸），电介质材料的介电常数 $\varepsilon$（单位是 $f/m$），那么平行板电容器的计算公式可表示为：&lt;/p&gt;
&lt;p&gt;$$
C=\frac{0.2249\varepsilon A}{d\varepsilon_0} pF
$$&lt;/p&gt;
&lt;p&gt;其中，$\varepsilon_0$ 是自由空间中的介电常数（$\varepsilon_0=8.854*10^{-12}f/m$）。&lt;/p&gt;
&lt;h2&gt;电容等效电路&lt;/h2&gt;
&lt;p&gt;平行板电容器只是一种理想的电容器，现实世界中，电容器的等效电路如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411143753.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，$C$ 为我们通常所指的电容，$L$ 为管脚电感，$R_s$ 是以功率因数（PF）或耗散因数（DF）表示的散热损耗，$R_p$ 表示绝缘电阻。更详细的定义如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功率因数（Power Factor, PF）&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;理想电容器中，交流电流将超前施加的电压 90°。因等效电路中总串联电阻（$Rs + Rp$），此相位角 $φ$ 在实际电容器中会更小。功率因数是关于温度、频率和电介质材料的函数，由以下公式定义：&lt;/p&gt;
&lt;p&gt;$$
PF=\cos \phi
$$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绝缘电阻（Insulation Resistance）&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;表示在施加电压的情况下流过电容器电介质的直流电流量。没有材料是完全绝缘的，所以会有漏电流。在等效电路中，这条漏电流的路径用 $R_p$ 表示，其值通常高于 100000 兆欧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有效串联电阻（Effective Series Resistance, ESR）&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;此电阻值是 $Rs + Rp$ 的组合等效值，是电容器的交流电阻。由以下公式定义：&lt;/p&gt;
&lt;p&gt;$$
ESR=\frac{PF}{\omega C}(10^6)
$$&lt;/p&gt;
&lt;p&gt;其中，$\omega=2 \pi f$。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;耗散因数（Dissipation Factor, DF）&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;耗散因数是交流电阻与电容器电抗之比，由以下公式定义：&lt;/p&gt;
&lt;p&gt;$$
DF=\frac{ESR}{X_c}*100\%
$$&lt;/p&gt;
&lt;p&gt;衍生出来的品质因数 Q，是耗散因数的倒数，品质因数越大，电容的性能越好。&lt;/p&gt;
&lt;p&gt;电容器中这些缺陷的影响可以在图 1-9 中看到。在这里，理想电容器的阻抗特性与实际电容器的阻抗特性相对应。如图所示，随着工作频率的增加，引线电感变得很重要。最后，在 Fr 处，电感与电容器串联谐振。然后，在 Fr 之上，电容器就像一个电感器。通常，较大值的电容器往往比较小值的电容器具有更多的内部电感&lt;/p&gt;
&lt;p&gt;在实际电容器中，受这些因素的影响，频率与阻抗的变化曲线如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411152818.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，随着频率的升高，管脚电感的影响变大，最终在 $F_r$ 处，电感与电容产生串联谐振。频率再往上，电容表现为感性。一般来说，大电容往往比小电容有更大的电感。因此举个例子，在 250MHz 频率下，100nF 的电容比 300pF 的旁路效果差，因为根据电抗的公式 $X_e=\frac{1}{\omega C}$，在特定频率下，大电容比小电容有更小的的电抗。&lt;/p&gt;
&lt;p&gt;但是，在射频频率上，情况可能正好相反。在某些较高频率下，一个 100nF 的电容可能会比一个 330pF 的对信号产生更高的阻抗。这是在设计频率高于 100 MHz 的电路时必须考虑的问题。使用网分仪可以看出在特定频率下电容的阻抗。&lt;/p&gt;
&lt;h2&gt;电容的种类&lt;/h2&gt;
&lt;p&gt;电容可以由各种介电材质制造而成。常用的有以下类别：&lt;/p&gt;
&lt;p&gt;（未完待续）&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《RF-Circuit-Design(second-edition)_Chris-Bowick》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B3%BB%E7%BB%9F-%E7%94%B5%E5%AE%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B3%BB%E7%BB%9F-%E7%94%B5%E5%AE%B9/</guid>
      
    </item>
    
    <item>
      <title>射频 - 组件与系统 - 电阻</title>
      
      
      
      
      <description>&lt;p&gt;电阻是一种导电介质的属性，在交流环境下，电阻器有时候仍发挥着其直流属性（例如在晶体管的偏置网络中），有可能会破坏电路的射频工作点。&lt;/p&gt;
&lt;h2&gt;电阻等效电路&lt;/h2&gt;
&lt;p&gt;在射频电路中，电阻的等效模型是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220408173626.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中，R 表示电阻本身，L 表示管脚等效电感，C 是寄生电容的组合（因电阻器的结构而异）。一般来说，碳膜电阻的高频性能很差，因为它是由密集的介电颗粒或碳颗粒组成的，每对碳颗粒之间是一个很小的寄生电容。这些寄生效应是等效电路的重要组成成分。&lt;/p&gt;
&lt;p&gt;线绕电阻在射频电路中也有问题，这些电阻往往在高频上表现出变化的阻抗，对于 10MHz-200MHz 频率范围内的小阻值电阻来说尤为明显。绕线电阻的寄生电感比碳膜电阻大，电感值可用单层空芯电感计算公式（下文会提及）近似求得。因为线绕电阻电感的特征明显，其阻抗会随着频率的增加而增大。在某个频率（$F_r$）下，电感（$L$）将会与并联电容（$C$）产生谐振，产生一个阻抗的峰值，在峰值点之后，频率越增加，阻抗反而越小，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411135204.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;金属膜电阻可在频率范围内表现出最佳的特性，虽然其等效电路与碳膜、绕线电阻一样，但等效电路中各个寄生元件的值都会降低。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411135807.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，金属膜电阻的阻抗在大致高于 10MHz 时开始有降低的趋势，这是由于等效电路中的并联电容导致的。但是在很高的频率上，或者很低的阻值（50Ω）时，阻抗会受管脚电感与趋肤效应的影响。管脚电感产生了一个谐振峰值。而趋肤效应影响的是曲线的斜率。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《RF-Circuit-Design(second-edition)_Chris-Bowick》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B3%BB%E7%BB%9F-%E7%94%B5%E9%98%BB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E7%BB%84%E4%BB%B6%E4%B8%8E%E7%B3%BB%E7%BB%9F-%E7%94%B5%E9%98%BB/</guid>
      
    </item>
    
    <item>
      <title>射频 - 谐振电路 - 基本定义</title>
      
      
      
      
      <description>&lt;p&gt;在这一大章节下，我们将研究并联谐振电路及其在射频下的特性，负载 Q 的概念以及它与源阻抗和负载阻抗的关系，也会研究元件的损耗，以及它们是如何影响电路的，最后将展示一些耦合谐振电路。&lt;/p&gt;
&lt;p&gt;谐振电路应用在射频电路中每个发射器、接收器、测试设备上，选择性地将某个频率或一组频率从源传递到负载，同时衰减该通带之外的所有其他频率。理想的谐振电路是这样子的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411160533.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;它是一个完美的矩形通带，在频率小于或大于目标带宽时无线衰减，同时允许目标贷款内的信号不受干扰地通过。但因为构成滤波器的元器件的物理属性，完美滤波器是不可能的，但我们可以设计满足需求的非理想滤波器。&lt;/p&gt;
&lt;h2&gt;带宽&lt;/h2&gt;
&lt;p&gt;带宽（Bandwidth）一般指半功率带宽，即幅值响应比带通响应低 3dB 处，上限频率与下限频率的差（$f_2-f_1$），如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411161650.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;dB 的含义与计算&lt;/h2&gt;
&lt;p&gt;dB 是个相对值，能够简短表示很大或很小的数。假如我们表示功率变化增大到 100000000 倍，只需要写 +80dB 即可。&lt;/p&gt;
&lt;p&gt;$$
dB=10\lg(\frac{P_1}{P_0})
$$&lt;/p&gt;
&lt;p&gt;其中，$P_1$ 表示当前功率，$P_0$ 表示参考功率。假如 $P_1$ 是 $P_0$ 的两倍，那么：&lt;/p&gt;
&lt;p&gt;$$
10\lg(\frac{P_1}{P_0})=10\lg2=3dB
$$&lt;/p&gt;
&lt;p&gt;假如 $P_1$ 是 $P_0$ 的一半，那么：&lt;/p&gt;
&lt;p&gt;$$
10\lg(\frac{P_1}{P_0})=10\lg\frac{1}{2}=10\lg2^{-1}=-3dB
$$&lt;/p&gt;
&lt;p&gt;同理，+10dB 表示功率增大 10 倍，-10dB 表示功率减小为 1/10。&lt;/p&gt;
&lt;p&gt;3 dB 在功率图或误码率图中经常出现，指的是 +3 dB 表示增大为两倍，-3 dB 表示下降为 1/2。&lt;/p&gt;
&lt;h2&gt;dBm 与 dBw&lt;/h2&gt;
&lt;p&gt;dBm、dBw 就是把 dB 公式中的参考功率 P0 分别换成 1 mW、1 W：&lt;/p&gt;
&lt;p&gt;$$
dBm=10\lg(\frac{P_1}{1mW})
$$&lt;/p&gt;
&lt;p&gt;$$
dBw=10\lg(\frac{P_1}{1W})
$$&lt;/p&gt;
&lt;p&gt;因为 1 mW、1 W 都是确定的值，因此 dBm、dBw 都可以表示功率的绝对值。&lt;/p&gt;
&lt;p&gt;有一个当前功率与使用 dBm、dBw 的换算表：&lt;/p&gt;
&lt;p&gt;| watt         | dBm       | dBw         |
| :----------- | :-------- | :---------- |
| 0.1 pW       | -100 dBm  | -130 dBW    |
| 1 pW         | -90 dBm   | -120 dBW    |
| 10 pW        | -80 dBm   | -110 dBW    |
| 100 pW       | -70 dBm   | -100 dBW    |
| 1 nW         | -60 dBm   | -90 dBW     |
| 10 nW        | -50 dBm   | -80 dBW     |
| 100 nW       | -40 dBm   | -70 dBW     |
| 1 μW         | -30 dBm   | -60 dBW     |
| 10 μW        | -20 dBm   | -50 dBW     |
| 100 μW       | -10 dBm   | -40 dBW     |
| 794 μW       | -1 dBm    | -31 dBW     |
| &lt;strong&gt;1.000 mW&lt;/strong&gt; | &lt;strong&gt;0 dBm&lt;/strong&gt; | &lt;strong&gt;-30 dBW&lt;/strong&gt; |
| 1.259 mW     | 1 dBm     | -29 dBW     |
| 10 mW        | 10 dBm    | -20 dBW     |
| 100 mW       | 20 dBm    | -10 dBW     |
| 1 W          | 30 dBm    | 0 dBW       |
| 10 W         | 40 dBm    | 10 dBW      |
| 100 W        | 50 dBm    | 20 dBW      |
| 1 kW         | 60 dBm    | 30 dBW      |
| 10 kW        | 70 dBm    | 40 dBW      |
| 100 kW       | 80 dBm    | 50 dBW      |
| 1 MW         | 90 dBm    | 60 dBW      |
| 10 MW        | 100 dBm   | 70 dBW      |&lt;/p&gt;
&lt;p&gt;其中，最常用的是 1 W = 30 dBm。&lt;/p&gt;
&lt;h2&gt;dBi、dBd 与 dBc&lt;/h2&gt;
&lt;p&gt;dBi、dBd 与 dBc 的计算方法与 dB 相似，表示的是功率相对值，但参考基准 $P_0$ 所代表的含义不同。&lt;/p&gt;
&lt;p&gt;| dBx                     | 参考基准                          |
| :---------------------- | :-------------------------------- |
| dBi（Decibe-Isotropic） | 全方向性天线（Isotropic antenna） |
| dBd（Decibe-Dipole）    | 偶极子天线（Dipole antenna）      |
| dBc（Decibe-Carrier）   | 载波（Carrier）                   |&lt;/p&gt;
&lt;p&gt;表示同一增益，dBi 一般比 dBd 大个 2.15，这个差值是两种天线的不同方向性导致的。&lt;/p&gt;
&lt;h2&gt;谐振电路的中心频率与其带宽之比（Q）&lt;/h2&gt;
&lt;p&gt;此 Q 与上一篇文章的 Q 定义不同。Q 是谐振电路选择性的量度，Q 值越高，带宽越窄，谐振电路的选择性就越高。Q 的公式定义如下：&lt;/p&gt;
&lt;p&gt;$$
Q=\frac{f_e}{f_2-f_1}
$$&lt;/p&gt;
&lt;h2&gt;形状因子（Shape Factor, SF）&lt;/h2&gt;
&lt;p&gt;谐振电路的形状因数通常定义为谐振电路 60dB 带宽与 3dB 带宽之比。举个例子，如果 60dB 带宽 $f_4 - f_3$ 为 3 MHz，3dB 带宽 $f_2-f_1$ 为 1.5 MHz，则形状因子为：&lt;/p&gt;
&lt;p&gt;$$
SF=\frac{3MHz}{1.5MHz}=2
$$&lt;/p&gt;
&lt;p&gt;形状因子是衡量裙边陡峭程度的一种方式。数字越小，响应裙边越陡峭。完美滤波器的形状因子为 1，这是终极取值。形状因子比 1 小的通带如下图，但这在物理上是不可能的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411163003.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;极限衰减（Ultimate attenuation）&lt;/h2&gt;
&lt;p&gt;指的是通带与带通外衰减峰值之差。受元器件实际物理特性影响，极限衰减不可能是无限的。&lt;/p&gt;
&lt;h2&gt;插入损耗（Insertion Loss）&lt;/h2&gt;
&lt;p&gt;指在信号源段与末端之间的组件造成的衰减损耗。在阻抗没有匹配的情况下，因为这些组件的阻性，源端有些信号会被这些组件吸收，这里造成的衰减就叫插入损耗，以 dB 表示。&lt;/p&gt;
&lt;h2&gt;纹波（Ripple）&lt;/h2&gt;
&lt;p&gt;纹波表示谐振电路通带的平坦度，以 dB 表示。它的值定义为通带中的最大衰减与最小衰减的差。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《RF-Circuit-Design(second-edition)_Chris-Bowick》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/R2JhFOAvphBExxE2xb951Q&#34;&gt;100 分钟看懂 dB、dBm、dBw 的区别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF-%E5%9F%BA%E6%9C%AC%E5%AE%9A%E4%B9%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF-%E5%9F%BA%E6%9C%AC%E5%AE%9A%E4%B9%89/</guid>
      
    </item>
    
    <item>
      <title>射频 - 谐振电路 - 无损组件的共振</title>
      
      
      
      
      <description>&lt;p&gt;在之前的章节，我们在基本元器件的寄生器件中提到了共振。以下将研究共振产生的原因及如何利用它。&lt;/p&gt;
&lt;h2&gt;无损组件的共振&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220411172646.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从上图的分压规则可以看出，当阻抗为 $Z_p$ 的分流元件放置在具有内阻 $R_s$ 的发生器的输出端时，该电路可达到的最大输出电压为：&lt;/p&gt;
&lt;p&gt;$$
V_{out}=\frac{Z_p}{R_s+Z_p}(V_{in})
$$&lt;/p&gt;
&lt;p&gt;因此，$V_{out}$ 始终小于 $V_{in}$。如果 $Z_p$ 是与频率相关的阻抗（例如容性或感性电抗），则 $V_{out}$ 也将与频率相关，并且 $V_{out}$ 与 $V_{in}$ 的比率是电路的增益（或在这种情况下为损耗），也将取决于频率。例如，我们以一个 25pF 电容器作为分流元件:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418095301.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;并绘制 $V_{out}/V_{in}$ 函数（以 dB 为单位）与频率的关系：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418095324.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;依据以下的公式：&lt;/p&gt;
&lt;p&gt;$$
\frac{V_{out}}{V_{in}}=20\log_{10} \frac{X_C}{R_s+X_C}
$$&lt;/p&gt;
&lt;p&gt;其中，$\frac{V_{out}}{V_{in}}$ 是以 dB 表示的损耗；$R_s$ 表示源阻抗；$X_C$ 表示容抗，$X_C=\frac{1}{j\omega C}$。&lt;/p&gt;
&lt;p&gt;此 RC 电路的损耗会随着频率的增加而增加。这就形成了一个简单的低通滤波器。需要注意的是，频率每翻一倍，衰减斜率会以 6 dB 的速率下降。这是由于电路中的单个电抗元件导致的。下文将会看到，对于我们加进电路中的每个重要电抗元件，该衰减斜率将额外增加 6 dB。&lt;/p&gt;
&lt;p&gt;如果我们把电路中的电容换成一个 0.05µH 的电感：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418101327.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以绘制出这样的曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418101522.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;依据的是以下公式：&lt;/p&gt;
&lt;p&gt;$$
\frac{V_{out}}{V_{in}}=20\log_{10} \frac{X_L}{R_s+X_L}
$$&lt;/p&gt;
&lt;p&gt;其中，$X_L$ 表示感抗，$X_L=j\omega L$。&lt;/p&gt;
&lt;p&gt;这里形成了一个最终衰减斜率为 6 dB/倍频程的简单高通滤波器。&lt;/p&gt;
&lt;p&gt;根据上文的公式，我们能够绘制出两个独立且相反的电抗元件的频率响应。如果我们将电感和电容同时并进源端，形成一个 LC 电路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418103702.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们将得到这样的曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418103931.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据以下公式计算而得的：&lt;/p&gt;
&lt;p&gt;$$
\because V_{out}=\frac{X_{total}}{R_s+X_{total}}(V_{in})
$$&lt;/p&gt;
&lt;p&gt;$$
\because X_{total}=\frac{X_C*X_L}{X_C+X_L}
$$&lt;/p&gt;
&lt;p&gt;$$
\because X_C=\frac{1}{j\omega C}
$$&lt;/p&gt;
&lt;p&gt;$$
\because X_L=j\omega L
$$&lt;/p&gt;
&lt;p&gt;$$
\therefore \frac{V_{out}}{V_{in}}=\frac{j\omega L}{(R_s-\omega^2 R_s L C)+j\omega L}
$$&lt;/p&gt;
&lt;p&gt;如果用 dB 表示，可以表示为：&lt;/p&gt;
&lt;p&gt;$$
\frac{V_{out}}{V_{in}}= 20\log_{10} | \frac{j\omega L}{(R_s-\omega^2 R_s L C)+j\omega L}  |
$$&lt;/p&gt;
&lt;p&gt;在上面的曲线中，当我们接近调谐电路的谐振频率时，谐振曲线的斜率增加到 12 dB/倍频程，这是因为两个电抗元件都在以 6 dB/倍频程的速率变化，并以相反的方向倾斜；然而，当我们在任一方向远离共振时，曲线再次稳定到 6 dB/倍频程的斜率，因为只有一个电抗发挥作用，另一个电抗在这些频率下对电路呈现非常高的阻抗，且在电路中表现几乎可以忽略。&lt;/p&gt;
&lt;p&gt;RLC 滤波器可用于从环境无线电波的总频谱中选择某个窄范围的频率，作为带通滤波器使用。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《RF-Circuit-Design(second-edition)_Chris-Bowick》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF-%E6%97%A0%E6%8D%9F%E7%BB%84%E4%BB%B6%E7%9A%84%E5%85%B1%E6%8C%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF-%E6%97%A0%E6%8D%9F%E7%BB%84%E4%BB%B6%E7%9A%84%E5%85%B1%E6%8C%AF/</guid>
      
    </item>
    
    <item>
      <title>射频 - 谐振电路 - 负载Q值 🚧</title>
      
      
      
      
      <description>&lt;p&gt;我们将谐振电路的中心频率与其 3dB 衰减带宽之比定义为谐振电路的 Q 值，也称为负载 Q 值，因为它描述了实际电路内或负载条件下谐振电路的通带特性。谐振电路的负载 Q 取决于三个主要因素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源阻抗 $R_s$&lt;/li&gt;
&lt;li&gt;负载电阻 $R_L$&lt;/li&gt;
&lt;li&gt;上一章提到的元器件的 Q 值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418111129.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;$R_s$ 和 $R_L$ 对负载 Q 的影响&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220418111200.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;源阻抗和负载阻抗对谐振电路的负载 Q 的影响如上图所示。原始曲线（虚线）是由 50Ω 源阻抗，0.05uH 的无损电感器和 25pF 无损电容器组成的电路的谐振曲线，它的 Q 值由上文的公式 $Q=\frac{f_e}{f_2-f_1}$ 计算约为 1.1，显然这不是一个非常窄带或高 Q 值的设计。&lt;/p&gt;
&lt;p&gt;把源阻抗变为 1000Ω，绘制出一条新的谐振曲线（实线），谐振电路的 Q 值明显增加到 22.4。通过提高源阻抗，我们增加了谐振电路的 Q 值。&lt;/p&gt;
&lt;p&gt;上面的方法并不能看出负载阻抗对谐振曲线的影响。如果像这样把外部负载连接到谐振电路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220419163311.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以等效为：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220419163441.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时负载 Q 可以表示为：&lt;/p&gt;
&lt;p&gt;$$
Q=\frac{R_p}{X_p}
$$&lt;/p&gt;
&lt;p&gt;其中，$R_p$ 是等效总并联电阻，$X_p$ 表示容抗 / 感抗（他们在谐振时是相等的）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. 如果我们要设计一个谐振电路，使其在 150Ω 的源阻抗和 1000Ω 的负载阻抗条件下运行。在 50 MHz 的谐振频率下，负载 Q 须等于 20。假设无损耗元件且无阻抗匹配。那么我们可以得出 $R_p=130Ω$，根据上文公式，$X_p=\frac{R_p}{Q}=\frac{130}{20} =6.5Ω$，又因为 $X_p=\omega L=\frac{1}{\omega C}$，因此，可选 20.7nH 的电感、489.7pF 的电容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看出，$R_p$ 的降低会降低谐振电路的 Q 值，并且，如果 $R_p$ 不变、改变 $X_p$，可以获得相同的效果。因此，对于给定的源阻抗和负载阻抗，当电感为小值而电容器为大值时，可以获得谐振电路的最佳 Q 值。无论哪种情况，$X_p$ 都会降低。例如：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220419165555.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此，采用这两种方法都可以对 Q 值进行调整：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择源阻抗和负载阻抗的最佳值。&lt;/li&gt;
&lt;li&gt;选择优化 Q 的 L 和 C 的分量值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但通常我们只能用第二种方法，因为在许多情况下，源和负载是定好的，没法去改变他们。这种情况下，$X_p$ 受一个给定的 Q 值定义，但通常算出来的值没有合适的实物值与之匹配，在下文将给出解决方法。&lt;/p&gt;
&lt;h2&gt;元器件的 Q 值对负载 Q 值的影响&lt;/h2&gt;
&lt;p&gt;在上文中，我们都是假设谐振电路中使用的元件是无损器件，元器件的 Q 值不会对负载 Q 值产生影响。但在非理想情况下，我们必须考虑单个元件的 Q 值。&lt;/p&gt;
&lt;p&gt;在无损谐振电路中，谐振时电路端子上的阻抗是无限大的。但在实际电路中，由于元件损耗，会存在一些等效并联电阻：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220419174200.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电阻 (Rp) 及其相关的并联电抗 (Xp) 可以从&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《RF-Circuit-Design(second-edition)_Chris-Bowick》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF-%E8%B4%9F%E8%BD%BDQ%E5%80%BC/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91%E8%AE%BE%E8%AE%A1/%E5%B0%84%E9%A2%91-%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF-%E8%B4%9F%E8%BD%BDQ%E5%80%BC/</guid>
      
    </item>
    
    <item>
      <title>Flip - 基于全志 F1C200s 的 Linux 开发板</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220527234815.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220527234855.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/Flip&#34;&gt;&lt;strong&gt;linyuxuanlin/Flip&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览 ：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/Flip/raw/main/Hardware/Flip_V0.1.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;F1C100s/F1C200s 基于 ARM9 CPU 架构，封装相同，区别仅仅是 F1C100S 内置 32MB DDR1 内存，而 F1C200S 为 64MB。&lt;/p&gt;
&lt;p&gt;除此之外，这个芯片还集成了 USB OTG、UART、SPI、TWI、TP、SD/MMC、CSI 等通用外设。&lt;/p&gt;
&lt;h2&gt;基本参数&lt;/h2&gt;
&lt;p&gt;F1C200s 的基本参数如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM9 CPU architecture 400M&lt;/li&gt;
&lt;li&gt;Memory SIP 64MB DDR1&lt;/li&gt;
&lt;li&gt;SD2.0, eMMC 4.41&lt;/li&gt;
&lt;li&gt;Video H.264/MPEG1 1920x1080@30fps decoding，MJPEG 1280x720@30fps encoding&lt;/li&gt;
&lt;li&gt;Audio, 2xDAC 和 1xADC, DAC up to 192kHz,ADC up to 48kHz&lt;/li&gt;
&lt;li&gt;1 x I2S/PCM interface&lt;/li&gt;
&lt;li&gt;Display RGB interface up to 1280x720@60fps&lt;/li&gt;
&lt;li&gt;TV CVBS output, support NTSC/PAL&lt;/li&gt;
&lt;li&gt;USB OTG&lt;/li&gt;
&lt;li&gt;SDIO&lt;/li&gt;
&lt;li&gt;IR&lt;/li&gt;
&lt;li&gt;3 x TWI&lt;/li&gt;
&lt;li&gt;2 x SPI&lt;/li&gt;
&lt;li&gt;3 x UART&lt;/li&gt;
&lt;li&gt;Melis or Linux SDK OS&lt;/li&gt;
&lt;li&gt;Package QFN88, 10mm x 10mm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;F1C200s 的系统架构框图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220422152227.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;典型应用示意图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220513232027.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pin 定义：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220422153239.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/p1279030826/article/details/113370239&#34;&gt;【目录】全志 F1C100S/F1C200S 学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/peng-zhihui/Planck-Pi&#34;&gt;peng-zhihui/Planck-Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/twzy/p/14714651.html&#34;&gt;小白自制 Linux 开发板 一. 瞎抄原理图与乱画 PCB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mangopi.cc/f1c200s&#34;&gt;MangoPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;各模块的设计&lt;/h2&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/Flip-%E5%9F%BA%E4%BA%8E%E5%85%A8%E5%BF%97F1C200s%E7%9A%84Linux%E5%BC%80%E5%8F%91%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/Flip-%E5%9F%BA%E4%BA%8E%E5%85%A8%E5%BF%97F1C200s%E7%9A%84Linux%E5%BC%80%E5%8F%91%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>OSD335x 最小系统的设计</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211012144907.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;TI 的 OSD335x-SM 芯片，是一颗将 Cortex-A8 AM335x 处理器、DDR3 内存、TPS65217C PMIC（电源管理芯片）、TL5209 LDO、所需的被动器件、以及 4KB 的 EEPROM 集成在 BGA 封装内的 SIP（System-in-Package）模组。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211012153036.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;OSD335x 的最小系统包括 4 个部分：电源、时钟、复位、烧录调试接口。为了让其更易于使用，还可以加上一对按钮、几颗 LED 和一些外设排针。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211012155857.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;电源&lt;/h2&gt;
&lt;h3&gt;输入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VIN_AC：主电源输入（DC5V@2A），根据需要加保险丝、磁珠、二级管、输入保护等。&lt;/li&gt;
&lt;li&gt;VIN_USB：USB 电源输入（DC5V@0.5A，通过内部 PMIC 可提高至 1.3A），也作为 USB 2.0 host 的参考电压电流&lt;/li&gt;
&lt;li&gt;VIN_BAT：可作为电池输入（使用电池电源，2.75-5.5V）或输出（为电池充电），不可作为事件输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211012173057.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;输出&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SYS_VOUT：等于输入 PMIC 的电压，要注意接在这个引脚上的元器件是能在 3-5V 区间内使用的，因为当电池充电的时候，PMIC 切换不同的电源输入。&lt;/li&gt;
&lt;li&gt;SYS_VDD1_3P3V：3.3V 输出，由 TL5209 LDO 提供，并由 PMIC 的 LDO4 使能，作为主电源输出。&lt;/li&gt;
&lt;li&gt;SYS_VDD2_3P3V：3.3V 输出，由 PMIC 的 LDO2 提供。&lt;/li&gt;
&lt;li&gt;SYS_RTC_1P8V：1.8V 输出，由 PMIC 的 LDO1 提供，也用于驱动 AM335x 内部 RTC。&lt;/li&gt;
&lt;li&gt;SYS_VDD_1P8V：1.8V 输出，由 PMIC 的 LDO3 提供。&lt;/li&gt;
&lt;li&gt;SYS_ADC_1P8V：1.8V 输出，由 PMIC 的 LDO3 提供，为模拟应用做了滤波，在内部也为 AM335x ADC 供电。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐为所有电源输出添加测试点，方便调试。&lt;/p&gt;
&lt;p&gt;还有一些为内部供电的引脚：VDDSHV_3P3V、VDDS_DDR、VDD_MPU、VDD_CORE、VDDS_PLL。他们仅供引出测试点测量，但不要引出给外部电路使用。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211013142917.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;模拟参考输入与地&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211013143532.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;OSD335x 有 ADC 接口，如果要使用 ADC，则必须正确使用模拟电源和模拟地。ADC 接口能承受最高 1.8V 的模拟输入（参照 VREFP 引脚）。通常来说，VREFP 可直接连接 SYS_ADC_1P8V，但如果有需要，可以分压到一个更低的电压。&lt;/p&gt;
&lt;h3&gt;电源管理&lt;/h3&gt;
&lt;p&gt;在 OSD335x 内部，AM335x 通过 I2C0 与 TPS65217C PMIC 进行通信。&lt;/p&gt;
&lt;p&gt;I2C0 内部有 4.7k 上拉电阻，但如果要带设备的话，最好在外部额外添加上拉电阻。&lt;/p&gt;
&lt;p&gt;TPS65217C PMIC 可通过 I2C 来设置以下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电池充电电压&lt;/li&gt;
&lt;li&gt;充电安全时间控制&lt;/li&gt;
&lt;li&gt;Buck/Boost 输出电压&lt;/li&gt;
&lt;li&gt;LDO 输出电压&lt;/li&gt;
&lt;li&gt;上电 / 掉电时序&lt;/li&gt;
&lt;li&gt;过流过温阈值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211013161739.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;除了通过 I2C 连接，PMIC 还有些功能引脚需要连接 OSD335x：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PMIC_POWER_EN：用于 AM335x 控制 PMIC 上电时序&lt;/li&gt;
&lt;li&gt;PMIC_IN_PWR_EN：使能 PMIC 的 buck 和 LDO，给高电平会开始进入上电时序控制&lt;/li&gt;
&lt;li&gt;RTC_PWRONRSTN：AM335x RTC 的独立电源复位脚&lt;/li&gt;
&lt;li&gt;PMIC_OUT_LDO_PGOOD：LDO1 和 LDO2 的输出状态，高电平输出良好，低电平代表任意一个 LDO 输出异常。&lt;/li&gt;
&lt;li&gt;EXT_WAKEUP：外部事件唤醒引脚&lt;/li&gt;
&lt;li&gt;PMIC_OUT_NWAKEUP：Host 外部事件唤醒引脚（低电平有效）&lt;/li&gt;
&lt;li&gt;EXTINTN：AM335x 外部中断输入引脚&lt;/li&gt;
&lt;li&gt;PMIC_OUT_NINT：PMIC 终端输出引脚（低电平有效）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211013161927.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211013163119.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;电源按键&lt;/h3&gt;
&lt;p&gt;TPS65217C PMIC 内部有一个低电平有效的复位输入，通过 PMIC_IN_PB_IN 引脚连接在 OSD335x，也可以外接按键。这个输入引脚有 50ms 的去抖动时间，和一个内部上拉电阻。除此之外，这个电源按钮还有以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 PMIC_IN_PB_IN 检测到下降沿输入时，PMIC 将会从关闭或睡眠模式中唤醒&lt;/li&gt;
&lt;li&gt;当 PMIC_IN_PB_IN 保持低电平超过 8 秒时，PMIC 会重新上电/复位&lt;/li&gt;
&lt;li&gt;如果 PMIC_IN_PB_IN 引脚长时间保持低电平，器件将继续在 ACTIVE 和 RESET 状态之间循环，每 8 秒进入复位。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211013165738.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;电源指示灯&lt;/h3&gt;
&lt;p&gt;我们使用 SYS_VDD2_3P3V（150mA） 作为电源指示灯的输出。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014092054.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;复位&lt;/h2&gt;
&lt;p&gt;OSD335x 有几种复位方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冷复位（上电复位）：在设备上电和电源域上电时进行&lt;/li&gt;
&lt;li&gt;热复位&lt;/li&gt;
&lt;li&gt;是部分复位，不影响全局逻辑&lt;/li&gt;
&lt;li&gt;是为了减少复位恢复时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OSD335x 有 3 个复位输入（与 AM335x 上的复位输入同名）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PWRONRSTN：冷复位；在上电期间需要保持低电平，直到所有输入电源线都稳定为止；不可阻塞，除了 RTC 外，整个系统都会收到影响。&lt;/li&gt;
&lt;li&gt;WARMRSTN：热复位；一些 PRCM（电源、复位和时钟管理）和控制模块寄存器对热复位不敏感&lt;/li&gt;
&lt;li&gt;RTC_PWRONRSTN：RTC 模块专用的上电复位输入不受冷复位影响，RTC_PWRONRSTN 也不会对设备其他部分产生影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014105556.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;时钟&lt;/h2&gt;
&lt;h3&gt;OSC0 与 OSC1&lt;/h3&gt;
&lt;p&gt;OSD335x 有两个时钟输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSC0：高速时钟输入（主时钟），在 19.2MHz、24MHz（推荐）、25MHz 或 26MHz 频率下工作。此时钟源为所有非 RTC 功能提供参考。OSC0 时钟输入拥有 OSC0_IN、OSC0_OUT 和 OSC0_GND 引脚。&lt;/li&gt;
&lt;li&gt;OSC1：低速时钟输入，运行在 32.768kHz 下，为 RTC 供电。OSC1 时钟输入拥有 OSC1_IN、OSC1_OUT 和 OSC1_GND 引脚。此时钟源默认失能，非必要输入，如果需要的话，可以接收内部 32kHz RC 晶振信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014095242.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图中，Rbias 与 Rd 是可选的。如果不能提供准确的频率，Rbias 可用于灵活校准，可以 DNP（可不加进原理图或留空位）。但如果不需要 Rd 的话，必须用导线替代，否则会造成断路。&lt;/p&gt;
&lt;p&gt;在参考设计中，OSC0 选用 7A-24.000MAAJ-T 24MHz 晶振，18pF 电容，1MΩ 电阻作为 Rbias。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014101932.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;RTC_KALDO_ENN 引脚默认外部下拉（10k 电阻），用于使能内部 RTC LDO。&lt;/p&gt;
&lt;h2&gt;烧录调试接口&lt;/h2&gt;
&lt;p&gt;在参考设计中，使用 JTAG 接口。&lt;/p&gt;
&lt;p&gt;https://octavosystems.com/octavosystems.com/wp-content/uploads/2017/07/JTAG.jpg&lt;/p&gt;
&lt;h2&gt;其他外设&lt;/h2&gt;
&lt;h3&gt;启动配置&lt;/h3&gt;
&lt;p&gt;启动配置表可参考 &lt;a href=&#34;http://www.ti.com/lit/pdf/spruh73&#34;&gt;&lt;strong&gt;AM335x Technical Reference Manual (TRM)&lt;/strong&gt;&lt;/a&gt; 的 &lt;strong&gt;SYSBOOT Configuration Pins&lt;/strong&gt; 章节&lt;/p&gt;
&lt;p&gt;在参考设计中，我们这样接：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014110132.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置以下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置时钟频率为 24Mhz&lt;/li&gt;
&lt;li&gt;通过 XDMA_EVENT_INTR0 禁用 CLKOUT1 输出，该引脚仅用于 JTAG 仿真。&lt;/li&gt;
&lt;li&gt;将启动顺序设置为 SPI0 -&amp;gt; MMC0 -&amp;gt; USB0 -&amp;gt; UART0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;用户按键与 LED&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014110906.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;外设排针&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014110947.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jaycarlson.net/embedded-linux/#&#34;&gt;SO YOU WANT TO BUILD AN EMBEDDED LINUX SYSTEM?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://octavosystems.com/octavo_products/osd335x-sm/#Technical%20Documents&#34;&gt;OSD335x-SM System-in-Package Smallest AM335x Module, Quickest Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://octavosystems.com/app_notes/osd335x-design-tutorial/&#34;&gt;OSD335x Reference Design Tutorial Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/OSD335x%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/OSD335x%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>RobotCtrl - STM32 通用开发套件</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220416181125.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/RobotCtrl&#34;&gt;&lt;strong&gt;linyuxuanlin/RobotCtrl&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RobotCtrl - STM32 通用开发套件包含三块板子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/RobotCtrl_Core-%E6%A0%B8%E5%BF%83%E6%9D%BF&#34;&gt;&lt;strong&gt;RobotCtrl_Core - 核心板&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/RobotCtrl_Func-%E5%A4%96%E8%AE%BE%E6%8B%93%E5%B1%95%E6%9D%BF&#34;&gt;&lt;strong&gt;RobotCtrl_Core - 外设拓展板&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/RobotCtrl_Power-%E7%94%B5%E6%BA%90%E4%BE%9B%E7%94%B5%E6%9D%BF&#34;&gt;&lt;strong&gt;RobotCtrl_Power - 电源供电板&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;设计需求&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220527111854.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注：以下为设计摘要，具体内容请跳转相关文章。&lt;/p&gt;
&lt;h3&gt;RobotCtrl_Core 的设计思路&lt;/h3&gt;
&lt;p&gt;RobotCtrl_Core 核心板的原理图设计包括供电电路、单片机最小系统、USB 通信、B2B 连接器、用户按键与 LED 部分。&lt;/p&gt;
&lt;p&gt;供电电路采用的是 LDO，其优势是电路相对简单、输出纹波小、低成本、layout 面积小。加上相应的去耦电容与电源指示灯，将 USB 端口或 B2B 连接器输入的 5V 电压稳压转换为 3.3V（最大电流为 1A）。&lt;/p&gt;
&lt;p&gt;在最小系统的设计中，电源为 3.3V 电源输入，并加相应的电容去耦。另外，ADC 专用电源 VDDA 通过一个 120Ω 的磁珠连接至 VDD，并增加额外的去耦电容。复位电路增加外部按键，触发 NRST 引脚低电平使系统复位。时钟电路增加 HSE 外部高速时钟，从 OSC_IN 与 OSC_OUT 引脚外接无源晶振。启动模式默认选择从片上 Flash 存储器启动，即 BOOT0 为低，BOOT1 为任意电平，使用 10k 电阻将 BOOT0 拉低至地。下载调试电路直接将 SW 接口（DIO/CLK）引出。&lt;/p&gt;
&lt;p&gt;USB 通信电路的设计，STM32F4 有内置 USB 外设。外部选用的是 USB Micro 座子，数据线上串联 10Ω 的限流电阻，分别在信号线和电源线上加 TVS 和 ESD 二极管，满足 EMC 需求。&lt;/p&gt;
&lt;p&gt;B2B 连接器用于与 RobotCtrl_Func 之间的电源供应与数据通信。在本设计中，两个 B2B 连接器足够将 STM32F407ZE 单片机的所有 IO 都引出，增强了后期的拓展性。&lt;/p&gt;
&lt;h3&gt;RobotCtrl_Func 的设计思路&lt;/h3&gt;
&lt;p&gt;RobotCtrl_Func 的原理图设计主要包含串口通信（RS-232/TTL）、CAN 通信、以太网通信、姿态传感器、超声波接口、红外测距接口（带光耦隔离）、蜂鸣器、SW 下载调试接口、用户按键与 LED、通用 GPIO 接口、电源、B2B 连接器等模块。&lt;/p&gt;
&lt;p&gt;串口通信电路提供 TTL 和 RS-232 电平接口。其中，TTL 直接引出 USART1 和 UART5 的 TX/RX 引脚使用，而 RS-232 通信电路是采用 TTL 转 232 电平的芯片，将单片机的 TTL 转换为 RS-232 电平。为提高 EMC 性能，DB9 座子外壳连接引脚可对地接 TVS 二极管，TTL 转 232 芯片需要外加电源去耦与自举电容。&lt;/p&gt;
&lt;p&gt;CAN 通信电路基于 CAN 收发芯片搭建，通过 CAN 差分电平传输。CAN 总线上需加 120Ω 末端电阻，以匹配阻抗，减少信号的反射。&lt;/p&gt;
&lt;p&gt;以太网通信基于以太网 PHY 芯片，使用 RMII 接口与单片机通信，通过内置隔离变压器的 RJ45 网口外接网线通信。以太网电路的时钟采用外部 25M 无源晶振，且需要独立供电以减小电源干扰，这里使用了与核心板相同的低压差线性稳压器供电方案，为以太网电路单独供电。&lt;/p&gt;
&lt;p&gt;四路红外测距传感器接口电路因红外传感器使用的是 12V 供电与信号（NPN 常开型），所以从 RobotCtrl_Power 引出 12V 为其供电，并加上四路光耦隔离芯片，以传输高低电平信号。光耦隔离电路的设计，需要根据电流的大小，计算限流电阻的阻值，确保在数据手册规定的触发电压范围内即可。姿态传感器模块的设计，采用 MPU6050 模块，预留 I2C 接口与单片机进行通信。&lt;/p&gt;
&lt;h3&gt;RobotCtrl_Power 的设计思路&lt;/h3&gt;
&lt;p&gt;RobotCtrl_Power 原理图设计主要由 XT60 双电源输入、24V 转 12V、24V 转 5V 稳压电路，以及使能开关与电源指示灯、防反接、防过压电路等部分组成。&lt;/p&gt;
&lt;p&gt;电源输入采用两个 XT60 座子并联，其中一个端子用于电源输入，另一个端子可外接备用电源，也可以作为电池电源输出供外部使用。&lt;/p&gt;
&lt;p&gt;防反接电路采用 MOS 管防反接设计。正常连接电源的情况下，MOS 导通；反接则截止，保护电路。在本设计中，选用了国产 P-MOS 做防反接，并用电阻分压和稳压二极管锁定正向导通时的门极电压。为实现防过压与 ESD 防护，在电源输入端并联 TVS 二极管。&lt;/p&gt;
&lt;p&gt;稳压 12V/5V 电路的设计，选用了基于 LMR14050 的 Buck 非隔离开关稳压方案。根据 Buck 拓扑的原理与稳压芯片数据手册的参考，分别挑选反馈电阻的阻值，计算比例使输出保持为 12V/5V。在选择电感的型号时，需要注意最大饱和电流需要大于脉动电流，且留足余量；二极管选择肖特基二极管以实现高速开关，其电压和电流也需要满足电路的需求。此外，输入和输出都需要并联大小去耦电容，以滤除纹波。&lt;/p&gt;
&lt;p&gt;使能开关可控制稳压输出的开启与关闭，接入 Buck 芯片的使能引脚以实现稳压输出的软开启与软关断。电源指示灯可向用户指示 12V/5V 稳压的输出状态。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220416181139.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;本项目是我个人的毕业设计，在项目的设计焊接调试中遇到了诸多大大小小的问题，在导师、同事、朋友们的鼎力相助下，最终得以成功完坑，也拿到了优秀毕设的荣誉，谢谢你们！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6/</guid>
      
    </item>
    
    <item>
      <title>RobotCtrl_Core - 核心板</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220527113423.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/RobotCtrl/tree/main/RobotCtrl_MultiBoard_Project/RobotCtrl_Core&#34;&gt;&lt;strong&gt;linyuxuanlin/RobotCtrl/RobotCtrl_Core&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/RobotCtrl/raw/main/RobotCtrl_MultiBoard_Project/RobotCtrl_Core_V2.81B.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;注：项目包含于 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;原理图设计&lt;/h2&gt;
&lt;p&gt;RobotCtrl_Core 的主要功能如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;供电稳压电路（5V 转 3.3V，引出测试点）&lt;/li&gt;
&lt;li&gt;单片机最小系统&lt;/li&gt;
&lt;li&gt;电源电路（供电去耦、ADC 模拟电源）&lt;/li&gt;
&lt;li&gt;复位电路（外部复位按键）&lt;/li&gt;
&lt;li&gt;时钟电路（HSE 无源晶振）&lt;/li&gt;
&lt;li&gt;下载调试接口（SW）&lt;/li&gt;
&lt;li&gt;启动模式（选择从主闪存存储器启动）&lt;/li&gt;
&lt;li&gt;USB 供电与通信电路（USB-Micro）&lt;/li&gt;
&lt;li&gt;B2B 连接器（引出所有 IO）&lt;/li&gt;
&lt;li&gt;板载外设&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;供电电路&lt;/h3&gt;
&lt;p&gt;RobotCtrl_Core 可由 USB 接口或 B2B 连接器输入 5V 电源，并转换为 3.3V 供单片机核心及板载外设使用。稳压电路使用了 LDO（AMS1117-3.3，最大电流为 1A），附带了一颗电源指示灯，并预留了关键测试点。&lt;/p&gt;
&lt;p&gt;LDO 的基础原理可以参考文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E7%BA%BF%E6%80%A7%E7%A8%B3%E5%8E%8B&#34;&gt;&lt;strong&gt;电源拓扑 - 线性稳压&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;单片机最小系统&lt;/h3&gt;
&lt;p&gt;单片机最小系统的设计，分为几个部分：供电、复位、下载调试、时钟、启动模式。基础知识可参考文章 &lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%AC%BE%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F&#34;&gt;&lt;strong&gt;如何设计一款单片机的最小系统&lt;/strong&gt;&lt;/a&gt; 和 &lt;a href=&#34;https://wiki-power.com/STM32F4%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91&#34;&gt;&lt;strong&gt;STM32F4 硬件开发&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;电源电路&lt;/h3&gt;
&lt;p&gt;去耦电容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VDD：总的一个 10 μF 的陶瓷电容，外加每个 VDD 引脚旁接一个 100 nF 陶瓷电容。&lt;/li&gt;
&lt;li&gt;VDDA：100 nF 陶瓷电容 + 1 µF 陶瓷电容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VCAP 电容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各对地接一个 2.2 µF 陶瓷电容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;复位电路&lt;/h3&gt;
&lt;p&gt;启用电源监控器，即 PDR_ON 通过 120Ω 电阻上拉。除此之外，也添加了复位按键，带硬件防抖。&lt;/p&gt;
&lt;h3&gt;时钟电路&lt;/h3&gt;
&lt;p&gt;外部高速时钟（HSE）选用村田 8M 无源晶振。&lt;/p&gt;
&lt;h3&gt;下载调试接口&lt;/h3&gt;
&lt;p&gt;本设计直接引出下载调试接口，不需要外部上拉／下拉电阻（因为 STM32 内部有集成）。&lt;/p&gt;
&lt;h3&gt;启动模式&lt;/h3&gt;
&lt;p&gt;选择从主闪存存储器启动，即 BOOT0 串接 10 K 的下拉电阻，BOOT1 任意。&lt;/p&gt;
&lt;h3&gt;USB 供电与通信电路（USB-Micro）&lt;/h3&gt;
&lt;p&gt;STM32 有内置 USB 外设，只需要直接引出接口（在 STM32F07ZE 芯片上是 PA11 和 PA12）就可以实现 USB 通信。&lt;/p&gt;
&lt;p&gt;USB 接口也支持了外部供电功能（VUSB）。&lt;/p&gt;
&lt;h2&gt;B2B 连接器&lt;/h2&gt;
&lt;p&gt;B2B 连接器选用正点原子的 3710 系列，RobotCtrl_Core 核心板使用一对 3710M060037G3FT01（公座），RobotCtrl_Func 拓展板使用一对 F060037G0FR01（母座）进行配合。一对 B2B（共 120 pin）足以将 STM32F407ZE 的所有 IO 完全引出使用，最大化利用了系统资源。&lt;/p&gt;
&lt;p&gt;B2B 连接器的相关资料请参考 &lt;a href=&#34;http://www.openedv.com/thread-78182-1-1.html&#34;&gt;&lt;strong&gt;3710F 端子资料&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;用户按键与 LED&lt;/h2&gt;
&lt;p&gt;为了能够进行简单的验证调试，RobotCtrl_Core 板载了一颗用户按键与一颗用户 LED，按键配置为 GPIO 输入模式、内部上拉，并加一个 MLCC 电容以硬件抖动。LED 配置为 GPIO 输出模式，引脚置高电平点亮，中间串联一个电阻以限流。&lt;/p&gt;
&lt;p&gt;具体引脚请参考原理图。&lt;/p&gt;
&lt;h2&gt;硬件测试&lt;/h2&gt;
&lt;p&gt;电源测试需要在 USB 座子接入 5V 供电（或者通过 B2B 连接器通过外设拓展版供电），在 3.3V 的测试点测得相应电压即可。实际测试为 3.32V，验证通过。&lt;/p&gt;
&lt;p&gt;功能测试通过烧录初始程序（用户按键控制用户 LED），测试上电及程序的烧录、复位按键与用户按键、电源 LED 与用户 LED、USB 功能。在实际的测试中，初始程序可正常通过 ST-Link 烧录进单片机核心板。复位按键可正常复位系统；在测试程序中，可以通过用户按键点亮/关闭用户 LED；上电时，电源 LED 正常亮起。USB 功能测试，使用的是 USB 虚拟串口的程序，打开串口工具（波特率任意），发送任意字符，将返回相同字符，测试通过。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Frankenstien_/article/details/105971841&#34;&gt;STM32 的 PDR_ON 引脚，比较好的解释（转载+补充）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/136163591&#34;&gt;正点原子【STM32-F407 探索者】第五十六章 USB 读卡器(Slave)实验&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl_Core-%E6%A0%B8%E5%BF%83%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl_Core-%E6%A0%B8%E5%BF%83%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>RobotCtrl_Func - 外设拓展板</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220527113505.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/RobotCtrl/tree/main/RobotCtrl_MultiBoard_Project/RobotCtrl_Func&#34;&gt;&lt;strong&gt;linyuxuanlin/RobotCtrl/RobotCtrl_Func&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/RobotCtrl/raw/main/RobotCtrl_MultiBoard_Project/RobotCtrl_Func_V0.8B.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;注：项目包含于 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;原理图设计&lt;/h2&gt;
&lt;p&gt;RobotCtrl_Func 的主要功能如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12V 电源输入，5V 电源输入 / 输出，3.3V 电源输出（引出测试点）&lt;/li&gt;
&lt;li&gt;5V 转 3.3V 供电稳压电路 * 2（供传感器 / 以太网，引出测试点）&lt;/li&gt;
&lt;li&gt;以太网通信电路&lt;/li&gt;
&lt;li&gt;CAN 通信电路 * 2&lt;/li&gt;
&lt;li&gt;串口通信电路（RS-232 与 TTL 电平）&lt;/li&gt;
&lt;li&gt;蜂鸣器电路&lt;/li&gt;
&lt;li&gt;用户按键 * 2&lt;/li&gt;
&lt;li&gt;用户 LED * 3&lt;/li&gt;
&lt;li&gt;MPU6050 姿态传感器模块&lt;/li&gt;
&lt;li&gt;红外测距传感器接口 * 4&lt;/li&gt;
&lt;li&gt;超声波接口 * 5&lt;/li&gt;
&lt;li&gt;用户 GPIO 接口 * 6&lt;/li&gt;
&lt;li&gt;B2B 连接器（引出所有 IO）&lt;/li&gt;
&lt;li&gt;SW 下载接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电源&lt;/h3&gt;
&lt;p&gt;RobotCtrl_Func 板载 2 路 LDO，原理与 RobotCtrl_Core 中相似，其中一路供外设传感器使用，另一路供以太网电路单独使用。&lt;/p&gt;
&lt;h3&gt;以太网通信电路&lt;/h3&gt;
&lt;p&gt;以太网通信基于以太网 PHY 芯片，使用 RMII 接口与单片机通信，通过内置隔离变压器的 RJ45 网口外接网线通信。以太网电路的时钟采用外部 25M 无源晶振，且需要独立供电以减小电源干扰，这里使用了与核心板相同的低压差线性稳压器供电方案，为以太网电路单独供电。以太网通信的原理可以参考文章 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%BB%A5%E5%A4%AA%E7%BD%91%E9%80%9A%E4%BF%A1%EF%BC%88LwIP%EF%BC%89&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 以太网通信（LwIP）&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;CAN 通信电路&lt;/h3&gt;
&lt;p&gt;CAN 通信电路基于 CAN 收发芯片搭建，通过 CAN 差分电平传输。CAN 协议控制器（例如单片机）通过串行线（RX/TX）连接到收发器，在收发器上转换为 CAN 信号（CANH/CANL），并通过 RS 引脚来选择高速 / 静音模式。CAN 总线上需加 120Ω 末端电阻，以匹配阻抗，减少信号的反射。CAN 通信的原理可参考文章 &lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-CAN&#34;&gt;&lt;strong&gt;通信协议 - CAN&lt;/strong&gt;&lt;/a&gt; 与 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-CAN%E9%80%9A%E4%BF%A1&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 串口通信&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;串口通信电路&lt;/h3&gt;
&lt;p&gt;RobotCtrl_Func 板载了 RS-232 电平的串口通信电路，并额外引出了 TTL 电平的 USART1/UART5。串口通信的原理可参考文章 &lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1&#34;&gt;&lt;strong&gt;通信协议 - 串口通信&lt;/strong&gt;&lt;/a&gt; 与 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - 串口通信&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;RS-232 通信电路是采用 TTL 转 232 电平的芯片，将单片机的 TTL 转换为 RS-232 电平。为提高 EMC 性能，DB9 座子外壳连接引脚可对地接 TVS 二极管，TTL 转 232 芯片需要外加电源去耦与自举电容。&lt;/p&gt;
&lt;h3&gt;蜂鸣器电路&lt;/h3&gt;
&lt;p&gt;蜂鸣器电路选用的是 12V 蜂鸣器，用一个三极管即可控制。&lt;/p&gt;
&lt;h3&gt;用户按键与 LED&lt;/h3&gt;
&lt;p&gt;用户按键与 LED 原理可参考 RobotCtrl_Core，此处不多赘述。&lt;/p&gt;
&lt;h3&gt;姿态传感器模块&lt;/h3&gt;
&lt;p&gt;直接贴装 MPU6050 模块使用，预留 I2C 接口与单片机进行通信。I2C 通信的原理可参考文章 &lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-I2C&#34;&gt;&lt;strong&gt;通信协议 - I2C&lt;/strong&gt;&lt;/a&gt; 与 &lt;a href=&#34;https://wiki-power.com/HAL%E5%BA%93%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-I2C%E9%80%9A%E4%BF%A1%EF%BC%88MPU6050%EF%BC%89&#34;&gt;&lt;strong&gt;HAL 库开发笔记 - I2C 通信（MPU6050）&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;红外测距传感器接口&lt;/h3&gt;
&lt;p&gt;四路红外测距传感器接口电路因红外传感器使用的是 12V 供电与信号（NPN 常开型），所以从 RobotCtrl_Power 引出 12V 为其供电，并加上四路光耦隔离芯片，以传输高低电平信号。光耦隔离电路的设计，需要根据电流的大小，计算限流电阻的阻值，确保在数据手册规定的触发电压范围内即可。光电耦合器的原理可以参考文章 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E6%9C%AC%E5%85%83%E5%99%A8%E4%BB%B6-%E5%85%89%E7%94%B5%E8%80%A6%E5%90%88%E5%99%A8&#34;&gt;&lt;strong&gt;基本元器件 - 光电耦合器&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;电源输入接口与 B2B 连接器&lt;/h3&gt;
&lt;p&gt;外设拓展板的电源输入接口为 4 个排针，用于与底部的电源供电板相连接。B2B 连接器用于为主控板供电及数据通信。&lt;/p&gt;
&lt;h2&gt;硬件测试&lt;/h2&gt;
&lt;h3&gt;电源测试&lt;/h3&gt;
&lt;p&gt;电源输入（以下测试项目都需按照此操作连接电源）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCC_12V：通过 P1 输入。&lt;/li&gt;
&lt;li&gt;VCC_5V：通过 P2 或 J1_1/2 输入。&lt;/li&gt;
&lt;li&gt;GND：通过 P3、P4、J1_31/32 或 J2_30/31 与外界共地。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5V 转 3.3V 稳压（供传感器）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCC_3V3S：测量 C30 两端电压是否为 3.3V。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5V 转 3.3V 稳压（供以太网）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCC_3V3E：测量 C26 两端电压是否为 3.3V。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;板载传感器测试&lt;/h3&gt;
&lt;p&gt;用户按键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置 PE2/PE3 为 GPIO 上拉输入模式，按下按键读取到低电平，松开为高。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用户 LED：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置 PC6/PC7/PC8 为 GPIO 输出模式，输出高电平，LED 依次点亮；输出低电平熄灭。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MPU6050 姿态传感器模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测量 M1 模块 1 号引脚对地是否为 VCC_3V3S 电压。&lt;/li&gt;
&lt;li&gt;测试 IO 引脚连通性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;蜂鸣器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测量 BUZZER1 正极对地是否为 VCC_12V 电压。&lt;/li&gt;
&lt;li&gt;配置 PC9 为 GPIO 输出模式，输出高电平，蜂鸣器发出声音；输出低电平不发出声音。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;串口转 RS232：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测量 C3 两端是否为 VCC_3V3S 电压。&lt;/li&gt;
&lt;li&gt;运行测试程序，通过 PB10/PB11 引脚进行测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CAN 总线通信：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测量 C10/C13 两端是否为 VCC_5V 电压。&lt;/li&gt;
&lt;li&gt;运行测试程序（回环测试），通过 PD0/PD1、PB12/PB13 引脚进行测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以太网通信：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测量 IC2_9 对地是否为 VCC_3V3S 电压。&lt;/li&gt;
&lt;li&gt;测量 VDD1A/VDD2A 对地是否为 VCC_3V3E 电压。&lt;/li&gt;
&lt;li&gt;运行测试程序，通过 RMII 接口对以太网通信进行测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;接口测试&lt;/h3&gt;
&lt;p&gt;红外测距传感器接口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分别测量 J16/J17/J18/J19 座子的 1 号引脚对地是否为 VCC_12V 电压。&lt;/li&gt;
&lt;li&gt;配置 PF2/PF3/PF4/PF5 为 GPIO 下拉输入，外部使得 IR1/IR2/IR3/IR4 分别为高电平（VCC_12V），则 PF2/PF3/PF4/PF5 读取到高电平；反之为低电平。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;超声波接口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分别测量 J3/J4/J5/J6/J7 座子的 4 号引脚对地是否为 VCC_3V3S 电压。&lt;/li&gt;
&lt;li&gt;测试 IO 引脚连通性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用户 GPIO 接口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分别测量 J9/J10/J11 座子的 4 号引脚对地是否为 VCC_3V3S 电压。&lt;/li&gt;
&lt;li&gt;测试 IO 引脚连通性。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl_Func-%E5%A4%96%E8%AE%BE%E6%8B%93%E5%B1%95%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl_Func-%E5%A4%96%E8%AE%BE%E6%8B%93%E5%B1%95%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>RobotCtrl_Power - 电源供电板</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220527113517.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/RobotCtrl/tree/main/RobotCtrl_MultiBoard_Project/RobotCtrl_Power&#34;&gt;&lt;strong&gt;linyuxuanlin/RobotCtrl/RobotCtrl_Power&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/RobotCtrl/raw/main/RobotCtrl_MultiBoard_Project/RobotCtrl_Power_V0.3B.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;注：项目包含于 &lt;a href=&#34;https://wiki-power.com/RobotCtrl-STM32%E9%80%9A%E7%94%A8%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6&#34;&gt;&lt;strong&gt;RobotCtrl - STM32 通用开发套件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;原理图设计&lt;/h2&gt;
&lt;p&gt;RobotCtrl_Power 的主要功能如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;24V 电源输入（理论可以 15-40V）&lt;/li&gt;
&lt;li&gt;电池电源转 12V/5A 稳压器（带使能开关与指示灯）&lt;/li&gt;
&lt;li&gt;电池电源转 5V/5A 稳压器（带使能开关与指示灯）&lt;/li&gt;
&lt;li&gt;防反接保护（P-MOS）&lt;/li&gt;
&lt;li&gt;过压保护（大于 30V 开始保护）&lt;/li&gt;
&lt;li&gt;电池电源输出、12V 电源输出、5V 电源输出接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电源输入&lt;/h3&gt;
&lt;p&gt;电源输入选用了两个 XT60PW-M 座子，做双电源备份输入（也可以作为一个输入一个输出使用），并提供两排排针供输出测试。&lt;/p&gt;
&lt;p&gt;防反接功能使用 P-MOS 实现，虽然 XT60 是防呆设计，但还是需要防止正负电源线焊反的情况。反接时，P-MOS 不会导通，电源不会灌入系统。防反接功能的设计可参考文章 &lt;a href=&#34;https://wiki-power.com/%E9%98%B2%E5%8F%8D%E6%8E%A5%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1&#34;&gt;&lt;strong&gt;防反接电路的设计&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;瞬时过压保护与 ESD 防护，使用的是 TVS 管，当接入大于 30V 时，它将分走多余的电压保护后置系统。&lt;/p&gt;
&lt;h3&gt;12V 与 5V 稳压电路&lt;/h3&gt;
&lt;p&gt;12V 与 5V 稳压电路选用的是两路 TI 的 LMR14050 DC-DC Buck 方案，每一路最高能带 5A 电流。具体设计可参考文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-LMR14050&#34;&gt;&lt;strong&gt;电源方案（Buck）- LMR14050&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;另外，每一路都增加了使能开关和电源指示灯。&lt;/p&gt;
&lt;h3&gt;电源输出端口&lt;/h3&gt;
&lt;p&gt;VBAT、12V、5V 输出各自使用一对 4pin 排针，12V 输出额外增加 KF2EDGR-3.81 座子为特殊传感器提供供电。&lt;/p&gt;
&lt;h2&gt;PCB 设计&lt;/h2&gt;
&lt;p&gt;RobotCtrl_Power 的 PCB layout，需要注意反馈网络的上下分压电阻需要尽量靠近芯片的 FB 引脚，Vout 采样路径应尽量原理噪声产生路径（电感二极管环路），最好是通过过孔走屏蔽层后的层；电感应该靠近 SW 引脚放置，以降低磁噪声和静电噪声；二极管、输入和输出电容的接地节点应尽可能小，最好是仅在一个点连接到系统阶地层，以最大限度减少系统接地层中的传导噪声；输出电容应尽量靠近电感和二极管的节点放置，且走线尽可能短而粗，以降低传导和辐射噪声，提高效率。&lt;/p&gt;
&lt;p&gt;RobotCtrl_Power 的 PCB 顶层和底层走信号和电源，中间插入两层地平面以增强信号与电源完整性。&lt;/p&gt;
&lt;h2&gt;硬件测试&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;防反接测试：输入电压反接时是否可不开启系统。&lt;/li&gt;
&lt;li&gt;使能开关与电源指示灯：测试是否可以正常运行。&lt;/li&gt;
&lt;li&gt;输出：测试 12V/5V 输出是否达标，以及纹波大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl_Power-%E7%94%B5%E6%BA%90%E4%BE%9B%E7%94%B5%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/RobotCtrl_Power-%E7%94%B5%E6%BA%90%E4%BE%9B%E7%94%B5%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>STM32F4 硬件开发</title>
      
      
      
      
      <description>&lt;p&gt;本篇文章将会对 STM32F4 的 MCU 最小系统（电源、时钟、复位、启动模式、调试管理）展开讲解。&lt;/p&gt;
&lt;h2&gt;电源&lt;/h2&gt;
&lt;p&gt;STM32F4 的正常工作电压是 1.8-3.6 V（在某些情况下可降至 1.7 V 以下，在数据手册有说明），有内置稳压器提供内部 1.2 V 的数字电源。&lt;/p&gt;
&lt;p&gt;当主电源 VDD 断电时，可通过 VBAT 的电压为 RTC 和备份寄存器供电。&lt;/p&gt;
&lt;h3&gt;各引脚的介绍&lt;/h3&gt;
&lt;h4&gt;ADC 电源和参考电压&lt;/h4&gt;
&lt;p&gt;为了提高转换精度，ADC 配有独立的电源引脚，可单独滤波并屏蔽 PCB 上的噪声。&lt;/p&gt;
&lt;p&gt;ADC 电压源从单独的 VDDA 引脚输入。在电路设计时，应该把 VSSA 接到同个供电地，而非 VSS。&lt;/p&gt;
&lt;p&gt;如果芯片的封装是 100 引脚以上的，就会有 VREF+ 和 VREF- 引脚，它们的作用是给 ADC 输入外部参考电压。VREF- 要接至内部 VSSA。如果芯片引脚小于 100，那么这两个引脚没有引出，在内部接在了 VDDA 和 VSSA。&lt;/p&gt;
&lt;h4&gt;后备电池电源&lt;/h4&gt;
&lt;p&gt;如果需要在 VDD 断电后保留备份寄存器内容，可将 VBAT 连到电池或其他电源。&lt;/p&gt;
&lt;p&gt;VBAT 也可为 RTC 供电，由复位模块中内置的掉电复位 （PDR）电路进行控制。&lt;/p&gt;
&lt;h4&gt;内置稳压器&lt;/h4&gt;
&lt;p&gt;内置稳压器在复位后始终处于使能态，有三种工作模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行：稳压器为 1.2 V 域（内核、存储器和数字外设）提供全功率电源供应。&lt;/li&gt;
&lt;li&gt;停止：稳压器为 1.2 V 域提供低功率电源供应，同时保留寄存器和 SRAM 中的内容。&lt;/li&gt;
&lt;li&gt;待机：稳压器掉电。除待机电路和备份域，寄存器和 SRAM 的内容都将丢失。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;电路设计&lt;/h3&gt;
&lt;p&gt;以下是电源引脚的设计方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VDD&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去耦电容&lt;/strong&gt;：总的一个 10 μF 的陶瓷/钽电容，外加每个 VDD 引脚旁接一个 100 nF 陶瓷电容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VDDA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去耦电容&lt;/strong&gt;：100 nF 陶瓷电容 + 1 µF 陶瓷/钽电容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过滤模拟噪声&lt;/strong&gt;：可通过磁珠接至 VDD。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VREF+&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去耦电容&lt;/strong&gt;：如果启用 VREF+ 功能，则需接一个 100 nF 和一个 1 µF 的电容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过滤模拟噪声&lt;/strong&gt;：可通过 47 Ω 电阻连至 VDDA。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VBAT&lt;/strong&gt;：接外部电池（1.65 V-3.6 V）。如果不需要电池电源，则接至 VDD 引脚。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VCAP1/VCAP2&lt;/strong&gt;：各对地连接一个 2.2 µF 陶瓷电容（ESR &amp;lt; 2 Ω）；如果只有 VCAP1，则连一个 4.7 µF 陶瓷电容（ESR &amp;lt; 1 Ω）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;复位与电源监控&lt;/h3&gt;
&lt;h4&gt;上电复位（POR）/ 掉电复位（PDR）&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529143014.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;STM32F4 芯片中集成 POR/PDR 电路，具体上电 / 掉电复位的特征见上图。如需禁用此功能，可通过 PDR_ON 引脚实现。&lt;/p&gt;
&lt;h4&gt;系统复位&lt;/h4&gt;
&lt;p&gt;系统复位的触发条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NRST 引脚低电平（外部复位）&lt;/li&gt;
&lt;li&gt;窗口看门狗计数结束（WWDG 复位）&lt;/li&gt;
&lt;li&gt;独立看门狗计数结束（IWDG 复位）&lt;/li&gt;
&lt;li&gt;软件复位（SW 复位）&lt;/li&gt;
&lt;li&gt;低功耗管理复位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529143925.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可通过查看控制 / 状态寄存器 （RCC_CSR）中的复位标志确定复位源。&lt;/p&gt;
&lt;p&gt;即使不需要外部复位电路，也建议外加一个下拉电容以提高 EMS 性能。&lt;/p&gt;
&lt;h2&gt;时钟&lt;/h2&gt;
&lt;p&gt;在 STM32F4 上，可使用三种不同的时钟源来驱动系统时钟（SYSCLK）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HSI（高速内部时钟信号）&lt;/li&gt;
&lt;li&gt;HSE（高速外部时钟信号）&lt;/li&gt;
&lt;li&gt;PLL 时钟&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也有两种次级时钟源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LSI RC（32 kHz 低速内部 RC），用于驱动独立看门狗，也可用于 RTC 停机 / 待机模式下自动唤醒。&lt;/li&gt;
&lt;li&gt;LSE（32.768 kHz 低速外部晶振），用于驱动 RTC。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果需要降低功耗，每个时钟在未使用时都可以单独关闭。&lt;/p&gt;
&lt;h3&gt;外部高速时钟（HSE）&lt;/h3&gt;
&lt;p&gt;HSE 时钟源可以有两种提供方式：外部源（有源）、外部晶振 / 陶瓷谐振器（无源）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529145726.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;外部源（HSE 旁路）&lt;/h4&gt;
&lt;p&gt;如果选择有源外部时钟信号输入，则需提供 1-50 MHz 的时钟源，OSC_IN 连接占空比约为 50% 的外部时钟信号（方波、正弦波或三角波），OSC_OUT 保持高阻态。&lt;/p&gt;
&lt;h4&gt;外部晶振 / 陶瓷谐振器（HSE 晶振）&lt;/h4&gt;
&lt;p&gt;如果选用外部晶振，那么频率范围为 4-26 MHz。设计电路时，谐振器和负载电容必须尽可能地靠近振荡器的引脚，以尽量减小输出失真和起振稳定时间。负载电容值必须根据所选振荡器的不同做适当调整。&lt;/p&gt;
&lt;p&gt;CL1 和 CL2 应选用大小相同（5-25 pF，典型值 25 pF）的陶瓷电容。&lt;/p&gt;
&lt;h3&gt;外部低速时钟（LSE）&lt;/h3&gt;
&lt;p&gt;LSE 时钟源可以有两种提供方式：外部源（有源）、外部晶振 / 陶瓷谐振器（无源）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529152354.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;外部源 （LSE 旁路）&lt;/h4&gt;
&lt;p&gt;如果选择有源外部时钟信号输入，则需提供 1 MHz 以下的时钟源，OSC32_IN 连接占空比约为 50% 的外部时钟信号（方波、正弦波或三角波），OSC32_OUT 保持高阻态。&lt;/p&gt;
&lt;h4&gt;外部晶振 / 陶瓷谐振器（LSE 晶振）&lt;/h4&gt;
&lt;p&gt;如果选用外部晶振，那么频率范围为 32.768 kHz，可作为 RTC 的时钟源。设计电路时，谐振器和负载电容必须尽可能地靠近振荡器的引脚，以尽量减小输出失真和起振稳定时间。负载电容值必须根据所选振荡器的不同做适当调整。&lt;/p&gt;
&lt;h2&gt;启动模式&lt;/h2&gt;
&lt;p&gt;启动模式也叫自举模式。可通过 BOOT0 和 BOOT1 引脚来共同选择三种不同的启动模式：从主闪存存储器启动、从系统存储器启动、从内置 SRAM 启动。&lt;/p&gt;
&lt;p&gt;启动模式的详细介绍请见文章 &lt;a href=&#34;https://wiki-power.com/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F&#34;&gt;&lt;strong&gt;STM32 的启动模式&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一般情况下，我们在 BOOT0 串接 10 K 的下拉电阻，BOOT1 任意即可。如果需要模式切换，那么可以参照以下的设计：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163537.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;调试管理&lt;/h2&gt;
&lt;p&gt;STM32 一般使用 SWJ 协议进行下载调试。&lt;/p&gt;
&lt;h3&gt;SWJ 调试端口&lt;/h3&gt;
&lt;p&gt;STM32F4 内置 SWJ（SW/JTAG）接口。其中，SW-DP 是 2 引脚（时钟 + 数据），JTAG-DP 是 5 引脚，他们有些引脚是复用的。详细区别请见文章 &lt;a href=&#34;https://wiki-power.com/SWD%E4%B8%8EJTAG%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB&#34;&gt;&lt;strong&gt;SWD 与 JTAG 的区别与联系&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 STM32F4 中，SWJ 的引脚分配如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529210858.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;JTAG 的内部上下拉&lt;/h3&gt;
&lt;p&gt;JTAG 引脚不能悬空（因为他们直接连着用于模式调试控制的触发器），所以在芯片内部有集成了对他们的上下拉：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JNTRST&lt;/strong&gt;：内部上拉&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JTDI&lt;/strong&gt;：内部上拉&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JTMS/SWDIO&lt;/strong&gt;：内部上拉&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCK/SWCLK&lt;/strong&gt;：内部下拉&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软件释放 JTAG 的 I/O 后，可以作为普通的 I/O 口使用。&lt;/p&gt;
&lt;h3&gt;连接标准 JTAG 座的硬件设计&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529211840.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考设计&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210529213723.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.st.com/content/ccc/resource/technical/document/application_note/76/f9/c8/10/8a/33/4b/f0/DM00115714.pdf/files/DM00115714.pdf/jcr:content/translations/en.DM00115714.pdf&#34;&gt;AN4488: Getting started with STM32F4xxxx MCU hardware development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/STM32F4%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/STM32F4%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      
    </item>
    
    <item>
      <title>SwiftCtrl - 蓝牙手柄</title>
      
      
      
      
      <description>&lt;p&gt;SwiftCtrl 是一款基于 Arduino 的蓝牙（HC-06）遥控手柄，提供双摇杆、两个按钮的控制，以及 OLED 显示的功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200221145040.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/SwiftCtrl&#34;&gt;&lt;strong&gt;linyuxuanlin/SwiftCtrl&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/SwiftCtrl/raw/master/Hardware/SwiftCtrl.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;基本参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主控：基于 Arduino Nano（ATmega328）&lt;/li&gt;
&lt;li&gt;传感器电压：3.3V&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200311182440.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/SwiftCtrl-%E8%93%9D%E7%89%99%E6%89%8B%E6%9F%84/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/SwiftCtrl-%E8%93%9D%E7%89%99%E6%89%8B%E6%9F%84/</guid>
      
    </item>
    
    <item>
      <title>X86 平台的硬件测试 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;性能测试&lt;/h2&gt;
&lt;h3&gt;SD 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：SD 座子接 TF 卡，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T6（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;EMMC 读写速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：使用 CrystalDiskMark 软件测试 SEQ1M-Q8T6（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;SATA 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：SATA 接 SATA SSD，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T5（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;M.2 M key NVME 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：M.2 M key 接 NVME SSD，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T4（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;M.2 B key USB2.0 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：M.2 B key 接 B key 测试模块，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T3（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;M.2 B key SATA 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：M.2 B key 接 SATA SSD，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T2（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;USB TYPE-C 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：USB TYPE-C 接高速 U 盘，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T1（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;USB3.0 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：USB3.0 接高速 U 盘，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T1（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;USB2.0 接口速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：USB2.0 接高速 U 盘，使用 CrystalDiskMark 软件测试 SEQ1M-Q8T1（其他参数默认）。&lt;/p&gt;
&lt;h3&gt;以太网通信速率&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：RJ45 通过网线直连一台主机，使用 Iperf3 软件测试。主机使用 &lt;code&gt;iperf3 -s&lt;/code&gt; 命令；X86 使用 &lt;code&gt;iperf3 -c &amp;lt;主机 IP&amp;gt;&lt;/code&gt; 命令。&lt;/p&gt;
&lt;h2&gt;功能测试&lt;/h2&gt;
&lt;h3&gt;电源恢复模式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：在 BIOS 内将 &lt;code&gt;Chipset&lt;/code&gt; - &lt;code&gt;Restore on AC Power Loss&lt;/code&gt; 设置为 &lt;code&gt;Last State&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：断电后再来电时，恢复到断电前电脑的状态。断电前如果电脑是处于开机状态，那么来电后就会自动开机；断电前是处于关机状态，那么来电后电脑不会自动开机。&lt;/p&gt;
&lt;h3&gt;启动选项优先级&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：在 BIOS 内将 &lt;code&gt;Boot&lt;/code&gt; - &lt;code&gt;Boot Option Priorities&lt;/code&gt; 切换不同启动磁盘。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：可以修改保存启动项，并从选择的启动项启动。&lt;/p&gt;
&lt;h3&gt;安全启动 🚧&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：切换至 BIOS，开启安全启动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：开启后无法从非认证的设备启动。&lt;/p&gt;
&lt;h3&gt;3.5mm 耳机孔与板载麦克风&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：使用网页在线工具 &lt;a href=&#34;https://mymictest.com/zh&#34;&gt;https://mymictest.com/zh&lt;/a&gt; 测试录音与播音。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：能正常录音与播音。&lt;/p&gt;
&lt;h3&gt;Wi-Fi 支持&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：在 BIOS 内将 &lt;code&gt;Chipset&lt;/code&gt; - &lt;code&gt;WIFI Support&lt;/code&gt; 设置为 &lt;code&gt;Disable&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：关闭后，在系统内无法启用 Wi-Fi 功能。&lt;/p&gt;
&lt;h3&gt;板载 LAN&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：在 BIOS 内将 &lt;code&gt;Chipset&lt;/code&gt; - &lt;code&gt;OnBoard Lan&lt;/code&gt; 设置为 &lt;code&gt;Disable&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：关闭后，在系统内无法启用有线网。&lt;/p&gt;
&lt;h3&gt;LAN 唤醒 🚧&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：切换至 BIOS，关闭 Wake on LAN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：关闭后，网络灯关闭，开启后能被网络唤醒&lt;/p&gt;
&lt;h3&gt;CPU 信息识别&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：切换至 BIOS，在首页检查 CPU 型号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：CPU 型号正常识别。&lt;/p&gt;
&lt;h3&gt;PXE 启动 🚧&lt;/h3&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h3&gt;eMMC 支持&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：在 BIOS 内将 &lt;code&gt;Chipset&lt;/code&gt; - &lt;code&gt;eMMC Support&lt;/code&gt; 设置为 &lt;code&gt;Disable&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：关闭后，无法检测到 eMMC 磁盘。&lt;/p&gt;
&lt;h3&gt;风扇转速&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：在 BIOS 内查看 &lt;code&gt;Advanced&lt;/code&gt; - &lt;code&gt;H/W Monitor&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：可正常显示实时风扇转速。&lt;/p&gt;
&lt;h3&gt;RTC 唤醒 🚧&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：切换至 BIOS，启用 RTC 唤醒，设置唤醒时间&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：设置时间能正常唤醒&lt;/p&gt;
&lt;h3&gt;USB TYPE-C 视频输出&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：USB TYPE-C 接 4K/60Hz（可依据配置调整）显示器，观察显示器显示情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：能正常输出图像显示。&lt;/p&gt;
&lt;h3&gt;蓝牙功能&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：查看系统蓝牙选项，尝试连接蓝牙设备。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：能正常发现并连接设备。&lt;/p&gt;
&lt;h3&gt;Wi-Fi 功能&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：查看系统 Wi-Fi 选项，尝试连接 Wi-Fi。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：能正常连接 Wi-Fi。&lt;/p&gt;
&lt;h2&gt;安全性测试&lt;/h2&gt;
&lt;h3&gt;USB3.0/2.0 过流保护&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;测试方法&lt;/strong&gt;：使用 USB 转裸线，使用电子负载拉 2A 以上电流，观察是否发生保护；恢复低于 2A 电流，观察是否恢复供电。（具体电流值需看电路设计）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：过流下发生过流保护，正常电流下能恢复供电。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/X86%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%A1%AC%E4%BB%B6%E6%B5%8B%E8%AF%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/X86%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%A1%AC%E4%BB%B6%E6%B5%8B%E8%AF%95/</guid>
      
    </item>
    
    <item>
      <title>如何设计一款单片机的最小系统</title>
      
      
      
      
      <description>&lt;p&gt;本文将基于 STM32 单片机（F1 系列）展开讲解。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;学嵌入式，我们一般从单片机学起。学单片机，不能只学软件，硬件知识也要跟上。软硬件相结合的设计，才是真正优秀的设计。&lt;/p&gt;
&lt;p&gt;谈及单片机的硬件设计，我们会先将其浓缩为最小系统，即能实现最基础的功能的最简化设计。以 STM32（F1 系列）单片机为例，最小系统无非是这几部分：&lt;strong&gt;电源、复位、时钟、启动模式、下载调试&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605234144.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;电源&lt;/h2&gt;
&lt;p&gt;STM32 的电源有以下几种类型：&lt;/p&gt;
&lt;h3&gt;主电源（VDD / VSS）&lt;/h3&gt;
&lt;p&gt;主电源指的是标记为 VDD1、VDD2... 的引脚。&lt;br&gt;
每个引脚必须加一个 100nF 的滤波电容，且尽量靠近引脚放置，此外需要一个 10uF 的钽电容公用。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163136.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163204.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;后备电源（VBAT）&lt;/h3&gt;
&lt;p&gt;VBAT 引脚可用于电池供电。如果不用，可以与 VDD 连接在一起。VBAT 也需要一个 100nF 电容滤波。&lt;br&gt;
可参考以下的电源选择电路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163337.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;ADC 电源（VDDA / VSSA）&lt;/h3&gt;
&lt;p&gt;为了提高转换精度，ADC 设备可以从这里取电。一般将 VDDA 通过一个电感后， 与 VDD 相连接。&lt;/p&gt;
&lt;p&gt;若不用到 ADC，可将 VDD，VDDA，VREF+（如果有的话） 接在一起，并对地接 1uF 钽电容 + 10nF 陶瓷电容滤波。&lt;/p&gt;
&lt;h2&gt;复位&lt;/h2&gt;
&lt;p&gt;因为 STM32 内部有上拉电阻，所以外部只接 100nF 电容 + 按键即可：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163429.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上电时，CPU 处于复位状态，此时电容充电，NRST 引脚电位持续拉低，当电容充满电后，NRST 电位变为高电平，此时 CPU 退出复位模式，进入正常运行状态。当按钮被按下时，电容被短路清空电量，按钮松开后重新充电，触发复位。&lt;/p&gt;
&lt;p&gt;根据官方设计指南，电容选取 100nF 即可，以保证 NRST 低电平持续的时间满足 CPU 复位的最小脉宽要求，能正常触发复位。&lt;/p&gt;
&lt;p&gt;如果不需要手动复位功能，也可以略去按键。&lt;/p&gt;
&lt;h2&gt;时钟&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605155729.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图，STM32 的时钟分以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HSI&lt;/strong&gt;：高速内部时钟，是内部的 RC 振荡器，频率为 8MHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HSE&lt;/strong&gt;：高速外部时钟，可接石英 / 陶瓷谐振器，或者接外部时钟源，频率范围为 4MHz~16MHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LSI&lt;/strong&gt;：低速内部时钟，RC 振荡器，频率为 40kHz. 独立看门狗的时钟源只能是它，同时它也可以作为 RTC 的时钟源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LSE&lt;/strong&gt;：低速外部时钟，接频率为 32.768kHz 的石英晶体。LSE 是给 RTC 用的时钟源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PLL&lt;/strong&gt;：锁相环倍频输出，其时钟输入源可选择为 HSI/2，HSE 或 HSE/2. 倍频可为 2~16 倍，但是输出频率最大不得超过 72MHz&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从稳定性上考虑，我们在设计的时候一般使用外部晶振作为时钟源。&lt;strong&gt;一般选取 8MHz 晶振作为 HSE&lt;/strong&gt;，便于倍频（一般倍频到 72MHz）；&lt;strong&gt;选取 32.768kHz 晶振作为 LSE&lt;/strong&gt;，RTC 使用便于分频（32768 是 2 的 15 次方，可以得到精准的时间）。&lt;/p&gt;
&lt;p&gt;至于晶振的选用，有源的精度高，无源的成本低，一般无源就足够了。&lt;br&gt;
如果选用无源晶振，则需要在两端要加上起振电容，滤除晶振波形中的高频杂波。容值可选 10 ～ 40pF.&lt;/p&gt;
&lt;p&gt;晶振输入输出引脚之间可加一个 1M 的电阻，产生负反馈，保证放大器工作在高增益的线性区。同时还起到限流作用，防止反相器驱动过载损坏晶振。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605171011.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200612130149.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;启动模式配置&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;一般将 BOOT0 引脚下拉&lt;/strong&gt;（串接 10K 电阻再接地），&lt;strong&gt;BOOT1 任意&lt;/strong&gt; 即可。&lt;/p&gt;
&lt;p&gt;如果需要模式切换，也可以参照以下的设计：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163537.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;启动模式详见 &lt;a href=&#34;https://wiki-power.com/STM32的启动模式&#34;&gt;&lt;strong&gt;STM32 的启动模式&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;下载调试接口&lt;/h2&gt;
&lt;p&gt;一般我们用 SWD 接口（接线少，方便），&lt;strong&gt;直接引出 SWDIO，SWCLK，VCC，GND 即可&lt;/strong&gt;。&lt;br&gt;
不需要添加外部上拉／下拉电阻，因为 STM32 内部已经有集成了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605170741.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;以上就是 STM32（F1 系列）最小系统的电路设计。更加详细的内容，可以跳转下面的官方文档和相关文章。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Creative_Team/article/details/80006705?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-7&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-7&#34;&gt;STM32F1 系列单片机硬件设计方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cedar-renjun.github.io/2015/12/12/STM32-Hardware-Design/&#34;&gt;STM32 硬件设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.chinaunix.net/uid-24219701-id-4081961.html&#34;&gt;STM32 时钟系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《AN2586 应用笔记-STM32F10xxx 硬件开发使用入门》&lt;/li&gt;
&lt;li&gt;《AN2867 应用笔记-ST 微控制器振荡器电路设计指南》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%AC%BE%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%AC%BE%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F/</guid>
      
    </item>
    
    <item>
      <title>自制 CMSIS-DAP 🚧</title>
      
      
      
      
      <description>&lt;p&gt;CMSIS DAP 是 ARM 官方推出的开源仿真器，支持所有的 Cortex - ARM 器件，支持 JTAG / SWD 接口，在最新的固件版本中，还支持单线 SWO 接口，可以直接在程序里把相应的数据通过 SWO 接口输出到调试窗口，起到类似串口调试的目的。DAP 主要有以下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完全开源，没有版权限制，所以相应的价格会很便宜&lt;/li&gt;
&lt;li&gt;无须驱动，即插即用&lt;/li&gt;
&lt;li&gt;在新版本的 DAP 里集成了串口，除了下载调试外还能充当 USB 转串口模块，一机两用&lt;/li&gt;
&lt;li&gt;性能方面已经可以满足一般用户的需求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（未完成）&lt;/p&gt;
&lt;p&gt;GitHub 仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/DashDAP&#34;&gt;&lt;strong&gt;linyuxuanlin/DashDAP&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/x893/CMSIS-DAP&#34;&gt;x893/CMSIS-DAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.keil.com/pack/doc/cmsis/DAP/html/index.html&#34;&gt;ARM 官网的 DAP 介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.stmcu.org.cn/module/forum/thread-610968-1-2.html&#34;&gt;电子屌丝的的情怀：CMSIS DAP 仿真器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?spm=a1z10.1-c.w5003-21405148310.36.78726a3dta5ieC&amp;amp;id=550828063764&amp;amp;scene=taobao_shop&#34;&gt;CMSIS DAP 仿真器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/konosubakonoakua/Various_MCU_Debugger_DIY&#34;&gt;konosubakonoakua/Various_MCU_Debugger_DIY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;2.0 版本编辑中&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200613154907.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/DashDAP/raw/master/Hardware/DashDAP.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;CMSIS-DAP / DAP-Link 相比 J-Link / ST-Link 有以下优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全开源，无法律风险&lt;/li&gt;
&lt;li&gt;支持虚拟串口&lt;/li&gt;
&lt;li&gt;免驱&lt;/li&gt;
&lt;li&gt;DAPLink 是 CMSIS-DAP，支持 U 盘拖拽烧录 / 固件升级&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;硬件部分&lt;/h2&gt;
&lt;h3&gt;MCU&lt;/h3&gt;
&lt;h4&gt;晶振&lt;/h4&gt;
&lt;p&gt;选用村田 8MHz 无源晶振，型号为 CSTCE8M00G53-R0，封装为 3213，电容为 15pF. 为什么选用这个呢？是因为它体积相对小，并且把两个起振电容整合进去了，硬件设计上能省很多事。至于村田晶振型号的命名方式，可以参考下表：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200612143451.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;电源&lt;/h3&gt;
&lt;h3&gt;功能模块&lt;/h3&gt;
&lt;h2&gt;软件部分&lt;/h2&gt;
&lt;h3&gt;驱动&lt;/h3&gt;
&lt;p&gt;在 Win10 / MacOS / Linux 不需要手动安装驱动；Win8 及更老的系统需要手动安装驱动。&lt;/p&gt;
&lt;h3&gt;拖拽式下载（MSC）&lt;/h3&gt;
&lt;p&gt;讲编译生成的 &lt;code&gt;.hex&lt;/code&gt; 或 &lt;code&gt;.bin&lt;/code&gt; 文件直接拖进 DAPLink 的虚拟 U 盘，即可完成烧录。如果发生错误，错误的信息就会存放在 &lt;code&gt;FAIL.txt&lt;/code&gt; 中。&lt;/p&gt;
&lt;h3&gt;虚拟串口（CDC）&lt;/h3&gt;
&lt;p&gt;CDC 虚拟串口功能具备一般的串口功能，允许双向通信，允许发送中断命令来重置目标板。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/zhouml_msn/article/details/105298776&#34;&gt;JLink、STLink、DAPLink、CMSIS DAP 使用区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jixin.pro/bbs/topic/4187&#34;&gt;技新 · DAPLink 仿真器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wuxx/nanoDAP&#34;&gt;wuxx / nanoDAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/LGG001/DAPLink-Brochure&#34;&gt;LGG001 / DAPLink-Brochure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/%E8%87%AA%E5%88%B6CMSIS-DAP/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A1%AC%E4%BB%B6/%E8%87%AA%E5%88%B6CMSIS-DAP/</guid>
      
    </item>
    
    <item>
      <title>AirForce - 充满灵性的电机驱动模块</title>
      
      
      
      
      <description>&lt;p&gt;AirForce 项目是一款电机驱动组合套件，包含集成稳压功能的母板 AirPort, 和双路电机驱动子板 AirCraft. 可以根据电机数量需求，自由拓展驱动最多 16 路电机。因外观小巧轻便，性能强劲、拓展性高，故命名为 Project AirForce.&lt;/p&gt;
&lt;p&gt;特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;体积较小，接口方便布线&lt;/li&gt;
&lt;li&gt;接口不完全黑盒子封装，提高布线的能力&lt;/li&gt;
&lt;li&gt;不占用单片机（STM32）过多的定时器引脚资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/AirForceDVR&#34;&gt;&lt;strong&gt;linyuxuanlin/AirForceDVR&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;AirPort - 集成稳压功能的母板&lt;/h2&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;AirCraft - 双路电机驱动子板&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201101231734.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;AirCraft 双路电机驱动子板基于 TB6612FNG 集成驱动芯片设计，外加逻辑控制方式，仅需 4 根引脚（2 路普通+2 路 PWM）即可实现双路电机控制（转向 / 速度），相比市面上一般方案，减少了两路 IO, 减少占用主控器宝贵的引脚资源。至于驱动芯片的参数，单通道最大连续驱动电流可达 1.2A，峰值 2A/3.2A（连续脉冲 / 单脉冲），驱动一般机器人上的电机绰绰有余。&lt;/p&gt;
&lt;h3&gt;产品参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;逻辑部分输入电压 VCC：3.3~5V（默认 &lt;strong&gt;5V&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;驱动部分输入电压 VM：2.5~12V（默认 &lt;strong&gt;12V&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;驱动电机路数：2 通道&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单通道&lt;/strong&gt; 最大连续驱动电流：&lt;strong&gt;1.2A&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;启动峰值：&lt;strong&gt;2A/3.2A&lt;/strong&gt; （连续脉冲 / 单脉冲）&lt;/li&gt;
&lt;li&gt;接口方式：2.54mm 间距排针、XH2.54 母座&lt;/li&gt;
&lt;li&gt;模块尺寸：23.7 × 15.8 (mm)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;引脚说明&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201022104033.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| 接口分组 | 名称 |       功能描述       |
| :------: | :--: | :------------------: |
| 控制接口 | PWM1 | 电机 M1 速度控制引脚 |
| 控制接口 | DIR1 | 电机 M1 方向控制引脚 |
| 控制接口 | DIR2 | 电机 M2 方向控制引脚 |
| 控制接口 | PWM2 | 电机 M2 速度控制引脚 |
| 电源接口 |  5V  |   逻辑控制部分电源   |
| 电源接口 |  G   |        GND 地        |
| 电源接口 | 12V  |       电机电源       |
| 电机接口 | M1+  |    电机 M1 输出 1    |
| 电机接口 | M1-  |    电机 M1 输出 2    |
| 电机接口 | M2+  |    电机 M2 输出 1    |
| 电机接口 | M1-  |    电机 M2 输出 2    |&lt;/p&gt;
&lt;h3&gt;控制教程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;控制接口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DIR1/DIR2&lt;/strong&gt;：正反转控制信号输入端&lt;ul&gt;
&lt;li&gt;e.g. DIR1 赋值为 1（高电平），则 M1 电机正转；DIR1 赋值为 0（低电平），则 M1 电机反转&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PWM1/PWM2&lt;/strong&gt;：分别为两个电机控制的使能端 （可使用 PWM 调速）&lt;/li&gt;
&lt;li&gt;电源接口：接至 AirPort 母板上任意电源接口（或外接 12V 与 5V 输入）&lt;/li&gt;
&lt;li&gt;电机接口：接至电机的输入口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;尺寸图&lt;/h3&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.dfrobot.com.cn/_SKU_DRI0044_Dual_Motor_Driver__TB6612__%E5%BE%AE%E5%9E%8B%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9D%97&#34;&gt;Dual Motor Driver TB6612 微型电机驱动模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/AirForce-%E5%85%85%E6%BB%A1%E7%81%B5%E6%80%A7%E7%9A%84%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/AirForce-%E5%85%85%E6%BB%A1%E7%81%B5%E6%80%A7%E7%9A%84%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9D%97/</guid>
      
    </item>
    
    <item>
      <title>RaptorDVR - 集成稳压的 30 A 双电机驱动 🚧</title>
      
      
      
      
      <description>&lt;p&gt;RaptorDVR 是一款能驱动 30 A 电流的直流减速双电机驱动板，上面也集成了 5 V/5 A 稳压电源，供树莓派和单片机主控板等外设使用。&lt;/p&gt;
&lt;h2&gt;特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;驱动类型：双路全桥 MOS 管驱动&lt;/li&gt;
&lt;li&gt;外部输入电压：3.5-28 V（待测试）&lt;/li&gt;
&lt;li&gt;电机驱动电流（单路）：15 A&lt;/li&gt;
&lt;li&gt;电路保护：30 A 保险丝（LED 显示保险丝状态）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;硬件设计&lt;/h2&gt;
&lt;h3&gt;全桥驱动&lt;/h3&gt;
&lt;h3&gt;电源稳压&lt;/h3&gt;
&lt;h2&gt;示例程序&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.seeedstudio.com/Hercules_Dual_15A_6-20V_Motor_Controller/&#34;&gt;Hercules Dual 15A 6-20V Motor Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;105010000&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/RaptorDVR-%E9%9B%86%E6%88%90%E7%A8%B3%E5%8E%8B%E7%9A%8430A%E5%8F%8C%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/RaptorDVR-%E9%9B%86%E6%88%90%E7%A8%B3%E5%8E%8B%E7%9A%8430A%E5%8F%8C%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/</guid>
      
    </item>
    
    <item>
      <title>TinyDVR - 小巧身材，满载动力</title>
      
      
      
      
      <description>&lt;p&gt;—— 基于 TinyDVR Master V1.1 &amp;amp; Slave V7.2 Release&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125191345.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;TinyDVR 是一款电机驱动套件，包含母板（Master）与子板（Slave），供电部分与驱动部分分离，相比前身 ZenDriver 大幅度缩减了体积，极大提升了可拓展性。你可以根据自己的需求，堆叠不同数量的子板，驱动 n 个电机。&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/TinyDVR&#34;&gt;&lt;strong&gt;linyuxuanlin/TinyDVR&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TinyDVR_Master&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/TinyDVR/raw/master/TinyDVR_Master.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;TinyDVR_Slave&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/TinyDVR/raw/master/TinyDVR_Slave.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;基本参数&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;输入电压：&lt;strong&gt;7.2 ~ 20 V&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;输出电流：&lt;strong&gt;0 ~ 68 A&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;提供 &lt;strong&gt;5V / 3A&lt;/strong&gt; 的电源输出，可供控制器及其他模块使用&lt;/li&gt;
&lt;li&gt;保护装置：集成防反接、光耦隔离电路&lt;/li&gt;
&lt;li&gt;电机简便接插：对市面上通用的直流减速电机（带编码器），可直接用 6 pin 排线接插（免对线）&lt;/li&gt;
&lt;li&gt;可拓展：一块母板可堆叠 n 块子板，实现 n 路电机驱动&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;接口定义&lt;/h2&gt;
&lt;h3&gt;TinyDVR Master&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125191439.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;TinyDVR Slave&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125191457.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;背面引脚详解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+ ：提供 5V / 3A 的电源输出&lt;/li&gt;
&lt;li&gt;1 ：IN1 端口，输入 PWM 信号 1&lt;/li&gt;
&lt;li&gt;2 ：IN2 端口，输入 PWM 信号 2&lt;/li&gt;
&lt;li&gt;A : 编码器 A 相信号端口&lt;/li&gt;
&lt;li&gt;B : 编码器 B 相信号端口&lt;/li&gt;
&lt;li&gt;- ：GND&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;使用指南&lt;/h2&gt;
&lt;h3&gt;测试方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;接入 &lt;strong&gt;7.2 ~ 20 V&lt;/strong&gt; 电池供电&lt;/li&gt;
&lt;li&gt;在对应的子板处接上电机&lt;/li&gt;
&lt;li&gt;用 &lt;strong&gt;5V&lt;/strong&gt; 供电口分别接 &lt;strong&gt;IN1/ IN2&lt;/strong&gt; 端口，此时电机将 &lt;strong&gt;正 / 反转&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;连接单片机&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;接入 &lt;strong&gt;7.2 ~ 20 V&lt;/strong&gt; 电池供电&lt;/li&gt;
&lt;li&gt;在对应的子板处接上电机&lt;/li&gt;
&lt;li&gt;共地（驱动板 GND 接单片机 GND）&lt;/li&gt;
&lt;li&gt;IN1，IN2 端口接单片机对应 PWM 端口（代码内设置）&lt;/li&gt;
&lt;li&gt;测试方法：请见项目仓库内的测试例程&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;花絮&lt;/h2&gt;
&lt;p&gt;早期子板：
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200311182442.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;批量焊接：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200311182441.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/TinyDVR-%E5%B0%8F%E5%B7%A7%E8%BA%AB%E6%9D%90%EF%BC%8C%E6%BB%A1%E8%BD%BD%E5%8A%A8%E5%8A%9B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/TinyDVR-%E5%B0%8F%E5%B7%A7%E8%BA%AB%E6%9D%90%EF%BC%8C%E6%BB%A1%E8%BD%BD%E5%8A%A8%E5%8A%9B/</guid>
      
    </item>
    
    <item>
      <title>ZenDriver - 高性能的电机驱动</title>
      
      
      
      
      <description>&lt;p&gt;—— 基于 V5.1 Release 版本&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/ZenDriver&#34;&gt;&lt;strong&gt;linyuxuanlin/ZenDriver&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;基本参数&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;输入电压：&lt;strong&gt;7.2 ~ 20 V&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;输出电流：&lt;strong&gt;0 ~ 68 A&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;提供 &lt;strong&gt;5V 1.5A&lt;/strong&gt; 的电源输出，可供控制器使用&lt;/li&gt;
&lt;li&gt;保护装置：集成防反接、光耦隔离电路&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;接口定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125192433.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;电机端&lt;/strong&gt; 从左到右依次为：&lt;strong&gt;M-，5V，编码器 A，编码器 B，GND，M+&lt;/strong&gt; ，对应电机引脚，可以直接怼电机上去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信号端&lt;/strong&gt; 从右到左依次为：&lt;strong&gt;GND，编码器 B，编码器 A，IN2，IN1，5V&lt;/strong&gt; 。注意：5V 端口 &lt;strong&gt;可提供电源给单片机用&lt;/strong&gt; （最大 1.5 A）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;电源输入端&lt;/strong&gt; 三个接口通用，一般建议中间的接电池，旁边的两个接口用于拓展电源给其他的驱动板。&lt;/p&gt;
&lt;h2&gt;使用指南&lt;/h2&gt;
&lt;h3&gt;直接供电测试&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;接入 &lt;strong&gt;7.2 ~ 20 V&lt;/strong&gt; 电池供电&lt;/li&gt;
&lt;li&gt;接上电机&lt;/li&gt;
&lt;li&gt;用 &lt;strong&gt;信号端&lt;/strong&gt; 上的 &lt;strong&gt;5V&lt;/strong&gt; 分别接 &lt;strong&gt;IN1，IN2&lt;/strong&gt;，此时电机将正、反转&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;连接单片机测试&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;接入 &lt;strong&gt;7.2 ~ 20 V&lt;/strong&gt; 电池供电&lt;/li&gt;
&lt;li&gt;接上电机&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信号端 GND&lt;/strong&gt; 接 &lt;strong&gt;单片机 GND&lt;/strong&gt;，&lt;strong&gt;5V 端口&lt;/strong&gt; 接 &lt;strong&gt;单片机&lt;/strong&gt; &lt;strong&gt;5V&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;引脚 &lt;strong&gt;IN1，IN2&lt;/strong&gt; 接单片机 PWM 端口&lt;/li&gt;
&lt;li&gt;用代码调试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125192734.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/ZenDriver-%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/ZenDriver-%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/</guid>
      
    </item>
    
    <item>
      <title>电机驱动方案 - IR2104S</title>
      
      
      
      
      <description>&lt;p&gt;本电机驱动方案基于半桥驱动芯片 IR2104S 与 AP30H80K N-MOS 管，用于 IR2104S 供电的外部稳压器采用 XL2009E1 方案。&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Motor_Driver_Design/tree/main/DC_Motor/IR2104S&#34;&gt;&lt;strong&gt;Collection_of_Motor_Driver_Design/DC_Motor/IR2104S&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/Collection_of_Motor_Driver_Design/raw/main/DC_Motor/IR2104S/IR2104S.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;基本参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;输入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VM&lt;/strong&gt;：输入 12-36V，给电机供电的电源，根据 XL2009E1、IR2104S 与 AP30H80K 的参数而确定）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VCC_3V3&lt;/strong&gt;：输入 3.3-5V，外部输入的 H 桥系统工作电压，根据逻辑芯片 SN74LVC1G08DCKR 的参数而确定）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IN1/IN2&lt;/strong&gt;：外部逻辑输入，高低电平电压推荐跟随 VCC_3V3 而定，真值表见下文。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PWM&lt;/strong&gt;：PWM 输入，高低电平电压与 IN1/IN2 的电压保持一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SD&lt;/strong&gt;：默认内部下拉，低电平有效（使 IR2104S 半桥芯片关断），外部输入高电平（VCC_3V3 电压）开启 IR2104S。&lt;/li&gt;
&lt;li&gt;输出&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M+/M-&lt;/strong&gt;：接外部电机。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VCC_12V&lt;/strong&gt;：板载 XL2009E1 电路稳压输出，作为备用供电输出。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电机驱动模块在使用时，H 桥系统需要跟外部控制器共地。&lt;/p&gt;
&lt;p&gt;本方案逻辑控制的真值表如下：&lt;/p&gt;
&lt;p&gt;| SD  | IN1 | IN2 | PWM | 电机状态 |
| --- | --- | --- | --- | -------- |
| 0   | x   | x   | x   | 滑行     |
| 1   | 1   | 0   | 1   | 正转     |
| 1   | 0   | 1   | 1   | 反转     |
| 1   | 1   | 1   | x   | 刹车     |
| 1   | 0   | 0   | x   | 刹车     |
| 1   | x   | x   | 0   | 刹车     |&lt;/p&gt;
&lt;h2&gt;基本原理&lt;/h2&gt;
&lt;h3&gt;逻辑电路&lt;/h3&gt;
&lt;p&gt;驱动一个电机，需要用到两对半桥电路，组成一个 H 桥全桥电路。为了能根据真值表来控制电机的状态，这里使用两个与门电路，使外部输入 PWM 信号与 IN1/IN2 做与运算，并将结果（PWMA/PWMB）传给 IR2104 的 IN 引脚。逻辑芯片的电源输入并联一个 100nF 电容去耦。&lt;/p&gt;
&lt;h3&gt;稳压电路&lt;/h3&gt;
&lt;p&gt;稳压电路基于 XL2009E1 Buck 芯片搭建，其功能是将外部动力电源输入稳压为 12V，为 IR2104S 芯片供电（其供电范围是 10-20V）。&lt;/p&gt;
&lt;p&gt;稳压模块的设计可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-XL2009E1&#34;&gt;&lt;strong&gt;电源方案（Buck）- XL2009E1&lt;/strong&gt;&lt;/a&gt;，此处不多赘述。&lt;/p&gt;
&lt;h3&gt;半桥驱动电路&lt;/h3&gt;
&lt;p&gt;电机驱动的基础知识可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E7%9B%B4%E6%B5%81%E6%9C%89%E5%88%B7%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E7%9A%84%E8%AE%BE%E8%AE%A1&#34;&gt;&lt;strong&gt;直流有刷电机驱动的设计&lt;/strong&gt;&lt;/a&gt;，此处不多赘述。&lt;/p&gt;
&lt;p&gt;IR2104S 是英飞凌的一款半桥驱动芯片。其主要参数如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高达 +600V 的浮动自举耐受电压&lt;/li&gt;
&lt;li&gt;10-20V 的栅极驱动供电电压&lt;/li&gt;
&lt;li&gt;兼容 3.3V/5V/15V 逻辑输入电平&lt;/li&gt;
&lt;li&gt;其他特性：&lt;/li&gt;
&lt;li&gt;欠压锁定&lt;/li&gt;
&lt;li&gt;集成死区时间控制&lt;/li&gt;
&lt;li&gt;交叉传导预防逻辑&lt;/li&gt;
&lt;li&gt;上管与逻辑输入同相位&lt;/li&gt;
&lt;li&gt;关断时上下管都关断&lt;/li&gt;
&lt;li&gt;上下管的传播延迟匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内部框图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407155726.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;典型应用原理图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407155457.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在此方案中，IR2104S 的供电为 12V，并联一个 100nF 输入去耦电容。IN 为逻辑输入引脚，输入高于 3V 即视为高电平、低于 0.8V 为低电平。通过逻辑芯片运算输出的 PWMA/PWMB 高低电平信号，可以控制上下管开启与关断。SD 为外部关断输入（低电平有效）。IN 与 SD 混合输入，对应上下管栅极引脚 HO/LO 状态时序图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407153203.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，如果 IN 输入高电平，则上管栅极给高电平开启、下管栅极给低电平关断，反之亦然。如果 SD 检测到低电平，则无论 IN 输入电平高低，上下管都将拉低关断。&lt;/p&gt;
&lt;p&gt;为了防止同一半桥上下管射穿（shoot-through），IR2104S 集成了死区控制。死区时间控制时序图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407153300.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，DT 的典型值为 520ns。&lt;/p&gt;
&lt;p&gt;上下管开启/关断传导延迟时序图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407153941.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，$t_{on}$ 典型值为 680ns，$t_{off}$ 典型值为 150ns。&lt;/p&gt;
&lt;p&gt;因为方案使用的都是 N-MOS 管（导通条件是 $V_g-V_s&amp;gt;V_{gs(th)}$），所以需要有一个高侧浮压自举电路，才能正常开启上管。此方案使用一个 1uF/50V 的 MLCC 电容，跨接 VM 与 VB 引脚，使 HO 引脚高电平电压高于 N-MOS 的 $V_{GS(th)}$，即 IR2104S 供电电压减去二极管正向导通压降，使上管能够正常导通。&lt;/p&gt;
&lt;p&gt;MOS 管的选型需要考虑到 $V_{DSS}$ 、$V_{gs(th)}$、$I_D$ 和 $R_{DS(on)}$ 这几个参数。$V_{DSS}$ 的确定是根据驱动电机的电压加上足够的余量；$I_D$ 根据应用的要求加上足够余量；$R_{DS(on)}$ 越小越好。综合考虑参数和价格，本方案选用 AP30H80K。&lt;/p&gt;
&lt;p&gt;衰减模式的设计，因为 IR2104S 没有集成同步衰减，所以我们选用 SS34 肖特基二极管做异步衰减。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_39400113/article/details/108909800&#34;&gt;STM32+IR2104S 的 H 桥电机驱动电路详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amobbs.com/thread-5716927-1-1.html&#34;&gt;mos 管 H 桥驱动芯片 自举电容的疑惑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://file.elecfans.com/web1/M00/0E/2C/pIYBAFocSwiAd48MAA0ls-d5YeY046.pdf&#34;&gt;AN-6076 高压栅极驱动 IC 自举电路的设计与应用指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_39883129/article/details/111642277&#34;&gt;pwm 驱动电机 为什么 pwm 不能太快_【电机控制】为什么控制上下 MOS 管的互补 PWM 不能发 100%占空比？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E6%96%B9%E6%A1%88-IR2104S/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E6%96%B9%E6%A1%88-IR2104S/</guid>
      
    </item>
    
    <item>
      <title>直流有刷电机驱动的设计</title>
      
      
      
      
      <description>&lt;p&gt;通常我们使用 PWM 控制 H 桥电路，实现对直流有刷电机转向和转速的控制，且 PWM 占空比与电机的转速成正比。&lt;/p&gt;
&lt;h2&gt;H 桥的基础知识&lt;/h2&gt;
&lt;p&gt;H 桥（H-Bridge）是一种可以快速切换负载上电压极性的桥式电路。这种电路通常用于驱动直流有刷电机，使其顺时针或者逆时针转。因为其结构看着像字母「H」，所以称其为 H 桥电路。&lt;/p&gt;
&lt;p&gt;一个 H 桥由四个开关组成，S1 和 S3 组成 H 桥的高位开关（High-Side Switch），通常是 P 型 MOSFET 或 PNP 型晶体管，S2 和 S4 组成 H 桥的低位开关（Low Side Switch），通常是 N 型 MOSFET 或 NPN 型晶体管。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210812093751.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当开关 S1 和 S4 闭合、S2 和 S3 断开时，电机正常旋转，记为正方向。&lt;/li&gt;
&lt;li&gt;当开关 S2 和 S3 闭合、S1 和 S4 断开时，电机反向旋转，记为反方向。&lt;/li&gt;
&lt;li&gt;当开关 S1 和 S2 闭合，或 S3 和 S4 闭合时，电源被短路，有烧毁电源的风险，严禁出现此类情况。这种情况称为射穿（shoot-through）&lt;/li&gt;
&lt;li&gt;当开关 S1 和 S3 闭合、S2 和 S4 断开；或 S2 和 S4 闭合、S1 和 S3 断开时，电机不旋转。此时电机处于「刹车」状态，电机惯性转动产生的电势将被短路，形成阻碍运动的反电势，形成「刹车」作用。&lt;/li&gt;
&lt;li&gt;当 S1、S2、S3、S4 四个开关都断开时，电机处于滑行状态，将惯性转动较长时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在实际电路中，我们可以使用驱动芯片来对 H 桥 4 个 MOS 管进行精确的控制。&lt;/p&gt;
&lt;h2&gt;选择分立搭建还是集成芯片&lt;/h2&gt;
&lt;p&gt;相比使用集成驱动芯片，用分立元件搭建电路成本更低、可定制性更强。一般来说，驱动电机首先从 MCU 输出 PWM 信号，经过光耦隔离、逻辑电路后，再到驱动芯片，最后到全桥 / 半桥 MOS 管。&lt;/p&gt;
&lt;p&gt;但是，使用分立元件搭建电机驱动，需要注意的事项会比较多，比如死区控制（防止射穿）、控制合适驱动电压、设计保护电路等等，电路设计上的复杂度更高、PCB 占位面积变大、成本变得更高、且设计风险也会提高。&lt;/p&gt;
&lt;p&gt;通常来说，驱动直流有刷电机时，我们采用集成 H 桥驱动芯片来实现对直流有刷电机的控制。&lt;/p&gt;
&lt;h2&gt;MOS 管的选型&lt;/h2&gt;
&lt;p&gt;在电机驱动中，我们一般选用增强型 N-MOS 管。原因如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选用增强型：其在低电平时可以完全关断，且当电平高于开启电压 $U_{GS(TH)}$ 时，可以完全导通；&lt;/li&gt;
&lt;li&gt;选用 N-MOS：因为 P-MOS 型号选择少、价格高、导通电阻大，进而导致高发热和低效率；&lt;/li&gt;
&lt;li&gt;选用 MOS 管：MOS 管相比于 BJT，功率损耗更小、体积更小、驱动电流更大、相应更快、导通电阻更小。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际设计上，为了简化合并物料，我们一般会全部使用 N-MOS。但是由于 N-MOS 不可以直接用于 H 桥高端控制（因为 N-MOS 的导通条件是 $V_g-V_s&amp;gt;V_{gs(th)}$），所以需设计高端浮压自举电路（因为其结构简单），以驱动上管。自举电路的详细介绍，请跳转文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E8%87%AA%E4%B8%BE%E7%94%B5%E8%B7%AF&#34;&gt;&lt;strong&gt;电源设计 - 自举电路&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;N-MOS 选型需注意的参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$V_{DSS}$&lt;/li&gt;
&lt;li&gt;$R_{DS(on)}$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;集成 H 桥驱动芯片&lt;/h2&gt;
&lt;p&gt;H 桥驱动芯片一般会将以下的保护电路集成进来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;过压保护（Over-Voltage Protection, OVP）&lt;/li&gt;
&lt;li&gt;欠压锁定保护（Under-Voltage Lock-Out, UVLO）&lt;/li&gt;
&lt;li&gt;过流保护（Over-Current Protection, OCP）&lt;/li&gt;
&lt;li&gt;热关机保护（Thermal Shut-Down, TSD）&lt;/li&gt;
&lt;li&gt;射穿保护（Shoot-Through Protection, STP）&lt;/li&gt;
&lt;li&gt;静电放电保护（ElectroStatic Discharge, ESD）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般我们使用门极驱动芯片为高压 / 低压侧功率 N-MOS 管提供驱动栅极的电源（根据数据手册，必须使其高于 MOS 管的 $U_{GS(TH)}$，漏极 D 和源极 S 之间才能导通）。举个例子，下图是 DRV8701 门极驱动的参数：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210811095012.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;配合 IRFH8330 使用，可以带得动这个 MOS 管：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210811095429.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;PWM 频率的选择&lt;/h2&gt;
&lt;p&gt;使用 PWM 信号控制电机速度时，需要注意其频率。若频率过低，电机在低速时会产生噪音，而且对占空比的变化也会显得反应迟缓。而如果 PWM 的频率过高，会在 H 桥的 MOSFET 上产生较大的开关损耗。&lt;/p&gt;
&lt;p&gt;如果 H 桥驱动芯片的规格书中没有给出具体频率范围的话，一般来说 4kHz-200kHz 左右的 PWM 信号都可以较理想地控制电机的转速。&lt;/p&gt;
&lt;h2&gt;死区时间插入和交叉传导（直通）保护&lt;/h2&gt;
&lt;p&gt;死区可以简单理解为一个延时，使正转时导通的上桥完全关断时再打开反转时需要打开的下桥。死区过小会导致危险，死区过大会导致电机响应不好，电源的利用效率低等问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210815112048.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用集成方案：纳入自动握手，以便利用最佳的死区时间，而不受回转率、电压、MOS 特性和温度的影响。握手是一个多步骤的过程，确保利用最佳的死区时间，并且不发生交叉传导。握手的过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接收信号，以从高端 MOS 到低压侧 MOS&lt;/li&gt;
&lt;li&gt;禁用高端 MOS，并监测 $V_{GS}$ 以确定什么时候禁用它&lt;/li&gt;
&lt;li&gt;插入死区时间，启用低压侧 MOS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;H 桥的衰减模式&lt;/h2&gt;
&lt;p&gt;衰减模式，是指走哪个续流回路，使电机停下来。因为直流电机属于感性负载（电感电流不能突变），想让电机停下，除了断开供电，还需要形成一个续流的回路，释放掉电机上的能量，否则电机产生的续流有可能损坏 MOS 管。&lt;/p&gt;
&lt;h3&gt;异步与同步衰减&lt;/h3&gt;
&lt;p&gt;我们可以使用二极管来构建续流回路，如图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211222162216.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;而我们知道，MOS 管内本身有体二极管可以充当续流回路，在有些应用中，也会外加并联肖特基二极管，所以可以借其实现续流衰减。用二极管实现衰减的模式被称为异步衰减。但异步衰减的损耗会相对大（$2&lt;em&gt;I&lt;/em&gt;V_D$），所以我们引出另一种衰减途径，叫同步衰减。同步衰减是通过打开 MOS 管实现续流。因为 MOS 管的导通电阻 $R_{ds(on)}$ 小，所以同步衰减损耗会相对小（$I^2&lt;em&gt;R_{ds(on)&lt;/em&gt;2}$），下面将主要讲解同步衰减。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211222172558.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;关键参数&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211222172913.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$I_{TRIP}$：当前驱动芯片设定的电流，受驱动算法控制；&lt;/li&gt;
&lt;li&gt;$T_{DRIVE}$：驱动阶段的时间&lt;/li&gt;
&lt;li&gt;$T_{BLANK}$：死区阶段时间，为了防止射穿&lt;/li&gt;
&lt;li&gt;$T_{OFF}$：续流阶段&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;同步衰减的三种模式&lt;/h3&gt;
&lt;p&gt;同步衰减有三种模式：快衰减（Fast Decay）、慢衰减（Slow Decay）和混合衰减（Mixed Decay）。这里的快慢指的是续流期间电流衰减的相对速度，而非电机的转速。&lt;/p&gt;
&lt;p&gt;三种模式的区别：&lt;/p&gt;
&lt;p&gt;|                        | 快衰减                       | 慢衰减                   | 混合衰减               |
| ---------------------- | ---------------------------- | ------------------------ | ---------------------- |
| 相电流纹波             | 大                           | 小                       | 适中                   |
| 续流阶段时间 $T_{OFF}$ | 短（可能导致更大的开关损耗） | 长（可能会听到低频噪音） | 适中（频率和性能均衡） |
| 相电流下降速度         | 快                           | 慢                       | 适中                   |
| 适用范围               | 适用于大电感电机             | 适用于小电感电机         | 适中                   |&lt;/p&gt;
&lt;h4&gt;快衰减&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211223154627.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;快衰减的过程是，关闭驱动的两个 MOS 管，等待死区时间过后，打开斜对称的两个 MOS 管，让电流快速消耗掉。在死区时间内，H 桥仍会经历异步衰减，但时间短可忽略。&lt;/p&gt;
&lt;h4&gt;慢衰减&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211223160616.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;慢衰减的过程是，关闭驱动的两个 MOS 管，等待死区时间过后，打开两个下管，让电流慢慢消耗掉。同样的，在死区时间内，H 桥仍会经历异步衰减，但时间短可忽略。&lt;/p&gt;
&lt;h4&gt;混合衰减&lt;/h4&gt;
&lt;p&gt;混合衰减的过程是，关闭驱动的两个 MOS 管，等待死区时间过后，打开斜对称的两个 MOS 管（快衰减），让电流快速消耗；再打开两个下管（慢衰减），让电流慢慢消耗掉。混合衰减模式下相电流的纹波介于快衰减和慢衰减之间。&lt;/p&gt;
&lt;h2&gt;电机驱动的 EMC 问题与处理&lt;/h2&gt;
&lt;p&gt;因为直流电机属于感性负载（电感电流不能突变），为了防止 H 桥关闭输出时电机电压上出现不稳定的反弹或尖峰，可在电机电压源上放置一个大电容（&amp;gt;100μF，一般选用铝电解电容），用于吸收直流电动机制动时产生的飞轮电流，并在电机切换正反转时稳定电机电压源。&lt;/p&gt;
&lt;p&gt;另外一个问题是，电机电压源与电机驱动板电源线之间的寄生电抗（电感+电阻）与 PCB 的寄生电容组成一个 LC 谐振槽，在电机电压源向电机驱动板送电时，如果局部旁路电容不足，电机电压可能会迅速下降，寄生 LC 会被触发，出现振荡尖峰。为了减少电源线 LC 谐振引起的尖峰，可在电机 H 桥驱动芯片的电源引脚附近放置一个 0.1μF 的旁路电容（一般选用陶瓷电容）。&lt;/p&gt;
&lt;p&gt;一个参考例子：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211222150738.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外，可在电机线上加磁环，减少共模干扰（实测明显）。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fanyedu.com/content/90.html&#34;&gt;4 个 N-MOS 组成的全桥驱动电路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/27547384&#34;&gt;详解关于 ROBOCON 比赛中有刷电机设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haipeng.me/2021/02/28/h-bridge-driver/&#34;&gt;浅谈直流有刷电机的驱动电路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ebldc.com/?p=86&#34;&gt;Slow, Mixed and Fast Decay Modes. Why Do We Need To Complicate Things?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com.cn/cn/lit/an/zhcaa31/zhcaa31.pdf&#34;&gt;精通电机驱动的电流续流、衰减模式和刹车&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com/lit/an/slva321a/slva321a.pdf&#34;&gt;Current Recirculation and Decay Modes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/%E7%9B%B4%E6%B5%81%E6%9C%89%E5%88%B7%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E7%9A%84%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8/%E7%9B%B4%E6%B5%81%E6%9C%89%E5%88%B7%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>电源拓扑 - 开关稳压（隔离型）</title>
      
      
      
      
      <description>&lt;p&gt;区别于非隔离型开关稳压，在隔离型开关稳压拓扑中，能量是通过相互耦合的磁场元件（变压器）传递，源极与负载仅仅是通过磁场耦合的，所以在输入与输出之间有电隔离。&lt;/p&gt;
&lt;h2&gt;隔离型 DC-DC 拓扑结构&lt;/h2&gt;
&lt;p&gt;对隔离型 DC-DC 转换器而言，常用拓扑一般是反激式（Flyback），正激式（For-ward）和推挽式（Push-pull）这三种。&lt;/p&gt;
&lt;p&gt;在这些隔离型转换器中，从输入到输出的能量传递是通过变压器完成的。能量通过相互耦合的磁场元件（变压器）传递，源极与负载仅仅是通过磁场耦合的，所以形成了输入与输出之间的电隔离。与非隔离型转换器一样，稳压的过程是通过 PWM 控制器在反馈回路中调节输出电压实现。&lt;/p&gt;
&lt;h3&gt;反激式 Flyback&lt;/h3&gt;
&lt;p&gt;反激式（Flyback）转换器可以把一个较高的输入电压，转换为一个较低的稳定输出电压。当开关 $S_1$ 闭合的时候，能量存储在变压器的磁芯中，而当开关 $S_1$ 断开的时候，再把能量传递到次级端。其拓扑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220112140923.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注：图中的开关 $S_1$ 实际为电子开关（可为功率 MOS 管），此处为了易于理解，简化为普通的开关。&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开关 $S_1$ 闭合（蓝色实线）&lt;/li&gt;
&lt;li&gt;此时变压器 $T_1$ 的初级绕组侧形成环路，流经初级绕组电感的 $L_P$ 的电流 $I_{S1}$ 以 $\frac{V_{in}}{L_P}$ 的速率增长。此时不会有电流通过次级绕组电感 $L_S$ 流至负载，负载电流是由电容 $C_1$ 提供的。&lt;/li&gt;
&lt;li&gt;此时变压器输入的能量为：$\frac{V_{in}*t_{on}}{N}$（N 为匝数比）&lt;/li&gt;
&lt;li&gt;开关 $S_1$ 断开（绿色虚线）&lt;/li&gt;
&lt;li&gt;此时由于变压器 $T_1$ 中的磁场崩塌，导致初级与次级绕组中的电压反相，初级绕组中储存的能量被传递到次级绕组，传递过程中次级绕组的电压迅速上升，并且伴有一个脉冲电流，这个电流以 $\frac{V_{out}}{L_S}$ 的速率下降，并给负载供电、给电容 $C_1$ 充电。二极管 $D_1$ 在这里充当峰值整流器。&lt;/li&gt;
&lt;li&gt;此时变压器输出的能量为：$V_{out}*t_{off}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为变压器的能量传递守恒（即能量守恒），$\frac{V_{in}&lt;em&gt;t_{on}}{N}=V_{out}&lt;/em&gt;t_{off}$，可得到：&lt;/p&gt;
&lt;p&gt;$$
V_{out}=\frac{1}{N}\cdot\frac{δ}{1-δ} \cdot V_{in}
$$&lt;/p&gt;
&lt;p&gt;各节点的波形曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220112172946.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以发现，Flyback 与 Buck-Boost 传递公式只相差了 1/N 这个系数。Flyback 的优点在占空比很小的情况下，输出电压可以调得很高，所以很适用于输出高电压的电源。其次，也可以添加多个次级绕组，实现多个输出，且极性可以各不相同，适用于低成本设计。&lt;/p&gt;
&lt;p&gt;Flyback 的缺点是，需要谨慎选择变压器气隙磁芯，不应使其进入饱和状态，因为如果磁滞现象很严重的话，会使变压器的效率大幅降低。另外，因峰值电流很高，绕组中的涡电流损耗也是一个问题。这两个问题限制了 Flyback 的实际可操作频率范围。最后当 S1 打开的瞬间，初级绕组上会出现一个很大的感性尖峰，这会对开关场效应管造成很大的压力。&lt;/p&gt;
&lt;h3&gt;正激式 Forward&lt;/h3&gt;
&lt;p&gt;正激式 Forward 可根据关于匝数比的函数，生成一个稳定的输出电压。其拓扑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220707092211.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开关 $S_1$ 闭合（蓝色实线）&lt;/li&gt;
&lt;li&gt;此时变压器 $T_1$ 的初级绕组侧形成环路，流经初级绕组电感的 $L_P$ 的电流 $I_{S1}$ 以 $\frac{V_{in}}{L_P}$ 的速率增长。由于初级与次级绕组是互相耦合的，所以初级绕组中电流增大，会导致次级绕组上产生感应电流，次级绕组两端感应电压为 $\frac{V_{in}}{N}$。次级绕组上的电流以 $\frac{V_{in}}{L_1 N}$ 的速率增长，通过整流二极管 $D_1$ 和输出电感 $L_1$，最终给负载 $R_L$ 与输出电容 $C_1$ 供电。&lt;/li&gt;
&lt;li&gt;此时变压器输入的能量为：$(\frac{V_{in}}{N}-V_{out})\cdot t_{on}$（N 为匝数比）&lt;/li&gt;
&lt;li&gt;开关 $S_1$ 断开（绿色虚线）&lt;/li&gt;
&lt;li&gt;当电容 $C_1$ 两端的电压逐渐上升到上限阈值时，会产生一个「关断」的反馈信号（一般由光耦器件实现），使得开关 $S_1$ 断开，中断了源电流供应。此时复位绕组与二极管 $D_3$ 共同保持变压器中的磁场不消失（但也将导致电流以 $\frac{V_{in}}{L_P}$ 的速率下降）。次级绕组两端电压会出现极性反转，反向电流以 $\frac{V_{out}}{L_1}$ 的速率下降，经过续流二极管 $D_2$ 电感 $L_1$，为负载 $R_L$ 与输出电容 $C_1$ 供电。当 $C_1$ 两端的电压下降到阈值时，将产生一个「开启」的反馈信号，让 $S_1$ 再次闭合，开始一个新的周期。&lt;/li&gt;
&lt;li&gt;此时变压器输出的能量为：$V_{out}\cdot t_{off}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据变压器的能量传递守恒（即能量守恒），$(\frac{V_{in}}{N}-V_{out})*t_{on}=V_{out}\cdot t_{off}$，可得：&lt;/p&gt;
&lt;p&gt;$$
V_{out}=\frac{δ}{N} \cdot V_{in}
$$&lt;/p&gt;
&lt;p&gt;各节点的波形曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220707143854.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;相比 Flyback 的区别是，Forward 是连续将能量通过变压器从初级传递到次级的，而不需要将能量储存在变压器的气隙磁芯中。这样一来磁芯不再需要气隙，相应地也不会带来损耗和 EMI 辐射。因为磁滞损耗在 Forward 中不再是哥严重的问题，所以磁芯的电感可以很大，峰值电流可以因此降低，这一来又进一步减小了绕组和二极管中的损耗，也降低了输入输出的纹波电流。&lt;/p&gt;
&lt;p&gt;所以，在相同输出功率下，Forward 比 Flyback 效率高，但缺点是成本也相对高，且需要设置一个最小负载以保持不会进入非连续模式，因为在非连续模式下，能量传递的方式是完全不同的。&lt;/p&gt;
&lt;h3&gt;有源钳位正激式 Active Clamp&lt;/h3&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h3&gt;推挽式 Push-Pull&lt;/h3&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com.cn/cn/lit/an/zhct203/zhct203.pdf&#34;&gt;《开关电源基础知识》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://recom-power.com/zh/rec-n-an-introduction-to-buck,-boost,-and-buck!sboost-converters-131.html?0&#34;&gt;升压型、降压型和升降压型转换器简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《开关电源原理与设计》&lt;/li&gt;
&lt;li&gt;《DC-DC 转换器知识手册及用户实用技巧》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8B%EF%BC%88%E9%9A%94%E7%A6%BB%E5%9E%8B%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8B%EF%BC%88%E9%9A%94%E7%A6%BB%E5%9E%8B%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>电源拓扑 - 开关稳压（非隔离型）</title>
      
      
      
      
      <description>&lt;p&gt;开关电源是利用电控开关管开通和关断的时间比率，以维持稳定输出电压的一种电源，现代开关电源一般由脉冲宽度调制（PWM）控制 IC 和 MOSFET 构成。&lt;/p&gt;
&lt;h2&gt;开关稳压基础概念&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211210172039.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个完整周期的时间：$T_{s}$&lt;/li&gt;
&lt;li&gt;电子开关接通的时间：$T_{on}$&lt;/li&gt;
&lt;li&gt;占空比 $\delta=\frac{T_{on}}{T_{s}}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电感的伏秒平衡：处于稳定状态的电感，开关导通时间（电流上升段）的伏秒数，须与开关关断时间（电流下降段）的伏秒数在数值上相等。&lt;/p&gt;
&lt;p&gt;功率相等原则：在不考虑效率的情况下，开关电源的输入功率等于输出功率，即输入电压与电流的乘积，相当于输出电压与电流的乘积。直观上，降压转换器能提供比输入更大的电流，而升压转换器的输出电流小于输入的电流。&lt;/p&gt;
&lt;h2&gt;开关稳压主要元件及特性&lt;/h2&gt;
&lt;p&gt;开关稳压使用的主要元器件是电子开关、电感与电容。&lt;/p&gt;
&lt;h3&gt;电子开关&lt;/h3&gt;
&lt;p&gt;电子开关的要求就是实现快速闭合断开，越快越好，一般常用三极管、功率 MOS 管或 IGBT 管。&lt;/p&gt;
&lt;h3&gt;电感&lt;/h3&gt;
&lt;p&gt;电感作为储能元件，在 DC-DC 中用于平滑电流（所以也称扼流圈）。流过电感的电流特点是有磁通连续性（可以理解为惯性）。通常情况下，电感工作在其线性区，此时电感值为常数，不随端电压和流过的电流而变化。电感有以下几个特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;电感 $L$ 中有电流 $I$ 流过时，储存有 $\frac{1}{2}LI^2$ 的能量。&lt;/li&gt;
&lt;li&gt;电感 $L$ 两端电压 $V$ 不变时，因为 $V=L\frac{di}{dt}$，忽略内阻，电感电流的变化率就是 $\frac{di}{dt}=\frac{V}{L}$，即电感电流呈线性增加。&lt;/li&gt;
&lt;li&gt;正在储能的电感，如果突然切断原回路，电感会维持磁场不变，即电流不能瞬时突变，或者说伏·秒值不变。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;电感中储存的功率可表示为：&lt;/p&gt;
&lt;p&gt;$$
P(L)=\frac{LI^2f}{2}
$$&lt;/p&gt;
&lt;p&gt;可以看出，电感中储存的功率与开关频率成正比关系。如果开关频率加倍，则电感尺寸可减半。&lt;/p&gt;
&lt;h3&gt;电容&lt;/h3&gt;
&lt;p&gt;电容在 DC-DC 中也是用来储能与传递电能的，但跟电感频率特性相反，它主要用来吸收纹波、平滑电压波形，使输出电压变得平稳。也称其为输出电容。&lt;/p&gt;
&lt;p&gt;电容中储存的功率可表示为：&lt;/p&gt;
&lt;p&gt;$$
P(C)=\frac{CV^2f}{2}
$$&lt;/p&gt;
&lt;p&gt;与电感同理，电容可以通过增加开关频率，从而缩小尺寸。但需要注意的是，&lt;strong&gt;开关频率越高，一般会产生越高的噪声&lt;/strong&gt;，所以需要在尺寸和频率之间权衡。&lt;/p&gt;
&lt;h3&gt;二极管&lt;/h3&gt;
&lt;p&gt;在非同步 DC-DC 中，我们使用二极管为开关断开时的电感提供续流回路，所以也称其为续流二极管。而在同步 DC-DC 中，会使用电子开关来代替续流二极管。&lt;/p&gt;
&lt;h2&gt;非隔离型 DC-DC 拓扑结构&lt;/h2&gt;
&lt;p&gt;非隔离型 DC-DC 拓扑结构在工作时，输入源级与输出负载共享同一条电流路径。&lt;/p&gt;
&lt;p&gt;用电子开关、电感、电容、二极管，能构成最简单的 PWM 型 DC-DC。主要分三类：降压型 Buck、升压型 Boost、升降压型 Buck-Boost，以下将详细展开说明。另外还有双级反相升降压型 Cuk（音 chook），双级正相升降压型 SEPIC（ZETA），因较少应用不展开描述。&lt;/p&gt;
&lt;h3&gt;降压型 Buck&lt;/h3&gt;
&lt;p&gt;降压型 Buck 是把一个较高的电压转换为一个稳定的低电压。其拓扑如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211214100156.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注：图中的开关 $S_1$ 实际为电子开关（可为功率 MOS 管），此处为了易于理解，简化为普通的开关。&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开关 $S_1$ 闭合（蓝色实线）&lt;/li&gt;
&lt;li&gt;此时二极管 $D_1$ 截止，电流经过电感 $L_1$，给负载 $R_L$ 供电，同时将电能储存在电感 $L_1$ 和电容 $C_1$ 中。在电感线圈未饱和前，电流呈线性增加（电感内电流不能突变），输出电压不能立刻达到输入的电压值。&lt;/li&gt;
&lt;li&gt;此时电感正向伏秒为：$(V_{in}-V_{out})* T_{on}$&lt;/li&gt;
&lt;li&gt;开关 $S_1$ 断开（绿色虚线）&lt;/li&gt;
&lt;li&gt;电感 L 因自感惯性作用，其电流方向大小不能发生突变。这时候电流会流经由续流二极管 $D_1$ 提供的回路，继续为输出负载供电。此时电容 $C_1$ 也参与放电。&lt;/li&gt;
&lt;li&gt;此时电感反向伏秒为：$V_{out} * T_{off}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据电感伏秒平衡（即能量守恒），$(V_{in}-V_{out})* T_{on}=V_{out} * T_{off}$，可得到：&lt;/p&gt;
&lt;p&gt;$$
V_{out}=\delta*V_{in}
$$&lt;/p&gt;
&lt;p&gt;各节点的波形曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211214100812.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过控制 PWM 的占空比，使得电子开关 $S_1$ 不断地闭合断开，此时的输入电流是脉动的。但经过电感、电容、二极管的共同作用下，输出的电流是相对连续平稳的。&lt;/p&gt;
&lt;h3&gt;升压型 Boost&lt;/h3&gt;
&lt;p&gt;升压型 Boost，可以把一个较低的电压转换为一个稳定的较高电压。其拓扑如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211214100041.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开关 $S_1$ 闭合（蓝色实线）&lt;/li&gt;
&lt;li&gt;电流流经电感 $L_1$，在电感未饱和前，其电流以 $\frac{V_{in}}{L_1}$ 的速率线性增加，电能以磁能形式储存在电感中。此时电容 $C_1$ 为负载 $R_L$ 供电，假设此时负载两端电压为 $V_0$。因为开关 $S_1$ 闭合，所以二极管 $D_1$ 阳极接地，电容放出的电不能通过二极管。&lt;/li&gt;
&lt;li&gt;此时电感正向伏秒为：$V_{in}* T_{on}$&lt;/li&gt;
&lt;li&gt;开关 $S_1$ 断开（绿色虚线）&lt;/li&gt;
&lt;li&gt;由于电感 $L_1$ 上的电流不能突变，所以电感上的磁能转化为电压输出电流，以 $\frac{V_{out}-V_{in}}{L_1}$ 的速率线性下降，与电源 $V_{in}$ 形成串联，向电容 $C_1$ 和负载 $R_L$ 供电。当串联电压高于$V_0$ 时，电容 $C_1$ 状态为充电；当串联电压等于 $V_0$ 时，充电电流为零；当 $V_0$ 有下降趋势时，电容向负载放电，以维持 $V_0$ 不变。&lt;/li&gt;
&lt;li&gt;此时电感反向伏秒为：$(V_{out}-V_{in})* T_{off}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据电感伏秒平衡 $V_{in}&lt;em&gt; T_{on}=(V_{out}-V_{in})&lt;/em&gt; T_{off}$ ，可得到：&lt;/p&gt;
&lt;p&gt;$$
V_{out}=\frac{\delta}{1-\delta}*V_{in}
$$&lt;/p&gt;
&lt;p&gt;（当且仅当 V&lt;em&gt;{in}&amp;lt;V&lt;/em&gt;{out} 时成立）&lt;/p&gt;
&lt;p&gt;各节点的波形曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211214103137.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为串联时负载两端电压 $V_0$ 高于原本的 $V_{in}$，所以能实现升压。&lt;/p&gt;
&lt;h3&gt;升降压型 Buck-Boost&lt;/h3&gt;
&lt;p&gt;升降压型 Buck-Boost 可以把一个输入电压转换为一个反相的稳定输出电压，这个输出电压的值可以高于或低于输入电压的值。其拓扑如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211214100108.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开关 $S_1$ 闭合（蓝色实线）&lt;/li&gt;
&lt;li&gt;电流流经电感 $L_1$，在电感未饱和前，其电流以 $\frac{V_{in}}{L_1}$ 的速率线性增加；二极管 $D_1$ 反向截止，阻断从电源通向负载的电流。这段时间内存储在 $C_1$ 中的能量对负载供电。&lt;/li&gt;
&lt;li&gt;此时电感正向伏秒为：$V_{in}* T_{on}$&lt;/li&gt;
&lt;li&gt;开关 $S_1$ 断开（绿色虚线）&lt;/li&gt;
&lt;li&gt;由于电感 $L_1$ 上的电流不能突变，其电流以 $\frac{V_{out}}{L_1}$ 的速率线性下降，所以电流走绿色虚线回路，对负载供电，并给电容 $C_1$ 充电，二极管 $D_1$ 正向导通。流经电感的电流呈线性减小。由于电流的流向，输出电压对地而言是负值，所以这个拓扑结构的输出是反相的。&lt;/li&gt;
&lt;li&gt;此时电感反向伏秒为：$-V_{out}* T_{off}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据电感伏秒平衡 $V_{in}&lt;em&gt; T_{on}=-V_{out}&lt;/em&gt; T_{off}$ ，可得到：&lt;/p&gt;
&lt;p&gt;$$
V_{out}=\frac{-\delta}{1-\delta}*V_{in}
$$&lt;/p&gt;
&lt;p&gt;各节点的波形曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211214171652.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;升降压型转换器的优点是输入电压可以低于也可以高于稳压后的输出电压。实际可用于电池供电电路，比如系统需要 12V 的电源，电池充满电是 13V，亏电是 11V 的情况。&lt;/p&gt;
&lt;h2&gt;Buck 与 Boost 的连续与非连续模式&lt;/h2&gt;
&lt;p&gt;连续（CCM）与非连续（DCM）模式，指的是 &lt;strong&gt;电感的电流是否会下降至 0&lt;/strong&gt;。如果负载很大，那么电感中的电流不会降至 0，就称为连续的；反之如果负载很小，转换器有足够的时间对输出端的电容进行完全充电，那么在剩余的时间里，电感的电流将会降至 0，当新的周期开始后，电感电流又重新从 0 开始线性增加，这称为非连续模式。&lt;/p&gt;
&lt;p&gt;连续与不连续的临界状态是 $\frac{1}{2}\Delta i_L=I_{out}$。当 $\frac{1}{2}\Delta i_L&amp;lt;I_out$ 时，则为连续模式；反之则为不连续。&lt;/p&gt;
&lt;p&gt;在低负载的情况下，连续模式过渡到非连续模式将导致输入输出电压关系的变化：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211215091306.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此为了保持在连续模式下工作，许多升降压控制器在低负载的情况下选择提高它们的工作频率。&lt;/p&gt;
&lt;h2&gt;同步与异步转换&lt;/h2&gt;
&lt;p&gt;同步与异步的区别，指 &lt;strong&gt;逆向电流保护整流器（续流管）用的是二极管还是场效应管&lt;/strong&gt;。如下图，左侧是异步，右侧是同步：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220702165541.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;同步的模式下，场效应管的启动信号必须是与 PWM 信号异相位的。&lt;/p&gt;
&lt;p&gt;同步相比异步的优点是，场效应管的 $R_{DS(on)}$ 很小，正向压降很小，在高电流和地输入电压的情况下，会有更高的效率。而且大功率场效应管的封装一般比功率二极管小，因此可以省空间。&lt;/p&gt;
&lt;p&gt;同步相比异步的缺点是，会带来额外的驱动电路和防止两个场效应管同时导通所需的时序电路，会提高成本；另外在低负载的情况下，场效应管栅极电容充放电会产生额外的功耗，所以效率实际上比异步的低。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com.cn/cn/lit/an/zhct203/zhct203.pdf&#34;&gt;《开关电源基础知识》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://recom-power.com/zh/rec-n-an-introduction-to-buck,-boost,-and-buck!sboost-converters-131.html?0&#34;&gt;升压型、降压型和升降压型转换器简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《开关电源原理与设计》&lt;/li&gt;
&lt;li&gt;《DC-DC 转换器知识手册及用户实用技巧》&lt;/li&gt;
&lt;li&gt;《Power-Topologies-Quick-Reference-Guide_TI》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8B%EF%BC%88%E9%9D%9E%E9%9A%94%E7%A6%BB%E5%9E%8B%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8B%EF%BC%88%E9%9D%9E%E9%9A%94%E7%A6%BB%E5%9E%8B%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>电源拓扑 - 线性稳压</title>
      
      
      
      
      <description>&lt;p&gt;线性稳压器的功能是将一个稳定的或者不稳定的输入源电压转换为一个稳定的输出电压。正常工作时，即使输入端的电压出现巨大的波动，输出端的电压仍可以保持稳定。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211208155739.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;线性稳压器的原理&lt;/h2&gt;
&lt;p&gt;大多数的线性稳压器是用闭环控制的。为了得到想要的输出电压值，我们可以通过调整 R1/R2 的比值，使在放大器反相输入端的电压等于放大器正相输入端的参考电压 $V_{ref}$。误差放大反馈回路的作用是使两个输入端之间的电压差保持为 0。&lt;/p&gt;
&lt;p&gt;其原理是，如果负载减小 / 输入电压增大，则输出端的电压将变大，放大器反相输入端的电压将高于正相输入端的电压 $V_{ref}$，误差放大器输出端的电压为负值，传导晶体管的基极的电压变小，最终晶体管的输出电压也将变小。反之，如果负载增大 / 输入电压减小，放大器反相输入端的电压将下降，小于正相输入端的电压 $V_{ref}$，传导晶体管的基极电压变大，导致输出电压变大，以补偿原本应该下降的输出端电压。反馈回路可以同时调整由输入电压变化（线路调整 Line regulation）和负载变化（负载调整 Load regulation）所引起的电压变化。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202231005.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;线性稳压器的效率&lt;/h2&gt;
&lt;p&gt;线性稳压器的效率，指的是输出端的功率 $P_{out}$ 与输入端的功率 $P_{in}$ 之比：&lt;/p&gt;
&lt;p&gt;$$
η = \frac{P_{out}}{P_{in}}
$$&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;p&gt;$$
P_{out}=V_{out}*I_{out},
$$&lt;/p&gt;
&lt;p&gt;$$
P_{in}=V_{in}*I_{in},
$$&lt;/p&gt;
&lt;p&gt;$$
I_{in}=I_{out}+I_{q}
$$&lt;/p&gt;
&lt;p&gt;$I_{q}$ 是无负载下的静态电流。&lt;/p&gt;
&lt;h2&gt;低压差线性稳压器 - LDO&lt;/h2&gt;
&lt;p&gt;普通线性稳压器中，使用双极性晶体管作为电流放大器。因构成达灵顿电路，所以存在一定的压差。&lt;/p&gt;
&lt;p&gt;如果用 P 沟道场效应晶体管代替双极性晶体管，就得到了所谓的低压差线性稳压器（Low Drop Output, LDO），它的必要压差只有几百毫伏。&lt;/p&gt;
&lt;p&gt;因为场效应管的必要压差仅仅取决于它的正向导通电压（相当于 $R_{ds}*I_{load}$）。通常电阻 $R_{ds}$ 非常小，所以必要压差也就非常低。&lt;/p&gt;
&lt;h2&gt;优缺点及应用&lt;/h2&gt;
&lt;h3&gt;优点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;电路简单、便宜&lt;/li&gt;
&lt;li&gt;输出端噪声低&lt;/li&gt;
&lt;li&gt;对噪声的隔离度高&lt;/li&gt;
&lt;li&gt;快速的瞬态响应&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;缺点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;需要一定的压差才能起稳压作用，因此只能做降压用。&lt;/li&gt;
&lt;li&gt;在压差比较大的情况下，转换效率比较低，损耗都以发热的方式消耗掉，并影响板卡的稳定性、可靠性。&lt;/li&gt;
&lt;li&gt;功率至上，即便负载电路并不需要很大电流。这样做的后果就是所有元件即便非必要的时候也工作在满负荷下，结果产生高很多的热量。&lt;/li&gt;
&lt;li&gt;在压差不够的情况下，会出现比较大的纹波。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;应用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;对供电电源的噪声要求严格的模拟电路、时钟产生电路等。&lt;/li&gt;
&lt;li&gt;小电流、电源转换效率影响不大的数字电路供电场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/GfnT3FTVtMr37DIRVPG65g&#34;&gt;请举手回答，LDO 和 DC-DC 有什么不同？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.analog.com/media/cn/technical-documentation/application-notes/AN-1072_cn.pdf&#34;&gt;在系统中成功运用低压差稳压器（AN-1072）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://e2echina.ti.com/cfs-file/__key/telligent-evolution-components-attachments/00-24-00-00-00-02-56-36/_BF7E2760337A8B536856FA574078E577C68B_.pdf&#34;&gt;《线性稳压器基础知识》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haipeng.me/2020/06/10/ldo-basics-principles-and-applications/&#34;&gt;LDO 基础知识：工作原理及应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《DC-DC 转换器知识手册及用户实用技巧》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E7%BA%BF%E6%80%A7%E7%A8%B3%E5%8E%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%8B%93%E6%89%91-%E7%BA%BF%E6%80%A7%E7%A8%B3%E5%8E%8B/</guid>
      
    </item>
    
    <item>
      <title>电源方案（Boost）- SX1308</title>
      
      
      
      
      <description>&lt;p&gt;注：此方案 IC 不稳定，不推荐使用。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;strong&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Modularity_of_Functional_Circuit/tree/master/Power/SX1308&#34;&gt;https://github.com/linyuxuanlin/Modularity_of_Functional_Circuit/tree/master/Power/SX1308&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;：DC/DC（Boost）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输入电压&lt;/strong&gt;：2-24 V&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出电压&lt;/strong&gt;： 最高 28 V&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出电流&lt;/strong&gt;： 2 A&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作频率&lt;/strong&gt;： 1.2 MHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：最高 97%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;价格&lt;/strong&gt;：￥ 0.57&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;内置软启动&lt;/li&gt;
&lt;li&gt;输入欠压锁定&lt;/li&gt;
&lt;li&gt;轻载时自动切换至 PFM 模式&lt;/li&gt;
&lt;li&gt;电流限制&lt;/li&gt;
&lt;li&gt;过热保护&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210713154103.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考设计&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210715141625.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参数调节&lt;/h2&gt;
&lt;p&gt;（更详细的参数请参考数据手册）&lt;/p&gt;
&lt;h3&gt;输出电压调节&lt;/h3&gt;
&lt;p&gt;通过调整反馈分压电阻 $R_1$ 和 $R_2$ 来设置输出电压（反馈电压 $V_{REF}=0.6 V$）：&lt;/p&gt;
&lt;p&gt;$V_{OUT}=V_{REF}\times(1+\frac{R_1}{R_2})$&lt;/p&gt;
&lt;p&gt;一般来说，$R_2$ 选取 10 kΩ，则 $V_{OUT}$ 与 $R_1$ 对应关系如下：&lt;/p&gt;
&lt;p&gt;| $V_{OUT}$ |  $R_1$  |
| :-------: | :-----: |
|    5 V    | 73.2 kΩ |
|   10 V    | 158 kΩ  |
|   12 V    | 191 kΩ  |
|   15 V    | 240 kΩ  |
|   20 V    | 324 kΩ  |&lt;/p&gt;
&lt;h3&gt;使能引脚&lt;/h3&gt;
&lt;p&gt;EN 为使能脚，大于 1.5 V 时启动，小于 0.4 V 时关闭，请勿悬空此引脚。&lt;/p&gt;
&lt;h2&gt;PCB 布局参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;输入电容电源靠近 IC 电源引脚放置。&lt;/li&gt;
&lt;li&gt;输入输出电容靠近 IC 的 GND，以减小电流环路面积。&lt;/li&gt;
&lt;li&gt;加宽、缩短 VIN，SW 和 VOUT 的走线，以通过较大的交流电流。&lt;/li&gt;
&lt;li&gt;缩小芯片 SW 脚处铜皮，预防因交变电压引起的 EMI。&lt;/li&gt;
&lt;li&gt;缩短 FB 走线以防噪声干扰，反馈电阻要靠近芯片放置，R2 的 GND 应尽量靠近 IC 的 GND 引脚放置，且 VOUT 到 R1 的布线应该远离电感和开关节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;踩坑总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;中文数据手册中的参考原理图，15 pF 的 NP0 电容估计画错了，应该是接地的滤波电容（也可以不加）。如果不去掉的话，带不了大负载。&lt;/li&gt;
&lt;li&gt;参考技术贴 &lt;a href=&#34;http://www.crystalradio.cn/thread-1497661-1-1.html&#34;&gt;http://www.crystalradio.cn/thread-1497661-1-1.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;此电路受 PCB 布局的影响很大&lt;/strong&gt;，SW 脚处引出的铜皮不能多，否则会有寄生电容。其他应严格按照上文的布局参考。&lt;/li&gt;
&lt;li&gt;实测负载最大输出电流 800 mA 左右，能基本保持输出电压稳定（输出 11.6 V）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EN 引脚不能悬空&lt;/strong&gt;，必须上拉（开启 Boost）或下拉（关闭），否则将会以原电压输出。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Boost%EF%BC%89-SX1308/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Boost%EF%BC%89-SX1308/</guid>
      
    </item>
    
    <item>
      <title>电源方案（Buck）- LMR14050</title>
      
      
      
      
      <description>&lt;p&gt;LMR14050 是 TI 的一款 Buck 转换器芯片，输入电压范围很宽（4-40V），且能提供 5A 的持续输出电流，轻载有休眠模式提高效率。它的内部集成度高，所以外围需要设计的元器件很少。开关频率能通过外部电阻 $R_T$ 在 200kHz-2.5MHz 范围内选择，也能够与 250 kHz-2.3 MHz 频率范围内的外部时钟同步。保护功能有过温关断、$V_{OUT}$ 过压保护（OVP）、$V_{IN}$ 欠压锁定（UVLO）、逐周期电流限制和带频率折返的短路保护。&lt;/p&gt;
&lt;p&gt;项目仓库： &lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/tree/main/DC-DC(Buck)/LMR14050&#34;&gt;&lt;strong&gt;Collection_of_Power_Module_Design/DC-DC(Buck)/LMR14050&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/raw/main/DC-DC(Buck)/LMR14050/LMR14050.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;拓扑：DC/DC（Buck）&lt;/li&gt;
&lt;li&gt;器件型号：LMR14050SDDA&lt;/li&gt;
&lt;li&gt;封装：HSOIC-8&lt;/li&gt;
&lt;li&gt;输入电压：4-40 V&lt;/li&gt;
&lt;li&gt;输出电压：0.8-28V&lt;/li&gt;
&lt;li&gt;输出电流： 5A 持续&lt;/li&gt;
&lt;li&gt;工作频率： 200kHz-2.5MHz&lt;/li&gt;
&lt;li&gt;参考价格：￥ 11.3&lt;/li&gt;
&lt;li&gt;其他特性&lt;/li&gt;
&lt;li&gt;40µA 超低工作静态电流&lt;/li&gt;
&lt;li&gt;关断电流：1µA&lt;/li&gt;
&lt;li&gt;90mΩ 高侧 MOS 管&lt;/li&gt;
&lt;li&gt;最短导通时间：75ns&lt;/li&gt;
&lt;li&gt;电流模式控制&lt;/li&gt;
&lt;li&gt;热保护、过压保护和短路保护&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;内部功能框图&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111090855.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220110170233.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BOOT：给高侧 MOS 管的自举电容。在 BOOT 和 SW 间接一个 0.1uF 电容。&lt;/li&gt;
&lt;li&gt;VIN：电源输入，经过去耦电容 $C_{IN}$ 后接到此引脚。&lt;/li&gt;
&lt;li&gt;EN：使能开关，内部上拉。外部拉低于 1.2V 可关闭输出，浮空或接 $V_{IN}$ 使能输出。欠压锁定的调节请见下文。&lt;/li&gt;
&lt;li&gt;RT/SYNC：电阻时序或外部时钟输入。当使用外部电阻接地来设置开关频率时，内部放大器将此引脚保持在固定电压。如果引脚被拉至高于 PLL 上限阈值，则会发生模式更改并且引脚变为同步输入。内部放大器被禁用，引脚是内部 PLL 的高阻抗时钟输入。如果时钟边沿停止，则重新启用内部放大器并且操作模式返回到通过电阻器进行的频率编程。？&lt;/li&gt;
&lt;li&gt;FB：反馈输入引脚，由电阻从 $V_{OUT}$ 分压输入反馈，不可直接接地。&lt;/li&gt;
&lt;li&gt;SS：缓启动控制引脚，接电容设置缓启动时间。&lt;/li&gt;
&lt;li&gt;SW：稳压开关输出，在内部连高侧 MOS 管。接功率电感。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;特性描述&lt;/h2&gt;
&lt;h3&gt;稳压原理&lt;/h3&gt;
&lt;p&gt;LMR14050 的输出电压通过开启高侧 N-MOS 并控制导通时间来调节。在高侧 N-MOS 导通期间，SW 引脚电压摆动至大约 $V_{IN}$，电感电流 iL 随线性斜率 ($V_{IN}$ – $V_{OUT}$) / L 增加；当高侧 N-MOS 关断时，电感电流通过续流二极管，以 $V_{OUT}$ / L 的斜率放电。稳压器的控制参数由占空比 $D = t_{ON} /T_{SW}$ 决定，其中 $t_{ON}$ 是高端开关导通时间，TSW 是开关周期。稳压器控制环路通过调整占空比 D 来保持恒定的输出电压。在理想的降压转换器中，损耗被忽略，D 与输出电压成正比，与输入电压成反比：$D = V_{OUT} / V_{IN}$。&lt;/p&gt;
&lt;p&gt;连续导通模式（CCM）下的 SW 电压与电感电流的对应关系：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111095020.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;睡眠模式&lt;/h3&gt;
&lt;p&gt;轻载状态下会进入睡眠模式，以提高效率、减少门极驱动损耗（通过减少开关切换）。如果输出的峰值低于 300mA 将会触发睡眠模式。&lt;/p&gt;
&lt;h3&gt;BOOT 自举电路的设计&lt;/h3&gt;
&lt;p&gt;LMR14050 内部集成了自举电压转换器，在 BOOT 和 SW 引脚接一个自举电容，就可以提供足以驱动高侧 MOS 管门极的电压。BOOT 电容的参考值为 0.1uF（X7R 或 X5R 陶瓷电容，耐压至少 16V）。&lt;/p&gt;
&lt;h3&gt;输出电压调节&lt;/h3&gt;
&lt;p&gt;LMR14050 提供一个 0.75V 的内部参考电压。输出电压通过电阻分压器，从 $V_{OUT}$ 分压出来输入 FB 引脚，在内部进行比较调节。分压电阻建议使用偏差 1% 或更低的、温度系数 100 ppm 或更低的。通过所需分压电流选择低侧电阻 $R_{FBB}$（参考值是 10-100kΩ），并通过公式计算高侧电阻 $R_{FBT}$。选择较大的阻值有利于提高轻载效率，但如果太大，稳压器将更容易受到来自 FB 输入电流的噪声和电压误差的影响。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111105814.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;$$
R_{FBT}=\frac{V_{OUT}-0.75}{0.75}R_{FBB}
$$&lt;/p&gt;
&lt;h3&gt;EN 使能与欠压锁定调节&lt;/h3&gt;
&lt;p&gt;当 $V_{IN}$ 高于 3.7V，且 EN 高于 1.2V 阈值时 LMR14050 开启输出，当 $V_{IN}$ 掉落到低于 3.52V 或 EN 低于 1.2V 时稳压器关闭。EN 有内部上拉电流源（1uA）以确保 EN 脚浮空时稳压器正常输出。&lt;/p&gt;
&lt;p&gt;可通过调节 EN 的外部上下拉电阻，以调节启动和关闭的电压阈值：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111111613.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;$R_{ENT}$ 和 $R_{ENB}$ 遵从以下公式计算：&lt;/p&gt;
&lt;p&gt;$$
R_{ENT}=\frac{V_{STRAT}-V_{STOP}}{I_{HYS}}
$$&lt;/p&gt;
&lt;p&gt;$$&lt;/p&gt;
&lt;p&gt;R_{ENB}=\frac{V_{EN}}{\frac{V_{START}-V_{EN}}{R_{ENT}}+I_{EN}}
$$&lt;/p&gt;
&lt;p&gt;其中，$V_{STRAT}$ 是希望使能启动的电压阈值，$V_{STOP}$ 是希望欠压关闭的电压阈值，$I_{HYS}$ 是当 EN 电压超过 1.2V 时从 EN 来的滞后电流（典型值为 3.6uA）。&lt;/p&gt;
&lt;h3&gt;外部缓启动&lt;/h3&gt;
&lt;p&gt;缓启动用于抵御通电时冲击稳压器与负载的浪涌电流，可通过外置连接于 SS 与 GND 之间的电容 $C_{SS}$ 来进行配置。有一个内部电流源 $I_{SS}$（典型值为 3uA）为电容充电并生成一个从 0V 到 $V_{REF}$ 的斜坡。缓启动时间可通过公式配置：&lt;/p&gt;
&lt;p&gt;$t_{SS}(ms)=\frac{C_{SS}(nF)*V_{REF}(V)}{I_{SS}(uA)}$&lt;/p&gt;
&lt;p&gt;在稳压器失能或内部关闭时，缓启动将会被重置。&lt;/p&gt;
&lt;h3&gt;开关频率与同步（RT/SYNC）&lt;/h3&gt;
&lt;p&gt;LMR14050 的开关频率可以被接在 RT/SYNC 和 GND 之间的电阻 $R_T$ 编程设定。RT/SYNC 引脚不可浮空或端接到地，根据以下公式或图表决定其阻值：&lt;/p&gt;
&lt;p&gt;$$
R_T(kΩ)=32537*f_{SW}^{-1.045}(kHz)
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111135021.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111135034.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;LMR14050 开关动作也可以被外部时钟输入信号同步（250kHz-2.3MHz）:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111141247.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;内部晶振将会被外部时钟的下降沿同步。外部时钟推荐高电平不低于 1.7V，低电平不高于 0.5V，最小脉宽不低于 30ns。如果接低内阻信号源，那么频率设定电阻 $R_T$ 需要被并联到 AC 耦合电阻 $C_{COUP}$（可为 10pF 陶瓷电容），接到终端电阻 $R_{TERM}$（例如 50Ω），这样可以较好地匹配阻抗。&lt;/p&gt;
&lt;h3&gt;过流与短路保护&lt;/h3&gt;
&lt;p&gt;LMR14050 通过对高侧 MOS 管的峰值电流进行逐周期电流限制，以防止过流情况。每个开关周期都会将高端开关电流与误差放大器（EA）的输出减去斜率补偿进行比较。高侧开关的峰值电流受限于恒定的钳位最大峰值电流阈值。因此，高侧开关的峰值电流限制不受斜率补偿的影响，并且在整个占空比范围内保持恒定。&lt;/p&gt;
&lt;h3&gt;过压保护&lt;/h3&gt;
&lt;p&gt;LMR14050 内置输出过压保护（OVP）电路，以最大限度减少电压过冲。当 FB 电压达到上升 OVP 阈值（VREF 的 109%）时会关闭高侧 MOS 管；当降至低于 OVP 下降阈值（VREF 的 107%）时，高侧 MOS 管恢复正常工作。&lt;/p&gt;
&lt;h3&gt;热关断保护&lt;/h3&gt;
&lt;p&gt;LMR14050 有内部热关断保护功能。当结温超过 170℃ 时热关断激活，高侧 MOS 管停止开关。当芯片温度降至 158℃ 以下，才会从内部软重启。&lt;/p&gt;
&lt;h2&gt;参考设计&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220111143510.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;设计参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入电压 $V_{IN}$：7-36V，典型值为 12V&lt;/li&gt;
&lt;li&gt;输出电压 $V_{OUT}$：5V&lt;/li&gt;
&lt;li&gt;最大输出电流 $I_{O_MAX}$：5A&lt;/li&gt;
&lt;li&gt;瞬态响应（0.5-5A）：5%&lt;/li&gt;
&lt;li&gt;输出电压纹波：50mV&lt;/li&gt;
&lt;li&gt;输入电压纹波：400mV&lt;/li&gt;
&lt;li&gt;开关频率 $f_{SW}$：300kHz&lt;/li&gt;
&lt;li&gt;缓启动时间：5ms&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;输出电压设置&lt;/h3&gt;
&lt;p&gt;根据上面的公式，如果我们需要输出电压为 5V，则可选 $R_{FBT}$ 为 100kΩ，$R_{FBB}$ 为 17.4kΩ（17.65kΩ 的近似值，经调试均衡损耗）。&lt;/p&gt;
&lt;p&gt;如果我们需要输出电压为 12V，则可选 $R_{FBT}$ 为 100kΩ，$R_{FBB}$ 为 6.34kΩ（6.666kΩ 的近似值，经调试均衡损耗）。&lt;/p&gt;
&lt;h3&gt;开关频率设置&lt;/h3&gt;
&lt;p&gt;我们选择 300kHz 的开关频率，根据上面的公式，$R_T$ 选取 84.5kΩ（83.9kΩ 的近似值）。&lt;/p&gt;
&lt;h3&gt;输出电感选型&lt;/h3&gt;
&lt;p&gt;在 DC-DC 中，电感最关键的参数是电感值、饱和电流和 RMS 电流。电感值的选取基于所需的峰-峰纹波电流 $Δi_L$。由于纹波电流随着输入电压的增加而增加，所以始终使用最大输入电压来计算最小电感值 $L_{MIN}$。输出电感的最小值可通过公式计算：&lt;/p&gt;
&lt;p&gt;$$
Δi_L=\frac{V_{OUT}&lt;em&gt;(V_{IN_MAX}-V_{OUT})}{V_{IN_MAX}&lt;/em&gt;L*f_{SW}}
$$&lt;/p&gt;
&lt;p&gt;$$
L_{MIN}=\frac{V_{IN_MAX}-V_{OUT}}{I_{OUT}&lt;em&gt;K_{IND}}&lt;/em&gt;\frac{V_{OUT}}{V_{IN_MAX}*f_{SW}}
$$&lt;/p&gt;
&lt;p&gt;其中，$K_{IND}$ 是表示电感器纹波电流相对于最大输出电流的系数，合理值应该是 20%-40%。在瞬时短路或过流操作事件期间，RMS 和峰值电感电流可能很高。电感电流额定值应高于电流限制。&lt;/p&gt;
&lt;p&gt;一般来说，电感值越低越好，因为它通常带来更快的瞬态响应、更小的 DCR 及更小的尺寸。但是太低的电感值会带来较大的电感电流纹波，从而可能错误触发满载时的过流保护。由于 RMS 电流略高，它还会产生更多的传导损耗。较大的电感电流纹波，也意味着较大的输出电压纹波。对于峰值电流模式控制，不建议电感电流纹波过小，较大的峰值电流纹波可提高比较器的信噪比。&lt;/p&gt;
&lt;p&gt;在参考设计中，$K_{IND}$ 的值取 0.4，所以计算得到最小的电感值为 7.17uH，接近的取值为 8.2uH。可选用 7A RMS 电流和 10A 饱和电流的 8.2 μH 铁氧体电感器。&lt;/p&gt;
&lt;h3&gt;输出电容选型&lt;/h3&gt;
&lt;p&gt;输出电容 $C_{OUT}$ 的选择直接影响稳态输出电压纹波、环路稳定性、负载电流瞬变期间的电压过冲和下冲。输出纹波本质上由两部分组成。一是电感电流纹波通过输出电容的等效串联电阻（ESR）引起的：&lt;/p&gt;
&lt;p&gt;$$
ΔV_{OUT_ESR}=Δi_L&lt;em&gt;ESR=K_{IND}&lt;/em&gt;I_{OUT}*ESR
$$&lt;/p&gt;
&lt;p&gt;另一种是由电感电流纹波对输出电容充放电引起的：&lt;/p&gt;
&lt;p&gt;$$
ΔV_{OUT_C}=\frac{Δi_L}{8&lt;em&gt;f_{SW}&lt;/em&gt;C_{OUT}}=\frac{K_{IND}&lt;em&gt;I_{OUT}}{8&lt;/em&gt;f_{SW}*C_{OUT}}
$$&lt;/p&gt;
&lt;p&gt;这两种电压纹波并不同相，所以实际的峰-峰纹波会比两者之和小。&lt;/p&gt;
&lt;p&gt;如果系统需要严格的电压调节（大电流阶跃和快速压摆率），则输出电容会受到瞬态性能规范的约束。当发生快速大负载提升时，输出电容能够在电感电流上升到适当水平之前，提供所需的电荷。稳压器的控制环路通常需要至少三个时钟周期，来响应输出电压下降。输出电容必须足够大，以提供三个时钟周期的电流差，以将输出电压保持在指定范围内。&lt;/p&gt;
&lt;p&gt;当负载突然大幅下降时，输出电容会吸取电感中储存的能量。钳位二极管没法灌电流，所以电感中的电能将会导致输出电压过冲。计算特定输出下冲所需的最小输出电容的公式：&lt;/p&gt;
&lt;p&gt;$C_{OUT}&amp;gt;\frac{3&lt;em&gt;(I_{OH}-I_{OL})}{f_{SW}&lt;/em&gt;V_{US}}$&lt;/p&gt;
&lt;p&gt;将电压过冲保持在指定范围内，所需的最小电容计算公式：&lt;/p&gt;
&lt;p&gt;$C_{OUT}&amp;gt;\frac{I_{OH}^2-I_{OL}^2}{(V_{OUT}+V_{OS})^2-V_{OUT}^2}*L$&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$K_{IND}$ 为电感纹波电流的纹波比（$Δi_L/I_{OUT}$）&lt;/li&gt;
&lt;li&gt;$I_{OL}$ 为负载瞬态期间的低电平输出电流&lt;/li&gt;
&lt;li&gt;$I_{OH}$ 为负载瞬态期间的高电平输出电流&lt;/li&gt;
&lt;li&gt;$V_{US}$ 为目标输出电压下冲&lt;/li&gt;
&lt;li&gt;$V_{OS}$ 为目标输出电压过冲&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在参考设计中，目标输出纹波为 50mV。假设 $ΔV_{OUT_ESR}=ΔV_{OUT_C}=50mV$，$K_{IND}$ 取值为 0.4，$ESR$ 不大于 25mΩ，$C_{OUT}$ 不小于 16.7 μF，参考设计的过冲和下冲范围 $V_{US}=V_{OS}=5%*V_{OUT}=250mV$。所以 $C_{OUT}$ 可分别被计算出不小于 180uF 和 79.2uF，所以选取较严格的标准为 180uF，即使用 4 个 47uF（16V，X7R 陶瓷电容，ESR 为 5mΩ）并联。&lt;/p&gt;
&lt;h3&gt;肖特基二极管选型&lt;/h3&gt;
&lt;p&gt;二极管的额定击穿电压最好比最大输入电压高 25%。为了最佳可靠性，二极管的额定电流应等于稳压器最大输出电流。在输入电压远大于输出电压的情况下，二极管平均电流会更低，这时候可以使用平均电流额定值较低的二极管，约为 $(1-D) * I_{OUT}$，但峰值电流额定值应高于最大负载电流。一般选 6-7A 起步。&lt;/p&gt;
&lt;h3&gt;输入电容选型&lt;/h3&gt;
&lt;p&gt;LMR14050 需要高频输入去耦电容和大容量输入电容。高频去耦电容的典型推荐值为 4.7-10 μF（X5R/X7R，陶瓷电容，耐压为最大输入电压两倍以上）。在参考设计中，使用了两个额定电压为 100 V 的 2.2 μF X7R 陶瓷电容器。高频滤波电容需要靠近稳压器放置。&lt;/p&gt;
&lt;p&gt;大容量电容为电压尖峰提供阻尼，参考值为 47uF 或 100uF 电解电容。&lt;/p&gt;
&lt;h3&gt;BOOT 自举电容选型&lt;/h3&gt;
&lt;p&gt;LMR14050 需要一个 BOOT 自举电容，在前文有提及，BOOT 电容的参考值为 0.1uF（X7R 或 X5R 陶瓷电容，耐压至少 16V）。&lt;/p&gt;
&lt;h3&gt;缓启动电容选型&lt;/h3&gt;
&lt;p&gt;根据前文公式，如果设定缓启动时间为 5ms，则可得出 22 nF（接近计算值 20nF）的缓启动电容。&lt;/p&gt;
&lt;h2&gt;Layout 参考&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220110183248.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;减小 EMI 的 Layout 建议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;反馈网络、电阻 $R_{FBT}$ 和 $R_{FBB}$ 应尽量靠近 FB 引脚。 $V_{OUT}$ 的采样路径应远离噪声产生路径，最好通过屏蔽层另一侧的层。&lt;/li&gt;
&lt;li&gt;输入去耦电容需要尽可能靠近 $V_{IN}$ 和 GND 放置。&lt;/li&gt;
&lt;li&gt;电感应靠近 SW 引脚放置，以减少磁噪声和静电噪声。&lt;/li&gt;
&lt;li&gt;输出电容 $C_{OUT}$ 应靠近电感和二极管的节点放置，走线尽可能短，以降低传导和辐射噪声，提高效率。&lt;/li&gt;
&lt;li&gt;二极管、$C_{IN}$ 和 $C_{OUT}$ 的接地连接应尽可能小，并仅在一个点（最好在 $C_{OUT}$ 接地点）连接到系统接地层，以最大限度地减少系统接地层中的传导噪声。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;实际测试&lt;/h2&gt;
&lt;p&gt;24V 输入，5V/5A 满载输出，实际输出 4.95V/5.00A，纹波 15mV，温度 110℃。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com.cn/product/cn/LMR14050#tech-docs&#34;&gt;技术文档 · LMR14050&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com/lit/an/snva021c/snva021c.pdf?ts=1641814411004&#34;&gt;N-1149 Layout Guidelines for Switching Power Supplies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-LMR14050/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-LMR14050/</guid>
      
    </item>
    
    <item>
      <title>电源方案（Buck）- TPS54531</title>
      
      
      
      
      <description>&lt;p&gt;TPS54531 是 TI 的一款具有 Eco-mode 的 3.5V 至 28V 输入、5A、570kHz Buck 转换器。&lt;/p&gt;
&lt;p&gt;项目仓库： &lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/tree/main/DC-DC(Buck)/TPS54531&#34;&gt;&lt;strong&gt;Collection_of_Power_Module_Design/DC-DC(Buck)/TPS54531&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/raw/main/DC-DC(Buck)/TPS54531/TPS54531.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;：DC/DC（Buck）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输入电压&lt;/strong&gt;：3.5-28 V&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出电压&lt;/strong&gt;： 最低 0.8 V&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出电流&lt;/strong&gt;： 5 A&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作频率&lt;/strong&gt;： 570 kHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：最高 92%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;价格&lt;/strong&gt;：￥ 3.80&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;轻负载时脉冲跳跃 Eco-mode 功能&lt;/li&gt;
&lt;li&gt;可调慢启动可限制涌入电流&lt;/li&gt;
&lt;li&gt;可编程欠压闭锁（UVLO）阈值&lt;/li&gt;
&lt;li&gt;过压瞬态保护&lt;/li&gt;
&lt;li&gt;逐周期电流限制、频率折返和热关断保护&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210713153815.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考设计&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210713173605.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参数调节&lt;/h2&gt;
&lt;p&gt;（更详细的参数请参考数据手册）&lt;/p&gt;
&lt;h3&gt;输出电压调节&lt;/h3&gt;
&lt;p&gt;通过调整反馈分压电阻 $R_5$ 和 $R_6$ 来设置输出电压（反馈电压 $V_{REF}=0.8 V$）：&lt;/p&gt;
&lt;p&gt;$$
V_{OUT}=V_{REF}\times[\frac{R5}{R6}+1]
$$&lt;/p&gt;
&lt;p&gt;$R_5$ 大约取值 10 kΩ，在参考设计中，我们需要输出 4.96 V，所以取 $R_5$ = 10.2 kΩ，$R_6$ = 1.96 kΩ。&lt;/p&gt;
&lt;h3&gt;使能引脚&lt;/h3&gt;
&lt;p&gt;EN 引脚低于 1.25 V 失能，浮空以使能。这里使用两个电阻进行欠压锁定。&lt;/p&gt;
&lt;h3&gt;Eco-mode 节能模式&lt;/h3&gt;
&lt;p&gt;当电感器的峰值电流低于 160 mA 时，芯片进入节能模式，关闭输出。&lt;/p&gt;
&lt;h3&gt;热关机&lt;/h3&gt;
&lt;p&gt;当芯片温度超过 165℃ 时，芯片停止运行；当低于 165℃ 时重新启动。&lt;/p&gt;
&lt;h2&gt;PCB 布局参考&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210713161521.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210713162833.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;踩坑总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;续流二极管和电感的电流应该大于输出电流。&lt;/li&gt;
&lt;li&gt;芯片背面需裸铜上锡用于散热。&lt;/li&gt;
&lt;li&gt;布局应按照 Buck 电流流向。&lt;/li&gt;
&lt;li&gt;成品板可输出 5 A 电流，但长跑 3 A 以上需要另加散热。功率器件如二极管和电感会发烫。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-TPS54531/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-TPS54531/</guid>
      
    </item>
    
    <item>
      <title>电源方案（Buck）- XL2009E1</title>
      
      
      
      
      <description>&lt;p&gt;XL2009E1 是芯龙的一款最高 36V 输入、3A 输出、固定 180kHz 的 Buck 芯片，被指过流保护功能，当短路的时候，频率会降到 48kHz。&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/tree/main/DC-DC(Buck)/XL2009E1&#34;&gt;&lt;strong&gt;Collection_of_Power_Module_Design/DC-DC(Buck)/XL2009E1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;拓扑：DC/DC（Buck）&lt;/li&gt;
&lt;li&gt;器件型号：XL2009E1&lt;/li&gt;
&lt;li&gt;封装：SOP8L&lt;/li&gt;
&lt;li&gt;输入电压：8-36 V&lt;/li&gt;
&lt;li&gt;输出电压：1.25-32V&lt;/li&gt;
&lt;li&gt;最小输入输出差：0.3V&lt;/li&gt;
&lt;li&gt;最大占空比：100%&lt;/li&gt;
&lt;li&gt;工作频率：固定 180kHz&lt;/li&gt;
&lt;li&gt;最大输出电流： 3A&lt;/li&gt;
&lt;li&gt;效率（输入 12V，输出5V@2.1A）：89%&lt;/li&gt;
&lt;li&gt;参考价格：￥ 2.1&lt;/li&gt;
&lt;li&gt;其他特性&lt;/li&gt;
&lt;li&gt;带输出恒流环&lt;/li&gt;
&lt;li&gt;内置短路保护&lt;/li&gt;
&lt;li&gt;内置限流保护&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;典型应用电路&lt;/h2&gt;
&lt;p&gt;根据数据手册提供的典型应用电路（输入 8-36V，输出 5V@2.1A）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407103157.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407065806.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FB：反馈输入引脚，由电阻从 $V_{OUT}$ 分压输入反馈，不可直接接地。反馈参考电压为 1.25V。&lt;/li&gt;
&lt;li&gt;OCSET：输出恒流设置引脚。&lt;/li&gt;
&lt;li&gt;VC：内部稳压器旁路电容。一般接 1uF 到 VIN。&lt;/li&gt;
&lt;li&gt;VIN：供电输入引脚。输入电压为 8-36V。需要有大电容去耦。&lt;/li&gt;
&lt;li&gt;SW：Buck 开关输出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;特性描述&lt;/h2&gt;
&lt;h3&gt;内部功能框图&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407070413.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;输出电压调节&lt;/h3&gt;
&lt;p&gt;XL2009E1 提供一个 1.25V 的内部参考电压。输出电压通过电阻分压器，从 $V_{OUT}$ 分压出来输入 FB 引脚，在内部进行比较调节。分压电阻建议使用偏差 1% 或更低的、温度系数 100 ppm 或更低的。分压电阻选择较大的阻值有利于提高轻载效率，但如果太大，稳压器将更容易受到来自 FB 输入电流的噪声和电压误差的影响。推荐低侧电阻 $R_1$ 取值为 4.7k，并通过公式计算高侧电阻 $R_2$：&lt;/p&gt;
&lt;p&gt;$$
V_{OUT}=1.25*(1+\frac{R_2}{R_1})
$$&lt;/p&gt;
&lt;h3&gt;肖特基二极管选型&lt;/h3&gt;
&lt;p&gt;二极管的额定击穿电压最好比最大输入电压高 25%。为了最佳可靠性，二极管的额定电流应等于稳压器最大输出电流。在输入电压远大于输出电压的情况下，二极管平均电流会更低，这时候可以使用平均电流额定值较低的二极管，约为 $(1-D) * I_{OUT}$，但峰值电流额定值应高于最大负载电流。&lt;/p&gt;
&lt;p&gt;XL2009E1 的数据手册提供了直接选型表（3A）：&lt;/p&gt;
&lt;p&gt;| 输入电压 | 型号        |
| -------- | ----------- |
| 20V      | SK32        |
| 30V      | SK33/30WQ03 |
| 40V      | SK34/30WQ04 |
| 50V      | SK35/30WQ05 |
| 60V      | SK36        |&lt;/p&gt;
&lt;h3&gt;参数曲线&lt;/h3&gt;
&lt;p&gt;输出电压与电流的关系：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407100229.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;效率与输出电流的关系：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407103033.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;输出电流与 RCS 电阻的关系（恒流控制）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220407102905.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://datasheet.lcsc.com/lcsc/1806111754_XLSEMI-XL2009E1_C73335.pdf&#34;&gt;XL2009_Datasheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-XL2009E1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88Buck%EF%BC%89-XL2009E1/</guid>
      
    </item>
    
    <item>
      <title>电源方案（LDO）- XC6206</title>
      
      
      
      
      <description>&lt;p&gt;XC6206 系列是高精度、低功耗的三端正电压调节器，提供大电流和极小的压差电压，内部由限流电路、驱动晶体管、精密基准电压和纠错电路组成。该系列兼容低 ESR 陶瓷电容。输出电压可以在 1.2V 至 5.0V 范围内以 0.1V 为增量进行选择。&lt;/p&gt;
&lt;p&gt;本篇选用的是 TOREX（特瑞仕）的 XC6206 系列，SOT-23 封装，其他厂商相同型号可替代，但请校对详细参数。&lt;/p&gt;
&lt;p&gt;项目仓库： &lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/tree/main/LDO/XC6206&#34;&gt;&lt;strong&gt;Collection_of_Power_Module_Design/LDO/XC6206&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最大输出电流：200mA（典型值 6.0V 下）&lt;/li&gt;
&lt;li&gt;压差电压：250mV@100mA（典型值 6.0V 下）&lt;/li&gt;
&lt;li&gt;最大工作电压：6.0V&lt;/li&gt;
&lt;li&gt;输出电压范围：1.2V ~ 5.0V（0.1V 增量）&lt;/li&gt;
&lt;li&gt;精度：当 Vout&amp;lt;1.5V 时，精度 ±30mV；当 Vout&amp;gt;1.5V 时，精度 ±2%；当 Vout&amp;gt;2V 时，精度 ±1%&lt;/li&gt;
&lt;li&gt;低功耗：典型值 1.0uA&lt;/li&gt;
&lt;li&gt;保护电路：内置限流电路&lt;/li&gt;
&lt;li&gt;工作温度：-40℃~ +85℃&lt;/li&gt;
&lt;li&gt;可选封装：SOT-23、SOT-89、USP-6B&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;选型说明&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420102910.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;典型应用电路&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420102323.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;内部功能框图&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420102514.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注：框图内的二极管为 ESD 或寄生二极管。&lt;/p&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420103005.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| 引脚名称 | 引脚描述 |
| -------- | -------- |
| VSS      | 地       |
| Vin      | 电源输入 |
| Vout     | 电源输出 |&lt;/p&gt;
&lt;h2&gt;特性描述&lt;/h2&gt;
&lt;p&gt;各型号的具体参数表：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420103738.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.torexsemi.com/file/xc6206/XC6206.pdf&#34;&gt;XC6206_Datasheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88LDO%EF%BC%89-XC6206/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88LDO%EF%BC%89-XC6206/</guid>
      
    </item>
    
    <item>
      <title>电源方案（PMIC）- EA3036C</title>
      
      
      
      
      <description>&lt;p&gt;EA3036C 是一款 3 通道 PMIC，适用于由锂电池或直流 5V 供电的应用。它内部集成三个同步降压转换器，可在轻载和重载运行时提供高效率输出。内部补偿架构使应用电路设计简单。此外，独立的使能控制方便控制上电顺序。EA3036C 采用 20 脚 QFN 3x3 封装。&lt;/p&gt;
&lt;p&gt;项目仓库： &lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/tree/main/PMIC/EA3036C&#34;&gt;&lt;strong&gt;Collection_of_Power_Module_Design/PMIC/EA3036C&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;输入电压与控制电路电压：2.7-5.5V&lt;/li&gt;
&lt;li&gt;输出电压（3 个 Buck 转换器）：0.6V-Vin&lt;/li&gt;
&lt;li&gt;单路连续负载电流：1A（3 路总输出必须小于 6W）&lt;/li&gt;
&lt;li&gt;固定 1.5MHz 开关频率&lt;/li&gt;
&lt;li&gt;100% 全占空比输出&lt;/li&gt;
&lt;li&gt;待机电流：&amp;lt;1uA&lt;/li&gt;
&lt;li&gt;每路独立使能控制&lt;/li&gt;
&lt;li&gt;内部补偿&lt;/li&gt;
&lt;li&gt;逐周期电流限制&lt;/li&gt;
&lt;li&gt;短路保护&lt;/li&gt;
&lt;li&gt;自恢复过温（OTP）保护&lt;/li&gt;
&lt;li&gt;输入过压（OVP）保护&lt;/li&gt;
&lt;li&gt;采用 20 引脚 3mm x 3mm QFN 封装&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;典型应用电路&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220417095917.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;内部功能框图&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220417001936.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220416234110.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| 引脚名称 | 引脚描述                                                   |
| -------- | ---------------------------------------------------------- |
| VCC      | 内部控制电路的电源输入脚                                   |
| VINx     | 通道 x 的电源输入脚，加 10uF MLCC 电容去耦                 |
| LXx      | 通道 x 内部 MOS 管开关输出，可接低通滤波电路输出更稳定电压 |
| FBx      | 通道 x 的反馈脚，通过分压电路连接电压输出                  |
| ENx      | 使能脚，不能浮空                                           |
| GNDx     | 通道 x 的地                                                |
| AGND     | 模拟地                                                     |
| 底部焊盘 | 散热用，需要接地                                           |&lt;/p&gt;
&lt;h2&gt;特性描述&lt;/h2&gt;
&lt;h3&gt;PFM/PWM 模式&lt;/h3&gt;
&lt;p&gt;每一路 Buck 都可以运行在 PFM/PWM 模式下。如果输出电流小于 260mA（典型值），稳压器将自动进入 PFM 模式。PFM 模式下的输出电压和输出纹波高于 PWM 模式下的输出电压和输出纹波。但在轻载的情况下，PFM 比 PWM 效率高。&lt;/p&gt;
&lt;h3&gt;使能开关&lt;/h3&gt;
&lt;p&gt;EA3036C 是一款专为 IPC 应用设计的电源管理 IC，包含三路 1A 同步 Buck，可通过单独的 EN 引脚进行使能开关控制。&lt;/p&gt;
&lt;p&gt;如果需要设定每路 Buck 的开启时间，可通过使用如下电路进行编程：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220417100845.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;180° 相位偏移架构&lt;/h3&gt;
&lt;p&gt;为了降低输入纹波电流，EA3036C 采用了 180° 相位偏移架构。 Buck1 和 Buck3 相位相同，而 Buck2 的相位相差 180°。这样子可以减小纹波电流，从而降低 EMI。&lt;/p&gt;
&lt;h3&gt;过流保护&lt;/h3&gt;
&lt;p&gt;EA3036C 内部的三个稳压器都有自己的逐周期限流电路。当电感峰值电流超过电流限制阈值时，输出电压开始下降，直到 FB 引脚电压低于阈值，通常比参考值低 30%。一旦触发阈值，开关频率就会降低到 400KHz（典型值）。&lt;/p&gt;
&lt;h3&gt;峰值负载电流&lt;/h3&gt;
&lt;p&gt;EA3036C 的峰值负载电流能力，取决于内部 PMOS 电流限制、工作占空比（Vout/Vin）和电感值。在 Vin=5V, L=1.5uH 的条件下，输出峰值负载电流能力如下图所示：&lt;/p&gt;
&lt;p&gt;| 输出电压 | 峰值负载电流 |
| -------- | ------------ |
| 3.3V     | 1.2A         |
| 1.8V     | 1.5A         |
| 1.5V     | 1.5A         |
| 1.2V     | 1.5A         |&lt;/p&gt;
&lt;p&gt;需要注意的是，总输出功耗必须小于 6W，以免芯片过热损坏。&lt;/p&gt;
&lt;h3&gt;热关断&lt;/h3&gt;
&lt;p&gt;如果芯片温度高于热关断阈值点，EA3036C 将自动关断。为避免工作不稳定，热关断的迟滞约为 30°C。&lt;/p&gt;
&lt;h3&gt;输出电压调节&lt;/h3&gt;
&lt;p&gt;每路稳压器的输出电压都可以通过电阻分压器（R1、R2）进行调节。输出电压由下式计算：&lt;/p&gt;
&lt;p&gt;$$
V_{OUTx}=0.6*\frac{R_1}{R_2}+0.6V
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220417230210.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果需要输出常用的电压值，则可参考下表配置分压电阻（都需要选用 1% 精度的）：&lt;/p&gt;
&lt;p&gt;| 输出电压 | R1    | R2    |
| -------- | ----- | ----- |
| 3.3V     | 68kΩ  | 15kΩ  |
| 1.8V     | 200kΩ | 100kΩ |
| 1.5V     | 150kΩ | 100kΩ |
| 1.2V     | 100kΩ | 100kΩ |&lt;/p&gt;
&lt;h3&gt;输入 / 输出电容选型&lt;/h3&gt;
&lt;p&gt;输入电容用于抑制输入电压的噪声幅值，为器件提供稳定、干净的直流输入，输出电容可抑制输出电压纹波。输入和输出都可选用 MLCC 电容（低 ESR）&lt;/p&gt;
&lt;p&gt;输入 / 输出电容器的建议型号如下：&lt;/p&gt;
&lt;p&gt;| NPM            | 容值 | 耐压 | 封装 |
| -------------- | ---- | ---- | ---- |
| C2012X5R1A106M | 10uF | 10V  | 0805 |
| C3216X5R1A106M | 10uF | 10V  | 1206 |
| C2012X5R1A226M | 22uF | 10V  | 0805 |
| C3216X5R1A226M | 22uF | 10V  | 1206 |&lt;/p&gt;
&lt;h3&gt;输出电感选型&lt;/h3&gt;
&lt;p&gt;输出电感的选择，主要取决于通过电感的纹波电流量 $\Delta I_L$。$\Delta I_L$ 越大，输出电压纹波和损耗也会越大。虽然小电感可节省成本和空间，但较大的电感值可以获得更小的 $\Delta I_L$，带来更小的输出电压纹波和损耗。电感取值的计算公式：&lt;/p&gt;
&lt;p&gt;$$
L=\frac{V_{PWR}-V_{OUT}}{\Delta I_L&lt;em&gt;F_{SW}}&lt;/em&gt;\frac{V_{OUT}}{V_{PWR}}
$$&lt;/p&gt;
&lt;p&gt;对于大多数应用场景，EA3036C 可选用 1.0~2.2uH 的电感。&lt;/p&gt;
&lt;h3&gt;功耗&lt;/h3&gt;
&lt;p&gt;EA3036C 的总功耗不应超过 6W，计算公式如下：&lt;/p&gt;
&lt;p&gt;$$
P_{D(total)}=\Sigma (V_{OUTx}*I_{OUTx})
$$&lt;/p&gt;
&lt;h2&gt;Layout 参考&lt;/h2&gt;
&lt;p&gt;PMIC 的 Layout 需要讲究。可参照以下建议以获得最高性能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建议使用 4 层 PCB 布局，将 LX 平面和输出平面放在顶层，将 VIN 平面放在内层。&lt;/li&gt;
&lt;li&gt;顶层输入 / 输出贴片电容的接地脚应该打过孔连接到内层地和底层地。&lt;/li&gt;
&lt;li&gt;AGND 应通过过孔直接连接到内部地层。&lt;/li&gt;
&lt;li&gt;尽量加宽大电流路径走线。&lt;/li&gt;
&lt;li&gt;将输入电容尽可能靠近 VINx 引脚放置，以减少噪声干扰。&lt;/li&gt;
&lt;li&gt;使反馈路径（从 VOUTx 到 FBx）远离噪声节点（例如 LXx）。 LXx 是一个高电流噪声节点。使用短而宽的走线完成布局。&lt;/li&gt;
&lt;li&gt;芯片底部焊盘需要打多个孔到内层和底层地，用以散热。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.everanalog.com/Product/ProductEA3036CDetailInfo.aspx&#34;&gt;EA3036C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88PMIC%EF%BC%89-EA3036C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88PMIC%EF%BC%89-EA3036C/</guid>
      
    </item>
    
    <item>
      <title>电源方案（PMIC）- EA3059</title>
      
      
      
      
      <description>&lt;p&gt;EA3059 是一款 4 路 PMIC，适用于由锂电池或直流 5V 供电的应用。它内部集成四个同步降压转换器，可在轻载和重载运行时提供高效率输出。内部补偿架构使应用电路设计简单。此外，独立的使能控制方便控制上电顺序。EA3059 采用 24 脚 QFN 4x4 封装。&lt;/p&gt;
&lt;p&gt;项目仓库： &lt;a href=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/tree/main/PMIC/EA3059&#34;&gt;&lt;strong&gt;Collection_of_Power_Module_Design/PMIC/EA3059&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目在线预览：&lt;/p&gt;
&lt;div class=&#34;altium-iframe-viewer&#34;&gt;
  &lt;div
    class=&#34;altium-ecad-viewer&#34;
    data-project-src=&#34;https://github.com/linyuxuanlin/Collection_of_Power_Module_Design/raw/main/PMIC/EA3059/EA3059_V0.2.zip&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;输入电压与控制电路电压：2.7-5.5V&lt;/li&gt;
&lt;li&gt;输出电压（4 个 Buck 转换器）：0.6V-Vin&lt;/li&gt;
&lt;li&gt;输出电流：单路连续负载 2A、峰值 4A（4 通道总输出必须小于 10W）&lt;/li&gt;
&lt;li&gt;固定 1.5MHz 开关频率&lt;/li&gt;
&lt;li&gt;100% 全占空比输出&lt;/li&gt;
&lt;li&gt;各通道效率达 95%&lt;/li&gt;
&lt;li&gt;待机电流：&amp;lt;1uA&lt;/li&gt;
&lt;li&gt;每路独立使能控制&lt;/li&gt;
&lt;li&gt;内部补偿&lt;/li&gt;
&lt;li&gt;逐周期电流限制&lt;/li&gt;
&lt;li&gt;短路保护&lt;/li&gt;
&lt;li&gt;自恢复过温（OTP）保护&lt;/li&gt;
&lt;li&gt;没有输入过压（OVP）保护（相比 EA3059）&lt;/li&gt;
&lt;li&gt;采用 24 引脚 4mm x 4mm QFN 封装&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;典型应用电路&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420171841.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;内部功能框图&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420171859.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420171920.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| 引脚名称 | 引脚描述                                                   |
| -------- | ---------------------------------------------------------- |
| VCC      | 内部控制电路的电源输入脚                                   |
| VINx     | 通道 x 的电源输入脚，加 10uF MLCC 电容去耦                 |
| LXx      | 通道 x 内部 MOS 管开关输出，可接低通滤波电路输出更稳定电压 |
| FBx      | 通道 x 的反馈脚，通过分压电路连接电压输出                  |
| ENx      | 使能脚，不能浮空                                           |
| GNDx     | 通道 x 的地                                                |
| AGND     | 模拟地                                                     |
| 底部焊盘 | 散热用，需要接地                                           |
| NC       | 无连接                                                     |&lt;/p&gt;
&lt;h2&gt;特性描述&lt;/h2&gt;
&lt;h3&gt;PFM/PWM 模式&lt;/h3&gt;
&lt;p&gt;每一路 Buck 都可以运行在 PFM/PWM 模式下。如果输出电流小于 150mA（典型值），稳压器将自动进入 PFM 模式。PFM 模式下的输出电压和输出纹波高于 PWM 模式下的输出电压和输出纹波。但在轻载的情况下，PFM 比 PWM 效率高。&lt;/p&gt;
&lt;h3&gt;使能开关&lt;/h3&gt;
&lt;p&gt;EA3059 是一款专为 OTT 应用设计的电源管理 IC，包含四路 2A 同步 Buck，可通过单独的 EN 引脚进行使能开关控制。&lt;/p&gt;
&lt;p&gt;如果需要设定每路 Buck 的开启时间，可通过使用如下电路进行编程：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420172125.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;180° 相位偏移架构&lt;/h3&gt;
&lt;p&gt;为了降低输入纹波电流，EA3059 采用了 180° 相位偏移架构。 Buck1 和 Buck3 相位相同，与 Buck2 和 Buck4 的相位相差 180°。这样子可以减小纹波电流，从而降低 EMI。&lt;/p&gt;
&lt;h3&gt;过流保护&lt;/h3&gt;
&lt;p&gt;EA3059 内部的四个稳压器都有自己的逐周期限流电路。当电感峰值电流超过电流限制阈值时，输出电压开始下降，直到 FB 引脚电压低于阈值，通常比参考值低 30%。一旦触发阈值，开关频率就会降低到 350KHz（典型值）。&lt;/p&gt;
&lt;h3&gt;热关断&lt;/h3&gt;
&lt;p&gt;如果芯片温度高于热关断阈值点，EA3059 将自动关断。为避免工作不稳定，热关断的迟滞约为 30°C。&lt;/p&gt;
&lt;h3&gt;输出电压调节&lt;/h3&gt;
&lt;p&gt;每路稳压器的输出电压都可以通过电阻分压器（R1、R2）进行调节。输出电压由下式计算：&lt;/p&gt;
&lt;p&gt;$$
V_{OUTx}=0.6*\frac{R_1}{R_2}+0.6V
$$&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420172602.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果需要输出常用的电压值，则可参考下表配置分压电阻（都需要选用 1% 精度的）：&lt;/p&gt;
&lt;p&gt;| 输出电压 | R1    | R2    |
| -------- | ----- | ----- |
| 3.3V     | 510kΩ | 110kΩ |
| 1.8V     | 200kΩ | 100kΩ |
| 1.5V     | 150kΩ | 100kΩ |
| 1.1V     | 68kΩ  | 82kΩ  |&lt;/p&gt;
&lt;h3&gt;输入 / 输出电容选型&lt;/h3&gt;
&lt;p&gt;输入电容用于抑制输入电压的噪声幅值，为器件提供稳定、干净的直流输入，输出电容可抑制输出电压纹波。输入和输出都可选用 MLCC 电容（低 ESR）&lt;/p&gt;
&lt;p&gt;输入 / 输出电容器的建议型号如下：&lt;/p&gt;
&lt;p&gt;| NPM            | 容值 | 耐压 | 封装 |
| -------------- | ---- | ---- | ---- |
| C2012X5R1A106M | 10uF | 10V  | 0805 |
| C3216X5R1A106M | 10uF | 10V  | 1206 |
| C2012X5R1A226M | 22uF | 10V  | 0805 |
| C3216X5R1A226M | 22uF | 10V  | 1206 |&lt;/p&gt;
&lt;h3&gt;输出电感选型&lt;/h3&gt;
&lt;p&gt;输出电感的选择，主要取决于通过电感的纹波电流量 $\Delta I_L$。$\Delta I_L$ 越大，输出电压纹波和损耗也会越大。虽然小电感可节省成本和空间，但较大的电感值可以获得更小的 $\Delta I_L$，带来更小的输出电压纹波和损耗。电感取值的计算公式：&lt;/p&gt;
&lt;p&gt;$$
L=\frac{V_{PWR}-V_{OUT}}{\Delta I_L&lt;em&gt;F_{SW}}&lt;/em&gt;\frac{V_{OUT}}{V_{PWR}}
$$&lt;/p&gt;
&lt;p&gt;对于大多数应用场景，EA3059 可选用 1.0~2.2uH 的电感。&lt;/p&gt;
&lt;h3&gt;功耗&lt;/h3&gt;
&lt;p&gt;EA3059 的总功耗不应超过 10W，计算公式如下：&lt;/p&gt;
&lt;p&gt;$$
P_{D(total)}=\Sigma (V_{OUTx}*I_{OUTx})
$$&lt;/p&gt;
&lt;h2&gt;Layout 参考&lt;/h2&gt;
&lt;p&gt;PMIC 的 Layout 需要讲究。可参照以下建议以获得最高性能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建议使用 4 层 PCB 布局，将 LX 平面和输出平面放在顶层，将 VIN 平面放在内层。&lt;/li&gt;
&lt;li&gt;顶层输入 / 输出贴片电容的接地脚应该打过孔连接到内层地和底层地。&lt;/li&gt;
&lt;li&gt;AGND 应通过过孔直接连接到内部地层。&lt;/li&gt;
&lt;li&gt;尽量加宽大电流路径走线。&lt;/li&gt;
&lt;li&gt;将输入电容尽可能靠近 VINx 引脚放置，以减少噪声干扰。&lt;/li&gt;
&lt;li&gt;使反馈路径（从 VOUTx 到 FBx）远离噪声节点（例如 LXx）。 LXx 是一个高电流噪声节点。使用短而宽的走线完成布局。&lt;/li&gt;
&lt;li&gt;芯片底部焊盘需要打多个孔到内层和底层地，用以散热。&lt;/li&gt;
&lt;li&gt;输入电容尽可能靠近 VINx 引脚放置，以减少噪声干扰。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;布局参考如下：&lt;/p&gt;
&lt;p&gt;顶层：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420175756.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;中间电源层：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420175833.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;中间地层：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420175851.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;底层：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220420175906.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.everanalog.com/ProductCN/ProductEA3059DetailInfoCN.aspx&#34;&gt;EA3059&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88PMIC%EF%BC%89-EA3059/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E6%96%B9%E6%A1%88%EF%BC%88PMIC%EF%BC%89-EA3059/</guid>
      
    </item>
    
    <item>
      <title>电源设计 - LDO 电源抑制比（PSRR）与测量方法</title>
      
      
      
      
      <description>&lt;p&gt;低压差线性稳压器（LDO）相比 DC-DC 的优点之一，是输出电压纹波小。但是高速电路下，LDO 的电源抑制比（PSRR）也是不可忽略的因素，通常被误认为是单一的静态值，本篇文章将详细讲解电源抑制比（PSRR）及如何测量它。&lt;/p&gt;
&lt;h2&gt;电源抑制比（PSRR）的定义&lt;/h2&gt;
&lt;p&gt;电源抑制比（Power Supply Rejection Ratio, PSRR）也称纹波抑制比，通常在 LDO 的数据手册中能找到，它代表 LDO 在某个频率下从输入到输出的衰减程度，代表不同频率下纹波抑制能力。在有些高速通信电路如 Wi-Fi、蓝牙等，就需要用上电源抑制比较大的高速 LDO，当芯片需要瞬间拉大电流时能快速响应，不至于掉到低于额定电压导致负载重启。还有一些场景是使用 DC-DC 作为一级降压、LDO 作为二级降压 / 滤波，因为 DC-DC 开关频率在 kHz-MHz 级别，即 LDO 在 100kHz 以上，就需要严格考虑 PSRR 了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516174303.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电源抑制比（PSRR）用公式表示为：&lt;/p&gt;
&lt;p&gt;$$
PSRR(dB)=20\log\frac{V_{rp(in)}}{V_{rp(out)}}
$$&lt;/p&gt;
&lt;p&gt;其中，$V_{rp(in)}$ 表示输入纹波，$V_{rp(out)}$ 表示输出纹波。高速 LDO 的 PSRR 一般大于 60dB，而普通 LDO 的 PSRR 一般在 20dB 左右。60dB 的 PSRR 代表表当输入纹波为 1V 时，输出纹波将为 1mV。&lt;/p&gt;
&lt;p&gt;我们先看普通 LDO（XC6206 系列）的纹波抑制曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220421142140.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看出，在频率为 1kHz 时，XC6206P302 的纹波抑制比约为 23dB。&lt;/p&gt;
&lt;p&gt;再看高速 LDO（XC6217x302）的纹波抑制曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220421141923.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在频率为 1kHz 时，XC6217x302 的纹波抑制比约为 68dB。&lt;/p&gt;
&lt;h2&gt;电源抑制比（PSRR）的测量方法&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424104353.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;电源抑制比（PSRR）的测量分 &lt;strong&gt;输入注入&lt;/strong&gt; 和 &lt;strong&gt;输出测量&lt;/strong&gt; 两个部分。通过以下方法测试，并记录输入与输出的电压纹波，根据公式即可算出 PSRR 的值。&lt;/p&gt;
&lt;h3&gt;输入注入&lt;/h3&gt;
&lt;h4&gt;信号发生器&lt;/h4&gt;
&lt;p&gt;使用信号发生器直接产生正弦波，接在 LDO 的输入端。此方法受限于信号发生器的输出电流（像 DG4062 输出电流峰值在 100kHz 正弦波下是 1.65A）。&lt;/p&gt;
&lt;h4&gt;运算放大器&lt;/h4&gt;
&lt;p&gt;放大器的作用是将 AC 纹波叠加到直流电源的 DC 电压上。&lt;/p&gt;
&lt;p&gt;运放的选择需要满足几个基本条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;运放带宽满足 LDO 测试范围。&lt;/li&gt;
&lt;li&gt;运放最大输出电流不小于 LDO 最大输出电流。&lt;/li&gt;
&lt;li&gt;运放输出电压范围覆盖 LDO 输入电压范围。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可按照以下的示意图设计加法器：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424101211.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，R1 与 R2 相等，最低截止频率由 C1 和 R1 共同决定，最高截止频率由运放的带宽所决定。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424104709.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;信号发生器 + 运算放大器&lt;/h4&gt;
&lt;p&gt;使用运放作为信号发生器的电压跟随器，可解除信号发生器驱动电流不足的限制。&lt;/p&gt;
&lt;h4&gt;LC 节点法&lt;/h4&gt;
&lt;p&gt;利用电感和电容实现 DC 电压和 AC 电压的叠加，一起作为 LDO 的输入：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424102617.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，电容 C1 用于防止 VAC 对 VDC 产生高脉冲影响，电感 L1 防止 VDC 使 VAC 发生短路，使用 LC 隔离两个电源&lt;/p&gt;
&lt;p&gt;这个电路的最高频率由电感 L1 和电容 C1 共同决定，最低频率由 C1 决定。&lt;/p&gt;
&lt;h4&gt;音频分析仪（Audio Precision）&lt;/h4&gt;
&lt;p&gt;音频分析仪自身没有能力产生 DC 直流电压，且驱动能力弱，所以需要通过一个高带宽大电流的运放，把它产生的 AC 纹波叠加到直流电源的 DC 电压上，然后再连接到 LDO 的输入端。但因为音频分析仪带宽的限制，不能测到频率 100kHz 以上的 PSRR。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424095319.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;专用注入器&lt;/h4&gt;
&lt;p&gt;此方法需要用到专用的输入注入器（例如 J2120A，带宽 10Hz-10MHz，直流电压最大值为 50V，输出电流最高 5A），它可以把 AC 纹波和直流电源 DC 电压直接叠加，但经过注入器后的输入电压会有所衰减。配合网分仪分别测量输入与输出电压纹波值：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220421145125.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424095347.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;输出测量&lt;/h3&gt;
&lt;h4&gt;示波器&lt;/h4&gt;
&lt;p&gt;一般的示波器可以测量到毫伏级电压，当 LDO 的 PSRR 不高于 40-50dB 时，如果输入交流电压峰峰值为 1V，那么 LDO 输出中的同频率交流电压峰峰值为 3mV~10mV，可以用示波器直接测量。&lt;/p&gt;
&lt;p&gt;示波器不适用于测量高 PSRR 的 LDO，如果输出纹波太小，示波器无法精确测量。&lt;/p&gt;
&lt;h4&gt;运放 + 示波器&lt;/h4&gt;
&lt;p&gt;当 LDO 的 PSRR 大于 50dB 时，由于输出纹波幅值通常小于 1mV，无法利用示波器直接测量。这时可以考虑使用运算放大器将 LDO 输出交流电压放大 100 倍甚至更高，在设计运放电路时需要考虑:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LDO 输出有直流电压，电路需要将直流电压去掉。&lt;/li&gt;
&lt;li&gt;放大电路自身产生的噪声要远小于放大后交流电压。&lt;/li&gt;
&lt;li&gt;运放输入失调电压不能太大，否则经放大电路放大后会输出很大的直流电压。&lt;/li&gt;
&lt;li&gt;放大电路的带宽需要满足 LDO 的 PSRR 测量频率范围。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;放大电路的设计：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424103037.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;该电路的最低截止频率由 C1 和 R1 所决定，最高截止频率由运放的带宽所决定。&lt;/p&gt;
&lt;h4&gt;频谱分析仪 / 网分仪&lt;/h4&gt;
&lt;p&gt;频谱分析仪可以测量微伏级电压信号，可以配合使用高阻抗输入探头来测量 LDO 输出交流电压。如果没有高阻抗探头，可以用运放搭建：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424103409.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;测量注意事项&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;测试时应首先使用示波器观察 LDO 输入端交流电压波形是否正常。&lt;/li&gt;
&lt;li&gt;LDO 电路最好按数据手册，加相应的电容去耦，但使用运放方法测试时，需要去掉 LDO 的输入电容，避免运放不稳定。&lt;/li&gt;
&lt;li&gt;如果使用注入器，输出电压有衰减，则电压需要适当增加。&lt;/li&gt;
&lt;li&gt;LDO 的输出负载不要用电子负载提供，建议用功率电阻。&lt;/li&gt;
&lt;li&gt;输出使用接地弹簧探头以降低噪声，如下图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220424104154.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://e2e.ti.com/blogs_/b/powerhouse/posts/reducing-high-speed-signal-chain-power-supply-issues&#34;&gt;Reducing high-speed signal chain power supply issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://e2echina.ti.com/blogs_/b/analogwire/posts/ldo&#34;&gt;LDO 基础知识：电源抑制比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com/lit/an/slaa414a/slaa414a.pdf?ts=1650484764171&amp;amp;ref_url=https%253A%252F%252Fwww.google.com%252F&#34;&gt;LDO PSRR Measurement Simplified&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.3peakic.com.cn/Public/Uploads/files/LDO%E7%9A%84PSRR%E6%B5%8B%E9%87%8F.pdf&#34;&gt;LDO 的 PSRR 测量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/35112931&#34;&gt;LDO 的 PSRR 测量 · 电子研习社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rohde-schwarz.com.cn/applications/-psrr-application-card_56279-601516.html&#34;&gt;电源抑制比（PSRR）测量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oliverkung.top/%e5%85%b3%e4%ba%8edc-dc%e7%9e%ac%e6%80%81%e6%b5%8b%e8%af%95%e7%9a%84%e4%b8%80%e4%ba%9b%e4%b8%9c%e8%a5%bf/&#34;&gt;关于 DC-DC 瞬态测试的一些东西 🚧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-LDO%E7%94%B5%E6%BA%90%E6%8A%91%E5%88%B6%E6%AF%94%EF%BC%88PSRR%EF%BC%89%E4%B8%8E%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-LDO%E7%94%B5%E6%BA%90%E6%8A%91%E5%88%B6%E6%AF%94%EF%BC%88PSRR%EF%BC%89%E4%B8%8E%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95/</guid>
      
    </item>
    
    <item>
      <title>电源设计 - 开关稳压 IC（非隔离型）</title>
      
      
      
      
      <description>&lt;h2&gt;设计需考虑因素&lt;/h2&gt;
&lt;p&gt;开关电源的设计至少要考虑以下条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;输入 / 输出电压&lt;/strong&gt;：按照器件的推荐工作电压范围选用，考虑实际电压的波动范围，确保不超出器件规格。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出电流&lt;/strong&gt;：输出电流要保留一定的余量，还需要评估电路的瞬间峰值电流和发热的情况，并满足降额要求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;纹波&lt;/strong&gt;：纹波是衡量电路的输出电压波动的重要参数，要关注轻载和重载纹波。通常选用示波器 20 M 带宽来测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：要同时关注轻载和重载两种情况。轻载会影响待机功率，重载影响温升。通常看 12 V 输入，5 V 输出下 10 mA 的效率，一般需要达到 80% 以上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;瞬态响应&lt;/strong&gt;：瞬态响应特性反应负载剧烈变化时，系统是否能及时调整以保证输出电压的稳定。要求输出电压波动越小越好，一般按峰峰值 10 % 以下要求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开关频率&lt;/strong&gt;：通常在 500 kHz 以上，关系到电感电容的选用，其它如 EMC，轻载下噪音等问题也与之有关。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反馈参考电压及精度&lt;/strong&gt;：反馈电压要与内部的参考电压相比较，配合外部的反馈分压电阻，输出不同电压。不同产品的参考电压会有不同，如 0.6-0.8 V，反馈电阻要选用 1% 精度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线性稳定度和负载稳定度&lt;/strong&gt;：线性稳定度反映输入电压变化输出电压稳定性；负载稳定度反映输出负载变化输出电压稳定性。一般要求 1%，最大不要超 3%。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EN 电平&lt;/strong&gt;：EN 高低电平要满足器件规格要求，有些 IC 不能超出特定电压范围。由于时序控制的需要，该引脚会增加电容，为了电平调节和关断放电，同时要有对地电阻。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保护性能&lt;/strong&gt;：要有过流保护 OCP，过热保护 OTP 等，并且保护后条件消失能自恢复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其它&lt;/strong&gt;：项目要求有软启动；热阻和封装；使用温度范围要能覆盖高低温等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选用原则：普遍性、高性价比、易采购、生命周期长、兼容和可替代、降额、易生产和归一化。&lt;/p&gt;
&lt;h2&gt;调制方式&lt;/h2&gt;
&lt;h3&gt;PFM（脉冲频率调制方式）&lt;/h3&gt;
&lt;p&gt;开关脉冲宽度不变，通过改变脉冲输出频率，使输出电压达到稳定。适合长时间使用（尤其是小负载），具有耗电小的优点。&lt;/p&gt;
&lt;h3&gt;PWM（脉冲宽度调制方式）&lt;/h3&gt;
&lt;p&gt;开关脉冲的频率不变，通过改变脉冲宽度，使输出电压达到稳定。效率高且具有较低的纹波和噪声。&lt;/p&gt;
&lt;h2&gt;功率电感底部是否可以铺地铜&lt;/h2&gt;
&lt;p&gt;从 EMI 的角度，建议铺铜；从电感感量的角度，对于屏蔽型电感，电感感量基本没有影响，因此也建议铺铜；对于工字型电感，铺铜对电感感量有少许影响，可以视情况而定。&lt;/p&gt;
&lt;h2&gt;实验判断电感是否饱和&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210723133831.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;除此之外，也可从异常温升、啸叫等情况来判断。&lt;/p&gt;
&lt;h2&gt;外围器件选择的要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;输入 / 输出电容&lt;/strong&gt;：需要满足耐压（1.5-2 倍以上输入电压）和输入纹波的要求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BST 电容&lt;/strong&gt;：自举启动电容，用于抬高电压开启芯片内上管。一半按照数据手册的推荐值（一般 0.1-1uF），耐压一般要高于输入电压。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电感&lt;/strong&gt;：不同输出电压的要求感量不同；注意温升和饱和电流要满足余量要求，一般最大电流的 1.3 倍以上（或电感饱和电流必须大于最大输出电流＋ 0.5*电感纹波电流）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反馈电容&lt;/strong&gt;：按数据手册要求取值，不同厂家芯片取值不同，输出电压不同也会有不同的要求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反馈电阻和 EN 分压电阻&lt;/strong&gt;：要求按规格书取值，精度需选取 1%。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;开关电源纹波分析&lt;/h2&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;PCB Layout 要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;电感：优先选择一体成型的电感，因为它们有较低的 EMI。&lt;/li&gt;
&lt;li&gt;反馈网络：反馈走线需要尽可能离电感和电源噪声走线远。在满足第一个条件下，可以尽量让走线短而粗。最好是走线在与电感相对的 PCB 的另一侧，并在中间用地平面隔开。下分压电阻通常接信号地 AGND 反馈走线可以包地。&lt;/li&gt;
&lt;li&gt;去耦电容：输入去耦陶瓷小电容应该尽量靠近芯片的 $V_IN$ 和 GND，减少寄生电感；电容负极可增加过孔，减少阻抗。一般还需要前馈电解大电容，电源输入先过大电容再过小电容。&lt;/li&gt;
&lt;li&gt;功率回路尽可能的短粗，保持较小的环路面积，较少噪声辐射。电感靠近 SW 引脚，远离反馈线。输出电容靠近电感，地端增加地过孔。&lt;/li&gt;
&lt;li&gt;BST 的电容走线尽量短，不要太细。&lt;/li&gt;
&lt;li&gt;芯片散热要按设计要求，尽量在底下增加过孔散热。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elecfans.com/article/83/116/2016/20160307404422_a.html&#34;&gt;详解开关电源的三大基础拓扑 - 全文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/fqTPyfAKdTlbRxy0-ho9gA&#34;&gt;掌握这些技巧，让你轻松操作 DC-DC 电路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CgR2jUgujLy3nqwU52rW2Q&#34;&gt;MPS，电感底部铺地平面违章吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIwMTE4MzQwMw==&amp;amp;mid=2884003106&amp;amp;idx=1&amp;amp;sn=41c7eef3377037a1a1d21179447d0df1&amp;amp;scene=19#wechat_redirect&#34;&gt;【短视频】MPS 电源小课堂第三话: 判断电感饱和的几个小窍门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/tTSoUaeaVQI4TM6ruKpeKw&#34;&gt;怎么选择 BUCK 降压电源的电感？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ti.com/lit/an/snva021c/snva021c.pdf?ts=1641814411004&#34;&gt;AN-1149 Layout Guidelines for Switching Power Supplies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oliverkung.top/%e5%bc%80%e5%85%b3%e7%94%b5%e6%ba%90%e7%ba%b9%e6%b3%a2%e5%88%86%e6%9e%90/&#34;&gt;开关电源纹波分析 🚧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8BIC%EF%BC%88%E9%9D%9E%E9%9A%94%E7%A6%BB%E5%9E%8B%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8BIC%EF%BC%88%E9%9D%9E%E9%9A%94%E7%A6%BB%E5%9E%8B%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>电源设计 - 方案确定</title>
      
      
      
      
      <description>&lt;h2&gt;电源设计需考虑的需求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：输入电压、电流（变动范围）；输出电压、电流等，还要达到总体的功率指标，实现系统最大转换效率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：输出电压上的纹波大小、带负载的能力、效率、发热程度等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成本&lt;/strong&gt;：系统综合成本，需要考虑核心器件与外围器件（电感或线圈、电容、MOS 管驱动等）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;空间&lt;/strong&gt;：需要考虑空间尺寸的限制、摆放位置、散热、干扰等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如何选择一款电源方案&lt;/h2&gt;
&lt;h3&gt;常见的电源类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;线性稳压&lt;/li&gt;
&lt;li&gt;三端稳压器&lt;/li&gt;
&lt;li&gt;低压差线性稳压（LDO）&lt;/li&gt;
&lt;li&gt;开关稳压&lt;/li&gt;
&lt;li&gt;非隔离&lt;ul&gt;
&lt;li&gt;降压型（Buck）&lt;/li&gt;
&lt;li&gt;升压型（Boost）&lt;/li&gt;
&lt;li&gt;升降压型（Buck-Boost）&lt;/li&gt;
&lt;li&gt;双级反相升降压型（Ćuk）&lt;/li&gt;
&lt;li&gt;双级正相升降压型（SEPIC， ZETA）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;隔离&lt;ul&gt;
&lt;li&gt;正激&lt;/li&gt;
&lt;li&gt;反激&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;电源 IC&lt;/li&gt;
&lt;li&gt;多路输出&lt;/li&gt;
&lt;li&gt;充电 IC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;线性稳压与开关稳压的参数对比&lt;/h3&gt;
&lt;p&gt;|            |              线性稳压              |         开关稳压         |
| :--------: | :--------------------------------: | :----------------------: |
|    效率    |        相对低（30% ~ 60%）         |   相对高（70% ~ 90%）    |
|  稳压模式  |              只能降压              | 降压、升压、升降压、反压 |
|   发热量   |               相对大               |          相对小          |
|    体积    |               相对大               |          相对小          |
|    重量    |               相对重               |          相对轻          |
| 电路复杂度 |                简单                |         相对复杂         |
|   稳定度   |               相对高               |           一般           |
|  瞬态响应  |                 快                 |            慢            |
|    噪声    |                 无                 |   有（需噪声处理对策）   |
| 是否可隔离 |              不可隔离              |         可有隔离         |
|  应用场景  | 小电流、需要低噪声、对效率要求不高 |   大电流，对效率要求高   |&lt;/p&gt;
&lt;h3&gt;线性与开关稳压的直观区别&lt;/h3&gt;
&lt;p&gt;把输出电压类比为从水龙头的出水量，线性稳压是需要出多少水就把水龙头开多大；而对开关稳压来说，水龙头只能有开和关两个状态，所以必须快速开关，通过改变占空比来控制出水量。&lt;/p&gt;
&lt;p&gt;线性稳压由工作在线性状态的三极管构成可变电阻对负载进行恒流控制，得到稳定的电压输出，这种方式结构简单、噪声抑制度很高（达到 60dB 也就是 1000 倍以上），但一般效率比较低，要满足输入电压高于输出电压一定的压差才能够稳压，只能做降压变换。线性稳压电路简单、纹波小，对输入端的毛刺抑制度（PSRR）高，但为了限制输出电压，而把多余的能量转化为热量。&lt;/p&gt;
&lt;p&gt;开关稳压是利用感性元件和容性元件可以储存能量的特点，把能量分段打包传递。这些打包的能量或者储存在电感的磁场中，或者储存在电容的电场中。开关控制保证每个分段只传递负载需要的能量，所以效率相对高。开关稳压的好处是能够降压、升压、反压，输入电压的范围可以很宽，效率可以做到很高（有的能达到 95% 以上），缺点是外围电路比较复杂，外围元器件的选型比较敏感，另外高频的开关信号会在电压输出上带来较大的干扰、纹波。&lt;/p&gt;
&lt;h3&gt;开关稳压与线性稳压的组合&lt;/h3&gt;
&lt;p&gt;基于开关稳压器和线性稳压器的优缺点，如果将它们组合使用（即先过开关稳压，再过线性稳压），就可在降低输出电压纹波的同时，也提高效率。&lt;/p&gt;
&lt;h3&gt;根据输入和输出电压来选择&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;$V_{in}&amp;gt;V_{out}$&lt;/li&gt;
&lt;li&gt;压差不大、负载电流小、要求低噪声 —— LDO&lt;/li&gt;
&lt;li&gt;压差大、负载电流大、噪声不是特别敏感 —— 开关 Buck&lt;/li&gt;
&lt;li&gt;负载电流小、噪声不敏感、要求效率高 —— 电荷泵&lt;/li&gt;
&lt;li&gt;$V_{in}&amp;lt;V_{out}$&lt;/li&gt;
&lt;li&gt;小功率 —— 电荷泵&lt;/li&gt;
&lt;li&gt;压差大、负载电流大、噪声不是特别敏感 —— 开关 Boost&lt;/li&gt;
&lt;li&gt;$V_{in}$ 变化范围大，可能大于或小于 $V_{out}$&lt;/li&gt;
&lt;li&gt;小功率 —— 电荷泵&lt;/li&gt;
&lt;li&gt;负载电流大、噪声不是特别敏感 —— 开关 Buck-Boost&lt;/li&gt;
&lt;li&gt;如果需要隔离&lt;/li&gt;
&lt;li&gt;选择隔离拓扑结构如 flyback、forward、push-pull、全桥等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;元器件选型&lt;/h2&gt;
&lt;p&gt;选型需考虑的因素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：是否满足输入／输出电压及电流要求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：尽可能低的纹波、噪声，尽可能高的转换效率&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;价格&lt;/strong&gt;：整体系统成本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;供货渠道&lt;/strong&gt;：是否容易购买&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以使用电源芯片厂提供的工具辅助选型，例如 &lt;a href=&#34;http://www.ti.com.cn/cn/reference-designs/index.html&#34;&gt;&lt;strong&gt;TI 参考设计&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;PCB 的布局布线&lt;/h2&gt;
&lt;p&gt;对 LDO 而言，发热是影响性能和稳定性的重要因素，故 layout 时需要考虑散热。&lt;br&gt;
对 DC-DC 而言，需要考虑大电流的路径，避免产生较大纹波，避免反馈引脚受干扰，一般可以参考数据手册提供的布局，例如：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202194045.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/l4-iG3Ki4R70X8GeHg3OpA&#34;&gt;最受全球工程师欢迎的 10 款稳压器件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/19ePnO54yBIvatcj5nVRBg&#34;&gt;开关电源设计的关键 7 步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ilSCii7jw9DHfIqorrq5Yg&#34;&gt;开关电源知多少？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eetree.cn/wiki/ps_design_case#%E7%94%B5%E5%AD%90%E4%BA%A7%E5%93%81%E4%B8%AD%E7%94%B5%E6%BA%90%E7%94%B5%E8%B7%AF%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%BE%E4%BE%8B&#34;&gt;电子产品中电源电路的设计举例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eetree.cn/wiki/powersupply&#34;&gt;电源及管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/R6c96mmincweZ_xV7ex2QQ&#34;&gt;漫画解电源，初学者福音！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ZPNlGc3JHovSvxzh7uWD9g&#34;&gt;单板小功率电源芯片的选型攻略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E6%96%B9%E6%A1%88%E7%A1%AE%E5%AE%9A/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E6%96%B9%E6%A1%88%E7%A1%AE%E5%AE%9A/</guid>
      
    </item>
    
    <item>
      <title>电源设计 - 纹波噪声与测量方法</title>
      
      
      
      
      <description>&lt;h2&gt;电源的纹波与噪声&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220708164040.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;纹波是由输出滤波电容的充放电产生的，频率一般对应电源工作频率或其两倍（视拓扑而异）。噪声一般会叠加在纹波的拐点，是在每次开关状态改变时，由寄生效应产生的。纹波与噪声通常放在一起进行测量，以 mVpp 的单位刻度表示。&lt;/p&gt;
&lt;p&gt;如果负载需要非常低纹波噪声的电源，通常会在输出电压后再添加一个高速 LDO，需要比较高的 PSRR 值（70dB 以上）。关于 PSRR 的介绍与测量，可参考文章 &lt;a href=&#34;https://wiki-power.com/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-LDO%E7%94%B5%E6%BA%90%E6%8A%91%E5%88%B6%E6%AF%94%EF%BC%88PSRR%EF%BC%89%E4%B8%8E%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95&#34;&gt;&lt;strong&gt;电源设计 - LDO 电源抑制比（PSRR）与测量方法&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;测试方法&lt;/h2&gt;
&lt;p&gt;使用示波器测量纹波噪声的注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;探头：&lt;/li&gt;
&lt;li&gt;如果有条件，推荐上有源探头。一般用 1x 探头（峰峰值一般为 mV 级，为了避免示波器探头造成的衰减引入测量误差）&lt;/li&gt;
&lt;li&gt;缩短接地线长度，并联在输出电容上测量。&lt;/li&gt;
&lt;li&gt;耦合模式：AC 耦合&lt;/li&gt;
&lt;li&gt;带宽：20MHz&lt;/li&gt;
&lt;li&gt;数字滤波器：开启 1Mhz 捕获与触发&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E7%BA%B9%E6%B3%A2%E5%99%AA%E5%A3%B0%E4%B8%8E%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E7%BA%B9%E6%B3%A2%E5%99%AA%E5%A3%B0%E4%B8%8E%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95/</guid>
      
    </item>
    
    <item>
      <title>电源设计 - 自举电路</title>
      
      
      
      
      <description>&lt;p&gt;自举电路，通俗讲就是自己把自己抬起来，其原理就是利用自举升压电容进行升压的电路。&lt;/p&gt;
&lt;p&gt;我们经常会在 Buck、电机驱动 H 桥等电路中见到自举电容。以 N-MOS 为例，&lt;strong&gt;需要自举的根本原因是因为 $V_{ds}$ 很小，导致不能满足 $V_{gs}&amp;gt;V_{(gs)gh}$ 的导通条件，根据电容两端电压不能突变的原理，可以在栅极叠加产生一个更高的电压，从而使 MOS 管导通。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相比于其他升压拓扑结构，自举电路的优点是成本低、电路结构简单。&lt;/p&gt;
&lt;h2&gt;自举的过程&lt;/h2&gt;
&lt;p&gt;下面，我们以半桥驱动中的自举电路来分析：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211221151809.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在第一个阶段（下管驱动阶段，$Q_1$ 截止，$Q_2$ 导通），此时自举电容 $C_B$ 进行充电。在此期间，来自 $V_{DD}$ 的充电电流流入驱动芯片的 $VDDA$，并通过电容的充电环路，从自举电阻器 $R_B$、二极管 $D_1$、电容 $C_B$ 和 $Q_2$ 流到地。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211221164719.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二个阶段（上管驱动阶段，$Q_2$ 截止，$Q_1$ 导通），$Q_1$ 源极（连接 GNDA 脚）上的电压快速上升至 $Q_1$ 漏极电压 VDRAIN。&lt;strong&gt;因为电容两端电压不能突变&lt;/strong&gt;，所以 VDDA 上的电压等于 $Q_1$ 源电压加上 $C_B$ 两端的电压（$C_B$ 已充电至大约 VDD–0.7V）。而因为 $Q_1$ 源极（和 GNDA）电压升高，二极管 $D_1$ 变为反向偏置，断开 VDD 电源与 $C_B$ 的连接。此时由 $C_B$ 提供上管驱动阶段所需的所有电流。&lt;/p&gt;
&lt;h2&gt;自举电路的设计 🚧&lt;/h2&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ycmthR0131WvkypGJIz7xg&#34;&gt;一文学会自举电路原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.skyworksinc.com/-/media/SkyWorks/SL/documents/public/application-notes/AN486.pdf&#34;&gt;AN486: High-Side Bootstrap Design Using ISODrivers in Power Delivery Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E8%87%AA%E4%B8%BE%E7%94%B5%E8%B7%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-%E8%87%AA%E4%B8%BE%E7%94%B5%E8%B7%AF/</guid>
      
    </item>
    
    <item>
      <title>AD 使用 Git 的注意事项</title>
      
      
      
      
      <description>&lt;h2&gt;使用 Git 管理项目&lt;/h2&gt;
&lt;p&gt;Altium Designer 支持使用 Git/SVN 用以版本控制。如果使用 Git, 直接在项目所在路径建立 Git 仓库即可。重启 Altium Designer, 会看到文件树边上出现了版本状态：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200421100348.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;图标的含义如下：
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200421101221.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以在 &lt;code&gt;工程（C） - 版本控制（E）&lt;/code&gt; 菜单直接进行 Git 操作，甚至可以直接提交 GitHub.&lt;/p&gt;
&lt;h2&gt;.gitignore 文件&lt;/h2&gt;
&lt;p&gt;在使用 Altium Designer 时，软件会自动生成一些缓存文件（例如 &lt;code&gt;History&lt;/code&gt; 文件夹），它们不但拖慢了提交速度，也污染了提交记录。这时候就要使用 &lt;code&gt;.gitignore&lt;/code&gt;，用来忽略这些缓存文件。&lt;/p&gt;
&lt;p&gt;适用于 Altium Designer 的 &lt;code&gt;.gitignore&lt;/code&gt; 文件包含以下内容：&lt;/p&gt;
&lt;p&gt;```gitignore&lt;/p&gt;
&lt;h1&gt;============================= Projects =============================&lt;/h1&gt;
&lt;p&gt;*.DesWrk&lt;/p&gt;
&lt;h1&gt;Altium Workspace&lt;/h1&gt;
&lt;p&gt;*.DsnWrk&lt;/p&gt;
&lt;h1&gt;Altium Project Group&lt;/h1&gt;
&lt;p&gt;!*.LibPkg&lt;/p&gt;
&lt;h1&gt;Altium Inegrated Library Package&lt;/h1&gt;
&lt;p&gt;*.PrjGrp&lt;/p&gt;
&lt;h1&gt;Altium Project Group&lt;/h1&gt;
&lt;p&gt;!*.PrjMbd&lt;/p&gt;
&lt;h1&gt;Altium Muti-board Design Project&lt;/h1&gt;
&lt;p&gt;!*.PrjPcb&lt;/p&gt;
&lt;h1&gt;Altium PCB Project&lt;/h1&gt;
&lt;p&gt;*.PrjScr&lt;/p&gt;
&lt;h1&gt;Altium Script Project&lt;/h1&gt;
&lt;p&gt;*.PrjPCBStructure&lt;/p&gt;
&lt;h1&gt;============================= Schematic =============================&lt;/h1&gt;
&lt;p&gt;*.Dot&lt;/p&gt;
&lt;h1&gt;Altium Schematic Template&lt;/h1&gt;
&lt;p&gt;!*.MbsDoc&lt;/p&gt;
&lt;h1&gt;Altium Multi-board Schematic&lt;/h1&gt;
&lt;p&gt;!*.Sch&lt;/p&gt;
&lt;h1&gt;Altium Schematic Document&lt;/h1&gt;
&lt;p&gt;!*.SchDoc&lt;/p&gt;
&lt;h1&gt;Altium Schematic Document&lt;/h1&gt;
&lt;p&gt;*.SchDot&lt;/p&gt;
&lt;h1&gt;Altium Schematic Template&lt;/h1&gt;
&lt;p&gt;!*.SchLib&lt;/p&gt;
&lt;h1&gt;Altium Schematic Library&lt;/h1&gt;
&lt;h1&gt;============================= PCB =============================&lt;/h1&gt;
&lt;p&gt;!*.MbaDoc&lt;/p&gt;
&lt;h1&gt;Altium Multi-board Assembly&lt;/h1&gt;
&lt;p&gt;!*.Pcb&lt;/p&gt;
&lt;h1&gt;Protel PCB Document&lt;/h1&gt;
&lt;p&gt;!*.PcbDoc&lt;/p&gt;
&lt;h1&gt;Altium PCB Document&lt;/h1&gt;
&lt;p&gt;!*.PcbLib&lt;/p&gt;
&lt;h1&gt;Altium PCB Library&lt;/h1&gt;
&lt;h1&gt;============================= Libraries =============================&lt;/h1&gt;
&lt;p&gt;*.CmpLib&lt;/p&gt;
&lt;h1&gt;Altium Component Library&lt;/h1&gt;
&lt;p&gt;!*.IntLib&lt;/p&gt;
&lt;h1&gt;Altium Compiled Library&lt;/h1&gt;
&lt;p&gt;!*.Lib&lt;/p&gt;
&lt;h1&gt;Altium Library&lt;/h1&gt;
&lt;p&gt;*.PvLib&lt;/p&gt;
&lt;h1&gt;Altium Pad Via Library&lt;/h1&gt;
&lt;h1&gt;============================= CAMtastic =============================&lt;/h1&gt;
&lt;p&gt;*.Apr&lt;/p&gt;
&lt;h1&gt;CAMtastic Aperture Data&lt;/h1&gt;
&lt;p&gt;*.Apt&lt;/p&gt;
&lt;h1&gt;CAMtastic Aperture Data&lt;/h1&gt;
&lt;p&gt;*.Cam&lt;/p&gt;
&lt;h1&gt;Altium CAMtastic Document&lt;/h1&gt;
&lt;p&gt;*.Drl&lt;/p&gt;
&lt;h1&gt;CAMtastic NC Drill Binary Data&lt;/h1&gt;
&lt;h1&gt;============================= Gerber =============================&lt;/h1&gt;
&lt;p&gt;*.G[1-30]&lt;/p&gt;
&lt;h1&gt;CAMtastic Mid Layer 1-30 Gerber Data&lt;/h1&gt;
&lt;h1&gt;============================= Outputs =============================&lt;/h1&gt;
&lt;p&gt;*.Drc&lt;/p&gt;
&lt;h1&gt;Design Rule Check Report&lt;/h1&gt;
&lt;p&gt;*.Drr&lt;/p&gt;
&lt;h1&gt;Altium NC Drill Report File&lt;/h1&gt;
&lt;p&gt;*.Net&lt;/p&gt;
&lt;h1&gt;Altium Netlist File&lt;/h1&gt;
&lt;p&gt;*.Nsx&lt;/p&gt;
&lt;h1&gt;Simulation Netlist Document&lt;/h1&gt;
&lt;p&gt;*.OutJob&lt;/p&gt;
&lt;h1&gt;Altium Output Job File&lt;/h1&gt;
&lt;p&gt;*.Rep&lt;/p&gt;
&lt;h1&gt;Report File&lt;/h1&gt;
&lt;p&gt;*.Rpt&lt;/p&gt;
&lt;h1&gt;Report File&lt;/h1&gt;
&lt;h1&gt;============================= Scripts =============================&lt;/h1&gt;
&lt;p&gt;*.Bas&lt;/p&gt;
&lt;h1&gt;Altium Script Document&lt;/h1&gt;
&lt;p&gt;*.SrcDoc&lt;/p&gt;
&lt;h1&gt;Altium Script Document&lt;/h1&gt;
&lt;p&gt;*.Tcl&lt;/p&gt;
&lt;h1&gt;Altium Script Document&lt;/h1&gt;
&lt;h1&gt;============================= Simulation =============================&lt;/h1&gt;
&lt;p&gt;*.Ckt&lt;/p&gt;
&lt;h1&gt;Simulation Sub-Circuit&lt;/h1&gt;
&lt;p&gt;*.LaxAn&lt;/p&gt;
&lt;h1&gt;Logic Analyser Analog File&lt;/h1&gt;
&lt;p&gt;*.LaxDig&lt;/p&gt;
&lt;h1&gt;Logic Analyser Digital File&lt;/h1&gt;
&lt;p&gt;*.Mdl&lt;/p&gt;
&lt;h1&gt;Simulation Model&lt;/h1&gt;
&lt;p&gt;*.Pld&lt;/p&gt;
&lt;h1&gt;CUPL PLD File&lt;/h1&gt;
&lt;p&gt;*.Pwl&lt;/p&gt;
&lt;h1&gt;Simulation Piecewise Linear Description&lt;/h1&gt;
&lt;p&gt;*.Sdf&lt;/p&gt;
&lt;h1&gt;Altium Simulation Data File&lt;/h1&gt;
&lt;p&gt;*.Si&lt;/p&gt;
&lt;h1&gt;CUPL Simulation Input File&lt;/h1&gt;
&lt;p&gt;*.So&lt;/p&gt;
&lt;h1&gt;Digital Waveform File&lt;/h1&gt;
&lt;h1&gt;============================= Folders =============================&lt;/h1&gt;
&lt;p&gt;__Previews/&lt;/p&gt;
&lt;p&gt;History/&lt;/p&gt;
&lt;p&gt;Project Logs for */&lt;/p&gt;
&lt;h1&gt;============================= Other =============================&lt;/h1&gt;
&lt;p&gt;*.BomDoc&lt;/p&gt;
&lt;h1&gt;Bom Document&lt;/h1&gt;
&lt;p&gt;*.DBLib&lt;/p&gt;
&lt;h1&gt;Altium Database Library File&lt;/h1&gt;
&lt;p&gt;*.DBLink&lt;/p&gt;
&lt;h1&gt;Altium Database Link File&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;直接将其放在 Git 仓库的根目录即可，如果显示重复，则需与原先的 &lt;code&gt;.gitignore&lt;/code&gt; 合并。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/u010160335/article/details/80100232&#34;&gt;.gitignore 文件配置：Altium Designer 工程文件类型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E4%BD%BF%E7%94%A8Git%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E4%BD%BF%E7%94%A8Git%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      
    </item>
    
    <item>
      <title>AD 基本操作 - 原理图绘制</title>
      
      
      
      
      <description>&lt;p&gt;—— Altium Designer 系列教程&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;经过上一章节的预热，从这一章开始，我们进入原理图绘制环节。&lt;/p&gt;
&lt;h2&gt;绘制原理图&lt;/h2&gt;
&lt;h3&gt;调整图纸&lt;/h3&gt;
&lt;p&gt;按照前文提到的基本流程，我们新建了一个项目，将原理图文件添加到项目中。此时，出现了一张空白的图纸。我们可以直接在上绘制原理图。如果原理图变得复杂，也可以 &lt;strong&gt;更改图纸的尺寸&lt;/strong&gt;，使元器件不显得过于拥挤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;双击&lt;/strong&gt; 图纸任意空白处，&lt;/li&gt;
&lt;li&gt;在 Properties 面板内找到 &lt;strong&gt;Page Options&lt;/strong&gt; 栏目，&lt;/li&gt;
&lt;li&gt;点击 Sheet Size 下拉框更改图纸尺寸。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;放置元件&lt;/h3&gt;
&lt;p&gt;接下来我们开始放置元件。库的安装在前一章已讲解，我们打开 &lt;strong&gt;Components&lt;/strong&gt; 面板，点击显示为库的名称的下拉框，即可切换已经安装的库。切换之后。在搜索框搜索所需的元器件（键入后不用按回车），找到对应的之后，可用鼠标左键 &lt;strong&gt;直接拖进&lt;/strong&gt; 原理图中，这就成功放置了一个元件。&lt;/p&gt;
&lt;p&gt;如果忘记元件是属于哪个库的，也可以用全局搜索的功能。点击库名称左边的 &lt;strong&gt;三条杠&lt;/strong&gt; 标志，在下拉框选择 &lt;strong&gt;File-based Librarys Search&lt;/strong&gt; ，即可搜索所有可用的库。&lt;/p&gt;
&lt;h3&gt;元件属性&lt;/h3&gt;
&lt;p&gt;放置的元件有几个关键属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Designator&lt;/strong&gt;：元件位号。元件唯一标识，不可重名。通常用 R1, R2 ... 代表电阻，C1, C2 ... 代表电容（参考上一章的知识点），&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comment&lt;/strong&gt;：元件大小参数，如阻值、容值、芯片型号等，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;：元件的功能描述，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Footprint&lt;/strong&gt;：链接到封装库，将元件与某个 PCB 封装对应上，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Models&lt;/strong&gt;：包括 Simulation（仿真模型）、Signal Integrity（信号完整性）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;基本操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;左键单击&lt;/strong&gt;：选择命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;左键长按&lt;/strong&gt;：拖动对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;左键双击&lt;/strong&gt;：设置对象属性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;右键单击&lt;/strong&gt;：取消或弹出命令菜单&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;右键长按&lt;/strong&gt;：拖动原理图页面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl + 滚轮&lt;/strong&gt;：缩放页面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift + 左键单击/框选&lt;/strong&gt;：选择多个元器件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更高级的操作，使用命令 &lt;strong&gt;S&lt;/strong&gt;（Select），弹出命令菜单：&lt;/p&gt;
&lt;p&gt;| 快捷键 | 详细命令          | 功能                                                                 |
| :----- | :---------------- | :------------------------------------------------------------------- |
| E      | Lasso S&lt;strong&gt;e&lt;/strong&gt;lect  | 套索，选择范围内元件；单击左键开始绘制套索，再次单击完成范围结束绘制 |
| I      | &lt;strong&gt;I&lt;/strong&gt;nside Area   | 框选，选中区域内所有的元件                                           |
| O      | &lt;strong&gt;O&lt;/strong&gt;utside Area  | 反选，选中区域外所有的元件                                           |
| L      | Touching &lt;strong&gt;L&lt;/strong&gt;ine | 线选，选中被线条触碰到的元件                                         |
| C      | &lt;strong&gt;C&lt;/strong&gt;onnection    | 选中网络名称相同的元件                                               |
| A      | &lt;strong&gt;A&lt;/strong&gt;ll           | 选择所有元件                                                         |
| T      | &lt;strong&gt;T&lt;/strong&gt;oggle Select | 反选，单击原来选中的将取消选中，原来未选中的将选中                   |&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元件的旋转：选中元件后按 &lt;strong&gt;Space&lt;/strong&gt; 空格键&lt;/li&gt;
&lt;li&gt;复制剪切粘贴：&lt;strong&gt;Ctrl + C&lt;/strong&gt;，&lt;strong&gt;Ctrl + X&lt;/strong&gt;，&lt;strong&gt;Ctrl + V&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;复制后自动填充位号：选中元件，&lt;strong&gt;按住 Shift 同时拖动&lt;/strong&gt;，即可粘贴递增位号的元件。步长可在 &lt;strong&gt;TP&lt;/strong&gt;（&lt;strong&gt;T&lt;/strong&gt;ools-&lt;strong&gt;P&lt;/strong&gt;reference-Schematic-General）中设置。&lt;/li&gt;
&lt;li&gt;绘制导线：&lt;strong&gt;Ctrl + W&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;绘制网络标签：&lt;strong&gt;PN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;放置电源/地：直接在工具栏中&lt;strong&gt;左键&lt;/strong&gt;选取，&lt;strong&gt;右键&lt;/strong&gt;则可以选择不同样式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;全局元件自动编号&lt;/h3&gt;
&lt;p&gt;当原理图工程比较庞大，元件比较多，有时候可能会出现元件位号重名、缺失的情况。这时候可以用全局位号管理：&lt;strong&gt;TAA&lt;/strong&gt;，代替手动检查。&lt;/p&gt;
&lt;p&gt;勾选需要自动排号的元器件，点击 &lt;strong&gt;更新更改列表&lt;/strong&gt;，再点击 &lt;strong&gt;接收更改（创建 ECO）&lt;/strong&gt;，&lt;strong&gt;执行变更&lt;/strong&gt;，即可完成元件的自动编号。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;以上仅仅是绘制原理图的最基本操作，就像提供了一套厨具。至于怎么做出更香的饭菜，更多靠的是 &lt;strong&gt;想象力&lt;/strong&gt; 与 &lt;strong&gt;不断的练习&lt;/strong&gt; 。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seujxh.wordpress.com/2018/09/30/altium%e5%85%ac%e5%8f%b8altium-designer%e4%b8%93%e6%a0%8f/&#34;&gt;Altium 公司 Altium Designer 专栏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%8E%9F%E7%90%86%E5%9B%BE%E7%BB%98%E5%88%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%8E%9F%E7%90%86%E5%9B%BE%E7%BB%98%E5%88%B6/</guid>
      
    </item>
    
    <item>
      <title>AD 基本操作 - 基础知识</title>
      
      
      
      
      <description>&lt;p&gt;—— Altium Designer 系列教程&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;配置完软件运行环境，在开始画板子之前，我们务必先熟悉一些 Altium Designer 及电路设计的基本知识。&lt;/p&gt;
&lt;h2&gt;库文件安装&lt;/h2&gt;
&lt;p&gt;库相当于把每个分立元件（如电阻、电容等）的原理图 / PCB 封装起来，方便直接调用。不一定每个元器件的原理图库 / 封装库都必须自己画，但 &lt;strong&gt;整理自己的库是必须的&lt;/strong&gt;。假想你的项目内每个元器件用的都是别人的（且不同的库有自己的规则），那么越往后你将越受制于人。拥有自己的库，这不仅方便迁移、提高效率，也有利于知识的体系化。适合自己的规则与体系，从时间轴上看，知识将呈指数型增长。刚开始曲线增长虽然缓慢，但到了后期，将不会有重复性的工作，那时候你需要做的，只是学习新知识，并将其归纳到体系中了。&lt;/p&gt;
&lt;p&gt;温馨提示：自己的项目所需的所有元器件，尽量全部从自己整理的原理图库 / 封装库中提取。&lt;/p&gt;
&lt;h3&gt;可参考的库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Power_Lib_Altium&#34;&gt;&lt;strong&gt;Power_Lib_Altium&lt;/strong&gt;&lt;/a&gt;：我自己整理的库。封装库齐全，原理图库仅包含我的项目所需要的元器件型号。不断更新中。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KitSprout/AltiumDesigner_PcbLibrary&#34;&gt;&lt;strong&gt;AltiumDesigner_PcbLibrary&lt;/strong&gt;&lt;/a&gt;：一个较为齐全的库。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Samwuzhitao/My_PCB_Library_Github&#34;&gt;&lt;strong&gt;My_PCB_Library_Github&lt;/strong&gt;&lt;/a&gt;：挺齐全的一个库，还包含一些单片机方案板。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/JLC_SMT/JLCSMT_LIB&#34;&gt;&lt;strong&gt;JLCSMT_LIB&lt;/strong&gt;&lt;/a&gt;：嘉立创提供的标准集成库，包含嘉立创可以 SMT 贴片的所有元件，直接用这个集成库，打板 / SMT 的时候兼容性会比较好。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Power_Lib_Altium/tree/master/Other_Libs/Hare_Library&#34;&gt;&lt;strong&gt;Hare_Library&lt;/strong&gt;&lt;/a&gt;：彬哥整理的原理图库 / 封装库，涵盖队内硬件所需的大部分元器件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何安装库文件：参考 &lt;a href=&#34;https://wiki-power.com/AltiumDesigner安装库文件&#34;&gt;&lt;strong&gt;Altium Designer 安装库文件&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;不常见的元器件&lt;/h3&gt;
&lt;p&gt;以上提供的库，已经涵盖市面上 95% 以上的元器件型号了。如果真的找不到所需元器件，可以尝试以下方法：&lt;/p&gt;
&lt;p&gt;AD 插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.samacsys.com/altium-designer-library-instructions/&#34;&gt;&lt;strong&gt;Altium Library Loader&lt;/strong&gt;&lt;/a&gt;：这个用起来真的超级方便&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;搜索引擎：&lt;a href=&#34;https://nav.wiki-power.com/#87696a153c91c609c4c595e421e880ae&#34;&gt;&lt;strong&gt;原理图与封装下载 · Power&#39;s NAV&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;快捷键&lt;/h2&gt;
&lt;p&gt;于 Altium Designer 而言，熟练掌握常用的快捷键，可以很大程度提高效率。Altium Designer 的系统快捷键都是根据菜单下命令中有下划线的字母组合而成，例如 &lt;strong&gt;Place-Line&lt;/strong&gt; 的快捷键为 &lt;strong&gt;P-L&lt;/strong&gt; （先按 P 再按 L）&lt;/p&gt;
&lt;h3&gt;原理图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;显示 Library 面板：&lt;strong&gt;PP&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;绘制导线：&lt;strong&gt;Ctrl + W&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;绘制网络标签：&lt;strong&gt;PN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;复制元件并自动更新位号：&lt;strong&gt;按住 Shift + 拖动&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;给图纸编号：&lt;strong&gt;TAT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;元件自动编号：&lt;strong&gt;TAA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Reset All：复位所有元件标号，使其变成 &#34; 字母 + ? &#34; 的格式&lt;/li&gt;
&lt;li&gt;Update Change List：对元件列表进行标号变更&lt;/li&gt;
&lt;li&gt;Accept Changes（Create ECO）：表示接受编号变更，实现原理图的变更&lt;/li&gt;
&lt;li&gt;生成 BOM 表：&lt;strong&gt;RI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;更新 PCB：&lt;strong&gt;DU&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;左对齐（右）：&lt;strong&gt;AL&lt;/strong&gt;（&lt;strong&gt;AR&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;PCB&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;把原理图的变更导入 PCB：&lt;strong&gt;DI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;把 PCB 的变更覆盖回原理图：&lt;strong&gt;DU&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;切换单位（英寸/毫米）：&lt;strong&gt;Q&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;旋转元器件（任意角度）：&lt;strong&gt;EMO&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;把元件放置在底层：&lt;strong&gt;拖动同时按 L&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;自动布局：&lt;strong&gt;框选 + TOL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;设置坐标原点：&lt;strong&gt;EOS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;设置栅格：&lt;strong&gt;G&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;自动布线：&lt;strong&gt;UAA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;清除布线：&lt;strong&gt;UUA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;高亮接线：&lt;strong&gt;按住 Shift + 光标移至线&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;高亮节点所对应连线：&lt;strong&gt;按住 Ctrl + 左键单击&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;水平翻转：&lt;strong&gt;Ctrl + F&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;测量：&lt;strong&gt;Ctrl + M&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;切换视图（二维 / 三维）：&lt;strong&gt;2 / 3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;三维视图中旋转：&lt;strong&gt;按住 Shift + 拖动&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;清除过滤器：&lt;strong&gt;Shift + C&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;切换单层/多层显示：&lt;strong&gt;Shift + S&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;过孔盖油（可略，打板时可直接选择）&lt;/li&gt;
&lt;li&gt;单击某一过孔&lt;/li&gt;
&lt;li&gt;右键 - 查找相似对象&lt;/li&gt;
&lt;li&gt;选择大小属性为 Same，确定以激活选择所有过孔&lt;/li&gt;
&lt;li&gt;在属性中的 Solder Mask Expansion 中把顶层和底层都勾选上&lt;/li&gt;
&lt;li&gt;设置布线规则&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UAA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;新建策略并编辑规则&lt;/li&gt;
&lt;li&gt;一般修改 Routing 中的规则（新建规则）&lt;ul&gt;
&lt;li&gt;Width：设置线的粗细&lt;/li&gt;
&lt;li&gt;Routing Via Style ：设置过孔规则&lt;/li&gt;
&lt;li&gt;铺铜：？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;原理图库&lt;/h3&gt;
&lt;p&gt;待补充……&lt;/p&gt;
&lt;h3&gt;封装库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测量距离：&lt;strong&gt;Ctrl + N&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;切换单位（英寸/毫米）：&lt;strong&gt;Q&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;流程及规范&lt;/h2&gt;
&lt;p&gt;一块电路板从无到有设计出来，基本流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化&lt;/li&gt;
&lt;li&gt;新建项目&lt;/li&gt;
&lt;li&gt;在项目内创建原理图和 PCB 文件&lt;/li&gt;
&lt;li&gt;绘制原理图&lt;/li&gt;
&lt;li&gt;完成后确保编译通过&lt;/li&gt;
&lt;li&gt;绘制 PCB&lt;/li&gt;
&lt;li&gt;从原理图导入变更&lt;/li&gt;
&lt;li&gt;隐藏元件 Designator 标识&lt;ol&gt;
&lt;li&gt;打开右侧 &lt;strong&gt;Properties&lt;/strong&gt; 面板&lt;/li&gt;
&lt;li&gt;点击 &lt;strong&gt;Designator&lt;/strong&gt; 旁边的 &lt;strong&gt;眼睛&lt;/strong&gt; 标志，即可关闭&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;绘制板形&lt;ul&gt;
&lt;li&gt;切换 90°/45° 走线（&lt;strong&gt;Shift+Space&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;以所画形状定义板子（&lt;strong&gt;DSD&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置板框属性为机械层 1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;固定孔&lt;ul&gt;
&lt;li&gt;M3 螺孔：内 &lt;strong&gt;3.1&lt;/strong&gt; mm、外 &lt;strong&gt;4&lt;/strong&gt; mm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;排布元件&lt;ul&gt;
&lt;li&gt;跳转文章 &lt;a href=&#34;https://wiki-power.com/PCB%E5%85%83%E4%BB%B6%E5%B8%83%E5%B1%80%E8%A7%84%E8%8C%83&#34;&gt;&lt;strong&gt;PCB 元件布局规范&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;布线&lt;ul&gt;
&lt;li&gt;设置布线规则&lt;ul&gt;
&lt;li&gt;参考 &lt;a href=&#34;https://wiki-power.com/PCB%E5%B8%83%E7%BA%BF%E8%A7%84%E8%8C%83&#34;&gt;&lt;strong&gt;PCB 布线规范&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要开启自动布线！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开启泪滴功能&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字体标识（引脚标识 / 版权 / 迷惑性文字）&lt;ul&gt;
&lt;li&gt;放置于丝印层（顶层 / 底层）&lt;/li&gt;
&lt;li&gt;放底层要先镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;敷铜（&lt;strong&gt;PG&lt;/strong&gt;）&lt;ul&gt;
&lt;li&gt;参考 &lt;a href=&#34;https://wiki-power.com/PCB%E5%B8%83%E7%BA%BF%E8%A7%84%E8%8C%83&#34;&gt;&lt;strong&gt;PCB 布线规范&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;打板&lt;/li&gt;
&lt;li&gt;保存项目&lt;/li&gt;
&lt;li&gt;将 &lt;strong&gt;.pcb&lt;/strong&gt; 文件压缩（这样做似乎不太对，可以的话导出 Gerber）&lt;/li&gt;
&lt;li&gt;上传至 &lt;strong&gt;嘉立创下单助手&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;（可选 SMT）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;其他知识&lt;/h2&gt;
&lt;h3&gt;元件属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Designator&lt;/strong&gt;：元件位号，是元件的唯一标识，用来标识原理图中的不同的元件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;：电阻&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RN&lt;/strong&gt;：排阻&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;：电容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;J&lt;/strong&gt;：接口/跳线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X&lt;/strong&gt;：晶振&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;：二极管&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; 或 &lt;strong&gt;T&lt;/strong&gt;：三极管&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FB&lt;/strong&gt;：磁珠&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;U&lt;/strong&gt;：芯片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TP&lt;/strong&gt;：测试点&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comment&lt;/strong&gt;：元件大小参数，如电阻的阻值、电容的容值、IC 芯片型号等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;：用于填写元件的功能描述&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Logo 添加&lt;/h3&gt;
&lt;p&gt;跳转文章 &lt;a href=&#34;https://seujxh.wordpress.com/2018/10/03/logo%E6%B7%BB%E5%8A%A0/&#34;&gt;&lt;strong&gt;Logo 添加&lt;/strong&gt;&lt;/a&gt; 。&lt;/p&gt;
&lt;h3&gt;使用 Git 管理项目&lt;/h3&gt;
&lt;p&gt;详见 &lt;a href=&#34;https://wiki-power.com/AD%E4%BD%BF%E7%94%A8Git%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9&#34;&gt;&lt;strong&gt;AD 使用 Git 的注意事项&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;以上是 Altium Designer 及电路设计的基本知识。&lt;br&gt;
下一章，我们将着手开始原理图的设计。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seujxh.wordpress.com/2018/09/30/altium%e5%85%ac%e5%8f%b8altium-designer%e4%b8%93%e6%a0%8f/&#34;&gt;Altium 公司 Altium Designer 专栏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://club.szlcsc.com/article/details_2757_1.html&#34;&gt;嘉立创 SMT 贴片 可贴列表 PADS 集成库 \（正式版)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weifengdq/article/details/78406438&#34;&gt;Altium Designer 使用 Git 构想&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.altium.com/documentation/altium-designer/using-version-control-ad&#34;&gt;Using Version Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>AD 基本操作 - 多板系统设计 🚧</title>
      
      
      
      
      <description>&lt;p&gt;使用多板系统设计的原因是，一个硬件项目内可能包含多块 PCB、各种装配元素例如外壳，如果仅仅从每块板的角度去设计，最终做出来的产品有可能会出现配合误差或干涉。在设计多元素的硬件项目时，我们最好使用机电协同。对于硬件工程师来说，可以不用 SolidWorks 等软件，直接在 Altium Designer 里实现。&lt;/p&gt;
&lt;h2&gt;创建多板项目&lt;/h2&gt;
&lt;p&gt;首先，新建多板项目类型文件（&lt;code&gt;.PrjMbd&lt;/code&gt;），在项目下创建基于原理图的逻辑设计文件（&lt;code&gt;.MbsDoc&lt;/code&gt;）和基于 PCB 的文件（&lt;code&gt;.MbaDoc&lt;/code&gt;），然后先保存。在文件系统的层面上把多个单独的 PCB 项目文件夹拷贝到 &lt;code&gt;.PrjMbd&lt;/code&gt; 同级目录下，例如：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220106152537.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;输入逻辑设计&lt;/h2&gt;
&lt;p&gt;输入逻辑设计是根据 PCB 上的物理连接器来进行的。在此之前，我们需要先给项目原理图内的连接器添加参数（点开连接器的属性，添加 &lt;code&gt;Parameters&lt;/code&gt;，名字为 &lt;code&gt;System&lt;/code&gt;，值为 &lt;code&gt;Connector&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220106163315.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;创建模块并链接项目&lt;/h3&gt;
&lt;p&gt;在逻辑设计文件（&lt;code&gt;.MbsDoc&lt;/code&gt;）内放置模块，并双击它弹出属性，选择对应的源 PCB 项目。&lt;/p&gt;
&lt;h3&gt;导入子项目的接口数据&lt;/h3&gt;
&lt;p&gt;单机鼠标右键，选择 &lt;code&gt;设计&lt;/code&gt; - &lt;code&gt;从子项目导入&lt;/code&gt;，就可以自动导入参数为连接器的端口。&lt;/p&gt;
&lt;h3&gt;添加模块间的逻辑连接&lt;/h3&gt;
&lt;p&gt;使用快捷键 &lt;code&gt;P&lt;/code&gt; - &lt;code&gt;W&lt;/code&gt;，绘制连接线。&lt;/p&gt;
&lt;p&gt;点击连接线，就可以在属性面板修改两个模块对应的详细端口连接。&lt;/p&gt;
&lt;p&gt;如果一个连接器需要连接对应多块板，那么可以在属性里面拆分某个端口。&lt;/p&gt;
&lt;h2&gt;物理多板装配&lt;/h2&gt;
&lt;h3&gt;从逻辑设计文件导入 PCB&lt;/h3&gt;
&lt;p&gt;使用快捷键 &lt;code&gt;D&lt;/code&gt; - &lt;code&gt;I&lt;/code&gt;，就可以从逻辑设计文件导入项目对应的的 PCB&lt;/p&gt;
&lt;h3&gt;模拟装配&lt;/h3&gt;
&lt;p&gt;拖动每个 PCB 的坐标轴，就可以进行模拟装配了。&lt;/p&gt;
&lt;h2&gt;生成生产数据&lt;/h2&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.altium.com.cn/blog/pcb%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%A4%9A%E6%9D%BF%E8%AE%BE%E8%AE%A1%E4%BC%9A%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%EF%BC%9F&#34;&gt;PCB 中进行多板设计会是怎样的体验？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.altium.com/cn/documentation/altium-designer/capturing-the-logical-system-design-ad&#34;&gt;输入逻辑系统设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.altium.com/cn/documentation/altium-designer/creating-the-physical-multi-board-assembly-ad&#34;&gt;创建物理多板装配&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.altium.com/cn/documentation/altium-designer/generating-multi-board-production-data-ad&#34;&gt;生成多板设计的生产数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%A4%9A%E6%9D%BF%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%A4%9A%E6%9D%BF%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>AD 基本操作 - 环境搭建</title>
      
      
      
      
      <description>&lt;p&gt;—— Altium Designer 系列教程&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;本系列教程基于 Altium Designer 19（20 也兼容），往后的版本我也将同步跟进。&lt;/p&gt;
&lt;h2&gt;软件下载&lt;/h2&gt;
&lt;p&gt;直接参考 &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;amp;mid=502718968&amp;amp;idx=1&amp;amp;sn=4c37dc403171ffad01fca95b5a537b2e&amp;amp;chksm=0ee141143996c8021799bb5bf5407b7b56c2d7fa5dc484bda61893efd74a06a1f6be63a7a35e&amp;amp;scene=20&amp;amp;xtrack=1&amp;amp;key=088e5814bbd70a9bf7fb42111d02cbb81bb55981baea77169d867e2871add46f26dccde79326a96e819591677be92412fc05ff2af437922652dfe7ae1b94dc8172f36186ba0b2b460004027131ceae2c&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10+x64&amp;amp;version=62090523&amp;amp;lang=zh_CN&amp;amp;exportkey=AyOYwgP948kprM0EiAGMcyk%3D&amp;amp;pass_ticket=6jBDTE0Qqg%2BrAl1wrTIo2UeJLmUrtbfUKPpgRGdeqhwXUk8QVkc%2Fyekd3BvlvVsB&#34;&gt;&lt;strong&gt;Altium Designer 2020 安装教程&lt;/strong&gt;&lt;/a&gt;，此处不再赘述。&lt;/p&gt;
&lt;h2&gt;调整设置项&lt;/h2&gt;
&lt;p&gt;工欲善其事，必先利其器。初次打开 Altium Designer，我们可以调整其中的一些设置项，让工具用起来更顺手一些。找到右上角的 &lt;strong&gt;齿轮&lt;/strong&gt; 标志，&lt;strong&gt;打开设置页面&lt;/strong&gt;，继续以下操作。&lt;/p&gt;
&lt;h3&gt;设置中文&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;左侧列表依次单击 &lt;strong&gt;System - General&lt;/strong&gt; 选项卡，在 &lt;strong&gt;Localizatioin&lt;/strong&gt; 栏目下勾选 &lt;strong&gt;Use localized resources&lt;/strong&gt; 选项&lt;/li&gt;
&lt;li&gt;点击 &lt;strong&gt;应用&lt;/strong&gt; 保存设置，重启 Altium Designer&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;PCB 编辑器&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;左侧列表单击 &lt;strong&gt;PCB Editor&lt;/strong&gt; 选项卡&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;PCB Editor&lt;/strong&gt; 下单击 &lt;strong&gt;General&lt;/strong&gt; 选项卡，在 &lt;strong&gt;铺铜重建&lt;/strong&gt; 栏目下，勾选 &lt;strong&gt;铺铜修改后自动重铺&lt;/strong&gt; ；在 &lt;strong&gt;文档格式修改报告&lt;/strong&gt; 栏目下，勾选 &lt;strong&gt;禁用打开旧版本报告&lt;/strong&gt; 和 &lt;strong&gt;禁用打开新版本报告&lt;/strong&gt; ；在 &lt;strong&gt;其他&lt;/strong&gt; 栏目下，将 &lt;strong&gt;光标类型&lt;/strong&gt; 改为 &lt;strong&gt;Large 90&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;单击 &lt;strong&gt;Display&lt;/strong&gt; 选项卡，在 &lt;strong&gt;高亮选项&lt;/strong&gt; 栏目下，勾选 &lt;strong&gt;交互编辑时应用高亮&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;单击 &lt;strong&gt;Board Insight Color Overrides&lt;/strong&gt; 选项卡，在 &lt;strong&gt;基础样式&lt;/strong&gt; 栏目下，选择 &lt;strong&gt;实心（覆盖颜色）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;单击 &lt;strong&gt;DRC Violations Display&lt;/strong&gt; 选项卡，在 &lt;strong&gt;冲突 Overlay 样式&lt;/strong&gt; 栏目下，选择 &lt;strong&gt;实心（Overlay 颜色）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;点击 &lt;strong&gt;应用&lt;/strong&gt; 保存设置，重启 Altium Designer&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;面板&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;关闭设置页面，在主页菜单栏选择 &lt;strong&gt;视图 - 面板&lt;/strong&gt; ，依次点击 &lt;strong&gt;Components, Messages&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在弹出的面板右上角点击 &lt;strong&gt;回形针&lt;/strong&gt; 标志，将面板吸附在右侧&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;背景设置为网格&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开任意 PCB 文件（若没有可以新建一个）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl + G&lt;/strong&gt; 打开网格设置窗口&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;显示&lt;/strong&gt; 栏目下，将 &lt;strong&gt;精细&lt;/strong&gt; 和 &lt;strong&gt;粗糙&lt;/strong&gt; 选项卡都设为 &lt;strong&gt;Dots&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;输入法兼容性&lt;/h2&gt;
&lt;p&gt;若无法使用快捷键，请检查是否已经切换到英文状态（输入法状态栏显示为 &lt;strong&gt;ENG&lt;/strong&gt;），若无此选项，按如下步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;strong&gt;控制面板&lt;/strong&gt; ，打开 &lt;strong&gt;时钟、语言和区域 - 语言&lt;/strong&gt; 页面&lt;/li&gt;
&lt;li&gt;点击 &lt;strong&gt;添加语言&lt;/strong&gt; 按钮，添加 &lt;strong&gt;英语&lt;/strong&gt; 并选择 &lt;strong&gt;英语（美国）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在桌面任务栏即可切换输入法&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;在这一章节中，我们基本配置好了 Altium Designer 的环境，可以开始愉快地画板子了 :)&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seujxh.wordpress.com/2018/09/30/altium%e5%85%ac%e5%8f%b8altium-designer%e4%b8%93%e6%a0%8f/&#34;&gt;Altium 公司 Altium Designer 专栏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      
    </item>
    
    <item>
      <title>AD 常用技巧</title>
      
      
      
      
      <description>&lt;p&gt;—— 收纳整理了一些实用的小技巧。&lt;/p&gt;
&lt;h2&gt;原理图库部分&lt;/h2&gt;
&lt;h3&gt;引脚名称上划线（低电平有效）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：给需要加上划线的每个字母后面加 “\” 符号&lt;br&gt;
&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;RESET&lt;/code&gt; 加上划线 - &lt;code&gt;R\E\S\E\T&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;PCB 封装库部分&lt;/h2&gt;
&lt;p&gt;（待更新）&lt;/p&gt;
&lt;h2&gt;原理图部分&lt;/h2&gt;
&lt;h3&gt;禁止 Add Room 操作&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：Room 操作在多通道布线中比较有用，可将一个通道内的布线直接应用到其他通道。单通道可以不用 Room.&lt;br&gt;
&lt;strong&gt;方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;菜单栏 - 工程 - 工程选择 - Class Generation 选项卡&lt;/li&gt;
&lt;li&gt;取消勾选 “生成 Room”&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;PCB 部分&lt;/h2&gt;
&lt;h3&gt;Logo 及标识的添加&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：如果用直接导入图片的方式，创建的 Logo 无法自由调整大小。&lt;br&gt;
&lt;strong&gt;方法&lt;/strong&gt;：使用字库软件 Font Creator, 在 &lt;a href=&#34;https://github.com/linyuxuanlin/Modularity_of_Functional_Circuit/tree/master/%E4%B8%93%E7%94%A8%E5%AD%97%E4%BD%93&#34;&gt;GitHub&lt;/a&gt; 下载我的字库作为模板，定制自己的专属字库。字库制作完成后，安装 .ttf 文件，即可在 Altium 内用相应字符调出 Logo 。&lt;/p&gt;
&lt;p&gt;字符对应 Logo 如下图：&lt;br&gt;
&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200207200606.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;自动排布元器件至划定区域&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：原理图更新到 PCB 时，有些元件会跑很远。&lt;br&gt;
&lt;strong&gt;方法&lt;/strong&gt;：全选 - &lt;strong&gt;TOL&lt;/strong&gt; - 框选&lt;/p&gt;
&lt;h3&gt;圆形阵列布局&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中对象 - 复制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EA&lt;/strong&gt; - 勾选 粘贴到当前层&lt;/li&gt;
&lt;li&gt;点击 粘贴阵列 - 设置对象数量与间距&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;快捷打过孔并换层&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：布线时用小键盘 + / - 切换&lt;/p&gt;
&lt;h3&gt;统一设置过孔网络属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;右键单击任意无属性过孔 - 查找相似对象 - 设置 Net 为 Same&lt;/li&gt;
&lt;li&gt;在属性面板中统一添加过孔网络属性&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;添加泪滴&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：泪滴的作用是提高信号的完整性，减少信号损失和反射，降低外力冲撞时导线与过孔接触点断裂的风险。&lt;br&gt;
&lt;strong&gt;方法&lt;/strong&gt;：使用快捷键 &lt;strong&gt;TE&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;导线开窗&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：导线开窗上锡可增加载流量。&lt;br&gt;
&lt;strong&gt;方法&lt;/strong&gt;：将所需走线复制，特殊粘贴到相应 Top / Bottom Solder 层&lt;/p&gt;
&lt;h3&gt;3D 预览下的操作&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按数字键 “3” 进入 3D 预览界面&lt;/li&gt;
&lt;li&gt;按数字键 “2” 返回 PCB 编辑&lt;/li&gt;
&lt;li&gt;按数字键 “0” 恢复默认视角&lt;/li&gt;
&lt;li&gt;Ctrl + F 翻面&lt;/li&gt;
&lt;li&gt;Ctrl + 滚轮 缩放&lt;/li&gt;
&lt;li&gt;Shift + 右键 改变视角&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;复制粘贴中保持网络属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：复制粘贴具有电气属性时，网络属性会丢失。&lt;br&gt;
&lt;strong&gt;方法&lt;/strong&gt;：复制对象 - &lt;strong&gt;EA&lt;/strong&gt; - 勾选 保持网络名称 - 粘贴&lt;/p&gt;
&lt;h3&gt;焊接位号图的输出&lt;/h3&gt;
&lt;p&gt;（待更新）&lt;/p&gt;
&lt;h3&gt;如何在 PCB 上开槽&lt;/h3&gt;
&lt;p&gt;在 PCB 上的 &lt;strong&gt;机械 1 层&lt;/strong&gt; 绘制开槽的封闭图形，选中并使用快捷键 &lt;code&gt;T&lt;/code&gt; - &lt;code&gt;V&lt;/code&gt; - &lt;code&gt;B&lt;/code&gt; 即可生成开槽（最好切换 3D 视角进行确认）。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://item.jd.com/12756518.html&#34;&gt;Altium Designer19 设计宝典：实战操作技巧与问题解决方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/AD%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      
    </item>
    
    <item>
      <title>OrCAD 配置与技巧</title>
      
      
      
      
      <description>&lt;p&gt;注：本文基于 Cadence OrCAD Capture CIS。&lt;/p&gt;
&lt;h2&gt;基础&lt;/h2&gt;
&lt;p&gt;绘制原理图使用 OrCAD Capture CIS（开始菜单-》Cadence-》Capture CIS）&lt;br&gt;
绘制 PCB 使用 Allegro PCB Designer （开始菜单-》Cadence-》PCB Editor）&lt;/p&gt;
&lt;p&gt;一般来说，使用一个 &lt;code&gt;.DSN&lt;/code&gt; 文件即可涵括整个工程，打开会自动生成 &lt;code&gt;.opj&lt;/code&gt; 等原理图文件。如果使用 git 做版本管理，可以添加以下 gitignore：&lt;/p&gt;
&lt;p&gt;```gitignore&lt;/p&gt;
&lt;h1&gt;From original gitignore&lt;/h1&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h2&gt;Allegro&lt;/h2&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h1&gt;Ignore log file&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;.log
&lt;/em&gt;.log,1
&lt;em&gt;.log,2
&lt;/em&gt;.log,3&lt;/p&gt;
&lt;p&gt;&lt;em&gt;.dml
&lt;/em&gt;.lst&lt;/p&gt;
&lt;h1&gt;ignore 记录操作allegro的事件&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;.jrl
&lt;/em&gt;.jrl,1&lt;/p&gt;
&lt;p&gt;*.tag&lt;/p&gt;
&lt;h1&gt;报告文件&lt;/h1&gt;
&lt;p&gt;*.rpt&lt;/p&gt;
&lt;h1&gt;报告文件&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;.cfg
&lt;/em&gt;.cfg,1&lt;/p&gt;
&lt;p&gt;*.lck&lt;/p&gt;
&lt;h1&gt;报表文件&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;.txt
&lt;/em&gt;.txt,1
*.txt,2&lt;/p&gt;
&lt;h1&gt;XY数据除外&lt;/h1&gt;
&lt;p&gt;!place_txt.txt&lt;/p&gt;
&lt;h1&gt;DXF导入文件&lt;/h1&gt;
&lt;p&gt;*.cnv&lt;/p&gt;
&lt;h1&gt;Gerber param file除外&lt;/h1&gt;
&lt;p&gt;!art_param.txt&lt;/p&gt;
&lt;h1&gt;Folder&lt;/h1&gt;
&lt;h1&gt;过滤整个文件夹&lt;/h1&gt;
&lt;p&gt;/signoise.run/ &lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h2&gt;OrCAD&lt;/h2&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;&lt;em&gt;.dbk
&lt;/em&gt;.opj
&lt;em&gt;.DRC
&lt;/em&gt;.DSNlck&lt;/p&gt;
&lt;h1&gt;ignore netlist&lt;/h1&gt;
&lt;p&gt;allegro/ 
```&lt;/p&gt;
&lt;h2&gt;一些设置&lt;/h2&gt;
&lt;p&gt;DRC 设置：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210810134720.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;复制元器件时自动重命名位号：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210810134747.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;移动字符时贴近栅格：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210810134758.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;坑：当使用 CIP 库，显示 &lt;code&gt;not found in the configured librarie lists&lt;/code&gt; 时，要检查路径内空格的编码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;鼠标滚轮缩放&lt;/strong&gt;：&lt;code&gt;Options&lt;/code&gt; - &lt;code&gt;Preferences…&lt;/code&gt; - &lt;code&gt;Pan and Zoom&lt;/code&gt; - 左右两个 &lt;code&gt;Zoom Factor&lt;/code&gt; 设置为 1.1 倍&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;放置元件时刷新原理图&lt;/strong&gt;：&lt;code&gt;Options&lt;/code&gt; - &lt;code&gt;Preferences…&lt;/code&gt; - &lt;code&gt;Miscellaneous&lt;/code&gt; - &lt;code&gt;Place Part&lt;/code&gt; – 勾选 &lt;code&gt;Refresh part on selection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置栅格大小&lt;/strong&gt;：&lt;code&gt;Options&lt;/code&gt; - &lt;code&gt;Preferences…&lt;/code&gt; - &lt;code&gt;Grid Display&lt;/code&gt; - &lt;code&gt;Grid Spacing&lt;/code&gt; - 设置为 1/2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;拉线：&lt;code&gt;W&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;取消：&lt;code&gt;ESC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拉排线：&lt;code&gt;F4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;放置网络标号：&lt;code&gt;N&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;旋转 / 水平镜像 / 垂直镜像元件：&lt;code&gt;R&lt;/code&gt; / &lt;code&gt;H&lt;/code&gt; / &lt;code&gt;V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开 CIS 面板：&lt;code&gt;Z&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;放置电源 / 地：&lt;code&gt;F&lt;/code&gt; / &lt;code&gt;G&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No connect：&lt;code&gt;X&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;筛选器：&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;多选元素：按住 &lt;code&gt;Ctrl&lt;/code&gt; 进行选择&lt;/li&gt;
&lt;li&gt;复制并自动增加标号：按住 &lt;code&gt;Ctrl&lt;/code&gt; 拖动元器件&lt;/li&gt;
&lt;li&gt;以鼠标为重心移动原理图：按住 &lt;code&gt;C&lt;/code&gt;，拖动鼠标&lt;/li&gt;
&lt;li&gt;放置总线：&lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;放置文字：&lt;code&gt;T&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;错误与解决&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;无法拖动元器件：一般来说，重启能解决问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;技巧&lt;/h2&gt;
&lt;h3&gt;off-page 与 port 的区别&lt;/h3&gt;
&lt;p&gt;off-page 一般用于平坦式原理图，而 port 一般用于层次原理图。&lt;/p&gt;
&lt;h3&gt;DRC 检查&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在文件树点击选择整个项目&lt;/li&gt;
&lt;li&gt;点击工具栏 &lt;code&gt;Tools&lt;/code&gt; - &lt;code&gt;Design Rules Check...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;附加勾选 &lt;code&gt;Run Physical Rules&lt;/code&gt;、&lt;code&gt;View Output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击确定，会生成报告并自动打开&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/ReCclay/article/details/101225359&#34;&gt;【Cadence 快速入门】一文总结版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://resources.orcad.com/orcad-capture-tutorials&#34;&gt;OrCAD Capture Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_34338527/article/details/108846792&#34;&gt;cadence 软件用于高分屏笔记本时候显示字体模糊问题解决&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/OrCAD%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%8A%80%E5%B7%A7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/OrCAD%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
      
    </item>
    
    <item>
      <title>函数思想在电路设计中的应用</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;以构建一个系统的角度去设计项目，而不是单单是画一块电路板、设计一种方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;在程序设计中，我们会遇到各种各样复杂的数据和情况，如果放任不管，随着开发的推进，代码熵值将急剧增加。函数和库正是为了解决这类问题而出现的。将代码一层一层封装起来，我们将得到一个井然有序的系统，从全局的视角出发，而不用关心任何我们不需要关注的细节。&lt;/p&gt;
&lt;p&gt;类比到硬件电路设计中，底层构成元素即分立元件，实现特定功能的模块即函数封装，到了全局层面，可以调用各类模块，组成一类电路解决方案。封装复用的思想，可以帮助我们更系统性地、自上而下设计电路，如同构建一个王国一般。&lt;/p&gt;
&lt;p&gt;注：首段「封装」一词为计算机程序术语，后文「封装」为电路术语。&lt;/p&gt;
&lt;h2&gt;元件层&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200131212452.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在元件层面，每个元素（元件）的规格也应该尽量做到统一。我个人的解决方案是，所有出现在我电路方案中的元件符号 / PCB 封装，皆调用于我个人整理的原理图库 / 封装库。&lt;/p&gt;
&lt;p&gt;有人可能会问，大部分元器件符号和封装都可以在网上轻易地找到，甚至有人将 90% 以上元器件都整理成库了，为什么还要做重复的工作？&lt;br&gt;
有句话说得好，下层基础决定上层建筑。举个例子，某个芯片符号什么样子更方便布线，某个电感用什么样的封装比较容易买到，某个 MOS 封装上可以打孔散热，等等。再厉害的人制定的标准，也不一定完全适用于你。建立自己的标准，把房子建在自家地皮上，才是最明智的做法。&lt;/p&gt;
&lt;h2&gt;功能模块层&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200131212642.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基于底层的分立元件，我们可以构建不同的功能模块。功能模块的用途是方便快捷开发。举个例子，我在许多项目中都会用到稳压电路，那我可以挑出比较优秀的方案，按照数据手册，封装成一个个模块，留出函数接口（输入 / 输出端口），标注好属性（稳压电流 / 效率等）。在需要用到的时候，不必管功能模块内部的实现，就像搭积木一般，从顶层进行项目方案的堆叠。&lt;/p&gt;
&lt;p&gt;Altium Designer 为我们提供了片断摘录的功能。我们可以将日常接触的功能模块封装起来，方便日后调用。&lt;/p&gt;
&lt;h2&gt;项目层&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200131213218.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;到了项目方案设计层面，模块化的思想已经显而易见了。通过 Altium Designer 层次化原理图设计功能，我们可以将注意力集中于每个模块的接口，直接操作接口，即可实现整体电路的功能。在这种设计模式下，每个模块之间的耦合度并不高，我们可以随时轻易替换实现某一类功能的模块；也可以通过多通道的功能，对模块进行复用。条理清晰的项目，对接下来的 PCB 模块化布局、多通道布线复用都大有益处，更方便了日后的排错与更新。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/25288280&#34;&gt;编程的几个思想&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Power_Lib_Altium&#34;&gt;linyuxuanlin/Power_Lib_Altium&lt;/a&gt;（个人整理的原理图库 / 封装库）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Modularity_of_Functional_Circuit&#34;&gt;linyuxuanlin/Modularity_of_Functional_Circuit&lt;/a&gt;（个人绘制的功能电路模块）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.altium.com/documentation/altium-designer/multi-sheet-and-multi-channel-design-ad?version=18.1&#34;&gt;Multi-Sheet and Multi-Channel Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzI0ODU0NDI1Mg==&amp;amp;mid=2247493415&amp;amp;idx=1&amp;amp;sn=48868c853d82747e537d9571e02f9c4c&amp;amp;chksm=e99d89b4deea00a2cb26bc62c13bf9bb8955018b47b9b4c091dc98fe776d853039ba84ce480f&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1588583649159&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=54a344d7200e25b224dfb50449a0a3835910904754e85f2f5687170aa3dc9cd1cada606d232a271784f6c37d841af2a681ce3312fe043716d933a48bc88fdfc38a50be9eeb42cc316538f1781f865de5&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10+x64&amp;amp;version=62090070&amp;amp;lang=zh_CN&amp;amp;exportkey=A638hkClxH9AKARxE%2F2NsRw%3D&amp;amp;pass_ticket=DbttLz0NrPJvKfz31VIx1Sw50my315siej6rJhYtISz9sd1CObS%2BjG%2BOC%2FzHEXzj&#34;&gt;详论单片机固件模块化架构设计&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;&lt;br&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;&lt;br&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E5%87%BD%E6%95%B0%E6%80%9D%E6%83%B3%E5%9C%A8%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E5%87%BD%E6%95%B0%E6%80%9D%E6%83%B3%E5%9C%A8%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      
    </item>
    
    <item>
      <title>宽带注入变压器的使用 🚧</title>
      
      
      
      
      <description>&lt;p&gt;宽带注入变压器用于将信号注入到电路中，例如开关电源的控制回路，配合环路分析仪实现开关电源的环路分析。本篇以 CYBERTEK 的宽带注入变压器 CK100（2Hz-2MHz）展开说明。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220513092658.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;宽带注入变压器 CK100 的基本参数如下：&lt;/p&gt;
&lt;p&gt;| 参 数          | 规 格            |
| -------------- | ---------------- |
| 比例系数       | 1:1              |
| 带宽（-3dB）   | 2Hz—2MHz         |
| 隔离电压       | 600V CATIII      |
| 初级次级间电容 | 400pF@1kHz       |
| 次级最大电流   | 10mA             |
| 工作稳定       | 0°C to 50 °C     |
| 尺寸           | 85mm ×46mm ×30mm |
| 重量           | 96g              |&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cybertek.cn/info/331&#34;&gt;宽带注入变压器 CK100（2Hz-2MHz)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cybertek.cn/upload/files/2020/06/09/1591691726SUGP.pdf&#34;&gt;宽带注入变压器 CK100 数据手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E5%AE%BD%E5%B8%A6%E6%B3%A8%E5%85%A5%E5%8F%98%E5%8E%8B%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E5%AE%BD%E5%B8%A6%E6%B3%A8%E5%85%A5%E5%8F%98%E5%8E%8B%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      
    </item>
    
    <item>
      <title>示波器的触发模式</title>
      
      
      
      
      <description>&lt;h2&gt;触发的定义与作用&lt;/h2&gt;
&lt;p&gt;示波器的触发指的是，只有满足一个预设的条件，才会捕获一条波形。这个根据条件捕获波形的动作就叫做触发。&lt;/p&gt;
&lt;p&gt;如果没有设置触发，那么示波器捕捉到的信号可能会是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211217170753.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;触发的作用，是让示波器可以稳定显示一个周期性的信号：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211217170904.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;三种触发模式&lt;/h2&gt;
&lt;h3&gt;自动模式&lt;/h3&gt;
&lt;p&gt;在自动模式下，示波器首先按照触发条件进行触发，当超过设定的时间没有触发条件时，示波器将强制触发，显示信号。&lt;/p&gt;
&lt;p&gt;当我们对一个信号的特征不了解时，就可以选用此模式，可以保证在其他触发设置都不正确时示波器也会有波形显示。尽管波形不一定是稳定的，但是可以为我们进一步调节示波器提供直观的判断。&lt;/p&gt;
&lt;h3&gt;正常模式&lt;/h3&gt;
&lt;p&gt;正常模式下，示波器只有当触发条件满足时才产生扫描（所以要先设置触发模式和电平）。如果没有触发信号，就会不进行扫描，在屏幕上看不到波形。&lt;/p&gt;
&lt;p&gt;正常模式的作用在于观测波形的细节，特别是对于比较复杂的信号。当我们对一个特定的信号设置了特定的触发条件，尤其是满足触发条件的时间间隔比较长时，就可以选用正常模式。&lt;/p&gt;
&lt;h3&gt;单次触发&lt;/h3&gt;
&lt;p&gt;单次触发是正常模式的子集，它也是当触发条件满足时才产生扫描，否则不扫描。不同之处在于，一旦扫描完成，即使后面再有满足触发条件的信号出现，也不再进行扫描显示，必须手动再按一下才重新扫描。&lt;/p&gt;
&lt;p&gt;单次触发模式常用于捕捉单次或多次出现但不具有周期性的信号，比如说一个电路上电时产生的上电信号只会出现一次，如果不使用单次触发，很难捕获到这个信号。&lt;/p&gt;
&lt;h2&gt;触发类型&lt;/h2&gt;
&lt;h3&gt;斜率&lt;/h3&gt;
&lt;p&gt;斜率触发选项分为 &lt;strong&gt;上升沿&lt;/strong&gt;、&lt;strong&gt;下降沿&lt;/strong&gt;、&lt;strong&gt;上升与下降沿&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;上升沿&lt;/strong&gt;：设置信号在上升边沿触发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下降沿&lt;/strong&gt;：设置信号在下降边沿触发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上升与下降沿&lt;/strong&gt;：设置信号在上升或下降边沿触发。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;耦合&lt;/h3&gt;
&lt;p&gt;对于噪声比较大的信号，噪声的的存在干扰了信号的准确触发，触发耦合的作用就是用来抑制触发电路中的干扰和噪声。&lt;/p&gt;
&lt;p&gt;耦合触发选项分为 &lt;strong&gt;直流&lt;/strong&gt;、&lt;strong&gt;交流&lt;/strong&gt;、&lt;strong&gt;高频抑制&lt;/strong&gt;、&lt;strong&gt;低频抑制&lt;/strong&gt;、&lt;strong&gt;噪声抑制&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;直流&lt;/strong&gt;：触发源信号交流和直流成分都被送入触发电路。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;交流&lt;/strong&gt;：触发源信号直流成分被滤除。适用于观察从低频到较高频率的信号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高频抑制&lt;/strong&gt;：触发源信号中特定频率以上的信号都被滤去。适用于观察含有高频干扰的信号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低频抑制&lt;/strong&gt;：触发源信号中特定频率以下的信号都被滤去。适用于观察含有低频干扰的信号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;噪声抑制&lt;/strong&gt;：用低灵敏度的直流耦合来抑制触发源信号中的噪声成分。适用于观察含有高频噪声干扰的信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picture.iczhiku.com/weixin/message1596191922308.html&#34;&gt;工程师如何用好用活示波器？从这 3 方面入手...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/101922570&#34;&gt;示波器的触发详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E7%A4%BA%E6%B3%A2%E5%99%A8%E7%9A%84%E8%A7%A6%E5%8F%91%E6%A8%A1%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E7%A4%BA%E6%B3%A2%E5%99%A8%E7%9A%84%E8%A7%A6%E5%8F%91%E6%A8%A1%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>线性注入器的使用</title>
      
      
      
      
      <description>&lt;p&gt;线性注入器可以把 AC 纹波和直流电源 DC 电压直接叠加，作为 LDO 的输入以测量其 PSRR。本篇以 PICOTEST 的 J2120A 展开说明。&lt;/p&gt;
&lt;p&gt;线性注入器与宽带注入变压器有点像，但宽带注入变压器不能用于测量 LDO 的电源抑制比（PSRR），因为它对直流电流不耐受，即使是非常小的直流电流（5mA 或更小）也会显著降低信号容量，甚至使变压器完全饱和。因此，需要用到线性注入器进行测量。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220517101140.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;J2120A 线性注入器的基本参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大直流输入电压：50VDC&lt;/li&gt;
&lt;li&gt;最大连续电流：5A&lt;/li&gt;
&lt;li&gt;最大压降：3.25VDC&lt;/li&gt;
&lt;li&gt;3dB 频率响应：15Hz~5MHz&lt;/li&gt;
&lt;li&gt;可用频率响应：10Hz~10MHz&lt;/li&gt;
&lt;li&gt;推荐注入信号：-20~10dBm&lt;/li&gt;
&lt;li&gt;工作温度范围：0~50℃&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试场景：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516174015.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，在测试时不能加输入去耦电容，因为 J2120A 的输出有一定阻抗，加电容会形成一个低通网络，影响 PSRR 结果。&lt;/p&gt;
&lt;p&gt;网分仪的参数设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;起始频率：10Hz&lt;/li&gt;
&lt;li&gt;终止频率：10MHz&lt;/li&gt;
&lt;li&gt;扫频模式：对数&lt;/li&gt;
&lt;li&gt;扫频点数：≥401&lt;/li&gt;
&lt;li&gt;输出电平：-10dBm&lt;/li&gt;
&lt;li&gt;1/2 通道衰减：10dB&lt;/li&gt;
&lt;li&gt;接收器带宽：100Hz&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.omicron-lab.com/fileadmin/assets/Bode_100/ApplicationNotes/PSRR/App_Note_PSRR_2_0.pdf&#34;&gt;Power Supply Rejection Ratio Measurement.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.picotestonline.com/forum/welcome-to-the-forum/j2120a-line-injector-useful-information&#34;&gt;J2120A Line Injector Useful Information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E7%BA%BF%E6%80%A7%E6%B3%A8%E5%85%A5%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E7%BA%BF%E6%80%A7%E6%B3%A8%E5%85%A5%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      
    </item>
    
    <item>
      <title>网络分析仪的使用 🚧</title>
      
      
      
      
      <description>&lt;p&gt;网络分析仪是表征射频和微波系统中所用元器件的基础仪器。&lt;/p&gt;
&lt;h2&gt;S 参数&lt;/h2&gt;
&lt;p&gt;S 参数即散射参数，是网络分析仪的工作语言。参数能够完整地描述任何线性、非时变的元件，全面描绘该元件在其可能连接的系统中表现出的特性。散射参数包含相位信息，因此它们是复数形式的相量，同时还与频率有关。一旦知道 S 参数，便可以将它们转换为其他网络参数，以便进行电路设计、优化或调谐。&lt;/p&gt;
&lt;h2&gt;图像&lt;/h2&gt;
&lt;h3&gt;史密斯图&lt;/h3&gt;
&lt;h3&gt;SWR&lt;/h3&gt;
&lt;h2&gt;校准&lt;/h2&gt;
&lt;p&gt;每次使用网分测试之前，都要进行校准。&lt;/p&gt;
&lt;p&gt;校准的方法是，使用标准校准件（注意要选对校准件的型号）分别校准开路、短路、负载三种情况。并使用端口延伸功能，点击开路自动校准，使信号检测延伸到传输线的末端。校准完成的表现是，复阻抗值能落在史密斯图主轴的最右端（开路）。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/104926377&#34;&gt;双端口测量和 S 参数 - 灵活应用网络分析仪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1VX4y1M7X8/&#34;&gt;用网络分析仪测量天线阻抗&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E4%BB%AA%E7%9A%84%E4%BD%BF%E7%94%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E4%BB%AA%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      
    </item>
    
    <item>
      <title>逻辑分析仪的使用 🚧</title>
      
      
      
      
      <description>&lt;p&gt;与示波器不同的是，逻辑分析仪只针对数字信号的电平进行测量。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211217173845.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;逻辑分析仪测量和分析信号的方式不同于示波器。逻辑分析仪不测量模拟细节，而是检测逻辑门限电平。逻辑分析仪只查找两种逻辑电平，在输入高于门限电压（阈值）时，电平称为 &lt;code&gt;高&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt;；当电平低于阈值时，则称为 &lt;code&gt;低&lt;/code&gt; 或 &lt;code&gt;0&lt;/code&gt;。在逻辑分析仪对输入采样时，它根据相对于电压门限的信号电平，来输出 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E9%80%BB%E8%BE%91%E5%88%86%E6%9E%90%E4%BB%AA%E7%9A%84%E4%BD%BF%E7%94%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%BB%AA%E5%99%A8/%E9%80%BB%E8%BE%91%E5%88%86%E6%9E%90%E4%BB%AA%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - CAN 🚧</title>
      
      
      
      
      <description>&lt;p&gt;CAN（Controller Area Network）是一种多主方式的串行通讯总线。基本设计规范要求有高的位速率、高抗电磁干扰性，而且能够检测出产生的任何错误，当信号传输距离达到 10Km 时 CAN-bus 仍可提供高达 5Kbps 的数据传输速率。&lt;/p&gt;
&lt;h2&gt;CAN 电路设计&lt;/h2&gt;
&lt;p&gt;CAN 模块的设计，是基于 CAN 芯片，对串行信号（RX/TX）与 CAN 差分信号（CANH/CANL）进行互相转换。以下是两种较为常用的 CAN 收发器。&lt;/p&gt;
&lt;h3&gt;基于 TJA1050&lt;/h3&gt;
&lt;p&gt;完整资料请见 &lt;a href=&#34;https://github.com/linyuxuanlin/Modularity_of_Functional_Circuit/tree/master/%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1-CAN%E9%80%9A%E4%BF%A1/%E5%9F%BA%E4%BA%8ETJA1050&#34;&gt;&lt;strong&gt;Modularity_of_Functional_Circuit/ 模块设计 - CAN 通信 / 基于 TJA1050&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;特性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;供电：&lt;strong&gt;5 V&lt;/strong&gt;（4.75-5.25 V）&lt;/li&gt;
&lt;li&gt;高速率：60 Kbps-1 Mbps&lt;/li&gt;
&lt;li&gt;完全符合 ISO 11898 标准&lt;/li&gt;
&lt;li&gt;低电磁辐射（EME）&lt;/li&gt;
&lt;li&gt;具有贷款输入范围的差动接收器，可抗电磁干扰（EMI）&lt;/li&gt;
&lt;li&gt;可以连接至少 110 个节点&lt;/li&gt;
&lt;li&gt;没有上电的节点不会对总线造成干扰&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;工作模式&lt;/h4&gt;
&lt;p&gt;TJA1050 有两种工作模式（高速 / 静音），由引脚 S（RS） 来控制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;高速模式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;高速模式是普通的工作模式，将引脚 S 接地即可进入该模式。因引脚 S 内置下拉，所以即使外部没有连接，默认也是高速模式。&lt;/p&gt;
&lt;p&gt;在这个模式中，总线输出信号有固定的斜率，并以最快的速度切换，适合于最大的位
速率和，或最大的总线长度，此时它的收发器循环延迟最小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;静音模式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;静音模式中，发送器是禁能的，不管 TXD 的输入信号，所以运行在非发送状态中消耗的电源电流，和在隐形状态中是一样的。将引脚 S 接高电平就可以进入静音模式。&lt;/p&gt;
&lt;p&gt;静音模式中，节点可以被设置成对总线绝对无源的状态，此时微控制器不再直接访问 CAN 控制器，TJA1050 将会释放总线。&lt;/p&gt;
&lt;h4&gt;芯片管脚&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210607102222.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;参考电路&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210607115611.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，CAN 协议控制器（例如单片机）通过串行线（RX/TX）连接到收发器，在收发器上转换为 CAN 信号（CANH/CANL），并通过引脚 S 来选择高速 / 静音模式。&lt;/p&gt;
&lt;h3&gt;基于 SN65HVD230&lt;/h3&gt;
&lt;p&gt;完整资料请见 &lt;a href=&#34;https://github.com/linyuxuanlin/Modularity_of_Functional_Circuit/tree/master/%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1-CAN%E9%80%9A%E4%BF%A1/%E5%9F%BA%E4%BA%8ESN65HVD230&#34;&gt;&lt;strong&gt;Modularity_of_Functional_Circuit/ 模块设计 - CAN 通信 / 基于 SN65HVD230&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;特性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;由 &lt;strong&gt;3.3 V&lt;/strong&gt; 单电源供电&lt;/li&gt;
&lt;li&gt;可以连接至少 120 个节点&lt;/li&gt;
&lt;li&gt;低电流待机模式&lt;/li&gt;
&lt;li&gt;速率：最高 1 Mbps&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;工作模式&lt;/h4&gt;
&lt;p&gt;SN65HVD230 有三种工作模式（高速 / 斜率 / 静音），由引脚 S（RS） 来控制。一般我们使用高速模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;高速模式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;将 Rs 强下拉至 GND 以启用高速模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;斜率模式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;使用 10k 至 100k 之间的电阻，将 Rs 下拉至 GND。具体电阻阻值与速率的关系，请参考数据手册。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;低功耗模式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;将 Rs 强上拉至 3.3V&lt;/p&gt;
&lt;h4&gt;芯片管脚&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210607155539.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;参考电路&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210607171051.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;PESD2CAN 是 CAN 专用的 ESD 保护二极管，保护芯片免受静电和其他瞬变因素的损害。&lt;/p&gt;
&lt;p&gt;参考的 PCB 布局如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210607171427.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;TJA1050 与 SN65HVD230 的异同&lt;/h3&gt;
&lt;p&gt;TJA1050 与 SN65HVD230 主要的区别是工作电压的不同，TJA1050 工作在 5 V 环境下的，而 SN65HVD230 工作在 3.3 V 环境下。&lt;/p&gt;
&lt;p&gt;共同的注意事项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CAN 信号线在 PCB 布线的时候，要走差分线。&lt;/li&gt;
&lt;li&gt;末端电阻一般在 CAN 线起始端和末端才需要使用，中间端不需要外加。&lt;/li&gt;
&lt;li&gt;如果需要对总线的共模电压进行过滤和稳定，也可以使用分体式末端电阻（如上文所示，分为两个 60 Ω 电阻，中间加连接到地的电容）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CAN 接口 EMC 设计&lt;/h2&gt;
&lt;p&gt;CAN 通讯中，电缆容易耦合外部干扰，对信号传输造成影响，甚至会通过接口电路影响内部核心敏感电路。&lt;/p&gt;
&lt;p&gt;CAN 接口防护器件主要包括：滤波电容、共模电感、跨接电容、TVS 管。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220134905.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;滤波电容 $C_1,C_2$：用于给干扰提供低阻抗的回流路径，选取范围为 22pF~1000pF，典型值为 100pF。&lt;/li&gt;
&lt;li&gt;共模电感 $L_1$：用于滤除差分线上的共模干扰，阻抗选取范围为 120Ω/100MHz~2200Ω/100MHz，典型值为 600Ω/100MHz。&lt;/li&gt;
&lt;li&gt;跨接电容 $C_3,C_4$：用于接口地和数字地之间的隔离，典型值为 1000pF/2kV。&lt;/li&gt;
&lt;li&gt;TVS 管 $D_1,D_2$：用于防 ESD 或瞬间的高能量冲击，使其线路的电压钳位在一个预定的数值内，从而确保后面的电路器件免受瞬态高能量的冲击而损坏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_40877615/article/details/94381422&#34;&gt;接口电路的防护设计&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-CAN/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-CAN/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - I2C</title>
      
      
      
      
      <description>&lt;p&gt;I2C（Inter-Integrated Circuit）是一种串行通讯总线，可允许存在多主机，但同一时刻只能有一个主机在线。I2C 由两条开漏信号线组成，接线简单，利用电阻上拉，典型电平为正逻辑 3.3V 或 5V。传输速率分快速模式（400Kb/s）、标准模式（100Kb/s）、低速模式（10Kb/s）。&lt;/p&gt;
&lt;p&gt;在 I2C 总线上，从机以它的 I2C 地址被选择。这样子可以用在一个主机上通过两根线控制多个从机。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026174634.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;I2C 的引脚&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SCL&lt;/strong&gt;（serial clock）：由主机产生的方波，用来控制传输速率和数据的锁存。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SDA&lt;/strong&gt;（serial data）：这是一个 &lt;strong&gt;半双工、同步&lt;/strong&gt; 的信号线，传输的数据包括地址、控制信号与通信数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;I2C 地址&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I2C 地址划分，是 7 bit 地址加上 1 bit 读写指示。&lt;/li&gt;
&lt;li&gt;I2C 总线上的每个设备都必须有一个唯一的地址，如果地址重复会出问题。有些设备的 I2C 地址是可以编程设置的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211027112717.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;I2C 通信&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;START&lt;/strong&gt;：主机在 SCL 为高时，拉低 SDA 发起。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STOP&lt;/strong&gt;：主机在 SCL 为高时，释放 SDA（变为高电平）发起。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ACK&lt;/strong&gt;（acknowledge）：I2C 传输都是随着每个 SCL 脉冲，每次传输 1 个字节（8 个位）。每次传输的第 9 个脉冲被保留为从机的确认信号，每次的 ACK 信号表示前一次传输成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;I2C 传输句段示例&lt;/h3&gt;
&lt;p&gt;这一段传输的值为 &lt;code&gt;11001101&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211104172952.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主机拉低 SDA 电平以产生 START 信号。&lt;/li&gt;
&lt;li&gt;第一个位被设置，主机拉低 SCL，将时钟信号经过 DAC 进行输出。&lt;/li&gt;
&lt;li&gt;传输到第九个位时，主机不会拉低 SDA，如果从机确认传输完整，则将 SDA 拉低让主机知道。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;有效的数据传输&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 SCL 保持高电平（传输数据）时，SDA 在这段时间内必须保持稳定才有效。&lt;/li&gt;
&lt;li&gt;在 SCL 节拍间的低电平，才允许 SDA 切换数值。&lt;/li&gt;
&lt;li&gt;当 SCL 为高电平，SDA 发生变化时，就会被解释为 START、RESTART 或 STOP 事件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211105172139.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;接口电路上升 / 下降计时&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211108093819.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，晶体管将在低电平时导通，并将 $C_b$ 电容放电到低电平。反之，晶体管将在高电平时截止，上拉电阻会将 $C_b$ 充电至高电平。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$t_r$（上升时间）：信号从低电平过渡到高电平的最大时间。因为 I2C 是开漏信号，所以上升时间由上拉电阻和总线电容的 RC 时间常数决定。&lt;/li&gt;
&lt;li&gt;$t_f$（下降时间）：信号从高电平过渡到低电平的最大时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211108095142.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;I2C 上拉电阻计算&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;上拉电阻最小值：$R_{Pull(Min)}=\frac{V_{DD}-V_{OLMAX}}{I_{SinkMax}}$&lt;/li&gt;
&lt;li&gt;上拉电阻最大值：$R_{Pull(Max)}=\frac{t_r}{0.8473*C_b}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，上拉电阻最小值会带来最短的上升时间。如果用的阻值比这个再小，就会导致当输出晶体管开启（逻辑低电平）时，消耗过多的电流，违反最大逻辑低电平输出的规范。&lt;/p&gt;
&lt;p&gt;上拉电阻最大值会带来最长的上升时间。如果使用大于此值的上拉电阻，将会违反时序要求。&lt;/p&gt;
&lt;p&gt;$V_{DD}$ 表示供电电压；$V_{OLMAX}$ 表示最大逻辑低电平（典型值为 0.4V）；$I_{SinkMax}$ 表示最大灌电流（典型值为 3mA）；$C_b$ 表示总线电容，取决于 PCB 走线的长度和宽度，与连接至总线的设备的电容。&lt;/p&gt;
&lt;p&gt;计算示例：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211108103406.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Analog Engineer’s Pocket Reference》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/IeL77NTyVdTdkcNtqjjFPA&#34;&gt;I2C 总线该怎么用？看完你就会了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhenhuizhang.tk/post/dian-lu-i2c-zong-xian-xie-yi/&#34;&gt;[电路]I2C 总线协议 🚧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-I2C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-I2C/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - SPI</title>
      
      
      
      
      <description>&lt;p&gt;SPI（Serial Peripheral Interface）是一种 &lt;strong&gt;全双工、同步、串行、主从、总线&lt;/strong&gt; 通信协议，其数据传输速率为 8 Mbit。SPI 只能有一个主机，可连接一个或多个从机。连接多设备时，需要用到片选引脚（chip select，CS）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210911095950.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;SPI 的引脚&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SCLK&lt;/strong&gt;（serial clock）：由主机驱动的方波时钟信号，从端为输入采样。SDO 和 SDI 上的信号根据 SCLK 上的时钟信号来进行锁存操作。一个时钟周期传输 1bit 数据，所以传输速率等同于主机产生的时钟频率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SDI/SDO&lt;/strong&gt;（serial data in / serial data out）：描述了相对于主机的数据流的方向，但更多时候在板子上出现的是 MOSI（Master Out Slave In）和 MISO（Master In Slave Out）。对应地，SDO 在主机上是 MOSI，在从机上是 MISO；而 SDI 在主机上是 MISO，在从机上是 MOSI；在菊花链拓扑中，A 器件 MISO 连接到 B 器件的 MISO。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CS/SS&lt;/strong&gt;（chip select / slave select）：由主机驱动，用于仲裁 SPI 总线上通信的优先级。当 CS 线上为低电平时，就会激活 SPI 通信。CS 是低电平有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;SPI 数据锁存操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SPI 数据在 SCLK 上升或下降沿时进行锁存。&lt;/li&gt;
&lt;li&gt;锁存数据的边沿称为临界边沿。&lt;/li&gt;
&lt;li&gt;举个例子，以下左图表示 SDO 在上升沿锁存逻辑 &lt;code&gt;1&lt;/code&gt;，右图表示在下降沿锁存逻辑 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026151750.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;SPI 读取句段示例&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;临界边沿为上升沿&lt;/li&gt;
&lt;li&gt;主机输出到从机（在从机上为 SDI）&lt;/li&gt;
&lt;li&gt;CS 脚被拉低为 0V，以激活 SPI&lt;/li&gt;
&lt;li&gt;数据在 SCLK 上升沿时，从高位（MSB）到低位（LSB）按顺序进行传输&lt;/li&gt;
&lt;li&gt;完成传输数据：&lt;code&gt;1011001&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026152228.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;SPI 临界边沿&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;$t_{SU}$（setup time）：定义在临界边沿事件发生多久前，SDI 数据就该被确定并稳定下来。&lt;/li&gt;
&lt;li&gt;$t_{HO}$（hold time）：定义在临界边沿事件发生后，SDI 上的数据必须保留多长时间。&lt;/li&gt;
&lt;li&gt;$t_{DO}$（delay time）：定义在临界边沿事件发生后，SDO 上的有效数据的延迟时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026160940.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;SPI 传输模式（4 种）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPOL&lt;/strong&gt;（clock polarity，时钟极性）：空闲（不传输数据）时钟的极性，&lt;code&gt;0&lt;/code&gt; 代表低电平，&lt;code&gt;1&lt;/code&gt; 代表高电平。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CPHA&lt;/strong&gt;（clock phase，时钟相位）：定义在上升还是下降沿进行锁存。&lt;code&gt;0&lt;/code&gt; 代表在第一个变化的边沿进行锁存；&lt;code&gt;1&lt;/code&gt; 代表在第二个变化的边沿进行锁存。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;| 模式编号 | CPOL（时钟极性） | CPHA（时钟相位）          | 锁存边沿 |
| -------- | ---------------- | ------------------------- | -------- |
| 0        | 0（低电平）      | 0（在第一个边沿进行锁存） | 上升沿   |
| 1        | 0（低电平）      | 1（在第二个边沿进行锁存） | 下降沿   |
| 2        | 1（高电平）      | 0（在第一个边沿进行锁存） | 下降沿   |
| 3        | 1（高电平）      | 1（在第二个边沿进行锁存） | 上升沿   |&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026162028.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;菊花链（Daisy Chain）&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211026164011.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在普通模式下，SPI 每个从机都需要一条 CS 线。当从机一多，会占用主机过多的 IO 口。使用菊花链的拓扑连接，就可以只用一条 CS 线，驱动所有的从机。&lt;/p&gt;
&lt;p&gt;菊花链的原理是，数据从主机传输到第一个从机，然后从第一个从机传输到第二个从机，依此下去，数据沿着线路级联，直到系列中的最后一个从机，最后的一个从机通过 SDO 将数据传送到主机。&lt;/p&gt;
&lt;h2&gt;SPI 的优缺点&lt;/h2&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全双工通信&lt;/li&gt;
&lt;li&gt;推挽驱动，能提供比较好的信号完整性和较高的速度&lt;/li&gt;
&lt;li&gt;协议灵活，不仅限于 8-bit 一个字节&lt;/li&gt;
&lt;li&gt;硬件设计简单&lt;/li&gt;
&lt;li&gt;不需要上拉电阻，因此功耗更低&lt;/li&gt;
&lt;li&gt;没有仲裁机制或相关的失效模式&lt;/li&gt;
&lt;li&gt;从机不需要时钟（由主机提供）&lt;/li&gt;
&lt;li&gt;从设备不需要单独的地址&lt;/li&gt;
&lt;li&gt;不需要收发器&lt;/li&gt;
&lt;li&gt;信号都是单向的，容易进行电流隔离&lt;/li&gt;
&lt;li&gt;时钟速率没有上限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用到的引脚比 I2C 多&lt;/li&gt;
&lt;li&gt;从机无法进行硬件应答&lt;/li&gt;
&lt;li&gt;没有错误检查机制，如 UART 中的奇偶校验位&lt;/li&gt;
&lt;li&gt;只能有一个主机&lt;/li&gt;
&lt;li&gt;规范不统一，无法验证一致性&lt;/li&gt;
&lt;li&gt;传输距离相对比较近（相比 CAN、RS232、RS485 等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Analog Engineer’s Pocket Reference》&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-SPI/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-SPI/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - USB 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;USB 版本&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211129094423.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;USB 机械接口&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211129094855.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211129094944.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接口定义 - 标准 USB：&lt;/p&gt;
&lt;p&gt;| 触点 | 功能                 |
| ---- | -------------------- |
| 1    | VBUS（4.75－5.25 V） |
| 2    | D-                   |
| 3    | D+                   |
| 4    | GND                  |&lt;/p&gt;
&lt;p&gt;接口定义 - Mini USB：&lt;/p&gt;
&lt;p&gt;| 触点 | 功能                 | 颜色 |
| ---- | -------------------- | ---- |
| 1    | VBUS（4.75－5.25 V） | 红   |
| 2    | D-                   | 白   |
| 3    | D+                   | 绿   |
| 4    | ID                   |      |
| 5    | GND                  | 黑   |&lt;/p&gt;
&lt;h2&gt;USB 插头与版本的兼容性&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211129094829.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;USB Type-C&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220520105345.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;端口类型&lt;/h3&gt;
&lt;p&gt;数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;下行端口（Downstream Facing Port，DFP）&lt;/strong&gt;：主机 / 下行集线器端口。典型示例为传统的标准 Type-A 端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上行端口（Upstream Facing Port，UFP）&lt;/strong&gt;：设备 / 上行集线器端口。典型示例为传统的标准 Type-B 端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;双重角色端口（Dual-Role Port，DRP）&lt;/strong&gt;：连接事件发生前，在 DFP 端口和 UFP 端口之间切换的端口。初始连接事件后，可通过 USB 供电协议协商进行动态交换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;供电：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;拉电流电源 / 供电设备&lt;/strong&gt;：5V-20V 时的拉电流最多为 5A。典型示例为传统的标准 Type-A 端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灌电流电源 / 耗电设备&lt;/strong&gt;：5V-20V 时的灌电流最多为 5A。典型示例为传统的标准 Type-B 端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;引脚定义&lt;/h2&gt;
&lt;p&gt;Type-C 分公母头（插头与插座），两者引脚大部分呈镜像分布。&lt;/p&gt;
&lt;p&gt;Type-C 插座：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220520134239.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Type-C 插头：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220520134304.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对接示意图（全功能）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220520140019.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;引脚定义：&lt;/p&gt;
&lt;p&gt;| 引脚 | 名称 | 功能              | 详细说明                                         |
| ---- | ---- | ----------------- | ------------------------------------------------ |
| A1   | GND  | 电源              | 最低支持 60W（与所有 VBUS 结合使用）             |
| A2   | TX1+ | USB3.1 或备用模式 | 与 TX1- 共同构成 10 Gbps 差分对                   |
| A3   | TX1- | USB3.1 或备用模式 | 与 TX1+ 共同构成 10 Gbps 差分对                   |
| A4   | VBUS | 电源              | 最低支持 60W（与所有 VBUS 结合使用）             |
| A5   | CC1  | CC 或 VCONN       | 用于方向检测、电流能力通告检测及 USB2.0 BMC 通信 |
| A6   | D+   | USB2.0            | —                                                |
| A7   | D-   | USB2.0            | —                                                |
| A8   | SBU1 | 备用模式          | 低速边带信号，仅供备用模式使用                   |
| A9   | VBUS | 电源              | 最低支持 60W（与所有 VBUS 结合使用）             |
| A10  | RX2- | USB3.1 或备用模式 | 与 RX2+ 共同构成 10 Gbps 差分对                   |
| A11  | RX2+ | USB3.1 或备用模式 | 与 RX2- 共同构成 10 Gbps 差分对                   |
| A12  | GND  | 电源              | 最低支持 60W（与所有 VBUS 结合使用）             |
| B1   | GND  | 电源              | 最低支持 60W（与所有 VBUS 结合使用）             |
| B2   | TX2+ | USB3.1 或备用模式 | 与 TX2- 共同构成 10 Gbps 差分对                   |
| B3   | TX2- | USB3.1 或备用模式 | 与 TX2+ 共同构成 10 Gbps 差分对                   |
| B4   | VBUS | 电源              | 最低支持 60W（与所有 VBUS 结合使用）             |
| B5   | CC2  | CC 或 VCONN       | 用于方向检测、电流能力通告检测及 USB2.0 BMC 通信 |
| B6   | D+   | USB2.0            | —                                                |
| B7   | D-   | USB2.0            | —                                                |
| B8   | SBU2 | 备用模式          | 低速边带信号，仅供备用模式使用                   |
| B9   | VBUS | 电源              | 最低支持 60W                                     |
| B10  | RX1- | USB3.1 或备用模式 | 与 RX1+ 共同构成 10 Gbps 差分对                   |
| B11  | RX1+ | USB3.1 或备用模式 | 与 RX1- 共同构成 10 Gbps 差分对                   |
| B12  | GND  | 电源              | 最低支持 60W                                     |&lt;/p&gt;
&lt;p&gt;供电协议：&lt;/p&gt;
&lt;p&gt;| 模式                    | 标称电压 | 最大电流 |
| ----------------------- | -------- | -------- |
| USB2.0                  | 5V       | 500 mA   |
| USB3.0/USB3.1           | 5V       | 900 mA   |
| USB BC1.2               | 5V       | 1.5A     |
| USB Type-C Current @ 1.5A | 5V       | 1.5A     |
| USB Type-C Current @ 2.0A | 5V       | 3.0A     |
| USB PD                  | 最高 20V | 最高 5A  |&lt;/p&gt;
&lt;h3&gt;CC 引脚&lt;/h3&gt;
&lt;p&gt;CC 引脚使用的上下拉电阻取决于是下行端口（DFP）、上行端口（UFP）还是电子标记/有源电缆，必须始终通过端口监视才能实现插入与移除检测、方向检测、电流能力通告的功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主机 / 下行端口（DFP）使用上拉电阻&lt;/strong&gt;。上拉电阻 Rp 需同时连接至 CC1 与 CC2 引脚，并上拉至 3.3V/5V/电流源。上拉电阻的取值将向设备通过端口的供电电流能力，如下表所示：&lt;/p&gt;
&lt;p&gt;| DFP 供电电流能力                            | 上拉至 4.75V~5.5V | 上拉至 3.3V±5% | 至 1.7~5.5V 电流源 |
| ------------------------------------------- | ----------------- | -------------- | ------------------ |
| 默认 USB 功率（USB2.0-500mA，USB3.0-900mA） | 56kΩ±20%          | 36kΩ±20%       | 80µA±20%           |
| 1.5A@5V                                     | 22kΩ±5%           | 12kΩ±5%        | 180µA±8%           |
| 3A@5V                                       | 10kΩ±5%           | 4.7kΩ±5%       | 330µA±8%           |&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备 / 上行端口（UFP）使用下拉电阻或电压钳位&lt;/strong&gt;。下拉电阻 Rd 的值恒定为 5.1kΩ±10%。&lt;/p&gt;
&lt;p&gt;电缆方向检测，如果 CC1 引脚检测到有效的上下拉，则代表正向（未翻转）；如果 CC1 检测到，则代表反向（已翻转）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220520141738.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.infonet.io/2020/03/21/USB%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/&#34;&gt;USB 相关介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/USB&#34;&gt;USB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.usb.org/sites/default/files/usb-if_logo_usage_guidelines_final_103019.pdf&#34;&gt;USB Logo Usage Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microchip.com.cn/community/Uploads/Download/Library/00001953a_cn.pdf&#34;&gt;AN1953 | USB Type-C™ 简介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-USB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-USB/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - 串口通信</title>
      
      
      
      
      <description>&lt;p&gt;串口通信算得上是单片机中最常用、最基础的一种通讯方式。常用可作为一种调试的手段，与单片机通讯监控数据、发送指令，也可以用作两个单片机之间互相通讯使用。串口通讯的物理层是 RS-232 与 TTL 标准。&lt;/p&gt;
&lt;h2&gt;协议层&lt;/h2&gt;
&lt;h3&gt;并行和串行&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;并行通信&lt;/strong&gt;：各个数据位同时传输，速度快但占用引脚资源多。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;串行通信&lt;/strong&gt;：数据按位顺序传输，占用引脚资源少但速度相对慢。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;单工、半双工和全双工&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;单工&lt;/strong&gt;：数据只在一个方向上进行传输。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;半双工&lt;/strong&gt;：允许数据在两个方向上传输，但是同一时刻，只允许数据在一个方向上传输，相当于方向可切换的单工通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全双工&lt;/strong&gt;：允许数据同时在两个方向上传输，因此，全双工通信是两个单工通信方式的结合，要求发送和接收设备都有独立的接发能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;同步和异步&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;同步通信&lt;/strong&gt;：带时钟同步信号传输。例如 SPI，IIC 等通信接口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;异步通信&lt;/strong&gt;：不带时钟同步信号。例如 UART，单总线。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;USART 和 UART&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UART&lt;/strong&gt;：通用异步收发器（Universal Asynchronous Receiver/Transmitter）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;USART&lt;/strong&gt;：通用同步异步收发器（Universal Synchronous/Asynchronous Receiver/Transmitter）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210207095411.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210207095433.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;USART 是 UART 的升级版，区别在于多了 CLK 线，在 CLK 没有信号的时候，就表明没有数据传输任务，有 CLK 信号的时候，就是正在传输信号，并且 CLK 提供了时钟同步功能，效验也更精确。&lt;/p&gt;
&lt;h2&gt;物理层&lt;/h2&gt;
&lt;h3&gt;TTL 标准&lt;/h3&gt;
&lt;p&gt;TTL 标准请跳转文章 &lt;a href=&#34;https://wiki-power.com/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E7%94%B5%E5%B9%B3#ttl-%E7%94%B5%E5%B9%B3%E6%8E%A5%E5%8F%A3&#34;&gt;&lt;strong&gt;TTL 电平接口 · 通信协议 - 数字逻辑电平&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;RS-232 标准&lt;/h3&gt;
&lt;p&gt;RS-232 通信的物理层，是两个设备的 DB9 接口之间通过串口信号线建立起连接，串口信号线中使用 RS-232 电平传输数据信号。因为控制器一般使用的是 TTL 电平，所以需要专用的电平转换芯片才能实现通讯。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220415102310.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;TTL 与 RS-232 电平比较：&lt;/p&gt;
&lt;p&gt;| 通讯标准 | 电平标准（发送端）                     |
| -------- | -------------------------------------- |
| 5V TTL   | 逻辑 &lt;code&gt;0&lt;/code&gt;：0~0.5V；逻辑 &lt;code&gt;1&lt;/code&gt;：2.4V-5V    |
| RS-232   | 逻辑 &lt;code&gt;0&lt;/code&gt;：+3V~+15V；逻辑 &lt;code&gt;1&lt;/code&gt;：-15V~-3V |&lt;/p&gt;
&lt;p&gt;理想状态下的对应时序图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220415102914.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;RS-232 协议一般使用 DB9 接口，计算机一般用公头接口（针），调制调解器设备中一般为母头（孔）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220415103401.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接口引脚定义：&lt;/p&gt;
&lt;p&gt;| 引脚符号 | 名称                | 说明                                                                                                                 |
| -------- | ------------------- | -------------------------------------------------------------------------------------------------------------------- |
| DCD      | 载波检测            | Data Carrier Detect，数据载波检测，用于 DTE 告知对方，本机是否收到对方的载波信号                                     |
| RXD      | 接收数据            | Receive Data，数据接收信号，即输入                                                                                   |
| TXD      | 发送数据            | Transmit Data，数据发送信号，即输出。两个设备之间的 TXD 与 RXD 应交叉相连                                            |
| DTR      | 数据终端（DTE）就绪 | Data Terminal Ready，数据终端就绪，用于 DTE 向对方告知本机是否已准备好                                               |
| GND      | 信号地              | 地线，两个通讯设备之间的地电位可能不一样，这会影响收发双方的电平信号，所以两个串口设备之间必须要使用地线连接，即共地 |
| DSR      | 数据设备（DCE）就绪 | Data Set Ready，数据发送就绪，用于 DCE 告知对方本机是否处于待命状态                                                  |
| RTS      | 请求发送            | Request To Send，请求发送， DTE 请求 DCE 本设备向 DCE 端发送数据                                                     |
| CTS      | 允许发送            | Clear To Send，允许发送，DCE 回应对方的 RTS 发送请求，告知对方是否可以发送数据                                       |
| RI       | 响铃指示            | Ring Indicator，响铃指示，表示 DCE 端与线路已接通                                                                    |&lt;/p&gt;
&lt;p&gt;DB9 公头与母头的 TX/RX 相反，所以一般对接即可，等效于连接这几条信号线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220415103901.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;串口线中的 RTS、CTS、DSR、DTR 及 DCD 信号，使用逻辑 &lt;code&gt;1&lt;/code&gt; 表示信号有效，逻辑 &lt;code&gt;0&lt;/code&gt; 表示信号无效。&lt;/p&gt;
&lt;p&gt;在实际使用中，有时候只保留 RXD、TXD 与 GND。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.embedfire.com/mcu/stm32/f103/hal_generalzh/latest/doc/chapter20/chapter20.html&#34;&gt;USART — 串口通讯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - 以太网 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/102296622&#34;&gt;以太网 PHY 自学笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhenhuizhang.tk/post/dian-lu-yi-tai-wang-phy-wu-li-ceng/&#34;&gt;[电路]以太网 PHY 物理层&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;嵌入式以太网硬件&lt;/h2&gt;
&lt;p&gt;一个嵌入式系统的以太网的硬件，主要是由这几个部分构成的：MAC 控制器、PHY 芯片、网络变压器和 RJ45 接头，有的系统还会有 DMA 控制器。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220627163525.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般来说，CPU/MCU 会将 MAC 集成在片上（MAC 为数字电路，考虑芯片面积与架构的原因，一般会集成在片上），所以需要在外部设计的硬件是 PHY、变压器与接口。而在许多情况下，网络变压器也会集成进 RJ45 接头内。&lt;/p&gt;
&lt;h3&gt;MAC&lt;/h3&gt;
&lt;p&gt;MAC（媒体访问控制子层协议，Media Access Control）位于 OSI 七层结构中的数据链路层,主要负责控制与连接物理层的介质。MAC 遵循 IEEE-802.3 标准。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220627171622.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在发送数据的时候，MAC 协议可以事先判断是否可以发送数据，如果可以发送，则将给数据加上一些控制信息，随后将数据以及控制信息以规定的格式发送到物理层。&lt;/p&gt;
&lt;p&gt;在接收数据的时候，MAC 协议首先判断输入的信息并是否发生传输错误。如果没有错误。则去掉控制信息发送至 LLC 层。&lt;/p&gt;
&lt;h3&gt;PHY&lt;/h3&gt;
&lt;p&gt;PHY 是物理接口收发器，以太网的物理层由它实现，PHY 由 IEEE-802.3 标准定义，包括介质独立接口 MII/GMII 子层、物理编码子层 PCS、物理介质附加子层 PMA、物理介质相关子层 PMD、MDI 子层。&lt;/p&gt;
&lt;p&gt;PHY 在发送数据的时候，会收到从 MAC 传输过来的数据（对 PHY 来说，没有帧的概念，对它来说，都是数据而不管什么地址，数据还是 CRC。对于 100BaseTX 因为使用 4B/5B 编码，每 4bit 就增加 1bit 的检错码），然后把并行数据转化为串行流数据，再按照物理层的编码规则把数据编码，再变为模拟信号把数据送出去。收数据时的流程反之。典型的 PHY 内部结构框图如下所示（RTL8211E）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220627171548.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;MAC 与 PHY 间的接口协议&lt;/h3&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E4%BB%A5%E5%A4%AA%E7%BD%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E4%BB%A5%E5%A4%AA%E7%BD%91/</guid>
      
    </item>
    
    <item>
      <title>通信协议 - 数字逻辑电平</title>
      
      
      
      
      <description>&lt;h2&gt;TTL 电平接口&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220505152445.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;TTL（Transistor-Transistor Logic）是基于三极管结构的，其标准电源供应为 5V。由于 2.4V 与 5V 之间还有很大空间，电压不停跳变会增加系统功耗，所以压缩形成了 LVTTL（Low Voltage Transistor-Transistor Logic）电平，分 3.3V、2.5V LVTTL。&lt;/p&gt;
&lt;p&gt;（LV）TTL 电平的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TTL 电路通过电流控制器件，电路的速度快，传输延迟时间短（5-10ns），但是功耗大。&lt;/li&gt;
&lt;li&gt;TTL 电平一般过冲都会比较严重，可能在起始端串一个 22Ω/33Ω 电阻。&lt;/li&gt;
&lt;li&gt;TTL 电平输入脚悬空时是内部认为是高电平，如需下拉，需接 1k 以下电阻下拉。&lt;/li&gt;
&lt;li&gt;TTL 电平接口速度一般限制在 30MHz 以内。因为 BJT 的输入端存在几 pF 大小的输入电容（构成一个 LPF），如果输入信号超过一定频率，信号将会丢失。&lt;/li&gt;
&lt;li&gt;其驱动能力一般最大为几十毫安。正常工作的信号电压一般较高，如果将它与信号电压较低的 ECL 电路接近时，会产生比较明显的串扰问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CMOS 电平接口&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220505154222.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;CMOS（Complementary Metal Oxide Semiconductor）是基于 NMOS、PMOS 组成的结构，其标准电源供应为 5V。与 TTL 同理，CMOS 也衍生出 LVCMOS 电平标准，且因 MOS 管相对于三极管的导通门电压更低，因此 LVCMOS 可比 LVTTL 使用更低的电压通信。LVCMOS 有 3.3V、2.5V、1.8V、1.5V、1.2V 标准。&lt;/p&gt;
&lt;p&gt;（LV）CMOS 电平的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMOS 电路通过电压控制器件，电路的速度慢，传输延迟时间长（25-50ns），但功耗低。但是在高转换频率时，CMOS 系列实际上却比 TTL 消耗更多的功率。&lt;/li&gt;
&lt;li&gt;CMOS 接口相对于 TTL 接口有了更大的噪声容限，输入阻抗远大于 TTL 输入阻抗。正常情况下，CMOS 的功耗和抗干扰能力远优于 TTL。&lt;/li&gt;
&lt;li&gt;CMOS 结构内部寄生有可控硅结构，当输入或输入管脚高于 VCC 一定值（比如一些芯片是 0.7V）时，电流足够大的话，可能引起闩锁效应，导致芯片的烧毁。&lt;/li&gt;
&lt;li&gt;CMOS 电路的输入阻抗是很高的，因此，它的耦合电容容量可以很小，不需要使用大的电解电容器。由于 CMOS 电路通常驱动能力较弱，所以必须先进行 TTL 转换后再驱动 ECL 电路。此外，设计 CMOS 接口电路时，要注意避免容性负载过重，否则的话会使得上升时间变慢，而且驱动器件的功耗也将增加 （因为容性负载并不耗费功率）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;各电平标准的对比&lt;/h2&gt;
&lt;p&gt;数字电路有个双阈值标准。虽然最终表示的只有 0 和 1 两个状态，但在实际电路中，电压低于多少为 0，电压高于多少为 1，是通过双阈值标准来协定的。&lt;/p&gt;
&lt;p&gt;|            | $VCC$ | $V_{OH}$         | $V_{IH}$         | $V_{IL}$         | $V_{OL}$         | $GND$ |
| :--------- | :---- | :--------------- | :--------------- | :--------------- | :--------------- | :---- |
| 5V TTL     | 5.0   | 2.4              | 2.0              | 0.8              | 0.4              | 0.0   |
| 3.3V LVTTL | 3.3   | 2.4              | 1.5              | 0.8              | 0.4              | 0.0   |
| 5V CMOS    | 5.0   | 4.5（0.9*VCC）  | 3.5（0.7*VCC）  | 1.5（0.3*VCC）  | 0.5（0.1*VCC）  | 0.0   |
| 3.3V CMOS  | 3.3   | 2.97（0.9*VCC） | 2.31（0.7*VCC） | 0.99（0.3*VCC） | 0.33（0.1*VCC） | 0.0   |
| 2.5V CMOS  | 2.5   | 2.0              | 1.7              | 0.7              | 0.4              | 0.0   |
| 1.8V CMOS  | 1.8   | 1.35             | 1.17             | 0.63             | 0.45             | 0.0   |&lt;/p&gt;
&lt;h2&gt;串行与并行通信&lt;/h2&gt;
&lt;p&gt;数据位可以并行或串行形式传输。在并行通信中，数据位是同时发送的，每个都通过单独的线路。下图是二进制（01000011）中字母 &lt;code&gt;C&lt;/code&gt; 的并行传输：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211109095630.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在串行通信中，通过单线逐个发送这些位。下图是字母 &lt;code&gt;C&lt;/code&gt; 的串行传输：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211109095718.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Analog Engineer’s Pocket Reference》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://news.eeworld.com.cn/qrs/ic470019.html&#34;&gt;一文了解 SPI 总线工作原理、优缺点和应用案例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhenhuizhang.tk/post/fpga13jie-kou-dian-ping-biao-zhun/&#34;&gt;[FPGA13][电路]接口电平标准&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E7%94%B5%E5%B9%B3/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E7%94%B5%E5%B9%B3/</guid>
      
    </item>
    
    <item>
      <title>BeagleBone 系列 - BBAI 入坑</title>
      
      
      
      
      <description>&lt;h2&gt;初始化&lt;/h2&gt;
&lt;p&gt;首先，连接 Cape 的 12V 电源输入，使用 USB 转串口模块，连接板载串口（J3 口才能用于调试）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211027164010.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;确保 USB 转串口模块有驱动（我用到是 FTDI 模块，驱动下载地址是 &lt;a href=&#34;https://ftdichip.com/drivers/vcp-drivers/&#34;&gt;https://ftdichip.com/drivers/vcp-drivers/&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;使用命令行工具连接串口（我用的是 MobaXterm），波特率设置为 115200。&lt;/p&gt;
&lt;h2&gt;安装补丁包&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
wget https://github.com/linyuxuanlin/File-host/blob/main/stash/k3-j721e-beagleboneai64.dtb?raw=true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;改名为 &lt;code&gt;k3-j721e-beagleboneai64.dtb&lt;/code&gt;，移至 &lt;code&gt;/boot&lt;/code&gt; 目录下并覆盖原文件。（我将文件传到 GitHub 仓库，使用 &lt;code&gt;wget&lt;/code&gt; 命令获取。可能需要修改 GitHub host 才能正常下载）&lt;/p&gt;
&lt;p&gt;也可以直接使用 sftp 传输文件。&lt;/p&gt;
&lt;h2&gt;evtest&lt;/h2&gt;
&lt;p&gt;event test 工具是打印 evdev 内核事件的工具，它直接从内核设备读取并打印设备描述的带有值和符号名的事件，可以用来调试鼠标、键盘、触摸板等输入设备。&lt;/p&gt;
&lt;p&gt;下载 evtest 工具：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt install evtest&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用工具：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo evtest /dev/input/eventｘ（ｘ就是时间编号）&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;按键&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
debian@BeagleBone:~$ evtest
No device specified, trying to scan all of /dev/input/event*
Available devices:
/dev/input/event0:      gpio-keys
Select the device event number [0-0]: 0
Input driver version is 1.0.1
Input device ID: bus 0x19 vendor 0x1 product 0x1 version 0x100
Input device name: &#34;gpio-keys&#34;
Supported events:
  Event type 0 (EV_SYN)
  Event type 1 (EV_KEY)
    Event code 256 (BTN_0)
    Event code 257 (BTN_1)
    Event code 258 (BTN_2)
Key repeat handling:
  Repeat type 20 (EV_REP)
    Repeat code 0 (REP_DELAY)
      Value    250
    Repeat code 1 (REP_PERIOD)
      Value     33
Properties:
Testing ... (interrupt to exit)
Event: time 1634868166.060258, type 1 (EV_KEY), code 257 (BTN_1), value 1
Event: time 1634868166.060258, -------------- SYN_REPORT ------------
Event: time 1634868166.284257, type 1 (EV_KEY), code 257 (BTN_1), value 0
Event: time 1634868166.284257, -------------- SYN_REPORT ------------&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;SPI 总线上设备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Barometer - BMP280&lt;/li&gt;
&lt;li&gt;6-DOF - LSM6DS3TR&lt;/li&gt;
&lt;li&gt;Compass - BMM150&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```shell
cd /sys/bus/iio/devices &amp;amp;&amp;amp; ls -l&lt;/p&gt;
&lt;p&gt;cat iio\:device0/name
cat iio\:device1/name
cat iio\:device2/name
cat iio\:device3/name
cat iio\:device4/name
cat iio\:device5/name
```&lt;/p&gt;
&lt;h2&gt;BeagleConnect 通信&lt;/h2&gt;
&lt;p&gt;```shell&lt;/p&gt;
&lt;h1&gt;BC_RST&lt;/h1&gt;
&lt;p&gt;cd /sys/class/gpio
echo 326 &amp;gt; export
echo out &amp;gt; gpio326/direction
echo 0 &amp;gt; gpio326/value
echo 1 &amp;gt; gpio326/value&lt;/p&gt;
&lt;h1&gt;Uart2&lt;/h1&gt;
&lt;p&gt;root@BeagleBone:/sys/class/tty# ls -l
lrwxrwxrwx 1 root root 0 Jul 13 17:29 ttyS4 -&amp;gt; ../../devices/platform/bus@100000/2820000.serial/tty/ttyS4&lt;/p&gt;
&lt;p&gt;sudo apt-get install minicom
sudo minicom -D /dev/ttyS4&lt;/p&gt;
&lt;p&gt;Welcome to minicom 2.8
OPTIONS: I18n
Port /dev/ttyS4, 10:57:41
Press CTRL-A Z for help on special keys&lt;/p&gt;
&lt;p&gt;hello
```&lt;/p&gt;
&lt;p&gt;测试不成功，未收发到数据。&lt;/p&gt;
&lt;h2&gt;LEDs&lt;/h2&gt;
&lt;p&gt;```shell
cd /sys/class/leds &amp;amp;&amp;amp; ls -l&lt;/p&gt;
&lt;p&gt;echo 255 &amp;gt; beaglebone:green:cape0/brightness
echo 255 &amp;gt; beaglebone:green:cape3/brightnessb&lt;/p&gt;
&lt;p&gt;echo 0 &amp;gt; beaglebone:green:cape1/brightness # 关不掉
```&lt;/p&gt;
&lt;h2&gt;激光雷达&lt;/h2&gt;
&lt;p&gt;如果提示没有权限，请见 &lt;a href=&#34;https://wiki-power.com/BeagleBone%E7%B3%BB%E5%88%97-%E5%9F%BA%E6%9C%AC%E5%8F%82%E6%95%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE#%E5%90%AF%E7%94%A8-ssh-%E7%9A%84-root-%E5%B8%90%E6%88%B7&#34;&gt;&lt;strong&gt;启用 ssh 的 root 帐户&lt;/strong&gt;&lt;/a&gt;，使用 root 权限执行。&lt;/p&gt;
&lt;p&gt;首先，操作 GPIO 使激光雷达转起来。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
cd /sys/class/gpio
echo 306 &amp;gt; export
echo 374 &amp;gt; export
echo out &amp;gt; gpio306/direction
echo out &amp;gt; gpio374/direction
echo 0 &amp;gt; gpio374/value
echo 1 &amp;gt; gpio306/value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;echo 1 &amp;gt; gpio374/value
echo 0 &amp;gt; gpio306/value&lt;/p&gt;
&lt;p&gt;确认接口：&lt;/p&gt;
&lt;p&gt;```shell
ls -l /sys/class/tty/&lt;/p&gt;
&lt;p&gt;lrwxrwxrwx 1 root root 0 Jul 13 17:29 ttyS0 -&amp;gt; ../../devices/platform/bus@100000/2880000.serial/tty/ttyS0
```&lt;/p&gt;
&lt;p&gt;下载最新的 SDK：&lt;a href=&#34;https://github.com/Slamtec/rplidar_sdk/releases&#34;&gt;https://github.com/Slamtec/rplidar_sdk/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;/sdk/sdk/src/hal/event.h&lt;/code&gt; 文件以正常编译：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
enum
     {
         EVENT_OK = 1,
-        EVENT_TIMEOUT = -1,
+        EVENT_TIMEOUT = 2,
         EVENT_FAILED = 0,
     };&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;切换到 &lt;code&gt;/sdk&lt;/code&gt; 目录下，使用 &lt;code&gt;make&lt;/code&gt; 命令编译，编译出来的文件在 &lt;code&gt;/sdk/output&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;p&gt;切换到 &lt;code&gt;/sdk/output/Linux/Release&lt;/code&gt; 目录下，使用以下命令跑测试例程：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
./ultra_simple /dev/ttyS0&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;file:///C:/Users/Power/Projects/Internship_at_Seeed/Projects/Robotics_Cape_Rev2/Reference/BeagleBone%20AI%20TDA4VM_SCH_V1.0_210805.pdf&#34;&gt;原理图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rcn-ee.net/rootfs/debian-arm64/&#34;&gt;镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/gary87m/notes_seeed/blob/master/BBAI_Robotics%20Cape.md&#34;&gt;测试代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.qq.com/sheet/DU1BBZnNORlJhRG5w&#34;&gt;Cape 问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Slamtec/rplidar_sdk&#34;&gt;激光雷达&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-BBAI%E5%85%A5%E5%9D%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-BBAI%E5%85%A5%E5%9D%91/</guid>
      
    </item>
    
    <item>
      <title>BeagleBone 系列 - 使用 BBIO 库开发</title>
      
      
      
      
      <description>&lt;h2&gt;安装 Adafruit-BBIO&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install build-essential python3-dev python3-pip -y
sudo pip3 install Adafruit_BBIO&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;基本程序框架&lt;/h2&gt;
&lt;p&gt;```py
import time
import Adafruit_BBIO.GPIO as GPIO&lt;/p&gt;
&lt;p&gt;RELAY = &#34;P9_22&#34;            # GPIO P9_22
GPIO.setup(RELAY, GPIO.OUT)&lt;/p&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GPIO.output(RELAY, GPIO.HIGH)
time.sleep(1)
GPIO.output(RELAY, GPIO.HIGH)
time.sleep(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;GPIO&lt;/h2&gt;
&lt;p&gt;调用库：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
import Adafruit_BBIO.GPIO as GPIO&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;设置引脚输入 / 输出&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;py
GPIO.setup(&#34;P8_14&#34;, GPIO.OUT)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;输入&lt;/code&gt; / &lt;code&gt;输出&lt;/code&gt; 可选 &lt;code&gt;GPIO.IN&lt;/code&gt;/&lt;code&gt;GPIO.OUT&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;设置输出高 / 低电平&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;py
GPIO.output(&#34;P8_14&#34;, GPIO.HIGH)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;高&lt;/code&gt; / &lt;code&gt;低&lt;/code&gt; 电平可选 &lt;code&gt;GPIO.HIGH&lt;/code&gt;/&lt;code&gt;GPIO.LOW&lt;/code&gt;，或 &lt;code&gt;1&lt;/code&gt;/&lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;引脚输入模式&lt;/h3&gt;
&lt;p&gt;查看输入端口的状态：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
if GPIO.input(&#34;P8_14&#34;):
  print(&#34;HIGH&#34;)
else:
  print(&#34;LOW&#34;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等待边沿输入，参数有 &lt;code&gt;GPIO.RISING&lt;/code&gt;/&lt;code&gt;GPIO.FALLING&lt;/code&gt;/&lt;code&gt;GPIO.BOTH&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```py
GPIO.wait_for_edge(channel, GPIO.RISING)&lt;/p&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;p&gt;GPIO.wait_for_edge(channel, GPIO.RISING, timeout)
```&lt;/p&gt;
&lt;h3&gt;监测输入&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;py
GPIO.add_event_detect(&#34;P9_12&#34;, GPIO.FALLING)
if GPIO.event_detected(&#34;P9_12&#34;):
    print &#34;event detected!&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;延时&lt;/h2&gt;
&lt;p&gt;延时 1 秒：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
import time
time.sleep(1)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;PWM 输出&lt;/h2&gt;
&lt;p&gt;```py
import Adafruit_BBIO.PWM as PWM&lt;/p&gt;
&lt;h1&gt;PWM.start(通道, 占空比, 默认频率=2000, 极性=0)&lt;/h1&gt;
&lt;p&gt;PWM.start(&#34;P9_14&#34;, 50)&lt;/p&gt;
&lt;h1&gt;也可以自己定义频率和极性&lt;/h1&gt;
&lt;p&gt;PWM.start(&#34;P9_14&#34;, 50, 1000, 1)
```&lt;/p&gt;
&lt;p&gt;其中，占空比的有效值为 0.0-100.0，start 函数用于激活该通道上的 PWM。&lt;/p&gt;
&lt;p&gt;当启动 PWM 之后，就可单独设置占空比或频率了：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
PWM.set_duty_cycle(&#34;P9_14&#34;, 25.5)
PWM.set_frequency(&#34;P9_14&#34;, 10)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用完之后，也可以停止 PWM 输出，或清除信息：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
PWM.stop(&#34;P9_14&#34;)
PWM.cleanup()&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;ADC 输入&lt;/h2&gt;
&lt;p&gt;在这个框架里面，ADC 有三个函数方法：setup，read 和 read_raw。在读取数据之前，要先 setup。&lt;/p&gt;
&lt;p&gt;在 BeagleBone 上，以下引脚可以使用 ADC：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&#34;AIN4&#34;, &#34;P9_33&#34;
&#34;AIN6&#34;, &#34;P9_35&#34;
&#34;AIN5&#34;, &#34;P9_36&#34;
&#34;AIN2&#34;, &#34;P9_37&#34;
&#34;AIN3&#34;, &#34;P9_38&#34;
&#34;AIN0&#34;, &#34;P9_39&#34;
&#34;AIN1&#34;, &#34;P9_40&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意：ADC 的最大电压为 1.8V，ADC 的地是 GNDA_ADC (P9_34) 引脚。如果需要检测 3.3V，可以用电阻分压，就像下图，把 0-3.3V 分到 0-1.65V 以读取模拟值。&lt;/p&gt;
&lt;h3&gt;初始化 ADC&lt;/h3&gt;
&lt;p&gt;```py
import Adafruit_BBIO.ADC as ADC&lt;/p&gt;
&lt;p&gt;ADC.setup()
```&lt;/p&gt;
&lt;h3&gt;读取模拟值&lt;/h3&gt;
&lt;p&gt;```py
value = ADC.read(&#34;P9_40&#34;)&lt;/p&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;p&gt;value = ADC.read(&#34;AIN1&#34;)
```&lt;/p&gt;
&lt;p&gt;这框架有个 bug，需要连续读两次，才能获取最新的的模拟值。&lt;/p&gt;
&lt;p&gt;读回来的结果是一个 0-1.0 之间的值，可以乘以 1.8 以转换成电压值。如果不想这么麻烦，也可以用 read_raw 来直接读出真实电压值。&lt;/p&gt;
&lt;h2&gt;I2C 通信&lt;/h2&gt;
&lt;p&gt;使用 I2C，只需要导入库，设置 I2C 地址，选择是哪个 I2C（默认是 I2C-1）。&lt;/p&gt;
&lt;p&gt;```py
from Adafruit_I2C import Adafruit_I2C&lt;/p&gt;
&lt;p&gt;i2c = Adafruit_I2C(0x77)
```&lt;/p&gt;
&lt;p&gt;I2C 功能需要安装 python 包 &lt;code&gt;python-smbus&lt;/code&gt;，但目前这个包只兼容 python 2 版本。我们可以用 &lt;a href=&#34;https://pypi.org/project/smbus2/&#34;&gt;&lt;strong&gt;smbus2&lt;/strong&gt;&lt;/a&gt; 替换使用。&lt;/p&gt;
&lt;h2&gt;SPI 通信&lt;/h2&gt;
&lt;p&gt;导入 SPI 库：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
from Adafruit_BBIO.SPI import SPI&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;其他&lt;/h2&gt;
&lt;p&gt;安装 Adafruit-BBIO 时，如果失败可选手动安装：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install build-essential python3-dev python3-pip -y
git clone git://github.com/adafruit/adafruit-beaglebone-io-python.git
cd adafruit-beaglebone-io-python
sudo python3 setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;升级 Adafruit-BBIO：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pip3 install --upgrade Adafruit_BBIO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为 python-smbus 这个依赖的原因，I2C 仅限在 python2 下使用。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.programcreek.com/python/example/92524/Adafruit_GPIO.I2C&#34;&gt;Python Adafruit_GPIO.I2C Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pypi.org/project/Adafruit-BBIO/#description&#34;&gt;Adafruit-BBIO 1.2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.adafruit.com/setting-up-io-python-library-on-beaglebone-black&#34;&gt;Setting up IO Python Library on BeagleBone Black&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-%E4%BD%BF%E7%94%A8BBIO%E5%BA%93%E5%BC%80%E5%8F%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-%E4%BD%BF%E7%94%A8BBIO%E5%BA%93%E5%BC%80%E5%8F%91/</guid>
      
    </item>
    
    <item>
      <title>BeagleBone 系列 - 基本参数与环境配置</title>
      
      
      
      
      <description>&lt;h2&gt;硬件资源&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211008090724.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;USB Type-A：作为 USB 从机（Host）模式使用&lt;/li&gt;
&lt;li&gt;USB Micro：为板子供电并且作为从机&lt;/li&gt;
&lt;li&gt;LEDs&lt;/li&gt;
&lt;li&gt;D2：在启动时以心跳灯闪烁&lt;/li&gt;
&lt;li&gt;D3：读写 SD 卡数据时亮起&lt;/li&gt;
&lt;li&gt;D4：当 CPU 活动时亮起&lt;/li&gt;
&lt;li&gt;D5：当 eMMC 读写时亮起&lt;/li&gt;
&lt;li&gt;Boot/User 按钮：不管按不按，如果有 SD 卡都会默认从 SD 卡启动（殊途同归），当启动后就作为一个普通按钮，连接到 GPIO_72&lt;/li&gt;
&lt;li&gt;I2C Grove 接口：连接到 I2C2&lt;/li&gt;
&lt;li&gt;Uart Grove 接口：连接到 UART2&lt;/li&gt;
&lt;li&gt;Serial Debug：连接到 UART0，靠近 USB 的引脚为 pin1，从 pin1-pin6 分别为：GND, NC, NC, RX, TX, NC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;环境配置&lt;/h2&gt;
&lt;h3&gt;驱动安装问题&lt;/h3&gt;
&lt;p&gt;在 Windows 10 及以上版本系统，默认采用驱动程序强制签名，这可能是驱动安装失败的原因。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按住 &lt;code&gt;shift&lt;/code&gt;，点击重启电脑&lt;/li&gt;
&lt;li&gt;进入 &lt;code&gt;疑难解答&lt;/code&gt; - &lt;code&gt;高级选项&lt;/code&gt; - &lt;code&gt;启动设置&lt;/code&gt;，点击 &lt;code&gt;重启&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启后，按页面提示，按键盘 &lt;code&gt;7&lt;/code&gt;，即可禁用驱动程序强制签名&lt;/li&gt;
&lt;li&gt;开机后，即可正常安装 BeagleBone 的驱动程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;镜像下载烧录&lt;/h3&gt;
&lt;p&gt;官网镜像下载地址：https://beagleboard.org/latest-images&lt;br&gt;
烧录工具：https://sourceforge.net/projects/win32diskimager/files/latest/download&lt;/p&gt;
&lt;p&gt;将镜像烧录进 SD 卡，断电插入 BeagleBone，下次上电就会从 SD 卡启动系统&lt;/p&gt;
&lt;h2&gt;使用命令行工具访问&lt;/h2&gt;
&lt;h3&gt;使用串口访问&lt;/h3&gt;
&lt;p&gt;使用 USB 转串口连接板载的串行端子，在电脑端打开串口工具（如 WindTerm）进行连接。（初始用户名和密码均为 &lt;code&gt;root&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;波特率是 115200！&lt;/p&gt;
&lt;h3&gt;使用以太网访问&lt;/h3&gt;
&lt;p&gt;在串口连接内使用命令 &lt;code&gt;ifconfig&lt;/code&gt; 找到以太网地址，通过地址连接。用户名为 &lt;code&gt;debian&lt;/code&gt;，密码为 &lt;code&gt;temppwd&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;通过 USB 访问&lt;/h3&gt;
&lt;p&gt;usb0：192.168.7.2&lt;br&gt;
usb1：192.168.6.2&lt;/p&gt;
&lt;p&gt;使用 SSH 方式访问，用户名为 &lt;code&gt;debian&lt;/code&gt;，密码为 &lt;code&gt;temppwd&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;启用 ssh 的 root 帐户&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
vi /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt;#PermitRootLogin prohibit-password&lt;/code&gt; 修改为 &lt;code&gt;PermitRootLogin yes&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2&gt;驱动 Seeed OLED（SSD1306，I2C，12864）&lt;/h2&gt;
&lt;p&gt;使用 pip3 下载 smbus2 包：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;py
sudo apt-get install python3-pip
pip3 install smbus2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;程序参考 &lt;a href=&#34;https://wiki.seeedstudio.com/Grove-OLED_Display_0.96inch/#play-with-beaglebone-green&#34;&gt;&lt;strong&gt;Grove - OLED Display 0.96 inch&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_32543253/article/details/53536266&#34;&gt;Beaglebone black 4G 调试中的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://beagleboard.org/p&#34;&gt;项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://beagleboard.org/upgrade#connect&#34;&gt;Upgrade the software on your Beagle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plm.seeedstudio.com.cn:9002/Windchill/app/#ptc1/tcomp/infoPage?oid=VR%3Awt.doc.WTDocument%3A30844361&amp;amp;u8=1&#34;&gt;测试固件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-%E5%9F%BA%E6%9C%AC%E5%8F%82%E6%95%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-%E5%9F%BA%E6%9C%AC%E5%8F%82%E6%95%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      
    </item>
    
    <item>
      <title>BeagleBone 系列 - 无线连接</title>
      
      
      
      
      <description>&lt;h2&gt;各版本 BeagleBone 的区别&lt;/h2&gt;
&lt;p&gt;| BeagleBone® Black | Seeed Studio BeagleBone® Green | Seeed Studio BeagleBone® Green Wireless       | Seeed Studio BeagleBone® Green Gateway                                 |
| ----------------- | ------------------------------ | --------------------------------------------- | ---------------------------------------------------------------------- |
| $ 60.00 USD       | $ 44.00 USD                    | $ 52.90 USD                                   | $ 78.90 USD                                                            |
| 1 x USB Host      | 1 x USB Host                   | 4 x USB2.0 Host                               | 2 x USB2.0 Host                                                        |
| Ethernet          | Ethernet 10/100M               | Wi-Fi 802.11b/g/n 2.4GHz and Bluetooth 4.1 LE | Ethernet 10/100M Bit and Wi-Fi 802.11b/g/n 2.4GHz and Bluetooth 4.1 LE |
| HDMI Port         | 2 x Grove Connectors           | 2 x Grove Connectors                          | 2 x Grove Connectors                                                   |&lt;/p&gt;
&lt;h2&gt;BeagleBone Green Gateway&lt;/h2&gt;
&lt;h3&gt;连接 Wi-Fi&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
debian@beaglebone:~$ connmanctl
connmanctl&amp;gt; scan wifi
Scan completed for wifi
connmanctl&amp;gt; services
    se.101               wifi_1862e41aec0d_73652e313031_managed_psk
    STU-EE               wifi_1862e41aec0d_5354552d4545_managed_psk
connmanctl&amp;gt; agent on
Agent registered
connmanctl&amp;gt; connect wifi_1862e41aec0d_5354552d4545_managed_psk
Agent RequestInput wifi_1862e41aec0d_5354552d4545_managed_psk
  Passphrase = [ Type=psk, Requirement=mandatory, Alternates=[ WPS ] ]
  WPS = [ Type=wpspin, Requirement=alternate ]
Passphrase? 输入密码
Connected wifi_1862e41aec0d_5354552d4545_managed_psk
connmanctl&amp;gt; quit&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;连接蓝牙&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt install bluez&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果有错误，就先更新一下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;连接附近的蓝牙：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
bb-wl18xx-bluetooth
bluetoothctl
scan on&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配对连接设备（后面一串是要配对设备的 MAC 地址）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pair A4:xx:xx:xx:xx:30
trust A4:xx:xx:xx:xx:30
connect A4:xx:xx:xx:xx:30&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可使用 &lt;code&gt;quit&lt;/code&gt; 推出蓝牙命令行。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.seeedstudio.com/BeagleBone-Green-Gateway/&#34;&gt;Seeed Studio BeagleBone® Green Gateway&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-%E6%97%A0%E7%BA%BF%E8%BF%9E%E6%8E%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/BeagleBone%E7%B3%BB%E5%88%97-%E6%97%A0%E7%BA%BF%E8%BF%9E%E6%8E%A5/</guid>
      
    </item>
    
    <item>
      <title>Jetson Nano系列 - 入坑</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit&#34;&gt;Jetson Nano 开发者套件入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;下载镜像并烧录 SD 卡&lt;/h2&gt;
&lt;p&gt;下载 &lt;a href=&#34;Jetson Nano 开发者套件 SD 卡镜像&#34;&gt;J&lt;strong&gt;etson Nano 开发者套件 SD 卡镜像&lt;/strong&gt;&lt;/a&gt;，使用 Etcher 之类的工具烧录进 SD 卡。&lt;/p&gt;
&lt;h2&gt;启动系统&lt;/h2&gt;
&lt;p&gt;Micro-USB 接入 5V，至少 2A 的电源。或者使用 DC 口接入 5V，至少 2A 的电源（需要用跳线短接 J48 端子）。&lt;/p&gt;
&lt;p&gt;如果启动不成功，则用 USB 转串口模块连接板载 DEBUG 端口，看串口打印的错误信息（波特率为 115200）。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/JetsonNano%E7%B3%BB%E5%88%97-%E5%85%A5%E5%9D%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/JetsonNano%E7%B3%BB%E5%88%97-%E5%85%A5%E5%9D%91/</guid>
      
    </item>
    
    <item>
      <title>Linux 学习笔记 - 基础知识</title>
      
      
      
      
      <description>&lt;h2&gt;连接远程主机&lt;/h2&gt;
&lt;p&gt;使用 ssh：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
ssh user@IP&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;根目录结构&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211009094302.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;| 目录        | 目录放置的内容                                                                                                                         |
| ----------- | -------------------------------------------------------------------------------------------------------------------------------------- |
| bin         | binary 二进制文件，存放系统命令，如 cat，cp，mkdir                                                                                     |
| boot        | 存放开机启动过程所需的内容，如开机管理程序 grub2                                                                                       |
| dev         | 所有设备文件的目录（如声卡、硬盘、光驱）                                                                                               |
| etc         | etcetera，存放系统的主要配置文件                                                                                                       |
| home        | 用户家目录数据的存放目录                                                                                                               |
| lib         | library，存放 sbin 和 bin 目录下命令所需的库文件，避免重复                                                                             |
| lib32/lib64 | 存放二进制函数库，支持 32/64 位                                                                                                        |
| lost+found  | 在 EXT3/4 系统中，当系统意外崩溃或意外关机时，会产生一些碎片文件在这个目录下面，系统启动 fcsk 工具会检查这个目录，并修复已损坏的文件。 |
| media       | 用于挂载光盘，软盘和 DVD 等设备                                                                                                        |
| mnt         | mount，同 media 作用一样，用于临时挂载存储设备                                                                                         |
| opt         | 第三方软件安装存放目录。                                                                                                               |
| proc        | 进程及内核信息存放目录，不占用硬盘空间。                                                                                               |
| root        | root 用户的家目录                                                                                                                      |
| run         | 是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。                                           |
| sbin        | system bin，存放 root 用户使用的命令，如格式化命令 mkfs                                                                                |
| srv         | 一些网络服务所需要的数据文件                                                                                                           |
| sys         | 同 proc 目录，用于记录 CPU 与系统硬件的相关信息                                                                                        |
| tmp         | 存放程序运行时产生的临时文件                                                                                                           |
| usr         | 系统存放程序的目录，类似于在 windows 下的文件夹 programefiles                                                                          |
| var         | 存放内容常变动的文件目录，如系统日志文件                                                                                               |&lt;/p&gt;
&lt;h2&gt;文件类型&lt;/h2&gt;
&lt;p&gt;在 Linux 下，一切皆文件。&lt;/p&gt;
&lt;p&gt;常见的文件拓展名如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;后缀.tar、.tar.gz、.tgz、.zip、.tar.bz 表示压缩文件，创建命令一般为 tar，gzip，zip 等。在压缩文件中的后缀名来通常表示自身由什么压缩格式打包的，以便解压时方便选择要使用的命令。&lt;/li&gt;
&lt;li&gt;.sh 表示 shell 脚本文件，通过 shell 语言开发的程序。&lt;/li&gt;
&lt;li&gt;.pl 表示 perl 语言文件，通过 perl 语言开发的程序。&lt;/li&gt;
&lt;li&gt;.py 表示 python 语言文件，通过 python 语言开发的程序。&lt;/li&gt;
&lt;li&gt;.html、.htm、.php、.jsp、.do 表示网页语言的文件。&lt;/li&gt;
&lt;li&gt;.conf 表示系统服务的配置文件。&lt;/li&gt;
&lt;li&gt;.rpm 表示 rpm 安装包文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文件主要有以下类型：&lt;/p&gt;
&lt;h3&gt;普通文件&lt;/h3&gt;
&lt;p&gt;文本文件，bin 文件等。&lt;/p&gt;
&lt;h3&gt;可执行文件&lt;/h3&gt;
&lt;p&gt;包括脚本和应用程序，这些文件可被系统加载运行，类似 Windows 下的 bat 脚本、exe 程序文件等。&lt;/p&gt;
&lt;h3&gt;链接文件&lt;/h3&gt;
&lt;p&gt;链接文件分为硬链接和软链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬链接是指同一个文件的不同别名。&lt;/li&gt;
&lt;li&gt;软链接类似于 Windows 的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;目录文件&lt;/h3&gt;
&lt;p&gt;在 Linux 下，目录也是文件。&lt;/p&gt;
&lt;h3&gt;设备文件&lt;/h3&gt;
&lt;p&gt;硬件设备也是文件，通过打开对应的设备文件可以初始化设备，部分设备还可以通过读写设备文件实现对硬件的控制。&lt;/p&gt;
&lt;h2&gt;用户与文件权限&lt;/h2&gt;
&lt;h3&gt;用户权限&lt;/h3&gt;
&lt;p&gt;Linux 是多用户操作系统，其中具有管理其他用户和计算机的全部资源的用户，称为 root 账户。在 Linux 中，每个用户都有一个特定的编号 —— UID，用于标识一个系统用户。root 账户的 UID 是标号 0。我们可以用命令 &lt;code&gt;id&lt;/code&gt; 以查看当前用户的 UID 值。一个用户可以归属于多个 GID（组），以获得不同的文件权限。&lt;/p&gt;
&lt;h3&gt;文件权限&lt;/h3&gt;
&lt;p&gt;Linux 的文件属性，分为读权限、写权限、执行权限（可以加载到内存中，并由操作系统加载程序执行的文件）。&lt;/p&gt;
&lt;p&gt;可以通过 &lt;code&gt;chmod&lt;/code&gt; 命令修改文件权限。&lt;/p&gt;
&lt;h2&gt;命令行&lt;/h2&gt;
&lt;h3&gt;终端提示符&lt;/h3&gt;
&lt;p&gt;当我们打开终端的时候，会出现一串提示符如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
power@Linuxbook:~$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这代表当前的用户是 &lt;code&gt;power&lt;/code&gt;，运行的主机名称是 &lt;code&gt;Linuxbook&lt;/code&gt;，&lt;code&gt;~&lt;/code&gt; 表示当前的目录是家目录（即 &lt;code&gt;/home/power&lt;/code&gt;），而 &lt;code&gt;$&lt;/code&gt; 为命令提示符，代表这是个普通用户，如果是超级用户则为 &lt;code&gt;#&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;命令&lt;/h3&gt;
&lt;p&gt;命令的基本格式（其中后两项代表非必须）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
command [-options] [argument]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可使用 &lt;code&gt;Tab&lt;/code&gt; 键进行自动补全，在命令行执行中可以用 &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt; 终止运行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;command：命令名，如 &lt;code&gt;cd&lt;/code&gt;、&lt;code&gt;ls&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;-options：命令的附加选项，如 &lt;code&gt;ls -l&lt;/code&gt;。命令会根据具体的选项执行不同的操作。&lt;/li&gt;
&lt;li&gt;argument：命令参数，比如 &lt;code&gt;cd /home&lt;/code&gt; 中，&lt;code&gt;/home&lt;/code&gt; 作为参数名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用的命令有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;：列出目录及文件名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;：显示隐藏文件（文件名前带 &lt;code&gt;.&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：将文件型态、权限、拥有者、文件大小等信息详细列出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;：将文件依建立时间之先后次序列出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;：同 &lt;code&gt;-a&lt;/code&gt;，但不列出 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;..&lt;/code&gt;（当前目录与父目录）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;：若目录下有文件，则该目录下的文件也会列出，即递归显示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;：切换目录&lt;/li&gt;
&lt;li&gt;特殊路径&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;：当前用户的 home 目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt;：根目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;：当前目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;..&lt;/code&gt;：上层目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;：切换上一次 &lt;code&gt;cd&lt;/code&gt; 的目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;：显示目前的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir&lt;/code&gt;：创建目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; 可创建不存在的目录下的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rmdir&lt;/code&gt;：删除一个空的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch&lt;/code&gt;：创建文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp&lt;/code&gt;：复制文件或目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm&lt;/code&gt;：移除文件或目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：将目录包含的子目录和文件全部删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：强制删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv&lt;/code&gt;：移动文件与目录，或修改文件与目录的名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat&lt;/code&gt;：查看文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo&lt;/code&gt;：将内容输出到终端&lt;/li&gt;
&lt;li&gt;输出重定向到文件：将命令执行结果保存到文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;命令 &amp;gt; 文件名&lt;/code&gt; ，如文件不存在则会创建，如重复则覆盖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;命令 &amp;gt;&amp;gt; 文件名&lt;/code&gt; ，如文件不存在则会创建，如重复则追加到末尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo&lt;/code&gt;：switch user do，在需要 root 权限的命令前添加 &lt;code&gt;sudo&lt;/code&gt;，从而使当前用户获得 root 权限， 并执行其后的命令。如果在普通用户下没权限执行失败，那么可以用 &lt;code&gt;sudo !!&lt;/code&gt; 重新加权执行上一条命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt;：清屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reboot&lt;/code&gt;/&lt;code&gt;poweroff&lt;/code&gt;：重启 / 关机&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;包管理&lt;/h2&gt;
&lt;p&gt;包管理简单来说就是使用命令来安装软件。在 Linux 操作系统中，最常见的两种包分别是 deb 和 rpm。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/linux/linux-tutorial.html&#34;&gt;Linux 教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.embedfire.com/linux/imx6/base/zh/latest/index.html&#34;&gt;[野火]i.MX Linux 开发实战指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>Linux 学习笔记 - 用户操作</title>
      
      
      
      
      <description>&lt;h2&gt;基本操作&lt;/h2&gt;
&lt;h3&gt;添加用户&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
useradd -m 用户名&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;设置密码&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
passwd 用户名&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;删除用户&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
userdel  -r  用户名&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;删除用户目录&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
rm -rf 用户名&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;切换当前用户&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
su 用户名&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/li_101357/article/details/69367457&#34;&gt;linux 创建用户、设置密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</guid>
      
    </item>
    
    <item>
      <title>嵌入式 Linux - GPIO 子系统</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.embedfire.com/linux/stm32mp1/linux_base/zh/latest/linux_app/gpio_subsystem/gpio_subsystem.html&#34;&gt;8. 控制蜂鸣器（GPIO 子系统）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;GPIO 子系统简介&lt;/h2&gt;
&lt;p&gt;GPIO（General Purpose I/O）即通用输入输出端口。这些引脚通常有多种功能，最基本的是高低电平输入检测和输出，部分引脚还会与主控器的片上外设绑定，可作为串口、I2C、网络、电压检测等的通信引脚。&lt;/p&gt;
&lt;p&gt;与 LED 子系统类似，Linux 提供了 GPIO 子系统驱动框架，使用该驱动框架将 CPU 的 GPIO 引脚导出到用户空间，我们通过访问 &lt;code&gt;/sys&lt;/code&gt; 文件系统进行控制。GPIO 子系统支持把引脚用于基本的输入输出功能，其中输入功能支持中断检测。（在 Linux 内核源码 &lt;code&gt;Documentation/gpio&lt;/code&gt; 目录可找到关于 GPIO 子系统更详细的说明）&lt;/p&gt;
&lt;h2&gt;GPIO 设备目录&lt;/h2&gt;
&lt;p&gt;GPIO 驱动子系统导出到用户空间的目录是 &lt;code&gt;/sys/class/gpio&lt;/code&gt;，使用如下的命令查看：&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux-GPIO%E5%AD%90%E7%B3%BB%E7%BB%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux-GPIO%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
      
    </item>
    
    <item>
      <title>嵌入式 Linux - 基础知识</title>
      
      
      
      
      <description>&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;查看 CPU 信息：&lt;code&gt;cat /proc/cpuinfo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看内核版本：&lt;code&gt;cat /proc/version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看内存使用情况：&lt;code&gt;cat /proc/meminfo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;也可以使用命令 &lt;code&gt;free&lt;/code&gt; 来简单了解内存使用情况&lt;/li&gt;
&lt;li&gt;查看 FLASH 存储器使用情况：&lt;code&gt;cat /proc/partitions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看任务进程：&lt;code&gt;top&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看支持的文件系统：&lt;code&gt;cat /proc/filesystems&lt;/code&gt;（nodev 表示不需要挂载块设备）&lt;/li&gt;
&lt;li&gt;查看 CPU 主频：&lt;code&gt;cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Linux 的驱动&lt;/h2&gt;
&lt;p&gt;Linux 上驱动的作用，就是把硬件设备与 Linux 文件建立了映射关系。&lt;/p&gt;
&lt;p&gt;比如，控制 LED 灯和按键时，我们不需要知道他们的具体硬件连接，只要知道哪个文件代表哪个设备，然后就可以通过文件以同样的方式操控同类设备了。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.embedfire.com/linux/imx6/base/zh/latest/index.html&#34;&gt;[野火]i.MX Linux 开发实战指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/LINUX/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>专业与分工</title>
      
      
      
      
      <description>&lt;p&gt;一个人不可能做所有事情；所以，把自己的事情做得专业，让专业的人帮你解决专业的事。&lt;br&gt;
对于个人而言，要大致全局了解，知道有这种方法就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E4%B8%93%E4%B8%9A%E4%B8%8E%E5%88%86%E5%B7%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E4%B8%93%E4%B8%9A%E4%B8%8E%E5%88%86%E5%B7%A5/</guid>
      
    </item>
    
    <item>
      <title>中台的概念</title>
      
      
      
      
      <description>&lt;h2&gt;什么是中台&lt;/h2&gt;
&lt;p&gt;我的理解：类似于面向对象的编程思想，也类似于 &lt;strong&gt;容器化&lt;/strong&gt; 。将 &lt;strong&gt;基础资源统一配置&lt;/strong&gt;（黑箱封装），留出 API 方便调用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大中台，小前台。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;强大的中台，能为各个小前台提供强有力的资源，使能够在基础支持之上快速开发。&lt;/p&gt;
&lt;h2&gt;中台的划分&lt;/h2&gt;
&lt;p&gt;万物皆可中台化。中台的具体划分有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;业务中台&lt;/strong&gt;：下沉各项目的共通业务&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;技术中台&lt;/strong&gt;：避免重复造轮子，提供底层框架、引擎、中间件等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据中台&lt;/strong&gt;：为各个项目进行各种数据采集和分析&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;算法中台&lt;/strong&gt;：为各个项目提供算法能力，比如推荐算法、搜索算法、图像识别、语音识别等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;适用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;从 0 到 1 阶段&lt;/strong&gt;：没必要搭建中台。首要任务是以最快速度打造出产品，证明市场价值，生存下去。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从 1 到 N 阶段&lt;/strong&gt;：适合搭建中台。此阶段产品已得到市场认可，此时首要任务不是活下去，而是活得更好。趁着项目复杂度还不高，可以考虑把各项目的通用部分下沉，组建中台，以方便后续新项目的尝试和旧项目的迭代。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从 N 到 N+1 的阶段&lt;/strong&gt;：势在必行。长痛不如短痛，为了长期的发展需求，还是需要尽早中台化，以免日后更难维护。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzA5MzUwOTY4NQ==&amp;amp;mid=2247485111&amp;amp;idx=1&amp;amp;sn=1b81776a787e10542b007f9875caa300&amp;amp;chksm=905d87eda72a0efb8300bf7e830eb09feb3e9a04093c581a3a6270a0c452ec1e48ae5537675a&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1570670452048&amp;amp;sharer_sh&#34;&gt;漫画：什么是中台？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E4%B8%AD%E5%8F%B0%E7%9A%84%E6%A6%82%E5%BF%B5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E4%B8%AD%E5%8F%B0%E7%9A%84%E6%A6%82%E5%BF%B5/</guid>
      
    </item>
    
    <item>
      <title>产品经理的日常</title>
      
      
      
      
      <description>&lt;h2&gt;一天的时间安排&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;最重要的事情就是确定今天要做什么。&lt;/strong&gt;对于产品经理来说，最重要的事情就是确定团队成员以及自己今天要做什么。不光要顾及自己的时间安排，还要分配相当的注意力与时间在团队成员的工作上。毕竟 &lt;strong&gt;产品经理的工作成果都要依托于他人来实现&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以我在上午到达公司以后，第一件事就是在 Todoist 上整理自己当天的日程，同时把需要其他人完成的事情分配到团队的协同工具中去；尽量在其它同事到达前完成整理。如果过程中有同事到达，我就会先停下手中的工作，&lt;strong&gt;先和这位同事确认他今天要做的事情；直到和所有我需要确定日程的同事沟通完为止。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;产品经理必须对其它成员的工作现状和计划了如指掌&lt;/strong&gt;。若非如此，有些认知是很难建立起来的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;产品从设计变为最终成品，具体经历了哪些阶段？&lt;/li&gt;
&lt;li&gt;哪些功能放在一起做，设计与开发会更省心？&lt;/li&gt;
&lt;li&gt;不同的功能在开发的时候分别耗费了多少时间？&lt;/li&gt;
&lt;li&gt;为什么频繁变更需求会给同事带去极大的困扰？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;MVP 原则&lt;/h2&gt;
&lt;p&gt;MVP 原则，即最小化可行产品原则，最早由《精益创业》的作者 Eric Ries 提出。指的是，当你想要构建一个产品的时候，先用尽量简单的方式实现它，在确保用户会买账的情况下，你再继续去完善它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E7%9A%84%E6%97%A5%E5%B8%B8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E7%9A%84%E6%97%A5%E5%B8%B8/</guid>
      
    </item>
    
    <item>
      <title>关于复盘</title>
      
      
      
      
      <description>&lt;p&gt;对棋结束之后，双方把决出胜负的局面再重复、回顾一遍。&lt;/p&gt;
&lt;h1&gt;重定义&lt;/h1&gt;
&lt;p&gt;不管进程是遇到问题，还是顺利完成，复盘回顾能增长经验，为未来的进程提供经验支持、也提升效率。&lt;/p&gt;
&lt;p&gt;表现在日常生活中，就是吃一堑长一智。踩过的坑要及时记录总结，以后的路才能越走越顺。就像指数型增长的函数图像。&lt;/p&gt;
&lt;p&gt;复盘中，当熟悉的局面出现在眼前的时候，你往往能够根据经验判断应该如何应对，在多个路口中选择相对合理的走。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E5%85%B3%E4%BA%8E%E5%A4%8D%E7%9B%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E5%85%B3%E4%BA%8E%E5%A4%8D%E7%9B%98/</guid>
      
    </item>
    
    <item>
      <title>如何撰写一份 BRD</title>
      
      
      
      
      <description>&lt;p&gt;—— 商业需求文档（BRD）写作指南&lt;/p&gt;
&lt;h2&gt;BRD 是什么&lt;/h2&gt;
&lt;p&gt;简而言之，BRD 将 ideas 系统化整理，一方面帮自己梳理项目方向，一方面用于展示给手握资源的人，以获取产品开发流程中所需的资源。&lt;/p&gt;
&lt;p&gt;产品开发流程中，立项是一个分水岭。立项前往往要进行大量的考察和调研，最后基于调研结果输出一个方案，这个方案就是 BRD.&lt;/p&gt;
&lt;h2&gt;BRD 怎么写&lt;/h2&gt;
&lt;h3&gt;1. 产品介绍&lt;/h3&gt;
&lt;p&gt;产品介绍，就是要简明扼要的说明你要做一个什么样的产品。说明要简短，最好一句话能讲明白（产品的作用，定位，愿景等）。可以分别从 &lt;strong&gt;用户&lt;/strong&gt; 与 &lt;strong&gt;专业人士&lt;/strong&gt; 的角度分析描述。&lt;/p&gt;
&lt;h3&gt;2. 产品价值&lt;/h3&gt;
&lt;p&gt;产品的价值，就是要告诉决策层为什么要做这个产品。可以从 &lt;strong&gt;用户需求&lt;/strong&gt; （满足了什么需求、解决了哪些痛点等）和 &lt;strong&gt;战略&lt;/strong&gt; （能为企业带来什么价值、获取市场利润、扩大市场份额等等）两个层面描述&lt;/p&gt;
&lt;h3&gt;3. 产品解决方案&lt;/h3&gt;
&lt;p&gt;产品解决方案，就是告诉决策者这个产品大概的框架和轮廓，主要包含以下几个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;产品形态&lt;/strong&gt;：这个产品架构大概是什么样的，是资讯形态的，社交形态的，搜索形态的，还是 O2O 的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;业务模式&lt;/strong&gt;：这个业务是 2C 的还是 2B 的，参与者都有谁，怎么形成闭环等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运营模式&lt;/strong&gt;：采用什么样的运营策略和手段让产品运营起来，如教育类产品中的教师资源，是招聘还是众包等等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;盈利模式&lt;/strong&gt;：通过什么方式来赚钱，例如广告，增值服务，出售商品等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4. 市场分析&lt;/h3&gt;
&lt;p&gt;做产品不能闭门造车，还要看看市场上的情况，主要包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;市场容量&lt;/strong&gt;：需要通过对需求的分析，对人群判断后评估得出。决策者会通过这个判断值不值得投入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;竞争对手分析&lt;/strong&gt;：看看市面市面上还有哪些竞品，他们是怎么解决的，满足了用户的哪些需求，还有哪些没有满足，投入怎么样，团队怎么样，产出怎么样，与我们对比我们的优势是什么，劣势是什么&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对市场未来的判断&lt;/strong&gt;：包括未来市场竞争格局，行业的风险，政策的变化，行业的发展方向等判断&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;市场机会&lt;/strong&gt;：怎么找到突破口，这个机会可以让我们发展成为一个什么样的地位&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;5. 执行计划&lt;/h3&gt;
&lt;p&gt;大致描述要怎么做这个产品：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;第一阶段&lt;/strong&gt;：用 MVP 验证用户需求，时间段从 xxx 到 xxx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第二阶段&lt;/strong&gt;：完善产品，扩大用户规模，时间段从 xxx 到 xxx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三、第四阶段等等&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;6. 财务预估&lt;/h3&gt;
&lt;p&gt;预估投入成本和产出收益，决策者最看重这部分。投入相对容易计算；收入可以根据盈利模式的参考值估算得出（像广告可以参考 CPC/CPA 等）&lt;/p&gt;
&lt;h3&gt;7. 风险预估&lt;/h3&gt;
&lt;p&gt;风险是指有可能影响产品目标实现，或增加产品成本的行为和因素，在考虑风险的时候，我们不仅要对所有可能出现的风险进行评估，确定风险出现的可能性和严重性，而且要给出对应的规避预案，并明确预案的规避效益。&lt;/p&gt;
&lt;h2&gt;注意事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BRD 并不只是简单写个文档，背后需要有很多准备工作要做&lt;/li&gt;
&lt;li&gt;在文档中少关注产品细节，多关注产品商业价值的部分&lt;/li&gt;
&lt;li&gt;注意逻辑严谨，尽量言简意赅&lt;/li&gt;
&lt;li&gt;在真实的基础上，尽量让内容偏向自己有利的一边引导&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.woshipm.com/pmd/645578.html&#34;&gt;不要找模板了，一篇文章告诉你商业需求文档（BRD）怎么写&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E5%A6%82%E4%BD%95%E6%92%B0%E5%86%99%E4%B8%80%E4%BB%BDBRD/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E5%A6%82%E4%BD%95%E6%92%B0%E5%86%99%E4%B8%80%E4%BB%BDBRD/</guid>
      
    </item>
    
    <item>
      <title>智能硬件产品经理的技术要求</title>
      
      
      
      
      <description>&lt;h2&gt;硬件知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;硬件设计&lt;/strong&gt;：基本的硬件设计知识（用软件实现硬件功能，costdown 永远是做硬件的主旋律）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ID/MD 设计&lt;/strong&gt;：颜值很大程度影响销量，而且外观也需要可以实现加工&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生产制造&lt;/strong&gt;：设计出来的东西一定要能生产出来，对生产流程要有大致了解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;软件知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;嵌入式软件&lt;/strong&gt;：固件功能要高效，而不要太复杂；APP 在线固件升级要尽早加上，且要能配强制升级&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;App&lt;/strong&gt;：APP 简单点，不要太复杂。注意要方便、引导用户升级，包括更新 APP/ 固件，才能实现快速迭代&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;业务后台&lt;/strong&gt;：也就是云服务。有各种模块和接口，能够支持前台 App 和 Rom 的各种功能与数据对接。小型项目建议使用第三方服务，不要挖坑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;管理后台&lt;/strong&gt;：包括 CMS/BOSS 系统、数据平台等。包括用户管理系统、设备管理系统、运营平台、数据统计与报表、BI 分析系统、大数据等等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生产管理软件&lt;/strong&gt;：为产品添加唯一 ID/MAC 地址等，需要生产管理系统里面怎么配合，PMC 怎么操作，是否需要数据同步到管理后台，需要在生产前准备好&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;第三方对接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HomeKit/ 米家 / 微信硬件等平台&lt;/strong&gt;：主流的硬件平台的对接文档要通读了解&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方账号体系&lt;/strong&gt;：如微信 /QQ 登录等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方分享&lt;/strong&gt;：如微信朋友圈 / 微博 /Twitter/FaceBook 等，智能硬件必做的事情&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方云服务&lt;/strong&gt;：如 AWS/Ayla/ 阿里云 / 机智云等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google Analytics/ 百度统计 / 友盟等&lt;/strong&gt;：尽量以数据驱动运营&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;市场 / 竞品分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多用各家的产品&lt;/strong&gt;：知己知彼&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注评价&lt;/strong&gt;：了解主流销售平台对自己产品和竞品的评价，了解应用商店对 App 的评价，媒体相关报道，多与同行交流&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/22448655/answer/35901439&#34;&gt;智能硬件产品经理需要哪些技术基础？Spencer 的回答&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A6%81%E6%B1%82/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A6%81%E6%B1%82/</guid>
      
    </item>
    
    <item>
      <title>画图基础</title>
      
      
      
      
      <description>&lt;h2&gt;大纲 &amp;amp; 思维导图&lt;/h2&gt;
&lt;p&gt;工具：&lt;a href=&#34;https://mubu.com/&#34;&gt;幕布&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;零散思维体系化的过程。&lt;/p&gt;
&lt;h2&gt;原型策划图&lt;/h2&gt;
&lt;p&gt;画原型图是产品经理的基本功，原则是简洁明了地突出页面的重点。绘制原型图的下一步是交付设计师，如果不能直接从页面上理解重点，将会花大量的时间口头沟通，难以达到预期效果。&lt;/p&gt;
&lt;h3&gt;关键原则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字体的使用&lt;/strong&gt;： 尽量使用无衬线字体，同时根据内容的重要程度呈现不同的大小和颜色，尽量不要使用纯黑色，一般依次使用 HEX 值是 333333，666666，999999，cccccc 的字体颜色就够了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作与内容分离&lt;/strong&gt;：显示内容的元素，与可以点按操作的元素，要有明显的区分。对于可点按操作的元素，应该使用系统级的标准控件样式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;布局有区分度&lt;/strong&gt;：以明显的间隔或适当的留白区分多个区域。总之，让人一眼能够辨认出元素属于哪个区域的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元素间对齐&lt;/strong&gt;：在元素的摆放上尽量做到左 / 右 / 居中对齐。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排版上重复&lt;/strong&gt;：在排版上，最好在不同区域之间，重复使用同一种设计语言，增加可预见性，降低理解的难度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;适当添加图标与现有素材&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;用例图&lt;/h2&gt;
&lt;p&gt;展示不同的用户角色，及描述相应的职能。这个系统中包含了哪些功能，分别是由谁来执行或使用的，都可以从图中清晰地看出来。&lt;/p&gt;
&lt;h2&gt;流程图&lt;/h2&gt;
&lt;p&gt;工具：Process On 等。&lt;/p&gt;
&lt;p&gt;一般圆角矩形代表开始/结束，菱形代表判断，矩形代表操作和步骤，大多数时候够用了。具体可参考 &lt;a href=&#34;http://www.sohu.com/a/236178167_505826&#34;&gt;这篇文章&lt;/a&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;泳道图&lt;/strong&gt;：展现角色和阶段。在实际运用中，大多数时候一条泳道代表着一种角色，从而描绘了角色之间的流程关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态转换图&lt;/strong&gt;：相比普通流程图，状态转换图更加关心每个流程的下一个状态，而不是流程何时结束。可以帮助研发更好地理解，哪些状态是终态，哪些状态是中间态，从而编写出逻辑更清晰的代码实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;模型关系图&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;接近数据库的设计，反应数据库关系。评估功能实现的复杂度。&lt;/p&gt;
&lt;h2&gt;框架图&lt;/h2&gt;
&lt;p&gt;从一个相当长期的视角，来从宏观上解构产品。产品框架图更关注如何从宏观上解决一个问题，而不去放大某个局部所需的功能特性。因此，它更多地是从回顾性的、前瞻性的、全局性的角度，去输出产品各个模块或系统之间的分布与关系。因此，产品构架图并不是必须的。往往，只有在规划整个产品的未来完整发展规划，或回顾性地整理某个系统的结构时，才需要准备。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E7%94%BB%E5%9B%BE%E5%9F%BA%E7%A1%80/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E7%94%BB%E5%9B%BE%E5%9F%BA%E7%A1%80/</guid>
      
    </item>
    
    <item>
      <title>软件开发中的注意事项</title>
      
      
      
      
      <description>&lt;p&gt;别给用户过多的选择，这样会让他们感到疲惫，并伤害他们内心的幸福感。&lt;br&gt;
永远只能存在少数选项，且不能是平级的，一定要有优先级权重。如果你同时提供过多的平级选项，那只会让用户感觉到，你分不清哪种更适合他们。&lt;/p&gt;
&lt;p&gt;针对群体，做具体的用户画像。竞选总统，你需要讨好大多数人；做产品，只需要取悦少数人就够了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/PM/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      
    </item>
    
    <item>
      <title>Bash 基础</title>
      
      
      
      
      <description>&lt;p&gt;—— 本篇整理记录 Bash 学习要点。&lt;/p&gt;
&lt;p&gt;查看当前 Shell：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
echo $SHELL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看当前的 Linux 系统安装的所有 Shell：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
cat /etc/shells&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;段落内容。&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Bash%E5%9F%BA%E7%A1%80/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Bash%E5%9F%BA%E7%A1%80/</guid>
      
    </item>
    
    <item>
      <title>Docker 方法部署 code-server</title>
      
      
      
      
      <description>&lt;h2&gt;准备&lt;/h2&gt;
&lt;p&gt;本方法需要使用 Docker. 其安装部署请参照：&lt;a href=&#34;https://wiki-power.com/Docker%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97&#34;&gt;&lt;strong&gt;Docker 简易指南&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;使用 Docker Compose 方式（推荐）&lt;/h2&gt;
&lt;p&gt;如果不熟悉 Docker Compose, 请详细阅读 &lt;a href=&#34;https://wiki-power.com/DockerCompose-%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F&#34;&gt;&lt;strong&gt;Docker Compose - 更优雅的打开方式&lt;/strong&gt;&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h2&gt;```yaml&lt;/h2&gt;
&lt;p&gt;version: &#34;2.1&#34;
services:
  code-server:
    image: ghcr.io/linuxserver/code-server
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - PASSWORD=password #optional
      - SUDO_PASSWORD=password #optional
      - SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=code-server.my.domain #optional
    volumes:
      - /path/to/appdata/config:/config
    ports:
      - 8443:8443
    restart: unless-stopped
```&lt;/p&gt;
&lt;h2&gt;使用 Docker Cli 方式&lt;/h2&gt;
&lt;h2&gt;部署&lt;/h2&gt;
&lt;p&gt;一行命令部署：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker run -d --name=[容器名] -e PASSWORD=[密码] -e SUDO_PASSWORD=[root密码] -p [外部端口]:8443 --restart unless-stopped ghcr.io/linuxserver/code-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数详情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--name&lt;/code&gt;：给容器取个名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e PASSWORD&lt;/code&gt;：访问密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e SUDO_PASSWORD&lt;/code&gt;：root 密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：端口设置，如果外部端口设置为 80, 可通过服务器 IP 访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker run -d --name=VSConline -e PASSWORD=123 -e SUDO_PASSWORD=123 -p 8443:8443 --restart unless-stopped ghcr.io/linuxserver/code-server&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Git 配置&lt;/h2&gt;
&lt;p&gt;请参照 &lt;a href=&#34;https://wiki-power.com/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0#%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;Git 学习笔记&lt;/strong&gt;&lt;/a&gt; 中对 Git 的用户名和邮箱配置。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;linuxserver/code-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Docker%E6%96%B9%E6%B3%95%E9%83%A8%E7%BD%B2code-server/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Docker%E6%96%B9%E6%B3%95%E9%83%A8%E7%BD%B2code-server/</guid>
      
    </item>
    
    <item>
      <title>Excel批量激活链接并转为图片</title>
      
      
      
      
      <description>&lt;h2&gt;下载 KuTool 插件&lt;/h2&gt;
&lt;p&gt;点击 &lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/Kutools/KutoolsforExcelSetup21.00.exe&#34;&gt;&lt;strong&gt;此链接&lt;/strong&gt;&lt;/a&gt; 下载 KuTool 插件，安装之后下载 &lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/Kutools/KutoolsforExcel21.00%20%E4%B8%80%E9%94%AE%E7%A0%B4%E8%A7%A3%E8%A1%A5%E4%B8%81.exe&#34;&gt;&lt;strong&gt;破解补丁&lt;/strong&gt;&lt;/a&gt; 并拷贝到软件安装目录，用管理员身份打开软件，完成破解。&lt;/p&gt;
&lt;h2&gt;合并表&lt;/h2&gt;
&lt;h2&gt;将&lt;code&gt;拒绝&lt;/code&gt;的行删除&lt;/h2&gt;
&lt;p&gt;排序-升序，选中&lt;code&gt;拒绝&lt;/code&gt;的行，&lt;code&gt;删除行&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;在 Excel 内将链接转化为图片&lt;/h2&gt;
&lt;p&gt;选择链接列，选择 &lt;code&gt;KuTool&lt;/code&gt;，&lt;code&gt;插入&lt;/code&gt; - &lt;code&gt;从路径（网址）插入图片&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;收货导出单的操作&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;关联代付单&lt;/code&gt; 后插入一个空列，&lt;/p&gt;
&lt;h2&gt;注&lt;/h2&gt;
&lt;p&gt;如破解到期了请重新破解。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Excel%E6%89%B9%E9%87%8F%E6%BF%80%E6%B4%BB%E9%93%BE%E6%8E%A5%E5%B9%B6%E8%BD%AC%E4%B8%BA%E5%9B%BE%E7%89%87/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Excel%E6%89%B9%E9%87%8F%E6%BF%80%E6%B4%BB%E9%93%BE%E6%8E%A5%E5%B9%B6%E8%BD%AC%E4%B8%BA%E5%9B%BE%E7%89%87/</guid>
      
    </item>
    
    <item>
      <title>LoRa 物联网通信技术</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;LoRa 的名字取自 Long Range 缩写，代表远距离通信的技术。&lt;/p&gt;
&lt;p&gt;多家公司组建 LoRa 联盟，以撬动市场。到今天，LoRa 已发展为一种开放的标准（即不属于一家公司所有，谁都可以根据规范进行开发和部署）。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;超低功耗&lt;/li&gt;
&lt;li&gt;超远距离&lt;/li&gt;
&lt;li&gt;网络架构架设便利&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Seeed 的 LoRa 产品&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SenseCAP&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/LoRa%E7%89%A9%E8%81%94%E7%BD%91%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/LoRa%E7%89%A9%E8%81%94%E7%BD%91%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</guid>
      
    </item>
    
    <item>
      <title>Python 学习笔记</title>
      
      
      
      
      <description>&lt;h2&gt;环境配置&lt;/h2&gt;
&lt;p&gt;我们首先需要配置以下环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python：&lt;a href=&#34;https://www.python.org/&#34;&gt;https://www.python.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VS Code：&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python extension：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-python.python&#34;&gt;https://marketplace.visualstudio.com/items?itemName=ms-python.python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/learn/modules/intro-to-python/&#34;&gt;Introduction to Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;基础语法&lt;/h2&gt;
&lt;h3&gt;Print&lt;/h3&gt;
&lt;p&gt;基本语法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(&#39;Hello World&#39;)
print(&#34;Hello World&#34;)
print(&#39;Hello&#39; + &#39;World&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;让用户输入信息：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
name = input(&#39;Please enter your name: &#39;)
print(name)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打印空白行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print() # 空白行
print(&#39;NaNaNa\n&#39;) # 换行符&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1&gt;这是一行注释&lt;/h1&gt;
&lt;h1&gt;注释不会作为代码运行&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3&gt;Strings&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python
name = &#39;power&#39;
print(&#39;Hello&#39; + name)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;格式化：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
output = &#39;Hello, &#39; + first_name + &#39;&#39; + last_name
output = &#39;Hello, {} {}&#39;.format(first_name, last_name)
output = &#39;Hello, {0} {1}&#39;.format(first_name, last_name)
output = f&#39;Hello, {first_name} {last_name}&#39;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Numbers&lt;/h3&gt;
&lt;p&gt;类型转换&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
days_in_feb = 30
print(str(days_in_feb) + &#39; days in February&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>RM 校内赛 - 前期策划</title>
      
      
      
      
      <description>&lt;p&gt;—— 大疆 Robomaster 校内赛的前期准备。&lt;/p&gt;
&lt;h2&gt;计划比赛时间&lt;/h2&gt;
&lt;p&gt;2020 年第一学期的中后期，考试周前半个月左右，决赛与科技节同时举办。&lt;/p&gt;
&lt;h2&gt;面向对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大一学生&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;优势：空闲时间较多，积极性较强，对荣誉比较看重&lt;/li&gt;
&lt;li&gt;劣势：基础比较薄弱&lt;/li&gt;
&lt;li&gt;方法：通过开展前期基础，使能够达到比赛水平&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大二学生&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;优势：有部分基础，有项目经历，能较快上手比赛&lt;/li&gt;
&lt;li&gt;劣势：自己的项目占用时间，受社团组织约束，积极性相对弱&lt;/li&gt;
&lt;li&gt;方法：比赛时间尽量不冲突（RM/RC/Freescale/ 电赛等大多集中于第二学期末 &amp;amp; 暑假），允许以社团的名义参赛&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;策划时间线&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/RM%E6%A0%A1%E5%86%85%E8%B5%9B-%E5%89%8D%E6%9C%9F%E7%AD%96%E5%88%92/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/RM%E6%A0%A1%E5%86%85%E8%B5%9B-%E5%89%8D%E6%9C%9F%E7%AD%96%E5%88%92/</guid>
      
    </item>
    
    <item>
      <title>STM32 麦轮小车</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;野狼队在寒假准备来一场校内赛，把大一新生分了几个队，分别做自己的小车，最终会有类似踢足球的比赛。为了能有良好的操控性和灵活度，我打算给小车直接上麦轮。&lt;/p&gt;
&lt;h2&gt;STM32 基础&lt;/h2&gt;
&lt;p&gt;模块知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外部中断&lt;/li&gt;
&lt;li&gt;串口&lt;/li&gt;
&lt;li&gt;SysTick 定时器&lt;/li&gt;
&lt;li&gt;TIM 高级定时器&lt;/li&gt;
&lt;li&gt;驱动舵机&lt;/li&gt;
&lt;li&gt;驱动电机，实现调速&lt;/li&gt;
&lt;li&gt;编码器&lt;/li&gt;
&lt;li&gt;遥控（PS2）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;运动学原理&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/麦轮。png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/麦轮角度。png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是我自己推导出来的麦轮算法，翻译成代码是这样的：&lt;/p&gt;
&lt;p&gt;```c
void M_process(s16 x,s16 y) { //传入左摇杆 L(x,y) 坐标
    const double Pi = 3.14159265359;
    u16 Vm=7200,r=127; //定义最大速度和坐标圆的半径
    s16 V1,V2,V3,V4,angle; //定义四电机速度，直线 OL 与 x 轴所成角度
    s16 new_x,new_y; //定义中间变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//纠正算法，如果 L 坐标超出了坐标圆，那么取在坐标圆上的点。联立圆和正比例函数的方程
if(pow(x,2)+pow(y,2)&amp;gt;pow(r,2)) {
    new_x=sqrt((pow(x,2)*pow(r,2))/(pow(x,2)+pow(y,2)));
    new_y=sqrt((pow(y,2)*pow(r,2))/(pow(x,2)+pow(y,2)));
    if(x&amp;gt;0) x=new_x ; else x=-new_x;
    if(y&amp;gt;0) y=new_y ; else y=-new_y;
}

Vm=(sqrt(pow(x,2)+pow(y,2))/r)*Vm; //按 OL 长度比例取速度
angle=atan(abs(y)/abs(x))*(180/Pi); //计算直线 OL 与 x 轴所成角度
if(x==0&amp;amp;&amp;amp;y==0) { //原点
    V1=0; V2=0; V3=0; V4=0;
}
if(y==0) { //x 轴上
    if(x&amp;gt;0){
        V1=Vm; V2=-Vm; V3=-Vm; V4=Vm;
    }else{
        V1=-Vm; V2=Vm; V3=Vm; V4=-Vm;
    }
}
if(x==0) { //y 轴上
    if(y&amp;gt;0) {
        V1=Vm; V2=Vm; V3=Vm; V4=Vm;
    }else{
        V1=-Vm; V2=-Vm; V3=-Vm; V4=-Vm;
    }
}
if(x&amp;gt;0&amp;amp;&amp;amp;y&amp;gt;0) { //第一象限
    V1=Vm;
    V2=(Vm/45)*angle-Vm;
    V3=(Vm/45)*angle-Vm;
    V4=Vm;
}
if(x&amp;lt;0&amp;amp;&amp;amp;y&amp;gt;0) { //第二象限
    V1=(Vm/45)*angle-Vm;
    V2=Vm;
    V3=Vm;
    V4=(Vm/45)*angle-Vm;
}
if(x&amp;lt;0&amp;amp;&amp;amp;y&amp;lt;0) { //第三象限
    V1=-Vm;
    V2=-(Vm/45)*angle+Vm;
    V3=-(Vm/45)*angle+Vm;
    V4=-Vm;
}
if(x&amp;gt;0&amp;amp;&amp;amp;y&amp;lt;0) { //第四象限
    V1=-(Vm/45)*angle+Vm;
    V2=-Vm;
    V3=-Vm;
    V4=-(Vm/45)*angle+Vm;
}

//驱动电机
M1_run(V1);
M2_run(V2);
M3_run(V3);
M4_run(V4);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
```&lt;/p&gt;
&lt;p&gt;代码不算精简。因 PS2 手柄还没送到，所以暂时只有左摇杆的算法（任意方向移动），待测试后再加上右摇杆（自转）。就先这样吧。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/小车预览%20.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;待补充。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;待补充。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.instructables.com/id/Mecanum-wheel-robot-bluetooth-controlled/&#34;&gt;Mecanum Wheel Robot - Bluetooth Controlled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://image.hanspub.org/Html/11-1540843_22169.htm&#34;&gt;Design of Omnidirectional Mobile Platform Control System Based on STM32 CAN Bus Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/STM32%E9%BA%A6%E8%BD%AE%E5%B0%8F%E8%BD%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/STM32%E9%BA%A6%E8%BD%AE%E5%B0%8F%E8%BD%A6/</guid>
      
    </item>
    
    <item>
      <title>Nps</title>
      
      
      
      
      <description>&lt;p&gt;A lightweight, high-performance, powerful intranet penetration proxy server, with a powerful web management terminal.&lt;/p&gt;
&lt;h3&gt;服务端 nps&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;下载 &lt;a href=&#34;https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/ehang-io/nps/tree/master/conf&#34;&gt;&lt;strong&gt;conf 文件夹&lt;/strong&gt;&lt;/a&gt; 并解压上传。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  nps_server:
    image: ffdfgdfg/nps
    restart: always
    network_mode: &#34;host&#34;
    volumes:
      - ${DIR}/conf:/conf&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;客户端 npc&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  web_server:
    image: nginx
    container_name: web_server
    expose:
      - &#34;80&#34;
      - &#34;443&#34;
  nps_client:
    image: geektr/nps
    environment:
      - NPS_SERVER=aika.geektr.co:8024
      - NPS_VKEY=xxxxxxxxxxxxxxxx
    restart: always&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;docker run -d --name npc --net=host ffdfgdfg/npc -server=nginx.wiki-power.com:4000 -vkey=z2begrxvhk35cmni&lt;/p&gt;
&lt;hr&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/nps/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/nps/</guid>
      
    </item>
    
    <item>
      <title>从零搭建视觉开发环境（Docker-Linux）</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000016364279&#34;&gt;在 Docker 的 Linux 容器搭建前端开发环境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;结语&lt;/h2&gt;
&lt;p&gt;为什么选择在 Docker 上跑 Linux？&lt;br&gt;
相比双系统、远程服务器、虚拟机等食用 Linux 的方法，Docker 上用 Linux 不仅方便，而且玩坏了重装步骤简单。再者，我们可以封装统一的镜像&lt;/p&gt;
&lt;h2&gt;软件安装&lt;/h2&gt;
&lt;p&gt;在 Windows 系统下，直接点击 &lt;a href=&#34;https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe&#34;&gt;&lt;strong&gt;此链接&lt;/strong&gt;&lt;/a&gt; 下载 Docker Desktop 软件（其他系统的下载安装方法请见 &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;&lt;strong&gt;Install Docker Engine&lt;/strong&gt;&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;待其自动安装完成后，
\&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E8%A7%86%E8%A7%89%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%88Docker-Linux%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E8%A7%86%E8%A7%89%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%88Docker-Linux%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>华广爬楼指北</title>
      
      
      
      
      <description>&lt;blockquote&gt;
&lt;p&gt;没有什么能够阻挡，你对自由的向往。 ——《蓝莲花》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;天台详情&lt;/h2&gt;
&lt;p&gt;|   建筑名称   | 是否有锁 | 是否有监控 |                 入口                 |   备注   |
| :----------: | :------: | :--------: | :----------------------------------: | :------: |
|    A1-A4     |    有    |     无     |             每栋楼的楼梯             | 楼顶互通 |
|   A5/B1-B5   |    有    |     无     | 靠 B5 侧的楼梯 / B2 楼梯 / B3 材料室 | 楼顶互通 |
|    A6-A10    |  部分有  |   部分有   |             每栋楼的楼梯             |          |
|    B6-B8     |    无    |     无     |               B8 楼梯                |          |
|      B9      |    无    |     无     |               B9 楼梯                |          |
| 学生活动中心 |    有    |     无     |                消防梯                |          |
|    图书馆    |    ？    |     ？     |                消防梯                |          |
|    行政楼    |    无    |     无     |                消防梯                |          |
|    C1-C4     |    有    |     有     |             楼梯             |          |
|      C5      |    无    | 有（可避） |             楼梯             |          |
|      C14      |    有    | 有 |             楼梯             |          |
|   待更新……   |          |            |                                      |          |&lt;/p&gt;
&lt;h2&gt;景色&lt;/h2&gt;
&lt;h3&gt;行政楼&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212828.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212950.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;B5/A1-A4&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212913.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210715143321.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210715143543.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;B9&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212437.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;B6-B8&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212548.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;学生活动中心&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212729.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;体育馆&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212844.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212751.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;A6&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212934.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212629.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212810.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200202212652.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;C14&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210715143523.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%8D%8E%E5%B9%BF%E7%88%AC%E6%A5%BC%E6%8C%87%E5%8C%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%8D%8E%E5%B9%BF%E7%88%AC%E6%A5%BC%E6%8C%87%E5%8C%97/</guid>
      
    </item>
    
    <item>
      <title>命令行基本操作</title>
      
      
      
      
      <description>&lt;h2&gt;zsh &amp;amp; bash 切换&lt;/h2&gt;
&lt;p&gt;切换至 &lt;code&gt;bash&lt;/code&gt;： &lt;code&gt;chsh -s /bin/bash&lt;/code&gt;&lt;br&gt;
切换至 &lt;code&gt;zsh&lt;/code&gt;： &lt;code&gt;chsh -s /bin/zsh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      
    </item>
    
    <item>
      <title>团队公开知识库的搭建</title>
      
      
      
      
      <description>&lt;h2&gt;特点&lt;/h2&gt;
&lt;p&gt;全外链，分布式储存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规避了网站数据丢失的风险&lt;/li&gt;
&lt;li&gt;每个人在自己的个人网站上撰写文章，增强了写作意愿&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【施工中】&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%9B%A2%E9%98%9F%E5%85%AC%E5%BC%80%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%9B%A2%E9%98%9F%E5%85%AC%E5%BC%80%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA/</guid>
      
    </item>
    
    <item>
      <title>小车游华广 - 比赛</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;最近参加了学校的寻迹小车比赛，并拿走了第二名的奖项。这里将资料归档一下。&lt;/p&gt;
&lt;h2&gt;源码&lt;/h2&gt;
&lt;p&gt;```cpp
//by Power Lin @ wiki-power.com
//12:52&lt;/p&gt;
&lt;h1&gt;include &lt;AFMotor.h&gt; //L293D 驱动库&lt;/h1&gt;
&lt;p&gt;int max = 250; //速度快
int mid = 0; //速度中
int min = -80; //速度慢
int vertical_delay = 250; //左右转 90 °的延时，待调试校正&lt;/p&gt;
&lt;h1&gt;define S1 Sx_state[0]&lt;/h1&gt;
&lt;h1&gt;define S2 Sx_state[1]&lt;/h1&gt;
&lt;h1&gt;define S3 Sx_state[2]&lt;/h1&gt;
&lt;h1&gt;define S4 Sx_state[3]&lt;/h1&gt;
&lt;h1&gt;define S5 Sx_state[4]&lt;/h1&gt;
&lt;p&gt;AF_DCMotor M1(1); //定义电机对象，命名为 M1，接于 1 号端口
AF_DCMotor M2(4);
AF_DCMotor M3(2);
AF_DCMotor M4(3);&lt;/p&gt;
&lt;p&gt;//function: 红外光电循迹&lt;/p&gt;
&lt;h1&gt;define S1_pin 22&lt;/h1&gt;
&lt;h1&gt;define S2_pin 24&lt;/h1&gt;
&lt;h1&gt;define S3_pin 26&lt;/h1&gt;
&lt;h1&gt;define S4_pin 28&lt;/h1&gt;
&lt;h1&gt;define S5_pin 30&lt;/h1&gt;
&lt;h1&gt;define CLP_pin 32 //微动开关&lt;/h1&gt;
&lt;h1&gt;define Near_pin 34 //红外壁障&lt;/h1&gt;
&lt;p&gt;int Sx_state[5] = {0, 0, 0, 0, 0}; //5 个红外光电的状态
int CLP_state = 0; //微动开关状态
int CLP_count = 0; //微动开关状态计数
int Near_state = 0; //红外壁障的状态
int error_state = 0; //偏移状态
int decide_state = 0; //交叉路口选择状态
int vertical_state = 0; //直角转弯的状态
int vertical_state_left = 0; //直角转弯的状态
int stop_state = 0; //停下状态&lt;/p&gt;
&lt;p&gt;void car_stop() { //停止
  M1.run(RELEASE);
  M2.run(RELEASE);
  M3.run(RELEASE);
  M4.run(RELEASE);
}
void car_forward() { //前进
  motor_run(max, max, max, max);
}
void car_backward() { //后退
  motor_run(-max, -max, -max, -max);
}
void car_left_light() { //小左转
  motor_run(mid, max, mid, max);
}
void car_left_heavy() { //大左转
  motor_run(min, max, min, max);
}
void car_right_light() { //小右转
  motor_run(max, mid, max, mid);
}
void car_right_heavy() { //大右转
  motor_run(max, min, max, min);
}
void car_left_vertical() { //左转 90°
  motor_run(-max, max, -max, max);
  delay(vertical_delay);
}
void car_right_vertical() { //右转 90°
  motor_run(max, -max, max, -max);
  delay(vertical_delay);
}&lt;/p&gt;
&lt;p&gt;void motor_run(int m1, int m2, int m3, int m4) { //设置速度
  M1.setSpeed(m1);
  M2.setSpeed(m2);
  M3.setSpeed(m3);
  M4.setSpeed(m4);
  if (m1 &amp;gt; 0) M1.run(FORWARD);
  else M1.run(BACKWARD);
  if (m2 &amp;gt; 0) M2.run(FORWARD);
  else M2.run(BACKWARD);
  if (m3 &amp;gt; 0) M3.run(FORWARD);
  else M3.run(BACKWARD);
  if (m4 &amp;gt; 0) M4.run(FORWARD);
  else M4.run(BACKWARD);
}&lt;/p&gt;
&lt;p&gt;void setup() {
  //循迹初始化
  pinMode(S1_pin, INPUT);
  pinMode(S2_pin, INPUT);
  pinMode(S3_pin, INPUT);
  pinMode(S4_pin, INPUT);
  pinMode(S5_pin, INPUT);
  pinMode(CLP_pin, INPUT);
  pinMode(Near_pin, INPUT);&lt;/p&gt;
&lt;p&gt;//蓝牙初始化
  Serial.begin(9600);
  Serial.println(&#34;hello world&#34;);
  car_stop(); //初始化先关闭电机
}&lt;/p&gt;
&lt;p&gt;void loop() {
  //循迹检测
  Sx_state[0] = digitalRead(S1_pin);
  Sx_state[1] = digitalRead(S2_pin);
  Sx_state[2] = digitalRead(S3_pin);
  Sx_state[3] = digitalRead(S4_pin);
  Sx_state[4] = digitalRead(S5_pin);
  CLP_state = digitalRead(CLP_pin);
  Near_state = digitalRead(Near_pin);
  for (int i = 0; i &amp;lt;= 4; i++ ) {
    if (Sx_state[i] == 0) {
      Sx_state[i] = 1;
    } else {
      Sx_state[i] = 0;
    }
  }
  car_control(); //运动算法
  //  Serial.println(CLP_count);
}&lt;/p&gt;
&lt;p&gt;//小车运动算法
void car_control() {
  if (CLP_state == 1 ) {
    CLP_count++; //微动开关计数自加一
    if (CLP_count &amp;gt;= 1) { //撞到挡板往回走
      Serial.println(&#34;State 1&#34;);
      car_stop(); // 歇一歇
      delay(500);
      car_backward(); //后退
      delay(300);
      car_left_heavy(); //转弯
      delay(950);
    }
  }
  else {
    if (S1 == 0 &amp;amp;&amp;amp; S2 == 0 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 0  &amp;amp;&amp;amp; S5 == 0)
      error_state = 0; // 无偏移
    if (S1 == 0 &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 0 &amp;amp;&amp;amp; S4 == 0  &amp;amp;&amp;amp; S5 == 0)
      error_state = -1;
    if (S1 == 0 &amp;amp;&amp;amp; S2 == 0 &amp;amp;&amp;amp; S3 == 0 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 0)
      error_state = 1;
    if (S1 == 1 &amp;amp;&amp;amp; S2 == 0 &amp;amp;&amp;amp; S3 == 0 &amp;amp;&amp;amp; S4 == 0  &amp;amp;&amp;amp; S5 == 0)
      error_state = -2;
    if (S1 == 0 &amp;amp;&amp;amp; S2 == 0 &amp;amp;&amp;amp; S3 == 0 &amp;amp;&amp;amp; S4 == 0  &amp;amp;&amp;amp; S5 == 1)
      error_state = 2;
    if (S1 == 1 &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 0  &amp;amp;&amp;amp; S5 == 1)
      error_state = -3;
    if (S1 == 0 &amp;amp;&amp;amp; S2 == 0 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 1) {
      /&lt;em&gt;vertical_state++;
        if (vertical_state == 1 &amp;amp;&amp;amp; vertical_state == 2) {
        error_state = 9; //转弯进机关
        }&lt;/em&gt;/
      error_state = 3;
    }
    if (S1 == 0 &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 0)
      error_state = 111;
    if (S1 == 1  &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 1)
      error_state = 111;
    if (S1 == 0  &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 1)
      error_state = 111;
    if (S1 == 1  &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 0)
      error_state = 111;
    if (S1 == 1  &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 0 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 1)
      error_state = 222;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (S1 == 1  &amp;amp;&amp;amp; S2 == 0 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 1  &amp;amp;&amp;amp; S5 == 1)
  error_state = 222;
if (S1 == 1  &amp;amp;&amp;amp; S2 == 1 &amp;amp;&amp;amp; S3 == 1 &amp;amp;&amp;amp; S4 == 0  &amp;amp;&amp;amp; S5 == 1)
  error_state = 222;

switch (error_state) {
  case 222: // T 路口
    //        if (stop_state == 9) {
    //          car_left_heavy();
    //          delay(400);
    //        } else {
    car_forward();
    //        }
    //        stop_state++;
    break;
  case 111: //交叉路口
    car_forward(); // 直走
    break;
  case -3:
    if (error_state == -3) {
      car_stop();
      delay(400);
      //car_left_vertical(); //11100 左直角 - 左转 90°
      //while (1)car_stop();
      if (vertical_state == 1) {
        car_left_heavy(); //00111 右直角 - 右转 90°
        delay(1000);
      } else {
        car_left_heavy();
        delay(400);
      }
      vertical_state_left++;
    } else {
      car_forward();
    }
    break;
  case 3:

    if (error_state == 3) {
      car_stop();
      delay(400);

      if (vertical_state == 0) {
        car_right_heavy(); //00111 右直角 - 右转 90°
        delay(500);
      } else {
        car_right_heavy();
        //          car_forward();
      }
      car_forward(); // 直走
      vertical_state++;
    } else {
      car_forward();
    }
    break;

  case 0:
    car_forward(); //00100 直走
    break;
  case -1:
    car_left_light(); //01000 小左转
    break;
  case 1:
    car_right_light(); //00010 小右转
    break;
  case -2:
    car_left_heavy(); //10000 大左转
    break;
  case 2:
    car_right_heavy(); //00001 大右转
    break;

  //case 9:
  //car_right_heavy();
  //delay(500);
  //break;
  //      case 222:
  //        car_stop();
  //        break;
  default:
    if (error_state == -2) {
      car_left_heavy();
    }
    else if (error_state == 2) {
      car_right_heavy();
    }
    else
      car_forward();
    //car_stop();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
}
```&lt;/p&gt;
&lt;p&gt;资料存放于 &lt;a href=&#34;https://www.jianguoyun.com/p/DUZ5gZEQ9Z2HBxjxkNsB&#34;&gt;https://www.jianguoyun.com/p/DUZ5gZEQ9Z2HBxjxkNsB&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%B0%8F%E8%BD%A6%E6%B8%B8%E5%8D%8E%E5%B9%BF-%E6%AF%94%E8%B5%9B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E5%B0%8F%E8%BD%A6%E6%B8%B8%E5%8D%8E%E5%B9%BF-%E6%AF%94%E8%B5%9B/</guid>
      
    </item>
    
    <item>
      <title>报告书都要写些什么？</title>
      
      
      
      
      <description>&lt;h2&gt;设计&lt;/h2&gt;
&lt;h3&gt;任务一 移动机器人的文献综述&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;引言&lt;/li&gt;
&lt;li&gt;xx&lt;/li&gt;
&lt;li&gt;xx&lt;/li&gt;
&lt;li&gt;参考文献&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;任务二 xx 的项目方案&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;项目背景及应用&lt;/li&gt;
&lt;li&gt;总体方案分析&lt;/li&gt;
&lt;li&gt;总体方案确定&lt;/li&gt;
&lt;li&gt;xx 模块的方案分析及确定（这个主要详细写自己负责的模块）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;实践&lt;/h2&gt;
&lt;h3&gt;摘要&lt;/h3&gt;
&lt;h3&gt;第一章 绪论&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1.1 项目背景&lt;/li&gt;
&lt;li&gt;1.2 项目研究的意义&lt;/li&gt;
&lt;li&gt;1.3 市场调查及应用前景&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;第二章 总体方案确定与分析&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2.1 引言&lt;/li&gt;
&lt;li&gt;2.2 总体方案确定&lt;/li&gt;
&lt;li&gt;2.3 工作原理的分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;第三章 结构设计与计算&lt;/h3&gt;
&lt;p&gt;（机械部分）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.1 机构设计&lt;/li&gt;
&lt;li&gt;3.2 参数计算&lt;/li&gt;
&lt;li&gt;3.3 重要构件强度校核&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;第四章 功能模块的编程与调试&lt;/h3&gt;
&lt;p&gt;（电控、视觉、硬件部分）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.1 xx 模块的工作原理&lt;/li&gt;
&lt;li&gt;3.2 xx 模块的编程与调试&lt;/li&gt;
&lt;li&gt;3.3 实验效果（或仿真效果）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;第四章 创新点和推广价值&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;4.1 功能特点与创新点&lt;/li&gt;
&lt;li&gt;4.2 市场推广价值&lt;/li&gt;
&lt;li&gt;4.3 后期展望&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;参考文献&lt;/h3&gt;
&lt;h3&gt;附录&lt;/h3&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%8A%A5%E5%91%8A%E4%B9%A6%E9%83%BD%E8%A6%81%E5%86%99%E4%BA%9B%E4%BB%80%E4%B9%88%EF%BC%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%8A%A5%E5%91%8A%E4%B9%A6%E9%83%BD%E8%A6%81%E5%86%99%E4%BA%9B%E4%BB%80%E4%B9%88%EF%BC%9F/</guid>
      
    </item>
    
    <item>
      <title>无人驾驶比赛</title>
      
      
      
      
      <description>&lt;h2&gt;比赛时间&lt;/h2&gt;
&lt;p&gt;2021 年 5 月&lt;/p&gt;
&lt;h2&gt;造车目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能载两三个人的小车，车速 15km/h 以内，爬坡度 30%，载重以 130kg 为标准&lt;/li&gt;
&lt;li&gt;识别路标并做出预定动作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;人员安排&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.qq.com/sheet/DUk1ZdGJiY1dVU0ZT?tab=BB08J2&#34;&gt;&lt;strong&gt;分组情况&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.qq.com/sheet/DUmJhSU9tbEpQdW5C?tab=keaypz&#34;&gt;&lt;strong&gt;学习方向确定&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各方向负责人：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电控：国熙、靖高&lt;/li&gt;
&lt;li&gt;机械：泓辉、静纯&lt;/li&gt;
&lt;li&gt;视觉：华巧、均煜、国熙&lt;/li&gt;
&lt;li&gt;硬件：宇轩&lt;/li&gt;
&lt;li&gt;财务：静纯&lt;/li&gt;
&lt;li&gt;行政：伽鑫&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;比赛方案&lt;/h2&gt;
&lt;h3&gt;电控&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;硬件平台：STM32&lt;/li&gt;
&lt;li&gt;框架：FreeRTOS&lt;/li&gt;
&lt;li&gt;进阶：北斗导航模块、二维激光雷达&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;机械&lt;/h3&gt;
&lt;p&gt;初期尽量使用现成材料制作，以阿克曼结构作为基础方案，舵轮结构作为进阶方案。&lt;/p&gt;
&lt;h3&gt;视觉&lt;/h3&gt;
&lt;p&gt;硬件：初期用自己的电脑 GPU （建议 NVIDIA），带摄像头（或用图片 / 视频代替）
软件：学习 Python 基础，用 Python 科学计算模块和 OpenCV 框架，实现工业视觉；之后再上 Pyotorch/Tensorflow YOLOv5 算法。&lt;/p&gt;
&lt;h3&gt;硬件&lt;/h3&gt;
&lt;p&gt;初代车全部用现成零件，便于调试排错；逐渐将现成模块替换为自主设计的模块，目前已知有：主控板、电机驱动、部分传感器及传感器转接板。&lt;/p&gt;
&lt;h2&gt;教学方案&lt;/h2&gt;
&lt;p&gt;教学方案根据教学目标制定，难度不会设置太高。具体是：每个小组内电控的车基本能跑，机械能整合各部分模块出车，视觉可实现简单识别并将数据由串口传出，硬件能绘制并焊接单片机主控板和部分简单模块。&lt;/p&gt;
&lt;p&gt;根据教学目标，制定出阶段学习目标和学习路线。各方向负责人根据学习路线，整理相应学习资料和学习方法。&lt;/p&gt;
&lt;p&gt;每星期追踪每个成员的进度（由 4 个组长负责）&lt;/p&gt;
&lt;h2&gt;教学计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第一周&lt;/li&gt;
&lt;li&gt;电控：配置开发环境（Keil + CubeMX）&lt;/li&gt;
&lt;li&gt;机械：配置开发环境（SolidWorks）&lt;/li&gt;
&lt;li&gt;视觉：配置开发环境（Docker 上跑 Linux，语言 python 框架 tensorflow 算法 yolo）&lt;/li&gt;
&lt;li&gt;硬件：配置开发环境（Altium Designer）&lt;/li&gt;
&lt;li&gt;第二周 &amp;amp; 第三周&lt;/li&gt;
&lt;li&gt;电控：&lt;/li&gt;
&lt;li&gt;机械：&lt;/li&gt;
&lt;li&gt;视觉：&lt;/li&gt;
&lt;li&gt;硬件：绘制简单的电路图，走一遍画板流程&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如何调动积极性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;挂钩课程分数&lt;/li&gt;
&lt;li&gt;阶段性打分&lt;/li&gt;
&lt;li&gt;将一定分数权重交由负责人评定&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;时间线&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;200617&lt;/code&gt; 初步确定了分组与组长&lt;/p&gt;
&lt;p&gt;&lt;code&gt;200616&lt;/code&gt; 初步确定了每个人的学习方向，以及方向负责人&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6%E6%AF%94%E8%B5%9B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6%E6%AF%94%E8%B5%9B/</guid>
      
    </item>
    
    <item>
      <title>智能硬件产品开发流程</title>
      
      
      
      
      <description>&lt;h2&gt;一、市场分析&lt;/h2&gt;
&lt;p&gt;市场分析包括以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户需求分析&lt;/li&gt;
&lt;li&gt;市场规模分析&lt;/li&gt;
&lt;li&gt;竞品分析&lt;/li&gt;
&lt;li&gt;用户购买力分析&lt;/li&gt;
&lt;li&gt;可行性技术分析&lt;/li&gt;
&lt;li&gt;成本分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;二、立项组建团队&lt;/h2&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mbb.eet-china.com/forum/topic/69315_1_1.html&#34;&gt;一个智能硬件产品开发所要经历的全部流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6%E4%BA%A7%E5%93%81%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6%E4%BA%A7%E5%93%81%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</guid>
      
    </item>
    
    <item>
      <title>极简面包-烘培</title>
      
      
      
      
      <description>&lt;p&gt;此篇为懒人专用教程，输入食材，输出烤面包，完全交由面包机处理。（怎么有点像函数封装？）&lt;/p&gt;
&lt;h2&gt;食材&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200215121030.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;加水&lt;/li&gt;
&lt;li&gt;加盐（放一个角落）&lt;/li&gt;
&lt;li&gt;加糖（放另一个角落）&lt;/li&gt;
&lt;li&gt;加黄油&lt;/li&gt;
&lt;li&gt;加鸡蛋&lt;/li&gt;
&lt;li&gt;加奶粉&lt;/li&gt;
&lt;li&gt;加面粉（覆盖住水面）&lt;/li&gt;
&lt;li&gt;加酵母（面粉上按出小窝，保证干燥并不接触盐）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xiongwilee/recipes&#34;&gt;xiongwilee/recipes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%9E%81%E7%AE%80%E9%9D%A2%E5%8C%85-%E7%83%98%E5%9F%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E6%9E%81%E7%AE%80%E9%9D%A2%E5%8C%85-%E7%83%98%E5%9F%B9/</guid>
      
    </item>
    
    <item>
      <title>电路设计中常用的接口及关键点</title>
      
      
      
      
      <description>&lt;h2&gt;ECL 电平接口&lt;/h2&gt;
&lt;p&gt;ECL 电平接口可以跑到几百 MHz， 这是由于 ECL 内部的 BJT 在导通时并没有处于饱和状态，这样就可以减少 BJT 的导通和截止时间，工作速度自然也就可以提上去了。&lt;/p&gt;
&lt;p&gt;速度快的代价是功耗较大，引发的 EMI 问题也就值得考虑了，抗干扰能力也就好不到哪去了。还有要注意的是，一般 ECL 集成电路是需要负电源供电的，也就是说它的输出电压为负值，这时就需要专门的电平移动电路了。&lt;/p&gt;
&lt;h2&gt;RS-232 电平接口&lt;/h2&gt;
&lt;p&gt;RS-232 电平接口是低速串行通信接口标准，要注意的是，它的电平标准有点 “反常”：高电平为 - 12V，而低电平为 + 12V。&lt;/p&gt;
&lt;p&gt;当我们试图通过计算机与外设进行通信时，需要电平转换芯片 MAX232. 它的一些缺点是，数据传输速度还是比较慢、传输距离也较短等。&lt;/p&gt;
&lt;h2&gt;差分平衡电平接口&lt;/h2&gt;
&lt;p&gt;它是用一对接线端 A 和 B 的相对输出电压 （uA-uB） 来表示信号的，一般情况下，这个差分信号会在信号传输时经过一个复杂的噪声环境，导致两根线上都产生基本上相同数量的噪声，而在接收端将会把噪声的能量给抵消掉，因此它能够实现较远距离、较高速率的传输。工业上常用的 RS-485 接口采用的就是差分传输方式，它具有很好的抗共模干扰能力。&lt;/p&gt;
&lt;h2&gt;光隔离接口&lt;/h2&gt;
&lt;p&gt;光电耦合是以光信号为媒介来实现电信号的耦合和传递的，它的好处是能够实现电气隔离，因此它有出色的抗干扰能力。在电路工作频率很高的条件下，基本只有高速的光电隔离接口电路才能满足数据传输的需要。&lt;/p&gt;
&lt;p&gt;有时为了实现高电压和大电流的控制，我们必须设计和使用光隔离接口电路来连接如上所述的这些低电平、小电流的 TTL 或 CMOS 电路，因为光隔离接口的输入回路和输出回路之间可以承受几千伏特的高压，足以满足一般的应用了。&lt;/p&gt;
&lt;p&gt;此外，光隔离接口的输入部分和输出部分必须分别采用独立的电源，否则的话如果还是有电气联系，就不叫隔离了。&lt;/p&gt;
&lt;h2&gt;线圈耦合接口&lt;/h2&gt;
&lt;p&gt;它的电气隔离特性好，但是允许的信号带宽有限。例如变压器耦合，它的功率传输效率是非常高的，输出功率基本接近其输入功率，因此，对于一个升压变压器来说，它可以有较高的输出电压，但是却只能给出较低的电流。&lt;/p&gt;
&lt;p&gt;此外，变压器的高频和低频特性并不让人乐观，但是它的最大特点就是可以实现阻抗变换，当匹配得当时，负载可以获得足够大的功率，因此，变压器耦合接口在功率放大电路设计中很吃香。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/923327iu/p/13156272.html&#34;&gt;电路设计中常用的 7 个接口类型，你搞明白了几个&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%8F%8A%E5%85%B3%E9%94%AE%E7%82%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%8F%8A%E5%85%B3%E9%94%AE%E7%82%B9/</guid>
      
    </item>
    
    <item>
      <title>硬件模块</title>
      
      
      
      
      <description>&lt;h2&gt;单片机最小系统的设计&lt;/h2&gt;
&lt;p&gt;作为无人驾驶车的心脏，单片机扮演了管理底层硬件的角色。谈及单片机的构成，我们可以将其抽象为最小系统，即能实现最基础的功能的最简化设计。以 STM32（F1 系列）单片机为例，最小系统包含以下几部分：&lt;strong&gt;电源、复位、时钟、启动模式、下载调试&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605234144.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;电源&lt;/h3&gt;
&lt;p&gt;STM32 的电源有以下几种类型：&lt;/p&gt;
&lt;h4&gt;主电源（VDD / VSS）&lt;/h4&gt;
&lt;p&gt;主电源指的是标记为 VDD1、VDD2... 的引脚。&lt;br&gt;
每个引脚必须加一个 100nF 的滤波电容，且尽量靠近引脚放置，此外需要一个 10uF 的钽电容公用。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163136.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163204.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;后备电源（VBAT）&lt;/h4&gt;
&lt;p&gt;VBAT 引脚可用于电池供电。如果不用，可以与 VDD 连接在一起。VBAT 也需要一个 100nF 电容滤波。&lt;br&gt;
可参考以下的电源选择电路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163337.jpg&#34;&gt;&lt;/p&gt;
&lt;h4&gt;ADC 电源（VDDA / VSSA）&lt;/h4&gt;
&lt;p&gt;为了提高转换精度，ADC 设备可以从这里取电。一般将 VDDA 通过一个电感后， 与 VDD 相连接。&lt;/p&gt;
&lt;p&gt;若不用到 ADC，可将 VDD, VDDA, VREF+（如果有的话） 接在一起，并对地接 1uF 钽电容 + 10nF 陶瓷电容滤波。&lt;/p&gt;
&lt;h3&gt;复位&lt;/h3&gt;
&lt;p&gt;因为 STM32 内部有上拉电阻，所以外部只接 100nF 电容 + 按键即可：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163429.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上电时，CPU 处于复位状态，此时电容充电，NRST 引脚电位持续拉低，当电容充满电后，NRST 电位变为高电平，此时 CPU 退出复位模式，进入正常运行状态。当按钮被按下时，电容被短路清空电量，按钮松开后重新充电，触发复位。&lt;/p&gt;
&lt;p&gt;根据官方设计指南，电容选取 100nF 即可，以保证 NRST 低电平持续的时间满足 CPU 复位的最小脉宽要求，能正常触发复位。&lt;/p&gt;
&lt;p&gt;如果不需要手动复位功能，也可以略去按键。&lt;/p&gt;
&lt;h3&gt;时钟&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605155729.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图，STM32 的时钟分以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HSI&lt;/strong&gt;：高速内部时钟，是内部的 RC 振荡器，频率为 8MHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HSE&lt;/strong&gt;：高速外部时钟，可接石英 / 陶瓷谐振器，或者接外部时钟源，频率范围为 4MHz~16MHz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LSI&lt;/strong&gt;：低速内部时钟，RC 振荡器，频率为 40kHz. 独立看门狗的时钟源只能是它，同时它也可以作为 RTC 的时钟源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LSE&lt;/strong&gt;：低速外部时钟，接频率为 32.768kHz 的石英晶体。LSE 是给 RTC 用的时钟源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PLL&lt;/strong&gt;：锁相环倍频输出，其时钟输入源可选择为 HSI/2, HSE 或 HSE/2. 倍频可为 2~16 倍，但是输出频率最大不得超过 72MHz&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从稳定性上考虑，我们在设计的时候一般使用外部晶振作为时钟源。&lt;strong&gt;一般选取 8MHz 晶振作为 HSE&lt;/strong&gt;，便于倍频（一般倍频到 72MHz）；&lt;strong&gt;选取 32.768kHz 晶振作为 LSE&lt;/strong&gt;，RTC 使用便于分频（32768 是 2 的 15 次方，可以得到精准的时间）。&lt;/p&gt;
&lt;p&gt;至于晶振的选用，有源的精度高，无源的成本低，一般无源就足够了。&lt;br&gt;
如果选用无源晶振，则需要在两端要加上起振电容，滤除晶振波形中的高频杂波。容值可选 10 ～ 40pF.&lt;/p&gt;
&lt;p&gt;晶振输入输出引脚之间可加一个 1M 的电阻，产生负反馈，保证放大器工作在高增益的线性区。同时还起到限流作用，防止反相器驱动过载损坏晶振。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605171011.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;启动模式配置&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;一般来说，将 BOOT0 引脚下拉&lt;/strong&gt;（串接 10K 电阻再接地），&lt;strong&gt;BOOT1 任意&lt;/strong&gt; 即可，如果需要模式切换，也可以参照以下的设计：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605163537.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;STM32 提供了 BOOT1 与 BOOT0 引脚，可以通过设置引脚的状态，以选择上电复位后的启动模式。&lt;/p&gt;
&lt;p&gt;以下为三种启动模式：&lt;/p&gt;
&lt;h4&gt;1. 从主闪存存储器启动&lt;/h4&gt;
&lt;p&gt;| BOOT0 | BOOT1 |
| :---: | :---: |
|  低   | 任意  |&lt;/p&gt;
&lt;p&gt;从片上 Flash 存储器启动（就是参数为 64K / 128K / 256K 的 Flash），一般正常情况下是这样配置的。&lt;/p&gt;
&lt;h4&gt;2. 从系统存储器启动&lt;/h4&gt;
&lt;p&gt;| BOOT0 | BOOT1 |
| :---: | :---: |
|  高   |  低   |&lt;/p&gt;
&lt;p&gt;使用串口 / ISP 下载程序时，需要配置这种模式。&lt;/p&gt;
&lt;h4&gt;3. 从内置 SRAM 启动&lt;/h4&gt;
&lt;p&gt;| BOOT0 | BOOT1 |
| :---: | :---: |
|  高   |  高   |&lt;/p&gt;
&lt;p&gt;从内置 SRAM 启动，用途有两个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于反复下载调试时，提高效率（因为下载到 Flash 相对慢）。需要注意的是，断电程序将丢失&lt;/li&gt;
&lt;li&gt;用于解除芯片的读保护功能 / 擦除 Flash 恢复出厂&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;下载调试接口&lt;/h3&gt;
&lt;p&gt;一般我们用 SWD 接口（接线少，方便），&lt;strong&gt;直接引出 SWDIO, SWCLK, VCC, GND 即可&lt;/strong&gt;。&lt;br&gt;
不需要添加外部上拉／下拉电阻，因为 STM32 内部已经有集成了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200605170741.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;单片机最小系统的编程与调试&lt;/h2&gt;
&lt;p&gt;靖高写：拿到最小系统板之后，截个点灯代码，简单提一下原理就行&lt;/p&gt;
&lt;h2&gt;实验效果（或仿真效果）&lt;/h2&gt;
&lt;p&gt;靖高写：最好有个板子亮灯的照片，如果没有我找找&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E7%A1%AC%E4%BB%B6%E6%A8%A1%E5%9D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E7%A1%AC%E4%BB%B6%E6%A8%A1%E5%9D%97/</guid>
      
    </item>
    
    <item>
      <title>科技 X 的访谈</title>
      
      
      
      
      <description>&lt;h2&gt;来做个自我介绍吧，以及有几道快问快答等你接招。&lt;/h2&gt;
&lt;p&gt;Hello 大家好，我是 Power，斜杠青年大学生一枚。这是我的标签：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;机器人相关专业，未来就业偏嵌入式设计 / 管理方向&lt;/li&gt;
&lt;li&gt;拥有 MacOS/Windows/iOS/Android/Ubuntu 全平台并喜欢折腾&lt;/li&gt;
&lt;li&gt;偶尔更新独立博客，偶尔在知乎、少数派发文&lt;/li&gt;
&lt;li&gt;平时喜欢不断发掘高校的生活 / 工作方式&lt;/li&gt;
&lt;li&gt;偶尔玩玩嵌入式（STM32/Arduino），3D 打印，树莓派&lt;/li&gt;
&lt;li&gt;喜欢旅行、喜欢摄影、喜欢读书、喜欢独自一人的时候练钢琴&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;你最近都在忙些什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;疫情带给了我们 8 个月的寒假，目前已返校&lt;/li&gt;
&lt;li&gt;上课，在学校机器人队里打杂&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如果可以在世界上所有人中任意选择，你想邀请谁共进晚餐？&lt;/h2&gt;
&lt;p&gt;王小波。&lt;/p&gt;
&lt;p&gt;读过他几乎所有作品，喜欢他幽默而尖锐的风格，想听听他对当下世事的看法。&lt;/p&gt;
&lt;h2&gt;你最喜欢/最常用的微信表情（系统自带的不算）。&lt;/h2&gt;
&lt;h2&gt;你最近一次给/被别人成功安利了啥？&lt;/h2&gt;
&lt;p&gt;人体工学椅，简直是苦逼程序猿的救星。&lt;/p&gt;
&lt;h2&gt;现在还有哪些内容是你上网时一定会点进去看的？&lt;/h2&gt;
&lt;p&gt;常逛 GitHub 与 V2EX，看一些有趣的项目和对时事较为客观的言论。&lt;/p&gt;
&lt;h2&gt;说一个你最近常在思考的问题吧。&lt;/h2&gt;
&lt;p&gt;2020 年这一波疫情将会对未来生活产生什么样的影响？&lt;/p&gt;
&lt;h2&gt;都说科技改变生活。那你的生活呢，有什么“于是再也回不去了”的改变吗？无论正反，具体聊聊呗。&lt;/h2&gt;
&lt;p&gt;这种情况在生活中有很多，像是用了 4K 分辨率的屏幕，就再也回不去 2K 了；用惯了苹果全家桶，就再也脱离不了 iOS 生态了；用惯了 Google，回看百度就都是广告了……&lt;/p&gt;
&lt;h2&gt;你工作，你生活，你也慢慢攒下了一批物件，试审视：它们中的哪些成了你的必须品（也就是，哪怕你换工作、换城市，你都打算一直带着的那些器物。）可按重要性排序，最重要的两件不妨展开聊聊。&lt;/h2&gt;
&lt;p&gt;俗话说，流水的设备，铁打的数据。我倒是觉得，并没有什么实体的器物是取代不得的。真正不能遗失的，是数据（像代码库、收藏夹、照片等）&lt;/p&gt;
&lt;h2&gt;你还用过什么好物（软件/硬件/服务）是 少有人知道的？求分享！[“少有人知道的”划重点]&lt;/h2&gt;
&lt;p&gt;软件与服务：&lt;/p&gt;
&lt;p&gt;我挑选软件 / 服务的思想是「如无必要，勿增实体」：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;坚果云&lt;/strong&gt;：国内比较优秀的网盘，全平台、无限速，文件同步共享都很方便&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;：将项目仓库全部储存在云端，用 Pages 搭建博客，配合 GitHub Actions 实现自动部署&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VS Code&lt;/strong&gt;：写文章、写代码我都用它，第三方插件资源很足&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VuePress&lt;/strong&gt;：博客框架，有提供 Wiki 样式的主题，方便搭建个人知识库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google 相册&lt;/strong&gt;：无限容量（需要科学上网）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apple Music&lt;/strong&gt;：UI 极简、无广告、曲库全，还能够导入本地音乐且多设备同步（家庭组方案人均仅 ￥ 2.5/月，比网抑云划算多了）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lastpass&lt;/strong&gt;：对不同网站自动生成复杂密码，并自动记录、自动填充&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;硬件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AirPods&lt;/strong&gt;：让音乐更加便携&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;小米 6&lt;/strong&gt;：备用机，能更新 MIUI 13，能 Root 能解 BL 锁，用来折腾绰绰有余&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;倍思的 GaN 充电器&lt;/strong&gt;：出门只需一个充电器，就能为所有设备充电&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;最近又有什么科技产品是你心痒痒想入的？一句话说明你为它找的理由。&lt;/h2&gt;
&lt;p&gt;特斯拉 Model 3&lt;br&gt;
加速快而安静、内饰设计极简、自动驾驶、OTA&lt;/p&gt;
&lt;h2&gt;跟上面相反，有什么是你想强烈吐槽、狠狠劝退的么？&lt;/h2&gt;
&lt;p&gt;苹果的 Magic Mouse&lt;br&gt;
极容易手腕酸痛，用户体验不行&lt;/p&gt;
&lt;h2&gt;工欲善其事，必先利其器。无论是工作还是生活，有什么特好的“磨刀法子”是你巴不得大家都知道的？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据无价&lt;/strong&gt;。重要的数据一定要多端备份（我的方法是坚果云 / GitHub 仓库 / 每天定时备份）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出驱动输入&lt;/strong&gt;。如果你能用自己的话语将所学知识清晰表述出来，你才是真正掌握了知识。平时生活中积累的素材，要及时归纳总结，不管是日记、博客。与其临渊羡鱼，不如退而结网。有了一定的基数之后，你会慢慢发现，这是一笔不菲的财富。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;科技生活离不开内容，它们可能是书、是游戏、是电影、是音乐，甚至是 App。来，请分享你的最爱吧。&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;书：《三体》《黑客与画家》《黄金时代》&lt;/li&gt;
&lt;li&gt;影视：《爱乐之城》《西部世界》&lt;/li&gt;
&lt;li&gt;音乐：&lt;/li&gt;
&lt;li&gt;格伦·古尔德演奏的《哥德堡变奏曲》&lt;/li&gt;
&lt;li&gt;Queen 乐队的《波西米亚狂想曲》&lt;/li&gt;
&lt;li&gt;爱乐之城的配乐&lt;/li&gt;
&lt;li&gt;South of the Border 专辑&lt;/li&gt;
&lt;li&gt;Scott Joplin 的 Ragtime 风格爵士&lt;/li&gt;
&lt;li&gt;App：Telegram, Inoreader, Anydesk, 微软数学&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;You are what you eat. 你在网上 fo 过什么有意思的账号？求分享！（可按 有趣—&amp;gt;严肃 排序；平台不限于 YouTube/Twitter/B 站/微博/播客/公众号）&lt;/h2&gt;
&lt;p&gt;个人站点（推荐用 RSS 订阅）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;稚晖的个人站&lt;/strong&gt;：&lt;a href=&#34;http://pengzhihui.xyz&#34;&gt;http://pengzhihui.xyz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阮一峰的网络日志&lt;/strong&gt;：&lt;a href=&#34;http://www.ruanyifeng.com/blog&#34;&gt;http://www.ruanyifeng.com/blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编程随想的博客&lt;/strong&gt;：&lt;a href=&#34;https://program-think.blogspot.com&#34;&gt;https://program-think.blogspot.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jason 的博客&lt;/strong&gt;：&lt;a href=&#34;https://atjason.com/&#34;&gt;https://atjason.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公众号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;爱否科技&lt;/strong&gt;：比较客观中立的数码产品测评&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;半佛仙人&lt;/strong&gt;：对趋势的分析，画风幽默而锐利&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;贰调&lt;/strong&gt;：对时事热点的一些评论&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;咖啡随想&lt;/strong&gt;：分享一些有趣的科技内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个人学习&lt;/strong&gt;：一个优质的产品人公众号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;歌词经理&lt;/strong&gt;：对时事和趋势的评论很理性客观&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;易中天&lt;/strong&gt;：对时事的评论很中肯&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;玉树芝兰&lt;/strong&gt;：分享高效率的工作方式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;呦呦鹿鸣&lt;/strong&gt;：日拱一卒，敢于批判社会上的不公&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如果要给别人一些美好生活的建议，你会说啥？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如无必要，勿增实体&lt;/strong&gt;。极简的生活方式更能够将专注力集中于精神层面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;书宜读杂，业宜精钻&lt;/strong&gt;。在自己的专业上，一定要足够深入；而在日常生活中，尝试去探索更广的世界&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;少一些物质追求，多一些精神追求&lt;/strong&gt;。引用自前一期访谈中的话，「你不需要买一个 MacBook，才能成为一个合格的程序员」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如果给你一张白板，可以在上面写上你想抗议的内容，你会写什么？&lt;/h2&gt;
&lt;p&gt;如果我们的国家和社会有问题，你可以指出来，可以用奇奇怪怪的方式避过审查，可以批评甚至讽刺，目的是为了让这个国家变得更好。&lt;br&gt;
但是你不能总说外国的月亮圆，这个国家没救了，更不能说这个国家的人民都有问题。&lt;/p&gt;
&lt;h2&gt;#所有人问所有人# 轮到你问问题了！问一个你想问其他人的问题？&lt;/h2&gt;
&lt;p&gt;疫情之下，如何最大程度保证个人数据隐私安全？&lt;/p&gt;
&lt;h2&gt;Power 的联系方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;微信：&lt;code&gt;linyuxuanlin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;个人网站：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E7%A7%91%E6%8A%80X%E7%9A%84%E8%AE%BF%E8%B0%88/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E7%A7%91%E6%8A%80X%E7%9A%84%E8%AE%BF%E8%B0%88/</guid>
      
    </item>
    
    <item>
      <title>麦昆小车 - 测评</title>
      
      
      
      
      <description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;刷朋友圈的时候，偶然刷到 @瀚瀚、_luna 的征集令。正好我对近两三年来流行的 micro:bit 板子感兴趣。于是，我眼疾手快地申请到了一只麦昆小车。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20190509034209667.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;开箱&lt;/h2&gt;
&lt;p&gt;拆开快递包裹，出现了一个 DFRobot 专属橙色的盒子：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_0291.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开盒盖，可以发现 micro:bit 主板和麦昆套件：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_0293.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_0294.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;零件全家福：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_0296.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;小车装好后的样子：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_0305.JPG&#34;&gt;&lt;/p&gt;
&lt;h2&gt;基本资料&lt;/h2&gt;
&lt;p&gt;麦昆小车的开发文档： &lt;a href=&#34;http://wiki.dfrobot.com.cn/index.php?title=%28SKU:ROB0148%29_micro:Maqueen%28V2.0%29 机器人小车&#34;&gt;http://wiki.dfrobot.com.cn/index.php?title=(SKU:ROB0148)_micro:Maqueen(V2.0) 机器人小车&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;硬件&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;1280px-ROB0148 正+背-ch-2&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20190515130145.jpg&#34;&gt; 小车板载了许多功能模块，可以直接实现超声波测距、循迹、红外遥控等功能。小车用 3.5V~5V 直流供电，我用随车附送的电池盒，装上 3 颗 7 号电池给小车供电。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/IMG_0306.JPG&#34;&gt;&lt;/p&gt;
&lt;h3&gt;软件&lt;/h3&gt;
&lt;p&gt;麦昆小车使用基于 Scratch3.0 的 Mind+ 编程，很遗憾 Mind+ 暂不支持 MacOS 系统，我只能将工作区切换回 Windows. 我在安装 Mind+ 后，打开软件无响应，于是按照 &lt;a href=&#34;http://mc.dfrobot.com.cn/thread-267641-1-1.html&#34;&gt;&lt;strong&gt;这篇教程&lt;/strong&gt;&lt;/a&gt; 将软件设置以 Windows 7 兼容性模式下运行，但仍不可用。于是，我切换为 &lt;a href=&#34;https://makecode.microbit.org/&#34;&gt;makecode&lt;/a&gt; 进行编程。后来，我将 Mind+ 的兼容性设置为 Windows XP，最终可用了。&lt;/p&gt;
&lt;h3&gt;基本开发&lt;/h3&gt;
&lt;h4&gt;makecode&lt;/h4&gt;
&lt;p&gt;我编写了一个程序，用于测试电机能否正常运行： &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/屏幕快照%202019-05-09%20 下午 5.39.44.png&#34;&gt; 其中，「无限循环」代码块相当于 Arduino 下的 loop() 函数。&lt;/p&gt;
&lt;p&gt;点击下载按钮，下载一个 .hex 后缀的文件，将 micro:bit 连接计算机并当做一个储存设备，把文件直接丢进去就自动上传了。 &lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20190509053649722.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;makecode 是基于 JavaScript 的，对 Arduino 兼容性并不好（例如第三方库）。网页直接便编写程序虽然很方便，但后期开发（加装各种传感器模块、源代码的存档）并不好用，所以后来我切换至 Mind+ 编程。&lt;/p&gt;
&lt;h4&gt;Mind+&lt;/h4&gt;
&lt;p&gt;测试电机的运行：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Snipaste_2019-05-09_23-00-24&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2019-05-15-125933.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;有趣的想法&lt;/h3&gt;
&lt;h4&gt;恶搞小玩意&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;Snipaste_2019-05-09_22-25-11&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2019-05-15-125956.png&#34;&gt; 当检测到有人走过的时候（超声波测距值小于 5 cm），就会发出一段 BGM。&lt;/p&gt;
&lt;h4&gt;乱窜小车&lt;/h4&gt;
&lt;p&gt;原理：利用超声波测距，如果小于某个值（前方有障碍物），则随机左右转，继续前进。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Snipaste_2019-05-11_20-02-58&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/2019-05-15-130015.png&#34;&gt;&lt;/p&gt;
&lt;h4&gt;（待填坑）我脚底下是什么颜色？&lt;/h4&gt;
&lt;h4&gt;（待填坑）桌面清扫机器人&lt;/h4&gt;
&lt;p&gt;自动清扫桌面。&lt;/p&gt;
&lt;h4&gt;（待填坑）桌面小助手&lt;/h4&gt;
&lt;p&gt;时钟、喝水提醒、久坐提醒等。&lt;/p&gt;
&lt;h2&gt;源码资料&lt;/h2&gt;
&lt;p&gt;以上源代码放置于：&lt;a href=&#34;https://www.jianguoyun.com/p/DYRixvgQ9Z2HBxivmL0B&#34;&gt;&lt;strong&gt;坚果云&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;亮点： 1. 模块化设计，拼装简单，到手即玩，不必调试硬件，适用于 STEAM 教学； 2. 迷你车身，相较于其他智能小车，更适合小孩子玩； 3. 图形化编程，适合孩子入门；&lt;/p&gt;
&lt;p&gt;期待改进之处：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主控板插槽没有分正反标识，初次上手容易插反；&lt;/li&gt;
&lt;li&gt;初始 LED 点阵屏亮度太高，有可能会损伤孩子视力。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/33612&#34;&gt;我写测评文章的态度&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E9%BA%A6%E6%98%86%E5%B0%8F%E8%BD%A6-%E6%B5%8B%E8%AF%84/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/archive/%E9%BA%A6%E6%98%86%E5%B0%8F%E8%BD%A6-%E6%B5%8B%E8%AF%84/</guid>
      
    </item>
    
    <item>
      <title>AD 基本操作 - PCB 绘制</title>
      
      
      
      
      <description>&lt;p&gt;—— Altium Designer 系列教程&lt;/p&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-PCB%E7%BB%98%E5%88%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-PCB%E7%BB%98%E5%88%B6/</guid>
      
    </item>
    
    <item>
      <title>AD 基本操作 - 库文件绘制</title>
      
      
      
      
      <description>&lt;p&gt;—— Altium Designer 系列教程&lt;/p&gt;
&lt;p&gt;🚧&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;h2&gt;快捷键&lt;/h2&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%BA%93%E6%96%87%E4%BB%B6%E7%BB%98%E5%88%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview/AD%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%BA%93%E6%96%87%E4%BB%B6%E7%BB%98%E5%88%B6/</guid>
      
    </item>
    
    <item>
      <title>如何用 Markdown 写学术论文</title>
      
      
      
      
      <description>&lt;h2&gt;环境安装&lt;/h2&gt;
&lt;p&gt;我们需要安装以下几样东西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;&lt;strong&gt;Python 环境&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jgm/pandoc/releases/&#34;&gt;&lt;strong&gt;Pandoc 环境&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pandoc-fignos 插件：&lt;code&gt;pip install pandoc-fignos&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;语法&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
pandoc demo-math.md -o demo-math.docx&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;数学公式&lt;/h3&gt;
&lt;p&gt;可直接编辑 LaTeX 语法，具体参考 &lt;a href=&#34;https://wiki-power.com/LaTeX%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E5%AF%B9%E7%85%A7%E8%A1%A8&#34;&gt;LaTeX 希腊字母对照表&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;脚注&lt;/h3&gt;
&lt;p&gt;```
学术文稿最小化示例[^1]&lt;/p&gt;
&lt;p&gt;[^1]: 通讯作者: XXX，ORCID：XXXX-XXXX-XXXX-XXXX.
*本文受XXXX基金资助。
```&lt;/p&gt;
&lt;h3&gt;文献引用&lt;/h3&gt;
&lt;p&gt;将复制的 BibTeX 信息粘贴进 &lt;code&gt;myref.bib&lt;/code&gt; 文件，在文章中使用 &lt;code&gt;[@article]&lt;/code&gt; 引用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pandoc --filter pandoc-citeproc --bibliography=myref.bib --csl=chinese-gb7714-2005-numeric.csl demo-citation.md -o demo-citation.docx&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;图片引用&lt;/h3&gt;
&lt;p&gt;在文章中插入 font-matter：&lt;/p&gt;
&lt;h2&gt;```&lt;/h2&gt;
&lt;p&gt;fignos-cleveref: On
fignos-plus-name: 图&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;在文章中的语法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown
![标题](链接){#fig:图注}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pandoc --filter pandoc-fignos --filter pandoc-citeproc --bibliography=myref.bib --csl=chinese-gb7714-2005-numeric.csl demo-figref.md -o demo-figref.docx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;【更新中】&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/b0ac7ae98100&#34;&gt;如何用 Markdown 写论文？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E5%86%99%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87/</guid>
      
    </item>
    
    <item>
      <title>1</title>
      
      
      
      
      <description>&lt;h1&gt;1&lt;/h1&gt;
&lt;p&gt;而克劳德·威廉姆森的演奏，&lt;/p&gt;
&lt;p&gt;钢琴、贝斯、鼓&lt;/p&gt;
&lt;p&gt;🎵Pretendo🎵&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pretendo&lt;/em&gt; 收录自 Claude Williamson Trio 的《国境の南・太陽の西》爵士三重奏乐辑，乐音明快而干净，其间又蕴藏着轻轻的孤独。忘了说，它是由 Nat King Cole 的 &lt;em&gt;Pretend&lt;/em&gt; 改编而来，一首很经典的爵士乐，它是这样唱的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pretend you&#39;re happy when you&#39;re blue
It isn&#39;t very hard to do
And you&#39;ll find happiness without an end
Whenever you pretend&lt;/p&gt;
&lt;p&gt;Remember anyone can dream
And nothing&#39;s bad as it may seem
The little things you haven&#39;t got
Could be a lot, if you&#39;d pretend&lt;/p&gt;
&lt;p&gt;You&#39;ll find a love you can share
One you can call all your own
Just close your eyes, he&#39;ll be there
You&#39;ll never be alone&lt;/p&gt;
&lt;p&gt;And if you sing this melody
You&#39;ll be pretending just like me
The world is mine, it can be yours my friend
So, why don&#39;t you pretend&lt;/p&gt;
&lt;p&gt;And if you sing this melody
You&#39;ll be pretending just like me
The world is mine, it can be yours my friend
So, why don&#39;t you pretend&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;把台灯调至暖光，假装它是一炉暖烘烘的火，我斟上一小杯加了冰的威士忌，品味着窗外秋风掠过树梢、枫叶和银杏叶轻轻落地的声响。在南方不曾有的深秋，在一场雾和一场雨中如约而至。&lt;/p&gt;
&lt;p&gt;世间的变化真快啊！不管是朝令人期待的方向，抑或是不太明朗的方向，总归是悄声无息，却又铺天盖地向前推进着。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;安卓 bring up&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解锁 BL&lt;/li&gt;
&lt;li&gt;卸载系统 app&lt;/li&gt;
&lt;li&gt;https://github.com/topjohnwu/Magisk/releases&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2&gt;Focalboard - 项目管理工具&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;主要功能&lt;/strong&gt;：开源的项目管理、TODO 工具&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文档&lt;/strong&gt;：&lt;a href=&#34;https://hub.docker.com/r/mattermost/focalboard&#34;&gt;https://hub.docker.com/r/mattermost/focalboard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  webdav:
    image: mattermost/focalboard
    restart: always
    ports:
      - &#34;${PORT}:8000&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：如需使用反向代理，请开启 &lt;code&gt;Websockets Support&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;WebDAV - 跨平台文件共享协议&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;主要功能&lt;/strong&gt;：把数据备份到其他服务器上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文档&lt;/strong&gt;：&lt;a href=&#34;https://hub.docker.com/r/derkades/webdav&#34;&gt;https://hub.docker.com/r/derkades/webdav&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#39;3&#39;
services:
  webdav:
    image: derkades/webdav
    restart: always
    ports:
      - &#34;${PORT}:80&#34;
    environment:
      USERNAME: [username]
      PASSWORD: [password]
    volumes:
      - [syncing-dir]:/data&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;lsky-pro&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  lsky:
    image: halcyonazure/lsky-pro-docker:latest
    restart: unless-stopped
    ports:
      - &#34;${PORT}:80&#34;
    volumes:
      - ${DIR}:/var/www/html&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2&gt;Homebox - 家庭库存管理系统&lt;/h2&gt;
&lt;p&gt;doc: https://hay-kot.github.io/homebox/quick-start/&lt;/p&gt;
&lt;p&gt;```yml title=&#34;docker-compose.yml&#34;
version: &#34;3.4&#34;&lt;/p&gt;
&lt;p&gt;services:
  homebox:
    image: ghcr.io/hay-kot/homebox:latest
    container_name: homebox
    restart: always
    environment:
      - HBOX_LOG_LEVEL=info
      - HBOX_LOG_FORMAT=text
      - HBOX_WEB_MAX_UPLOAD_SIZE=10
    volumes:
      - ${DIR}/homebox:/data/
    ports:
      - ${PORT}:7745
```&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dockerproxy.com/&#34;&gt;Docker Proxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Yacht&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3&#34;
services:
  yacht:
    container_name: yacht
    restart: unless-stopped
    ports:
      - ${PORT}:8000
    volumes:
      - ${DIR}:/config
      - /var/run/docker.sock:/var/run/docker.sock
    image: selfhostedpro/yacht&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;初始账户密码&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;code&gt;admin@yacht.local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Password: &lt;code&gt;pass&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://laosu.ml/2022/06/01/%E7%94%A8Yacht%E7%AE%A1%E7%90%86docker%E5%AE%B9%E5%99%A8/&#34;&gt;用 Yacht 管理 docker 容器&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;audiobookshelf&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;yml title=&#34;docker-compose.yml&#34;
version: &#34;3.7&#34;
services:
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - ${PORT}:80
    volumes:
      - ${DIR}/audiobooks:/audiobooks
      - ${DIR}/podcasts:/podcasts
      - ${DIR}/config:/config
      - ${DIR}/metadata:/metadata&lt;/code&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/1/</guid>
      
    </item>
    
    <item>
      <title>CubeIDE 配置指南</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.st.com/zh/development-tools/stm32cubeide.html#get-software&#34;&gt;STM32CubeIDE - STM32的集成开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/w8cvEySdXs1a0kpK5wRoUw&#34;&gt;STM32CubeIDE属于一站式工具，本文带你体验它的强大&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oldgerman.github.io/4fafac1b/&#34;&gt;STM32CubeIDE 踩坑记录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_39754256/article/details/104304634&#34;&gt;STM32的开发环境cubeIDE注释混乱问题解决方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/345602228&#34;&gt;傻瓜式教程：如何使用“多合一”开发工具STM32CubeIDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;下载&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.st.com/zh/development-tools/stm32cubeide.html#get-software&#34;&gt;&lt;strong&gt;STM32CubeIDE - STM32的集成开发环境&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/CubeIDE%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/CubeIDE%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>DDR3 硬件设计 - 基本原理</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Cadence 高速 PCB 设计实战攻略_李增-林超文》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/m0_52840978/article/details/121191410?spm=1001.2014.3001.5501&#34;&gt;Xilinx FPGA 平台 DDR3 设计保姆式教程（汇总篇）——看这一篇就够了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzg5NDYyMzg3NQ==&amp;amp;mid=2247484794&amp;amp;idx=1&amp;amp;sn=b9f8acc771de990dcd941795330894d8&amp;amp;chksm=c01d8c96f76a0580216939860c46bf5edd289f14a306a92b60888f785e7146b7f71846eb9f46&amp;amp;token=203917856&amp;amp;lang=zh_CN#rd&#34;&gt;DDR3 总结笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DDR3（Double-Data-Rate 3 Synchronous Dynamic RAM）即第三代双倍速率同步动态随机存储器。其中，&lt;strong&gt;同步&lt;/strong&gt; 指的是读写都是按照时钟基准的，&lt;strong&gt;动态&lt;/strong&gt; 指数据不能掉电存储，且需要周期性地刷新才能保持存储，&lt;strong&gt;随机存储&lt;/strong&gt; 指的是可随机操作任意地址的数据，&lt;strong&gt;双倍速率&lt;/strong&gt; 指在时钟的上升和下降沿都可进行数据传输。&lt;/p&gt;
&lt;p&gt;更多存储器的基本知识，请跳转文章 &lt;a href=&#34;https://wiki-power.com/%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E5%88%86%E7%B1%BB&#34;&gt;&lt;strong&gt;存储器的分类&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;DDR3 引脚定义&lt;/h2&gt;
&lt;p&gt;DDR3 x4/x8 的详细管脚分布：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220501183947.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DDR3 x16 的详细管脚分布：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220501180003.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DDR3 引脚符号对应的类型和描述如下（以 x16 为例）：&lt;/p&gt;
&lt;h3&gt;电源引脚&lt;/h3&gt;
&lt;p&gt;| 引脚符号 | 类型     | 描述                                                                   |
| -------- | -------- | ---------------------------------------------------------------------- |
| VDD      | 供电     | 电源电压（1.5V±0.075V）                                                |
| VDDQ     | 供电     | DQ 电源（1.5V±0.075V，为了降噪在芯片上隔离）                           |
| VREFCA   | 供电     | 控制、命令、地址的参考电压。在所有时刻（包括自刷新）都必须保持规定电压 |
| VREFDQ   | 供电     | 数据的参考电压。在所有时刻（包括自刷新）都必须保持规定电压             |
| VSS      | 供电     | 地                                                                     |
| VSSQ     | 供电     | DQ 地（为了降噪在芯片上隔离）                                          |
| ZQ       | 参考电压 | 输出驱动校准的外部参考（应接 240Ω 电阻到 VSSQ）                        |&lt;/p&gt;
&lt;h3&gt;时钟引脚&lt;/h3&gt;
&lt;p&gt;| 引脚符号 | 类型 | 描述                                                                           |
| -------- | ---- | ------------------------------------------------------------------------------ |
| CK, CK#  | 输入 | 时钟。差分时钟输入，所有控制和地址输入信号在 CK 上升沿与 CK#下降沿交叉处被采样 |
| CKE      | 输入 | 时钟使能。                                                                     |
| RESET#   | 输入 | 复位（低电平有效，参考 VSS）                                                   |&lt;/p&gt;
&lt;h3&gt;地址引脚&lt;/h3&gt;
&lt;p&gt;| 引脚符号                         | 类型 | 描述          |
| -------------------------------- | ---- | ------------- |
| CS#                              | 输入 | 片选          |
| BA0-BA2                          | 输入 | Bank 地址输入 |
| A0-A9, A10/AP, A11, A12/BC#, A13 | 输入 | 地址输入      |&lt;/p&gt;
&lt;h3&gt;数据引脚&lt;/h3&gt;
&lt;p&gt;| 引脚符号 | 类型 | 描述            |
| -------- | ---- | --------------- |
| DQ0-DQ7  | I/O  | 数据输入 / 输出 |&lt;/p&gt;
&lt;p&gt;| 引脚符号    | 类型 | 描述         |
| ----------- | ---- | ------------ |
| DM          | 输入 | 数据输入屏蔽 |
| DQS, DQS#   | I/O  | 数据选通     |
| TDQS, TDQS# | 输出 | 终端数据选通 |&lt;/p&gt;
&lt;h3&gt;控制引脚&lt;/h3&gt;
&lt;p&gt;| 引脚符号 | 类型 | 描述         |
| -------- | ---- | ------------ |
| ODT      | 输入 | 片上终端使能 |&lt;/p&gt;
&lt;p&gt;| RAS#, CAS#, WE# | 输入 | 命令输入 |&lt;/p&gt;
&lt;h2&gt;todo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhenhuizhang.tk/post/dian-lu-ddr3_-yin-jiao-ding-yi-_-rong-liang-_-te-shu-gong-neng/&#34;&gt;[电路]DDR3&lt;em&gt;引脚定义&lt;/em&gt;容量_特殊功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/97491454&#34;&gt;DDR3 自学笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/DDR3%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/DDR3%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</guid>
      
    </item>
    
    <item>
      <title>🚧DDR3硬件设计基础</title>
      
      
      
      
      <description>&lt;h2&gt;连接器的规范与设计&lt;/h2&gt;
&lt;p&gt;DDR 的连接器俗称金手指（Gold Finger/Edge Connector），它是由镀金工艺（金的抗氧化性与传导性都很强）的导电触片组成，因排列如手指状，所以称为「金手指」。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226143912.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;金手指的设计要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;金手指上金的厚度一般是 0.25-1.3 um，金的厚度根据金手指的插拔次数而定；&lt;/li&gt;
&lt;li&gt;金手指间的最小距离 6 mil；&lt;/li&gt;
&lt;li&gt;金手指板卡的设计厚度是 0.8-2.0 mm；&lt;/li&gt;
&lt;li&gt;金手指最大高度 ≤ 2 inch；&lt;/li&gt;
&lt;li&gt;金手指倒角的角度可以是 20°/30°/45°/60°/90°；&lt;/li&gt;
&lt;li&gt;沉锡、沉银焊盘的距离离金手指顶端最小间距 14 mil；&lt;/li&gt;
&lt;li&gt;金手指的倒角要求如下图所示，除了插入边要倒角以外，插板两侧板也应该设计（1-1.5）45° 的倒角或者 R1-R1.5 的圆角，方便插拔。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200226144135.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5NTEwMzgzMQ==&amp;amp;mid=2649269244&amp;amp;idx=2&amp;amp;sn=ca73ef4b3734b41d59ab1e14bcb6623a&amp;amp;chksm=bee196c489961fd25380547dcc36f7ff6c129ffd2382a460d432f6152782ab347f7118cf233e&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1582689705345&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=c7906fbfc53fe5d7bc99093e125472fc5bf7bce47f6e60a292ce9c07c4c99bd1855651114bf5b1f7f41907fbbedf35ee741ee5fbca484d64380c1486cc70f0946f35eadff73993f9cbab7af47b3b6e56&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=A%2BV%2F1nGsX3dWAdVVwb3gU4A%3D&amp;amp;pass_ticket=9Co0R2f8RJ%2BAEY%2FRlXB3p4L%2BjB3NsANRp2QCMNR1ZRpWYbXz9Y2XhUZog5FHSu%2Fm&#34;&gt;金手指是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzA3NTEzODc2Mg==&amp;amp;mid=2651875943&amp;amp;idx=1&amp;amp;sn=e2d707f5af6371740cc9d6512434ca0e&amp;amp;chksm=8491d9c2b3e650d4b597d19d9956449156b64e69e7270c2370ef4dfc40aaab6ee09ea4e690f9&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1582831875991&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=039e41916f0c5b3112996dc0d3d118480fc4471f799c219533de763261185bac35959a99889118a8c749bcca85a2ab1c07491a572297d5281cb91702606e77b45ab7547c5d031fdef888c6ae1860c17d&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=A3n60iUGoPLNJyA6X6FXphE%3D&amp;amp;pass_ticket=z4ox3f8nl73K2MPu0EBLLe%2FAru4MK%2B7c3EfDVNQbWWoZL0WujjMAwkBNocQsOmu8&#34;&gt;PCB 的金手指设计与加工制作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;DDR 储存阵列&lt;/h3&gt;
&lt;p&gt;详细的描述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A0-A9, A10/AP, A11, A12/BC#, A13：为 ACTIVATE 命令提供行地址，同时为 READ/WRITE 命令提供列地址和自动预充电位（A10），以便从某个 Bank 的内存阵列里选出一个位置。&lt;/li&gt;
&lt;li&gt;BA0-BA2：&lt;/li&gt;
&lt;li&gt;CK, CK#：&lt;/li&gt;
&lt;li&gt;CKE：&lt;/li&gt;
&lt;li&gt;CS#：&lt;/li&gt;
&lt;li&gt;DM：&lt;/li&gt;
&lt;li&gt;ODT：&lt;/li&gt;
&lt;li&gt;RAS#, CAS#, WE#：&lt;/li&gt;
&lt;li&gt;RESET#：&lt;/li&gt;
&lt;li&gt;DQ0-DQ7：&lt;/li&gt;
&lt;li&gt;DQS, DQS#：&lt;/li&gt;
&lt;li&gt;TDQS, TDQS#：&lt;/li&gt;
&lt;li&gt;VDD：&lt;/li&gt;
&lt;li&gt;VDDQ：&lt;/li&gt;
&lt;li&gt;VREFCA：&lt;/li&gt;
&lt;li&gt;VREFDQ：&lt;/li&gt;
&lt;li&gt;VSS：&lt;/li&gt;
&lt;li&gt;VSSQ：&lt;/li&gt;
&lt;li&gt;ZQ：&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/DDR%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/DDR%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      
    </item>
    
    <item>
      <title>ESXi 初始化指南</title>
      
      
      
      
      <description>&lt;p&gt;VMware ESXi 是一个可裸机安装的虚拟机管理器。本篇教程基于 ESXi 8，草稿阶段仍未发布。&lt;/p&gt;
&lt;p&gt;可以先跟着这篇教程上手：&lt;a href=&#34;https://post.smzdm.com/p/a8x6o5on/p3/?sort_tab=hot/#comments&#34;&gt;&lt;strong&gt;『软路由踩坑指南』 篇二：ESXi 8.0 虚拟机必备知识与保姆级安装过程&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;进行至 &lt;code&gt;5.修改ESXI的默认空间&lt;/code&gt; 这个地方时，改用以下方法，修改 ESXI 的默认空间大小。&lt;/p&gt;
&lt;h3&gt;减小 VMFSL 的占用&lt;/h3&gt;
&lt;p&gt;在点安装系统后 5 秒内，按 &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;O&lt;/code&gt;，输入 &lt;code&gt;cdromBoot runweasel systemMediaSize=min&lt;/code&gt;， 将虚拟内存配置到最小值。具体可参考官方文档 &lt;a href=&#34;https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.esxi.install.doc/GUID-474D003B-C6FB-465D-BC1B-5FD30F8E2209.html?hWord=N4IghgNiBcIM4E84BcCmBbAsqgJgSzAGU8AvVEAXyA#esxi-70-system-storage-links-2&#34;&gt;&lt;strong&gt;ESXi System Storage Overview&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;Windows 11 虚拟机的安装&lt;/h3&gt;
&lt;p&gt;Win11 对系统配置比较严苛，安装的时候可能会出现 &lt;code&gt;这台电脑无法运行Windows 11&lt;/code&gt;。一般问题来自于 TPM 检查，可以通过以下的方法避开：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在虚拟机的初始化页面，启用 &lt;code&gt;Windows 基于虚拟化的安全性&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在进入 Windows 虚拟机后的 &lt;code&gt;现在安装&lt;/code&gt; 页面，按快捷键 &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;F10&lt;/code&gt; 启动 cmd 窗口（如果调出 cmd 界面，有可能是笔记本的键盘键位问题，可以尝试外接一个键盘）。&lt;/li&gt;
&lt;li&gt;输入 regedit，打开注册表。在 &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\Setup&lt;/code&gt; 路径下，创建两个 32 位的 DWORD 值：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BypassTPMCheck&lt;/code&gt;，数值为 16 进制 &lt;code&gt;1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BypassSecureBootCheck&lt;/code&gt;，数值为 16 进制 &lt;code&gt;1&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果仍然无法安装，可以尝试检查其他的条件。可能是有一些条件达不到要求，比如 1GHz 以上的主频、64GB 以上的磁盘空间、4G 以上的内存。具体可参考 &lt;a href=&#34;https://www.microsoft.com/en-us/windows/windows-11-specifications?r=1&#34;&gt;&lt;strong&gt;System requirements&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/ESXi%E5%88%9D%E5%A7%8B%E5%8C%96%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/ESXi%E5%88%9D%E5%A7%8B%E5%8C%96%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>Flip - 基于全志 V3s 的 Linux 最小系统板</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.allwinnertech.com/index.php?c=product&amp;amp;a=index&amp;amp;id=38&#34;&gt;V3s - 入门级双路行车记录仪方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://whycan.com/t_322.html&#34;&gt;荔枝派 zero v3s 开发板资料汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Lichee-Pi/lichee-pi-zero&#34;&gt;Lichee-Pi/lichee-pi-zero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://licheezero.readthedocs.io/zh/latest/index.html&#34;&gt;荔枝派 Zero 中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.allwinnertech.com/uploads/pdf/2016080317552746.pdf&#34;&gt;Allwinner V3s: Entry-level Dual-Channel Dash Cams Solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/twzy/p/15691210.html&#34;&gt;小白自制Linux开发板(第二季 V3s篇) 一. 换个核心再来一次&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/Flip-%E5%9F%BA%E4%BA%8E%E5%85%A8%E5%BF%97V3s%E7%9A%84Linux%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/Flip-%E5%9F%BA%E4%BA%8E%E5%85%A8%E5%BF%97V3s%E7%9A%84Linux%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>Homelab</title>
      
      
      
      
      <description>&lt;h2&gt;DEBUG 环境&lt;/h2&gt;
&lt;p&gt;云服务器&lt;/p&gt;
&lt;p&gt;VS Code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remote - SSH&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#34;remote.SSH.useLocalServer&#34;: false,&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Portainer&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
mkdir -p docker/portainer
cd docker/portainer
nano docker-compose.yml&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;```docker&lt;/h2&gt;
&lt;p&gt;version: &#39;3&#39;&lt;/p&gt;
&lt;p&gt;services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000
```&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker-compose up -d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://SERVER_IP:9000/&#34;&gt;http://SERVER_IP:9000/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bobcares.com/blog/install-portainer-docker-compose/&#34;&gt;Install Portainer Docker Compose | How-to Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;cs http://frp.wiki-power.com:3000/ speed test
:8384 syncing&lt;/p&gt;
&lt;p&gt;https://icon.casaos.io/main/all/freshrss.png&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;https://www.docker.com/blog/how-to-use-the-official-nginx-docker-image/&lt;/p&gt;
&lt;p&gt;docker run -it --rm -d -p 8080:80 --name nginx-test nginx&lt;/p&gt;
&lt;p&gt;docker cp nginx-test:/root/docker/nginx/nginx.conf /etc/nginx/nginx.conf&lt;/p&gt;
&lt;p&gt;docker cp nginx-test:/root/docker/nginx/conf.d /etc/nginx/&lt;/p&gt;
&lt;p&gt;docker cp nginx-test:/etc/nginx/nginx.conf /root/docker/nginx/&lt;br&gt;
docker cp nginx-test:/etc/nginx/conf.d /root/docker/nginx/&lt;/p&gt;
&lt;p&gt;docker run nginx\
-p 80:80 \
--name nginx \
-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \
-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \
-v /root/docker/nginx/logs:/var/log/nginx \&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;CF 15 年证书&lt;/h2&gt;
&lt;p&gt;域名迁入 CF，在 SSL/TLS - Orgin Server 开启&lt;/p&gt;
&lt;hr&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/Homelab/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/Homelab/</guid>
      
    </item>
    
    <item>
      <title>M3UandIPTV</title>
      
      
      
      
      <description>&lt;p&gt;IPTV&lt;/p&gt;
&lt;p&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/p&gt;
&lt;p&gt;M3U&lt;/p&gt;
&lt;p&gt;http://www.101smoothjazz.com/101-smoothjazz.m3u&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;https://coderadio-admin.freecodecamp.org/radio/8010/radio.mp3&lt;/p&gt;
&lt;p&gt;https://www.jazz88.org/listen.m3u&lt;/p&gt;
&lt;p&gt;https://junguler.github.io/m3u-radio-music-playlists/&lt;/p&gt;
&lt;p&gt;AM3U&lt;/p&gt;
&lt;p&gt;m3u-radio-music-playlists&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/M3UandIPTV/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/M3UandIPTV/</guid>
      
    </item>
    
    <item>
      <title>PCB 常见封装参考</title>
      
      
      
      
      <description>&lt;p&gt;|   封装名称   |      特点      | 是否已收录 |
| :----------: | :------------: | :--------: |
| DO-214AC/SMA |  通流能力 2 A  |     1      |
| DO-214AA/SMB |  通流能力 4 A  |     1      |
| DO-214AB/SMC |  通流能力 5 A  |     1      |
|   TO-252AA   |                |            |
|   TO-263AB   |                |            |
|  TO-252-3L   |                |            |
|   TO-263AA   |                |            |
|   TO-263-4   |                |            |
|   TO-252-5   |                |            |
|   TO-263-5   |                |     1      |
|   TO-263-7   | 中间引脚被裁剪 |            |
|  TO-252-7F   |                |            |
|  TO-263-7F   |                |            |
|    TO-268    |                |            |&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《史上最全的 PCB 封装命名规范》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.topline.tv/topline_catalog.pdf&#34;&gt;topline_catalog.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.topline.tv/&#34;&gt;TopLine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/PCB%E5%B8%B8%E8%A7%81%E5%B0%81%E8%A3%85%E5%8F%82%E8%80%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/PCB%E5%B8%B8%E8%A7%81%E5%B0%81%E8%A3%85%E5%8F%82%E8%80%83/</guid>
      
    </item>
    
    <item>
      <title>Tools</title>
      
      
      
      
      <description>&lt;p&gt;—— 利器分享&lt;/p&gt;
&lt;h2&gt;工作流涉及的工具&lt;/h2&gt;
&lt;h3&gt;项目管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://trello.com/b/0QeKClyr/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE&#34;&gt;&lt;strong&gt;Trello&lt;/strong&gt;&lt;/a&gt;：个人项目进度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Power&#39;s Wiki&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://trello.com/b/0QeKClyr/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE&#34;&gt;&lt;strong&gt;Trello&lt;/strong&gt;&lt;/a&gt;：文章写作选题&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vuepress.vuejs.org/zh/&#34;&gt;&lt;strong&gt;VuePress&lt;/strong&gt;&lt;/a&gt;：Vue 驱动的静态网站生成器，中文文档&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vuepressjs/awesome-vuepress&#34;&gt;&lt;strong&gt;vuepressjs/awesome-vuepress&lt;/strong&gt;&lt;/a&gt;：VuePress 资源汇总&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zpfz.github.io/vuepress-creator/&#34;&gt;&lt;strong&gt;VuePress-Creator&lt;/strong&gt;&lt;/a&gt;：快速生成 VuePress 站点&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/av43316513?p=1&#34;&gt;&lt;strong&gt;一步步搭建 VuePress 及优化&lt;/strong&gt;&lt;/a&gt;：很详细的 VuePress 视频教程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://antdocs.seeyoz.cn/&#34;&gt;&lt;strong&gt;AntDocs&lt;/strong&gt;&lt;/a&gt;：一款 Ant Design 设计风格的 VuePress 主题&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docsify.js.org/#/zh-cn/&#34;&gt;&lt;strong&gt;docsify&lt;/strong&gt;&lt;/a&gt;：博客部署工具&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt;：一站式编辑器&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;微信公众号&lt;/h3&gt;
&lt;h3&gt;存档备份&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/collection-power&#34;&gt;&lt;strong&gt;语雀&lt;/strong&gt;&lt;/a&gt;：备份收藏的文章（含图片），防止内容失效&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;坚果云&lt;/strong&gt;：项目以文件夹形式储存、日常文件多端同步&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin&#34;&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;：项目以仓库形式储存、网站托管、图床等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;模板&lt;/h2&gt;
&lt;h3&gt;Wiki 文章&lt;/h3&gt;
&lt;p&gt;```markdown&lt;/p&gt;
&lt;h1&gt;文章标题&lt;/h1&gt;
&lt;h2&gt;简要描述。&lt;/h2&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;段落内容。&lt;/p&gt;
&lt;h2&gt;标题 1 ~ n&lt;/h2&gt;
&lt;p&gt;段落内容。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;段落内容。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;链接 1&#34;&gt;引用标题 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;链接 2&#34;&gt;引用标题 2&lt;/a&gt;
```&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;嵌入式项目&lt;/h3&gt;
&lt;p&gt;项目 / 仓库文件夹目录：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ProjectName
- Hardware（硬件部分）
--- ...（原理图、PCB 等项目文件，包含 Datasheet 文件夹）
- Software（软件部分）
--- ...（代码）
- Reference（参考资料）&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzI5Nzk5MTg3MQ==&amp;amp;mid=2247486709&amp;amp;idx=1&amp;amp;sn=fd394016d3d97e800192743f93474def&amp;amp;chksm=ecade725dbda6e33976ae2af4f795bf3b7b5505c2aa22fd9dc018a88d5f22bfee80bd229220c&amp;amp;scene=126&amp;amp;sessionid=0&amp;amp;subscene=0&amp;amp;clicktime=1581573151#rd&#34;&gt;『闲言碎语』予鱼不如予渔，我的公众号都是这样写出来的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/Tools/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/Tools/</guid>
      
    </item>
    
    <item>
      <title>Homelab文章模板</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;xxx&lt;/strong&gt; 是一个&lt;/p&gt;
&lt;h2&gt;部署（docker-compose）&lt;/h2&gt;
&lt;p&gt;先创建 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，并将以下的 &lt;code&gt;${DIR}&lt;/code&gt; 替换为本地的目录（比如我的是 &lt;code&gt;/DATA/AppData&lt;/code&gt;）；&lt;code&gt;${PORT}&lt;/code&gt; 替换为自定义的端口号（比如 &lt;code&gt;1234&lt;/code&gt;，选择不被占用的端口就可以）：&lt;/p&gt;
&lt;p&gt;```yml title=&#34;docker-compose.yml&#34;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;初始账户密码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;code&gt;xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Password: &lt;code&gt;xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;配置说明&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/homelab%E6%96%87%E7%AB%A0%E6%A8%A1%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/homelab%E6%96%87%E7%AB%A0%E6%A8%A1%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>Lab</title>
      
      
      
      
      <description>&lt;h2&gt;安装 sudo 命令&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;apt-get install sudo&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;开启 root 登录&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
sudo nano /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt;PermitRootLogin&lt;/code&gt; 这一行取消注释，并将值从 &lt;code&gt;prohibit-password&lt;/code&gt; 改为 &lt;code&gt;yes&lt;/code&gt;，保存。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl restart ssh # 重启 ssh 服务&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;安装 Docker 环境&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
apt install curl
curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun # 安装 Docker
sudo curl -L &#34;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)&#34; -o /usr/local/bin/docker-compose # 安装 Docker compose
sudo chmod +x /usr/local/bin/docker-compose # 将可执行权限应用于二进制文件
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose # 创建软链&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;安装 CasaOS&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
curl -fsSL https://get.casaos.io | sudo bash&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Docker Apps init&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装 Frp&lt;/li&gt;
&lt;li&gt;Cloudflared (&lt;a href=&#34;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/use_cases/ssh/&#34;&gt;&lt;strong&gt;Connect with SSH through Cloudflare Tunnel&lt;/strong&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/lab/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/lab/</guid>
      
    </item>
    
    <item>
      <title>Podcast</title>
      
      
      
      
      <description>&lt;p&gt;https://noted.lol/audiobookshelf-a-self-hosted-audiobook-and-podcast-server-with-phone-apps/&lt;/p&gt;
&lt;p&gt;| name                    | website                  | rss                                      |
| ----------------------- | ------------------------ | ---------------------------------------- |
| selfhosted              | https://selfhosted.show/ | https://feeds.fireside.fm/selfhosted/rss |
| ACCIDENTAL TECH PODCAST | https://atp.fm/          | https://cdn.atp.fm/rss/public?zzllvnjg   |&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/podcast/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/podcast/</guid>
      
    </item>
    
    <item>
      <title>Self host</title>
      
      
      
      
      <description>&lt;p&gt;轻量云服务器篇&lt;/p&gt;
&lt;p&gt;HomeLab 篇&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用 ventoy 安装 debian&lt;/li&gt;
&lt;li&gt;安装 casaos（带 docker）&lt;/li&gt;
&lt;li&gt;frp/nps&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NAS 篇&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;vi /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 PermitRootLogin 设置为 yes&lt;/p&gt;
&lt;p&gt;ubuntu/debian 系统安装 Curl 方法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
apt-get update -y &amp;amp;&amp;amp; apt-get install curl -y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 sudo：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
apt-get install sudo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 CasaOS：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
curl -fsSL https://get.casaos.io | sudo bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;换源：&lt;/p&gt;
&lt;p&gt;https://www.24kplus.com/linux/1933.html&lt;/p&gt;
&lt;h2&gt;frp:host,高权限&lt;/h2&gt;
&lt;p&gt;WiFi&lt;/p&gt;
&lt;p&gt;sudo apt-get install wireless-tools wpasupplicant
sudo apt-get install aptitude&lt;/p&gt;
&lt;p&gt;lspci | grep Wireless&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;cloudflared&lt;/p&gt;
&lt;p&gt;https://hub.docker.com/r/cloudflare/cloudflared&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run cloudflare/cloudflared:latest tunnel --no-autoupdate --hello-world&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;网卡&lt;/p&gt;
&lt;p&gt;https://www.jianshu.com/p/b341ee6ed160&lt;/p&gt;
&lt;p&gt;查询WIFI，如下显示了无线网卡的型号&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ lspci -nn
...
00:14.3 Network controller [0280]: Intel Corporation Device [8086:54f0]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;按着网址&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;连WiFi&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/self-host/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/self-host/</guid>
      
    </item>
    
    <item>
      <title>Vb</title>
      
      
      
      
      <description>&lt;h2&gt;Project Organization&lt;/h2&gt;
&lt;p&gt;A Visual Basic project is organized around three primary types of files: &lt;strong&gt;Forms&lt;/strong&gt;, &lt;strong&gt;Modules&lt;/strong&gt;, and &lt;strong&gt;Classes&lt;/strong&gt;. Forms normally contain interactive UI (i.e. TextBox, Button, Picture).&lt;/p&gt;
&lt;h2&gt;C Language Concepts in Visual Basic&lt;/h2&gt;
&lt;h3&gt;Data Types&lt;/h3&gt;
&lt;p&gt;The Visual Basic data types are:&lt;/p&gt;
&lt;p&gt;| Type                                     | Length                   | Comment                                                                                                                                                                                                          |
| ---------------------------------------- | ------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Byte                                     | 1 byte                   | &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;255&lt;/code&gt;                                                                                                                                                                                                     |
| Boolean                                  | 2 bytes                  | &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;                                                                                                                                                                                                |
| Integer                                  | 2 bytes                  | &lt;code&gt;-32,768&lt;/code&gt; to &lt;code&gt;32,767&lt;/code&gt;                                                                                                                                                                                            |
| Long (long int)                          | 4 bytes                  | &lt;code&gt;-2,147,483,648&lt;/code&gt; to &lt;code&gt;2,147,483,647&lt;/code&gt;                                                                                                                                                                              |
| Single (single-precision floating-point) | 4 bytes                  | &lt;code&gt;-3.402823E38&lt;/code&gt; to &lt;code&gt;-1.401298E-45&lt;/code&gt;; &lt;code&gt;1.401298E-45&lt;/code&gt; to &lt;code&gt;3.402823E38&lt;/code&gt;                                                                                                                                               |
| Double (double-precision floating-point) | 8 bytes                  | &lt;code&gt;-1.79769313486231E308&lt;/code&gt; to &lt;code&gt;-4.94065645841247E-324&lt;/code&gt;; &lt;code&gt;4.94065645841247E-324&lt;/code&gt; to &lt;code&gt;1.79769313486232E308&lt;/code&gt;                                                                                                           |
| Currency (scaled integer)                | 8 bytes                  | &lt;code&gt;-922,337,203,685,477.5808&lt;/code&gt; to &lt;code&gt;922,337,203,685,477.5807&lt;/code&gt;                                                                                                                                                        |
| Decimal                                  | 14 bytes                 | &lt;code&gt;+/-79,228,162,514,264,337,593,543,950,335&lt;/code&gt; with no decimal point; &lt;code&gt;+/-7.9228162514264337593543950335&lt;/code&gt; with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001 |
| Date                                     | 8 bytes                  | &lt;code&gt;January 1, 100&lt;/code&gt; to &lt;code&gt;December 31, 9999&lt;/code&gt;                                                                                                                                                                          |
| Object                                   | 4 bytes                  | Any Object reference                                                                                                                                                                                             |
| String (variable-length)                 | 10 bytes + string length | &lt;code&gt;0&lt;/code&gt; to approximately &lt;code&gt;2 billion&lt;/code&gt;                                                                                                                                                                                 |
| String (fixed-length)                    | Length of string         | &lt;code&gt;1&lt;/code&gt; to approximately &lt;code&gt;65,400&lt;/code&gt;                                                                                                                                                                                    |
| Variant                                  | 16 bytes                 | /                                                                                                                                                                                                                |&lt;/p&gt;
&lt;p&gt;Compared to C lang, VB lacks the concept of &lt;code&gt;unsigned int&lt;/code&gt; and &lt;code&gt;unsigned long&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;The Variant Type&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Variant&lt;/strong&gt; type is capable of holding any of the specific data types, including arrays.&lt;/p&gt;
&lt;h4&gt;The Boolean Type&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Booleans&lt;/strong&gt; can be assigned or tested for the pre-defined values &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;False&lt;/code&gt; is defined to have the value &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;True&lt;/code&gt; is defined to be a unary Not False that is &lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;VB evaluates logical expressions according to the same rule as C, non-
zero is &lt;code&gt;True&lt;/code&gt; and zero is &lt;code&gt;False&lt;/code&gt;. But &lt;strong&gt;never&lt;/strong&gt; get in the habit of thinking that &lt;code&gt;True&lt;/code&gt; has the value &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;The Object Type and Pointers&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Object&lt;/strong&gt; type is frequently used in VB program.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;pointer&lt;/strong&gt; is not explicitly present in the VB language. But in fact, variables whose type is Object are, references (a.k.a. pointers) to objects.&lt;/p&gt;
&lt;p&gt;Both will be introduce in the following chapters.&lt;/p&gt;
&lt;h4&gt;Type Conversion and Casting&lt;/h4&gt;
&lt;p&gt;There is a rich set of type conversion functions for the
fundamental types in VB:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CByte&lt;/code&gt; : Convert to a byte&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CCur&lt;/code&gt; : Convert to a currency&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CDate&lt;/code&gt; : Convert to a date&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CDbl&lt;/code&gt; : Convert to a double&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CDec&lt;/code&gt; : Convert to a decimal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CInt&lt;/code&gt; : Convert to an integer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CLng&lt;/code&gt; : Convert to a long&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CSng&lt;/code&gt; : Convert to a single&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CStr&lt;/code&gt; : Convert to a string&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CVar&lt;/code&gt; : Convert to a variant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also there are several additional math functions that manipulate numbers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Fix&lt;/code&gt; : Truncate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Int&lt;/code&gt; : Truncate, with different handling of negative numbers than Fix&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Round&lt;/code&gt; : Round, to a selectable number of decimal places&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt;: Perform integer division. (The regular division operator performs a floating point division)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can also try out type conversion in the IDE&#39;s Immediate Window before writing into program, which may avoid some mismatch errors.&lt;/p&gt;
&lt;h3&gt;Variables&lt;/h3&gt;
&lt;h4&gt;Variable Declaration&lt;/h4&gt;
&lt;p&gt;Variable declarations are &lt;strong&gt;optional&lt;/strong&gt; in VB. But we can prevent VB from auto-declaring variant variables if we don&#39;t like this feature, by adding the following construct at the top of every file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBScript
Option Explicit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It forces VB to complain about variables that haven&#39;t been declared. We can also set the value to &lt;code&gt;True&lt;/code&gt; in &lt;code&gt;Tools&lt;/code&gt; - &lt;code&gt;Options&lt;/code&gt; - &lt;code&gt;Editor&lt;/code&gt; - &lt;code&gt;Require Variable Declaration&lt;/code&gt; to cause &lt;code&gt;Option Explicit&lt;/code&gt; to be inserted automatically in new files.&lt;/p&gt;
&lt;p&gt;Variables are declared with the &lt;strong&gt;Dim&lt;/strong&gt; (dimension) keyword as follows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBScript
Dim x As Integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Noted that module-level variables are suggested to declare at the top of the module. The feature of &lt;code&gt;Option Explicit&lt;/code&gt; only requires you to dim the variable, but does not require the type (and the type is assumed to be variant).&lt;/p&gt;
&lt;p&gt;And be careful that VB does not have a way to declare multiple variables of the same type. Each variable must be separately declared and typed. For example, &lt;code&gt;Dim x, y As Integer&lt;/code&gt; will creates a variant variable &lt;code&gt;x&lt;/code&gt; and an integer variable &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Variable Scope&lt;/h4&gt;
&lt;p&gt;Variables which declared at the top of a module are &lt;strong&gt;global&lt;/strong&gt; to that module, also &lt;strong&gt;global&lt;/strong&gt; to the program. Variables which declared in the body of a function/subroutine, are &lt;strong&gt;private&lt;/strong&gt; to that procedure.&lt;/p&gt;
&lt;p&gt;We can create project-global variables by using the &lt;strong&gt;Public&lt;/strong&gt; keyword rather than Dim when you declare the variable. And in contrast, we can create a module scope variable by using the &lt;strong&gt;Private&lt;/strong&gt; keyword.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBScript
Public g_var As Integer
Private p_var As Integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Noted that &lt;strong&gt;Dim&lt;/strong&gt; can be omitted in both usage. The &lt;code&gt;extern&lt;/code&gt; keyword has no equivalent in VB, rather in C lang.&lt;/p&gt;
&lt;p&gt;In summary, we can use Public and Private for all module-level declarations, and use Dim for all procedure-level declarations.&lt;/p&gt;
&lt;h3&gt;Arrays&lt;/h3&gt;
&lt;p&gt;VB allows static/dynamic arrays of any type and with any number of dimensions. Arrays can be resized at runtime.&lt;/p&gt;
&lt;h4&gt;Declaration of Arrays&lt;/h4&gt;
&lt;p&gt;The syntax of for declaring an unsized array is as follows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBScript
Dim x() As Long &#39;undimensioned&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sizing and resizing of the array can be done at runtime with the &lt;strong&gt;ReDim&lt;/strong&gt; function. We can ReDim with the &lt;code&gt;Preserve&lt;/code&gt; attribute in order to preserve the array content while making it larger. The &lt;code&gt;Erase&lt;/code&gt; statement can be used to clear a fixed array of any type, also release storage of dynamically ReDim&#39;d arrays.&lt;/p&gt;
&lt;p&gt;VB has a flexible syntax for describing how we want to index an array:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBScript
Dim x(5) As Long &#39;dimension an array of 6 elements
Dim x(1 To 5) As Long &#39;5 elements from 1 to 5, more prefer
Dim y(100 To 200) As String &#39;legal index values range from 100 to 200&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Multiple Dimension Arrays&lt;/h4&gt;
&lt;p&gt;We can declare an array to have as many dimensions. For example, a
declaration for a 2 dimension array of Longs:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBScript
Dim x(1 To 5, 1 To 10) As Long&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Variant Arrays&lt;/h4&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/vb/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/vb/</guid>
      
    </item>
    
    <item>
      <title>产品PRD模板</title>
      
      
      
      
      <description>&lt;p&gt;具体产品的 PRD 内容，可在此基础上增加，但不可减少&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;版本信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;| 版本 | 内容 | 编辑人 | 日期 |
| ---- | ---- | ------ | ---- |
|      |      |        |      |
|      |      |        |      |&lt;/p&gt;
&lt;h1&gt;一、需求背景&lt;/h1&gt;
&lt;p&gt;描述清楚为什么要做这个产品，需求的来源，产品做出来是为了解决什么问题。&lt;/p&gt;
&lt;h1&gt;二、需求分析&lt;/h1&gt;
&lt;h3&gt;1. 商业可行性分析&lt;/h3&gt;
&lt;p&gt;包括了市场、竞品、用户群体、应用场景等的需求分析。描述清楚机会点。&lt;/p&gt;
&lt;h3&gt;2. 技术可行性分析&lt;/h3&gt;
&lt;p&gt;由研发负责这部分&lt;/p&gt;
&lt;h1&gt;三、产品定义&lt;/h1&gt;
&lt;p&gt;能让内部工程师看到文档后，清楚需要实现的功能，性能是什么，验收标准是什么。&lt;/p&gt;
&lt;h3&gt;1. 硬件&lt;/h3&gt;
&lt;p&gt;| 功能 | 描述 | 性能及特殊要求 | 需求强度（高、中、低） |
| ---- | ---- | -------------- | ---------------------- |
|      |      |                |                        |
|      |      |                |                        |&lt;/p&gt;
&lt;h3&gt;2. 软件&lt;/h3&gt;
&lt;p&gt;| 功能 | 描述 | 特殊要求 | 需求强度（高、中、低） |
| ---- | ---- | -------- | ---------------------- |
|      |      |          |                        |
|      |      |          |                        |&lt;/p&gt;
&lt;h3&gt;3. 结构&lt;/h3&gt;
&lt;h3&gt;4. 包装&lt;/h3&gt;
&lt;p&gt;包装盒，说明书，配件等&lt;/p&gt;
&lt;h3&gt;5. 安规&lt;/h3&gt;
&lt;p&gt;需要拿到的产品认证&lt;/p&gt;
&lt;h3&gt;6. 部署环境&lt;/h3&gt;
&lt;p&gt;温度，湿度，防尘防水，震动等&lt;/p&gt;
&lt;h3&gt;7. 文档需求&lt;/h3&gt;
&lt;p&gt;产品需要产出的文档，主要是市场推广的需求，用户的需求等对外文档，不包含对内文档&lt;/p&gt;
&lt;h1&gt;四、产品目标&lt;/h1&gt;
&lt;h3&gt;1. 目标成本及定价策略&lt;/h3&gt;
&lt;h3&gt;2. 目标上市时间及其他重要产品节点&lt;/h3&gt;
&lt;h1&gt;五、市场计划&lt;/h1&gt;
&lt;p&gt;市场推广的计划，产品内容的规划等如何 “养产品” 的问题&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E4%BA%A7%E5%93%81PRD%E6%A8%A1%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E4%BA%A7%E5%93%81PRD%E6%A8%A1%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>信号完整性设计</title>
      
      
      
      
      <description>&lt;h2&gt;什么是信号完整性&lt;/h2&gt;
&lt;p&gt;信号完整性（Signal Integrity，SI）是指信号在信号线上的质量。信号具有良好的信号完整性是指当在需要的时候具有所必需达到的电压电平数值。&lt;/p&gt;
&lt;p&gt;在低速数字电路中，0/1 电平拥有比模拟电路高得多的抗噪声能力。但随着电路工作频率变高，承载 0/1 电平的电压或电流波形会出现畸变，从而导致接收的信息出现错误，这就是信号完整性（Signal Intergrity，SI）问题。在涉及高速信号的设计时，需要考虑信号完整性问题。&lt;/p&gt;
&lt;h2&gt;带状线和微带线&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211126145234.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;微带线&lt;/h3&gt;
&lt;p&gt;微带线（Micro-Strip）指的是只有一边存在参考平面的传输线。微带线特性阻抗由导线的厚度、宽度、基材厚度及介电常数决定。主要用于双层和多层板。&lt;/p&gt;
&lt;p&gt;因为微带线在电路板外层，接触空气，所以介电损耗低于带状线，信号传输速度快。它的制造难度低，成本更低。但也因为在外层，所以少了一些内置保护，并且会对外辐射更多的能量。&lt;/p&gt;
&lt;h3&gt;带状线&lt;/h3&gt;
&lt;p&gt;带状线（Strip-Line）指的是两边都有参考平面的内层传输线。根据与两接地平面的距离相同或不同，又分为对称与非对称带状线。带状线的特性阻抗由导线的厚度、宽度、介电常数，及接地平面的距离有关。带状线两边都有电源或者底层，因此阻抗容易控制，同时屏蔽较好。&lt;/p&gt;
&lt;p&gt;因为带状线是嵌在两层导体之间，所以它的电场分布都在两个包它的导体（平面）之间，不会辐射出去能量，也不会受到外部的辐射干扰。但是由于它的周围全是电介质（介电常数比 1 大），所以信号在带状线中的传输速度比在微带线中的慢。&lt;/p&gt;
&lt;h2&gt;信号质量问题&lt;/h2&gt;
&lt;p&gt;常见的信号质量问题表现在下面几个方面：&lt;/p&gt;
&lt;h3&gt;毛刺&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220093321.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;毛刺的危害是容易造成控制信号控制错误，或时钟信号相位发生错误：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据线上的毛刺如果被采样到，可能造成判断结果错误；&lt;/li&gt;
&lt;li&gt;边沿触发的器件中，时钟线上的毛刺可能会使得采样到多余的数据（多了一拍时钟信号）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;毛刺的产生原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PCB 走线串扰（例如数据线和时钟线平行走线长度太大，信号线经过晶振等干扰源附近）；&lt;/li&gt;
&lt;li&gt;外界干扰，比如地线上的噪声；&lt;/li&gt;
&lt;li&gt;逻辑出现竞争、冒险。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决毛刺的方法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;控制器件布局和 PCB 走线，信号远离干扰源；&lt;/li&gt;
&lt;li&gt;添加去耦电容或输出滤波电容。滤波器件尽量靠近信号管脚；&lt;/li&gt;
&lt;li&gt;逻辑设计中添加冗余项，或者采用同步逻辑设计，避免竞争冒险。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果负向毛刺时始终落在高电平判决门限以上，那么没有什么影响（因为始终会被判断为高电平）；如果正向毛刺始终落在低电平判决门限以下，那么没有什么影响（因为始终会被判断为低电平）。&lt;/p&gt;
&lt;h3&gt;回勾 / 台阶&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220092811.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;回沟的危害：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;时钟类信号上的回勾，可能会使得采样到多余的数据（多一拍时钟），影响了时钟信号上升沿和下降沿的单调性；&lt;/li&gt;
&lt;li&gt;电源信号上电边沿的回勾可能导致系统死机，需要结合复位信号判断能够接受此回勾；&lt;/li&gt;
&lt;li&gt;数据信号由于一般是在数据的中间采样，回勾的影响不是很大（除非速率很高，建立保持的时间又很短）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;回勾的产生原因是阻抗匹配不当，信号反射回来形成的。&lt;/p&gt;
&lt;p&gt;解决回勾的方法是增加合适的匹配阻抗（一般来讲，对于单端信号，单板内信号可以加 33Ω 电阻始端匹配，板间信号加 200Ω 电阻匹配较合适）。&lt;/p&gt;
&lt;p&gt;回勾始终落在高电平判决门限以上（或者始终落在低电平判决门限以下），那就没什么影响，因为会时钟被判断为高电平（低电平）。&lt;/p&gt;
&lt;h3&gt;信号边沿缓慢&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220093258.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;信号边沿缓慢的危害是会造成数据采样错误（发生在数据信号线如串口等）。&lt;/p&gt;
&lt;p&gt;信号边沿缓慢的产生原因是驱动能力不够，或者负载过大（例如链路阻抗太大）。&lt;/p&gt;
&lt;p&gt;解决信号边沿缓慢的方法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提高驱动能力；&lt;/li&gt;
&lt;li&gt;减小负载。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于驱动不足或者负载过大，信号边沿缓慢也常伴随着信号幅度较低的现象。&lt;/p&gt;
&lt;h3&gt;振荡（回冲 / 振铃）&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220094236.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;回冲指多次跨越电平临界值，而振铃指经过多次反复才回归正常电平。&lt;/p&gt;
&lt;p&gt;回冲 / 振铃的危害类似于多次过冲，在高低电平之间是一种不确定的状态。&lt;/p&gt;
&lt;p&gt;回冲 / 振铃的产生原因是阻抗匹配不当（过大或国小）。&lt;/p&gt;
&lt;p&gt;解决方法是更改为合适的匹配电阻（阻抗）。&lt;/p&gt;
&lt;h3&gt;建立 / 保持时间不当&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220100245.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;建立时间（$t_{SU}$，setup time））就是指在触发器的采样信号（一般指时钟）有效之前，数据已经稳定不变的时间；保持时间（$t_{HO}$，hold time）是指采样信号有效之后数据保持稳定不变的时间。&lt;/p&gt;
&lt;p&gt;建立时间不够的危害是，读到的数据会是一个不稳定的数据，可能会造成采样错误；保持时间不够，读写数据处理过程中同样可能读写到错误数据。&lt;/p&gt;
&lt;p&gt;建立 / 保持时间不当产生的原因是设计时没计算恰当，或者没有考虑到设计容限范围，也有可能是因为元器件温漂导致。&lt;/p&gt;
&lt;p&gt;解决方法是，对于时钟边沿采样信号，尽量使得采样时钟边沿在数据的中间，这样尽管器件参数漂移，设计上还是有较大的裕度。&lt;/p&gt;
&lt;h3&gt;电磁辐射&lt;/h3&gt;
&lt;p&gt;电磁辐射（EMI）的问题可跳转文章 &lt;a href=&#34;https://wiki-power.com/EMC%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97&#34;&gt;&lt;strong&gt;EMC 设计指南&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;🚧 待整理知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;所有的信号互联都是传输线&lt;/li&gt;
&lt;li&gt;信号的阻抗是损失阻抗&lt;/li&gt;
&lt;li&gt;一般来说，要尽量要减小环路&lt;/li&gt;
&lt;li&gt;阻抗：任何时刻 Z=V/I&lt;/li&gt;
&lt;li&gt;阻抗计算工具：IS9000&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《信号完整性揭秘-于博士 SI 设计手记》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EF7SxgcDfCo&#34;&gt;What Every PCB Designer Should Know - Crosstalk Explained (with Eric Bogatin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《硬件信号质量 SI 测试规范》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_40877615/article/details/95329866&#34;&gt;传输线串扰分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3&gt;反射&lt;/h3&gt;
&lt;p&gt;反射是传输线特性阻抗或终端电阻不匹配引发的，会引起信号的反射。造成的危害是，过冲、下冲、振铃。&lt;/p&gt;
&lt;h4&gt;过冲&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211220091443.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;过冲分为正负过冲。他们共同的危害是闩锁损伤器件（&amp;gt;VCC 或 \&amp;lt;GND），对器件冲击造成器件损坏。其中，正过冲会形成干扰源，对其他器件造成串扰；负过冲导致管脚上的负电压使器件 PN 衬底（寄生二极管）前向偏置，大电流会熔断产生开路。&lt;/p&gt;
&lt;p&gt;过冲的产生原因有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;其它相邻信号串扰；&lt;/li&gt;
&lt;li&gt;器件驱动能力太强；&lt;/li&gt;
&lt;li&gt;阻抗没有匹配 / 匹配不当。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决过冲的方法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PCB 布线避开干扰源和耦合路径；&lt;/li&gt;
&lt;li&gt;增加电阻匹配，参考做法是始端串电阻或者末端并阻抗（电阻），减少过冲。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;损耗 / 延时&lt;/h3&gt;
&lt;p&gt;传输线长度不当会造成传输延时与损耗。造成的危害是，损耗造成电压幅值变小，延时造成时序雨量不足。&lt;/p&gt;
&lt;h3&gt;串扰&lt;/h3&gt;
&lt;p&gt;一根信号线上有信号通过时，在 PCB 板上与之相邻的信号线上就会感应出相关的信号，我们称之为串扰。串扰通常表现为毛刺。串扰是传输线之间相互的寄生电感产生耦合引发的，带来的危害是使信号畸变。&lt;/p&gt;
&lt;p&gt;串扰分为近端（NEXT）串扰与远端串扰（FEXT）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014143734.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图可见，上方信号线传过来了一个跳变的信号，在粉色的区域内，两根导线靠得很近（不符合 3W 原则），所以会产生串扰。下方的导线是受干扰的线。&lt;/p&gt;
&lt;p&gt;在跳变信号进入干扰区域（粉色区域）时，开始发生串扰：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014144817.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014145322.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以观察到，&lt;strong&gt;由于干扰源在移动，且同时向两个方向发出&lt;/strong&gt;，所以随着时间的推进，与信号同向的干扰波形会叠加，而与信号反向波形高度保持不变。&lt;/p&gt;
&lt;p&gt;当跳变信号传出干扰区域后，受干扰线上的凸起波形开始消失，并向各自的方向推进：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014145143.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终，在近端 / 远端接收的干扰如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20211014150220.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;减少串扰的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加走线间距：3W 原则&lt;/li&gt;
&lt;li&gt;信号线距离地线距离拉近&lt;/li&gt;
&lt;li&gt;减小平行走线的耦合长度&lt;/li&gt;
&lt;li&gt;增大信号的上升时间或下降时间：在时序条件允许的情况下，这可以减少高频信号所带来的影响&lt;/li&gt;
&lt;li&gt;合理采用端接匹配技术：减弱甚至消耗信号的反射，从而减弱串扰强度。&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>傅里叶变换</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLEUKC88yR4_al2oa2LF0SKS2RPpxmWg3n&#34;&gt;傅立叶变换基础系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jezzamon.com/fourier/zh-cn.html&#34;&gt;傅里叶变换交互式入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;傅里叶级数&lt;/h2&gt;
&lt;p&gt;什么是傅里叶级数？如果函数 $f(x)$ 为周期函数，则它可以被展开为以正弦和余弦为基的线性组合。&lt;/p&gt;
&lt;p&gt;假设 $f(x)$ 的周期为 $2\pi$，则可选 $sin(x),cos(x),sin(2x),cos(2x),sin(n),cos(n)$ 这些基函数来构造，因为它们的周期都包含 $2\pi$：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220719215900.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外，$cos(0x)$ 为常数，也是可以选的。&lt;/p&gt;
&lt;p&gt;又因为任意函数 $f(x)$ 都可以表示为一个奇函数与一个偶函数的和，所以一般我们用 $sin(x)$ 与 $cos(x)$ 一起构造。&lt;/p&gt;
&lt;p&gt;所以周期为 $2\pi$ 函数的傅里叶级数可以表示为：&lt;/p&gt;
&lt;p&gt;$$
f(x)=a_0+\sum_{n=1}^\infty a_n cos(nx)+\sum_{n=1}^\infty b_n sin(nx),\ n\in N,\ a_n,b_n\in R
$$&lt;/p&gt;
&lt;p&gt;$a_0,a_n,b_n$ 这三个参数，可以通过不同的数学运算求得，此处不展开详细说明。&lt;/p&gt;
&lt;p&gt;通过求函数在一个周期上的积分，可消除其他项，求得 $a_0$：&lt;/p&gt;
&lt;p&gt;$$
a_0=\frac{1}{2\pi} \int_{-\pi}^{\pi} f(x)dx
$$&lt;/p&gt;
&lt;p&gt;通过原函数乘上 $cos(x)$ 再求一个周期内的积分，可消除其他项，求得 $a_n$：&lt;/p&gt;
&lt;p&gt;$$
a_n=\frac{1}{\pi} \int_{-\pi}^{\pi} f(x)cos(nx)dx
$$&lt;/p&gt;
&lt;p&gt;通过原函数乘上 $sin(x)$ 再求一个周期内的积分，可消除其他项，求得 $b_n$：&lt;/p&gt;
&lt;p&gt;$$
b_n=\frac{1}{\pi} \int_{-\pi}^{\pi} f(x)sin(nx)dx
$$&lt;/p&gt;
&lt;h2&gt;傅里叶级数的复数形式&lt;/h2&gt;
&lt;p&gt;$$
f(x)=\sum_{n=-\infty}^\infty c_n e^{inx}dx
$$&lt;/p&gt;
&lt;p&gt;$$
c_n=\frac{1}{2\pi} \int_{-\pi}^{\pi} f(x)  e^{-inx}dx
$$&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/</guid>
      
    </item>
    
    <item>
      <title>哥德堡变奏曲与古尔德</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;p&gt;巴赫&lt;/p&gt;
&lt;p&gt;百听不厌&lt;/p&gt;
&lt;p&gt;一整部专辑听&lt;/p&gt;
&lt;p&gt;复调 每首曲子背后的故事&lt;/p&gt;
&lt;p&gt;自己弹的视频&lt;/p&gt;
&lt;p&gt;参考的视频&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%93%A5%E5%BE%B7%E5%A0%A1%E5%8F%98%E5%A5%8F%E6%9B%B2%E4%B8%8E%E5%8F%A4%E5%B0%94%E5%BE%B7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%93%A5%E5%BE%B7%E5%A0%A1%E5%8F%98%E5%A5%8F%E6%9B%B2%E4%B8%8E%E5%8F%A4%E5%B0%94%E5%BE%B7/</guid>
      
    </item>
    
    <item>
      <title>如何掌握自己的数据权</title>
      
      
      
      
      <description>&lt;p&gt;思想：开源、多设备同步、无持续支出成本。&lt;/p&gt;
&lt;h2&gt;项目仓库&lt;/h2&gt;
&lt;p&gt;我将日常生产资料以项目文件夹的形式归档，配合 Git 和 GitHub，可实现多机 + 云端备份。&lt;/p&gt;
&lt;p&gt;具体操作方法可参考 &lt;a href=&#34;https://wiki-power.com/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E6%8B%89%E5%8F%96Git%E4%BB%93%E5%BA%93%E6%9B%B4%E6%96%B0&#34;&gt;&lt;strong&gt;如何批量拉取 Git 仓库更新&lt;/strong&gt;&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h2&gt;大项目储存&lt;/h2&gt;
&lt;p&gt;使用 Git 做版本管理与备份，不适合非二进制 / 体积较大的文件，处理速度慢，且生成的历史文件非常占用储存空间。&lt;/p&gt;
&lt;p&gt;对于较大项目的储存，我使用的是网盘 + NAS。&lt;/p&gt;
&lt;h2&gt;密码&lt;/h2&gt;
&lt;p&gt;之前我使用的是 LastPass。但是 LastPass 免费版本只允许同时登录一台设备，且密码托管在别人手中还是相对不安全的。&lt;/p&gt;
&lt;p&gt;替换的方案是自部署 Bitwarden，具体可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E4%BA%8EBitwarden%E6%90%AD%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89&#34;&gt;&lt;strong&gt;使用 Bitwarden 搭建密码管理器（群晖 Docker）&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;相册&lt;/h2&gt;
&lt;p&gt;之前我使用的是 Google Photos，但是从 2021 年 6 月开始，Google Photos 将结束高质量照片免费上传。所以我把照片都迁移到了群晖的 Photos，使用体验基本一致。迁移方法可以跳转文章 &lt;a href=&#34;https://wiki-power.com/%E8%A7%A3%E5%86%B3Google%E7%9B%B8%E5%86%8C%E5%AF%BC%E5%87%BA%E6%97%B6%E9%97%B4%E4%BF%A1%E6%81%AF%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98&#34;&gt;&lt;strong&gt;解决 Google 相册导出时间信息丢失问题&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;电子书库&lt;/h2&gt;
&lt;p&gt;电子书的收纳整理，我是在群晖 Docker 中使用 Calibre 搭建的。具体跳转文章 &lt;a href=&#34;https://wiki-power.com/%E5%9F%BA%E4%BA%8ECalibre%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E4%B9%A6%E5%BA%93%EF%BC%88%E7%BE%A4%E6%99%96Docker%EF%BC%89&#34;&gt;&lt;strong&gt;使用 Calibre 搭建在线书库（群晖 Docker）&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;资源搜索：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文：&lt;a href=&#34;http://www.ucdrs.superlib.net/&#34;&gt;&lt;strong&gt;全国图书馆参考咨询联盟&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;英文：&lt;a href=&#34;http://libgen.rs/&#34;&gt;&lt;strong&gt;Library Genesis&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;音乐&lt;/h2&gt;
&lt;h2&gt;Nav&lt;/h2&gt;
&lt;h2&gt;订阅 RSS&lt;/h2&gt;
&lt;h2&gt;日历与待办&lt;/h2&gt;
&lt;h2&gt;通讯录&lt;/h2&gt;
&lt;h2&gt;图床&lt;/h2&gt;
&lt;p&gt;为了提高访问速度，我使用腾讯云的对象储存，作为所有网站的图床。&lt;br&gt;
为了数据安全，我使用群晖 NAS 的 CloudSync 功能，备份图床文件到 NAS 上。&lt;/p&gt;
&lt;p&gt;如果没有需要在本地进行备份，可以使用 Rclone 之类的工具，具体详见文章 &lt;a href=&#34;https://wiki-power.com/%E4%BD%BF%E7%94%A8Rclone%E5%90%8C%E6%AD%A5%E7%BD%91%E7%9B%98%E6%95%B0%E6%8D%AE&#34;&gt;&lt;strong&gt;使用 Rclone 同步网盘数据&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;| 文件夹           | 用途                     | 重要性 | Drive | 版本控制 | 同步设备 | 完全同步 | 其他           |
| ---------------- | ------------------------ | ------ | ----- | -------- | -------- | -------- | -------------- |
| &lt;strong&gt;backup&lt;/strong&gt;       | Hyperbackup 专用         | ⭐     |       |          |          |          |                |
| &lt;strong&gt;book&lt;/strong&gt;         | 电子书库                 | ⭐⭐   |       |          |          |          |                |
| &lt;strong&gt;docker&lt;/strong&gt;       | Docker 运行文件          | ⭐⭐⭐ |       |          |          |          |                |
| &lt;strong&gt;homes&lt;/strong&gt;        | 用户文件夹（相册）   | ⭐⭐⭐ |       | x        |          |          |                |
| &lt;strong&gt;music&lt;/strong&gt;        | 音乐库                   | ⭐⭐   | 启用  | x        | Win      | 否       |                |
| &lt;strong&gt;projects&lt;/strong&gt;     | 备份 GitHub 仓库         | ⭐     |       | x        | Win      |          |                |
| &lt;strong&gt;stash&lt;/strong&gt;        | 杂物                     | ⭐⭐   | 启用  | x        | Win      | 否       |                |
| &lt;strong&gt;video&lt;/strong&gt;        | 电影库                   | ⭐⭐   | 启用  | x        |          |          |                |
| &lt;strong&gt;web&lt;/strong&gt;          | /                        | ⭐     |       |          |          |          |                |
| &lt;strong&gt;web_packages&lt;/strong&gt; | /                        | ⭐     |       |          |          |          |                |
| &lt;strong&gt;wiki-media&lt;/strong&gt;   | 定时同步图床             | ⭐⭐⭐ | 启用  | 2        |          |          | 同步腾讯云 COS |
| &lt;strong&gt;win-desktop&lt;/strong&gt;  | 同步 Windows 桌面        | ⭐⭐⭐ | 启用  | x        | Win      | 是       |                |
| &lt;strong&gt;win-software&lt;/strong&gt; | 同步 Windows 便携式软件  | ⭐⭐⭐ | 启用  | x        | Win      | 是       |                |&lt;/p&gt;
&lt;p&gt;| Cloud Sync       | 重要性 | 阿里云盘 WebDAV      | 百度云               | Google 云端硬盘               | Backblaze B2                  |
| ---------------- | ------ | -------------------- | -------------------- | ----------------------------- | ----------------------------- |
| &lt;strong&gt;backup&lt;/strong&gt;       | ⭐     |                      |                      |                               |                               |
| &lt;strong&gt;book&lt;/strong&gt;         | ⭐⭐   | multi_encrypt-upload | multi_encrypt-upload |                               |                               |
| &lt;strong&gt;docker&lt;/strong&gt;       | ⭐⭐⭐ | multi_encrypt-upload | multi_encrypt-upload | multi_encrypt-upload-schedule | multi_encrypt-upload-schedule |
| &lt;strong&gt;homes&lt;/strong&gt;        | ⭐⭐⭐ | multi_encrypt-upload | multi_encrypt-upload |                               |                               |
| &lt;strong&gt;music&lt;/strong&gt;        | ⭐⭐   | multi_encrypt-upload | multi_encrypt-upload |                               |                               |
| &lt;strong&gt;projects&lt;/strong&gt;     | ⭐     |                      |                      |                               |                               |
| &lt;strong&gt;stash&lt;/strong&gt;        | ⭐⭐   |                      |                      |                               |                               |
| &lt;strong&gt;video&lt;/strong&gt;        | ⭐⭐   |                      |                      |                               |                               |
| &lt;strong&gt;web&lt;/strong&gt;          | ⭐     |                      |                      |                               |                               |
| &lt;strong&gt;web_packages&lt;/strong&gt; | ⭐     |                      |                      |                               |                               |
| &lt;strong&gt;wiki-media&lt;/strong&gt;   | ⭐⭐⭐ | multi_encrypt-upload | multi_encrypt-upload | multi_encrypt-upload-schedule | wiki-media_upload-schedule    |
| &lt;strong&gt;win-desktop&lt;/strong&gt;  | ⭐⭐⭐ | multi_encrypt-upload | multi_encrypt-upload | multi_encrypt-upload-schedule | multi_encrypt-upload-schedule |
| &lt;strong&gt;win-software&lt;/strong&gt; | ⭐⭐⭐ | multi_encrypt-upload | multi_encrypt-upload | multi_encrypt-upload-schedule | multi_encrypt-upload-schedule |&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fugary.com/?p=382&#34;&gt;群晖 NAS 配置阿里云盘同步（新）&lt;/a&gt;
&lt;a href=&#34;https://fugary.com/?p=363&#34;&gt;群晖 Docker 安装和运行 Clash 并自动更新订阅&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;微信备份&lt;/h2&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/66527&#34;&gt;三个大脑系列（三）：思维大脑（上）—— 信息搜集与整理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;&lt;br&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;https://tailscale.com/kb/1131/synology/#manual-installation-steps&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8F%A1%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9D%83/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8F%A1%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9D%83/</guid>
      
    </item>
    
    <item>
      <title>平静下的波澜</title>
      
      
      
      
      <description>&lt;p&gt;🎵The Sound Of Silence - Simon &amp;amp; Garfunkel🎵&lt;/p&gt;
&lt;p&gt;我漫不经心地往杯子里扔了一块冰，倒了半杯波本威士忌。&lt;/p&gt;
&lt;p&gt;虽然 &lt;em&gt;The Sounds of Silence&lt;/em&gt; 这首歌被很多后继者翻唱过，但我仍喜欢创作者 Simon &amp;amp; Garfunkel 糅合了和声和摇滚元素的那一版。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello darkness, my old friend
你好，黑暗，我的老朋友
I&#39;ve come to talk with you again
我又來和你交談
Because a vision softly creeping
因為有一種幻覺正向悄悄地向我襲來
Left its seeds while I was sleeping
在我熟睡的時候留下了它的種子
And the vision that was planted in my brain
這種幻覺在我的腦海裡生根發芽
Still remains
纏繞著我
Within the sound of silence
伴隨著寂靜的聲音&lt;/p&gt;
&lt;p&gt;In restless dreams I walked alone
在不安的夢幻中我獨自行走
Narrow streets of cobblestone
狹窄的鵝卵石街道
&#39;Neath the halo of a street lamp
在路燈的光環照耀下
I turned my collar to the cold and damp
我豎起衣領 抵禦嚴寒和潮濕
When my eyes were stabbed by the flash of a neon light
一道耀眼的霓虹燈光刺入我的眼睛
That split the night
它劃破夜空
And touched the sound of silence
觸摸著寂靜的聲音&lt;/p&gt;
&lt;p&gt;And in the naked light I saw
在炫目的燈光下
Ten thousand people, maybe more
我看見成千上萬的人
People talking without speaking
人們說而不言
People hearing without listening
聽而不聞
People writing songs that voices never share
人們創造歌曲卻唱不出聲來
And no one dare disturb the sound of silence
沒有人敢打擾這寂靜的聲音&lt;/p&gt;
&lt;p&gt;&#34;Fools&#34; said I, &#34;You do not know
我說：“傻瓜，難道你不知道
Silence like a cancer grows”
寂靜如同頑疾滋長”
Hear my words that I might teach you
聽我對你說的有益的話
Take my arms that I might reach to you
拉住我伸給你的手
But my words like silent as raindrops fell
但是我的話猶如雨滴飄落
And echoed in the wells of silence
在寂靜的水井中迴響&lt;/p&gt;
&lt;p&gt;And the people bowed and prayed to the neon god they made.
人們向自己創造的霓虹之神鞠躬、祈禱
And the sign flashed out its warning
神光中閃射出告誡的語句
And the words that it was forming
在字裡行間指明
And the sign said:
它告訴人們
&#34;The words of the prophets are written on the subway walls
預言者的話都已寫在地鐵的牆上
and tenement halls
和房屋的大廳裡
And whispered in the sound of silence.&#34;
在寂靜的聲音裡低語&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%B9%B3%E9%9D%99%E4%B8%8B%E7%9A%84%E6%B3%A2%E6%BE%9C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E5%B9%B3%E9%9D%99%E4%B8%8B%E7%9A%84%E6%B3%A2%E6%BE%9C/</guid>
      
    </item>
    
    <item>
      <title>智能家居套件</title>
      
      
      
      
      <description>&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?ut_sk=1.Yj3%2BRejs3GYDAFdo21Bc%2Brfs_21380790_1651841841412.Copy.1&amp;amp;id=43062142075&amp;amp;detailSharePosition=interactBar&amp;amp;iconType=commonIconType&amp;amp;sourceType=item&amp;amp;suid=F08F374D-DCD9-4A2E-9BFA-3B4B7E4032CB&amp;amp;shareUniqueId=15927154605&amp;amp;un=98c4b91fa04cd6894c6e4bed9157ce66&amp;amp;share_crt_v=1&amp;amp;un_site=0&amp;amp;spm=a2159r.13376460.0.0&amp;amp;sp_abtk=common_1_commonInfo&amp;amp;tbSocialPopKey=shareItem&amp;amp;sp_tk=anlqZjJRWWoyekU%3D&amp;amp;cpp=1&amp;amp;shareurl=true&amp;amp;short_name=h.fr08ikW&amp;amp;bxsign=scdKCs5G0sUfOnUKb_KX3MO1dvNLDWvRstGZ78-6OoJnc7upG3L5eJjpTwaHRNlH837yRqeHucpAQ7LDT51AJgDatrlwisd27Rn0xMcFTQ9qzmjp1DdULtooXVOXq7uvF_X&amp;amp;tk=jyjf2QYj2zE&amp;amp;app=chrome&#34;&gt;HLK-PM01 超小型电源模块 220v 转 5v、智能家居 AC-DC 隔离开关电源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?ut_sk=1.Yj3%2BRejs3GYDAFdo21Bc%2Brfs_21380790_1651841841412.Copy.1&amp;amp;id=567949954974&amp;amp;detailSharePosition=interactBar&amp;amp;iconType=commonIconType&amp;amp;sourceType=item&amp;amp;suid=F37FA472-DF68-4AF8-9F62-712BBD39659C&amp;amp;shareUniqueId=15927005821&amp;amp;un=98c4b91fa04cd6894c6e4bed9157ce66&amp;amp;share_crt_v=1&amp;amp;un_site=0&amp;amp;spm=a2159r.13376460.0.0&amp;amp;sp_abtk=common_1_commonInfo&amp;amp;tbSocialPopKey=shareItem&amp;amp;sp_tk=QjNkUDJRWThsTnY%3D&amp;amp;cpp=1&amp;amp;shareurl=true&amp;amp;short_name=h.fIA2kyc&amp;amp;bxsign=scdilnaS_T-8s4rHGHqw2Az5LVvlyJZY29uivxO17P5iM6xPTzzz36FvnjTF55CwyO2TXwkwq5azOMVG5SUpONGmFR7uBoUSVTKQHoqDytBSllFjQ95wnFEORBS0EcQvZa8&amp;amp;tk=B3dP2QY8lNv&amp;amp;app=chrome&#34;&gt;【优信电子】DHT11 温湿度 WiFi 节点模块 ESP8266/ESP-01/esp-01S&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codess.cc/archives/272.html&#34;&gt;智能家居篇-1：群晖搭建HomeAssistant，构建智能家居控制中心&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85%E5%A5%97%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85%E5%A5%97%E4%BB%B6/</guid>
      
    </item>
    
    <item>
      <title>电平转换电路收集</title>
      
      
      
      
      <description></description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E7%94%B5%E5%B9%B3%E8%BD%AC%E6%8D%A2%E7%94%B5%E8%B7%AF%E6%94%B6%E9%9B%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E7%94%B5%E5%B9%B3%E8%BD%AC%E6%8D%A2%E7%94%B5%E8%B7%AF%E6%94%B6%E9%9B%86/</guid>
      
    </item>
    
    <item>
      <title>电路复用收集</title>
      
      
      
      
      <description>&lt;h2&gt;Robotics_Cape_Rev2&lt;/h2&gt;
&lt;h3&gt;电源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;双电源切换电路&lt;/li&gt;
&lt;li&gt;防反接电路（P-MOS）&lt;/li&gt;
&lt;li&gt;开关控制电路&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E7%94%B5%E8%B7%AF%E5%A4%8D%E7%94%A8%E6%94%B6%E9%9B%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E7%94%B5%E8%B7%AF%E5%A4%8D%E7%94%A8%E6%94%B6%E9%9B%86/</guid>
      
    </item>
    
    <item>
      <title>直流有刷电机的选型</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220105102754.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.monolithicpower.cn/cn/brushless-vs-brushed-dc-motors&#34;&gt;无刷直流电机、有刷直流电机：该如何选择？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?id=600597180876&amp;amp;ali_refid=a3_430582_1006:1214230072:N:jbeqMAT9EXczmkYIPucXUQ%3D%3D:bafa0ce4bc5abbb9c5511af99fa17084&amp;amp;ali_trackid=1_bafa0ce4bc5abbb9c5511af99fa17084&amp;amp;spm=a230r.1.14.1#detail&#34;&gt;雪豹 540 有刷电机好盈 1080 1060 860 有刷电调黑皮电机可换碳刷马达&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;电压&lt;/h2&gt;
&lt;h2&gt;空载电流&lt;/h2&gt;
&lt;h2&gt;对比&lt;/h2&gt;
&lt;p&gt;|                          | 27T      | 35T      |
| ------------------------ | -------- | -------- |
| 空载转速（7.4V）（参考） | 16800 转 | 12000 转 |
| 空载转速（12V）          | 29000    | 21000    |
| 空载电流（12V）          | 2.0A     | 1.4A     |
| 发热（10 分钟）          | 52℃      | 46℃      |&lt;/p&gt;
&lt;p&gt;匝数越少，转速越快（导致电流越大、发热越大），扭矩越小。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E7%9B%B4%E6%B5%81%E6%9C%89%E5%88%B7%E7%94%B5%E6%9C%BA%E7%9A%84%E9%80%89%E5%9E%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E7%9B%B4%E6%B5%81%E6%9C%89%E5%88%B7%E7%94%B5%E6%9C%BA%E7%9A%84%E9%80%89%E5%9E%8B/</guid>
      
    </item>
    
    <item>
      <title>职业技能路线</title>
      
      
      
      
      <description>&lt;h2&gt;高速板&lt;/h2&gt;
&lt;p&gt;参照书籍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《Cadence 高速 PCB 设计实战攻略》&lt;/li&gt;
&lt;li&gt;《信号完整性揭秘-于博士 SI 设计手记》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路飞的电子星球&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E8%81%8C%E4%B8%9A%E6%8A%80%E8%83%BD%E8%B7%AF%E7%BA%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E8%81%8C%E4%B8%9A%E6%8A%80%E8%83%BD%E8%B7%AF%E7%BA%BF/</guid>
      
    </item>
    
    <item>
      <title>计网学习笔记</title>
      
      
      
      
      <description>&lt;ul&gt;
&lt;li&gt;在数据通信技术中，利用数字信道直接传输数字信号的方法被称为基带传输。&lt;/li&gt;
&lt;li&gt;在数据通信技术中，利用模拟信道上传输经过转换的数字信号的方法称为频带传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OSI 结点具有相同层次,不同结点同等层具有相同功能,同一结点内相邻层通信（通过接口），不同结点的同等层通过协议实现对等层之间的通信&lt;/p&gt;
&lt;h2&gt;网络模型&lt;/h2&gt;
&lt;p&gt;各层：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;物理层&lt;/li&gt;
&lt;li&gt;传输介质 — 电缆和设备 — 建立物理连接（给谁）— 透明传输&lt;/li&gt;
&lt;li&gt;建立、管理和释放物理连接&lt;/li&gt;
&lt;li&gt;传输单元为比特&lt;/li&gt;
&lt;li&gt;为数据链路层提供数据传输服务&lt;/li&gt;
&lt;li&gt;数据链路层&lt;/li&gt;
&lt;li&gt;通信实体间 — 数据链路连接 — 帧 — 数据包 — 有差错物理线路 — 无差错数据链路&lt;/li&gt;
&lt;li&gt;传输单元是帧&lt;/li&gt;
&lt;li&gt;将有差错的物理线路变成无差错的数据链路&lt;/li&gt;
&lt;li&gt;网络层&lt;/li&gt;
&lt;li&gt;节点间 — 逻辑上的链路连接 — 路由 — 分组 — 通信子网 — 路径 — 网络互连 — 流量控制&lt;/li&gt;
&lt;li&gt;通过路由选择算法为数据通过通信⼦网来选择最适当的路径&lt;/li&gt;
&lt;li&gt;数据传输单元是分组&lt;/li&gt;
&lt;li&gt;传输层&lt;/li&gt;
&lt;li&gt;应用进程间 — 端-端 — 向高层屏蔽低层 — 关键层&lt;/li&gt;
&lt;li&gt;向用户提供端到端的服务&lt;/li&gt;
&lt;li&gt;处理数据报错误与数据报次序&lt;/li&gt;
&lt;li&gt;会话层&lt;/li&gt;
&lt;li&gt;维护节点之间 — 会话 （单次）— 创建连接 — 数据管理&lt;/li&gt;
&lt;li&gt;负责建⽴、管理和终⽌应用程序之间的会话&lt;/li&gt;
&lt;li&gt;确保会话过程的连续性以及管理数据交换功能&lt;/li&gt;
&lt;li&gt;表示层&lt;/li&gt;
&lt;li&gt;不同系统间 — 表示方式 — 数据格式转换 — 数据加密与解密 — 数据压缩与恢复&lt;/li&gt;
&lt;li&gt;关⼼的是所传输的数据的表现⽅式，它的语法和语义&lt;/li&gt;
&lt;li&gt;向应用层提供⼀个可选择的服务集合，可根据功能解释数据含义，使应用程序和网络之间的翻译官&lt;/li&gt;
&lt;li&gt;语⾳、图像等数据格式转换&lt;/li&gt;
&lt;li&gt;应用层&lt;/li&gt;
&lt;li&gt;网络应用与服务 — Web — 电子邮箱 — FTP — DNS&lt;/li&gt;
&lt;li&gt;为应用程序提供网络服务&lt;/li&gt;
&lt;li&gt;协议(带 T 的除了 TFTP 是叛徒)&lt;ul&gt;
&lt;li&gt;⽹络终端协议（Telent）&lt;/li&gt;
&lt;li&gt;⽂件传输协议（FTP）：&lt;/li&gt;
&lt;li&gt;TFTP：UDP&lt;/li&gt;
&lt;li&gt;简单邮件传输协议（SMTP）&lt;/li&gt;
&lt;li&gt;邮局协议（POP）&lt;/li&gt;
&lt;li&gt;域名系统（DNS）：TCP/UDP&lt;/li&gt;
&lt;li&gt;简单⽹络管理协议（SNMP）：UDP&lt;/li&gt;
&lt;li&gt;超⽂本传输协议（HTTP）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210616112624.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210616112733.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;局域网技术&lt;/h2&gt;
&lt;p&gt;局域网技术&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以太网&lt;/li&gt;
&lt;li&gt;10Mbps&lt;/li&gt;
&lt;li&gt;核心技术是共享介质访问控制方法 CSMA/CD&lt;/li&gt;
&lt;li&gt;可能出现两个或两个以上主机发送数据时，会出现冲突错误&lt;/li&gt;
&lt;li&gt;半双工通信&lt;/li&gt;
&lt;li&gt;IEEE802.3&lt;/li&gt;
&lt;li&gt;令牌总线网&lt;/li&gt;
&lt;li&gt;不会发生冲突，在重负载情况下，信道利用率高，支持优先级服务&lt;/li&gt;
&lt;li&gt;IEEE802.4&lt;/li&gt;
&lt;li&gt;令牌环网&lt;/li&gt;
&lt;li&gt;传输顺序与环中主机顺序相同&lt;/li&gt;
&lt;li&gt;不会发生冲突，在重负载情况下，信道利用率高，支持优先级服务&lt;/li&gt;
&lt;li&gt;IEEE802.5&lt;/li&gt;
&lt;li&gt;快速以太网&lt;/li&gt;
&lt;li&gt;100Mbps&lt;/li&gt;
&lt;li&gt;IEEE802.3u&lt;/li&gt;
&lt;li&gt;100BASE&lt;/li&gt;
&lt;li&gt;支持半双工与全双工模式（不需要 CSMA\CD）&lt;/li&gt;
&lt;li&gt;千兆以太网&lt;/li&gt;
&lt;li&gt;1000Mbps / 1Gbps&lt;/li&gt;
&lt;li&gt;IEEE802.3z&lt;/li&gt;
&lt;li&gt;1000BASE&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;万兆以太网&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10000Mbps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;IEEE802.3ae/be&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只使用光纤作为传输介质&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在快速以太网标准中,支持 5 类非屏蔽双绞线的标准是&lt;strong&gt;_&lt;/strong&gt; 100BASE-TX&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;在以下 IEE802.11 中,不属于控制帧的是&lt;strong&gt;_&lt;/strong&gt;。Beacon（信标）是管理帧&lt;/li&gt;
&lt;li&gt;符合 IEEE802.5 标准, MAC 层采用令牌方法的环型局域网称为____。令牌环网&lt;/li&gt;
&lt;li&gt;通过交换机的多个端口之间并发连接,从而实现多对节点之间数据传输的局域网称为____ 交换式局域网&lt;/li&gt;
&lt;li&gt;交换式局域网的基本拓扑可以是星型或总线型。❎&lt;/li&gt;
&lt;li&gt;IEE802.10 定义了无线局域网结构模型。❎&lt;/li&gt;
&lt;li&gt;为什么说 CSMA/CD 是一种随机争用型的介质访问控制方法？&lt;/li&gt;
&lt;li&gt;任何主机 → 争用总线使用权 → 准备 → 成功发送 → 等待时间不确定&lt;/li&gt;
&lt;li&gt;说明局域网交换机的基本工作原理。&lt;/li&gt;
&lt;li&gt;工作在数据链路层，根据接受帧的 MAC 地址来过滤转发数据。利用交换芯片在多对端口之间建立多个虚连接，实现帧的并发传输。基本功能是：建立维护 MAC 与端口号映射表，建立虚连接，完成帧的过滤和转发，生成树协议防止环路。&lt;/li&gt;
&lt;li&gt;简要说明虚拟局域网（VLAN）在组网方式（划分逻辑工作组）上的常用方法.&lt;/li&gt;
&lt;li&gt;可基于端口、MAC、IP 或网络协议来划分&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;地址&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;类地址(前几位为 1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A：1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;B：128&lt;/li&gt;
&lt;li&gt;C：192&lt;/li&gt;
&lt;li&gt;D：224&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E:240-247&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;私有地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;10.0.0.0-10.255.255.255&lt;/li&gt;
&lt;li&gt;172.16.0.0-172.31.255.255&lt;/li&gt;
&lt;li&gt;192.168.0.0-192.168.255.255&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E8%AE%A1%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E8%AE%A1%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>论文工具收集</title>
      
      
      
      
      <description>&lt;p&gt;&lt;a href=&#34;https://nav.wiki-power.com/#d83ea84cc1a59a1dece3cd978308140a&#34;&gt;学术·Power&#39;s Nav&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/tree/main/software/%E8%AE%BA%E6%96%87%E5%B7%A5%E5%85%B7&#34;&gt;File-host/software/论文工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/miaomiaosoft/PandaOCR&#34;&gt;PandaOCR（多功能OCR图文识别+翻译+朗读+弹窗+公式+表格+图床+搜图+二维码）&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E8%AE%BA%E6%96%87%E5%B7%A5%E5%85%B7%E6%94%B6%E9%9B%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E8%AE%BA%E6%96%87%E5%B7%A5%E5%85%B7%E6%94%B6%E9%9B%86/</guid>
      
    </item>
    
    <item>
      <title>阻抗匹配的原理 🚧</title>
      
      
      
      
      <description>&lt;h2&gt;什么是阻抗&lt;/h2&gt;
&lt;p&gt;阻抗（electrical impedance）是电路中电阻、电感、电容对交流电的阻碍作用的统称。在直流电路中，对电流的阻碍作用叫电阻；在交流电路中，&lt;/p&gt;
&lt;p&gt;Z= R+i( ωL–1/（ωC）)&lt;/p&gt;
&lt;h2&gt;阻抗匹配的作用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使传输线上无信号反射&lt;/li&gt;
&lt;li&gt;信号传输效益最大化&lt;/li&gt;
&lt;li&gt;负载阻抗与传输线阻抗大小相同、相位相同&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;阻抗匹配的原理&lt;/h2&gt;
&lt;p&gt;阻抗不等同于电阻。但以下例子使用电阻来描述阻抗匹配：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210831090136.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，R 代表负载电阻，r 代表电源内阻。在初中物理中我们学过，r 是相对固定的，当 R 取值很大（接近开路）或者很小（接近短路）时，负载都不能取得最大功率。功率计算公式如下：&lt;/p&gt;
&lt;p&gt;$
P=I^2 R = (\frac{E}{R+r})^2&lt;br&gt;
=\frac{E^2}{4r+\frac{(R-r)^2}{R}}
$&lt;/p&gt;
&lt;p&gt;可见，当 R=r 时，式子中分母取值最小，则负载所取功率最大。所以，当负载电阻相等于电源内阻时，负载将取得最大功率，阻抗匹配原理也是如此。&lt;/p&gt;
&lt;p&gt;在阻抗匹配中，r 对应了输入阻抗，R 对应输出阻抗。&lt;/p&gt;
&lt;h2&gt;阻抗匹配的应用&lt;/h2&gt;
&lt;p&gt;CAN 末端电阻&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/147597588&#34;&gt;阻抗匹配，这么理解就懂了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E9%98%BB%E6%8A%97%E5%8C%B9%E9%85%8D%E7%9A%84%E5%8E%9F%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/preview2/%E9%98%BB%E6%8A%97%E5%8C%B9%E9%85%8D%E7%9A%84%E5%8E%9F%E7%90%86/</guid>
      
    </item>
    
    <item>
      <title>CentOS 安装 Docker</title>
      
      
      
      
      <description>&lt;h2&gt;卸载可能存在的旧版本&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;用仓库的方法安装&lt;/h2&gt;
&lt;h3&gt;设置仓库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo yum install -y yum-utils&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;安装 Docker Engine&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo yum install docker-ce docker-ce-cli containerd.io&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/centos/&#34;&gt;Install Docker Engine on CentOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/CentOS%E5%AE%89%E8%A3%85Docker/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/CentOS%E5%AE%89%E8%A3%85Docker/</guid>
      
    </item>
    
    <item>
      <title>PCB 名片的设计</title>
      
      
      
      
      <description>&lt;h2&gt;效果图&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125192841.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200125193012.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;源文件&lt;/h2&gt;
&lt;p&gt;访问此链接获取 PCB 源文件：&lt;a href=&#34;https://www.jianguoyun.com/p/DT2beDgQ9Z2HBxjDs6EC%20&#34;&gt;https://www.jianguoyun.com/p/DT2beDgQ9Z2HBxjDs6EC &lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/PCB%E5%90%8D%E7%89%87%E7%9A%84%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/PCB%E5%90%8D%E7%89%87%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
    <item>
      <title>T-Clock 桌上小钟（旧）</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;我从柜子里翻出了以前做的一个玩具，拨一下开关，发现还能用，遂将资料整理一下。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/Tclock1.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;硬件部分&lt;/h2&gt;
&lt;p&gt;元件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arduino 主控&lt;/li&gt;
&lt;li&gt;OLED 屏幕（SSD1306 SPI）&lt;/li&gt;
&lt;li&gt;RTC 时钟模块（DS1307）&lt;/li&gt;
&lt;li&gt;锂电池 &amp;amp; 充电模块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;外壳：因暂时没有好的设计，所以没有制作外壳。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/3D%20tclock.png&#34;&gt;&lt;/p&gt;
&lt;h2&gt;代码&lt;/h2&gt;
&lt;p&gt;```cpp&lt;/p&gt;
&lt;h1&gt;include &lt;U8glib.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;SPI.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;Wire.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;RTClib.h&gt;&lt;/h1&gt;
&lt;p&gt;U8GLIB_SSD1306_128X64 u8g(10, 9, 12, 11, 13);
//这里适用的 OLED 屏的引脚是：D0,D1,RST,DC
/&lt;em&gt;接线：
  OLED-Arduino
  D0-D10
  D1-D9
  RST-D13
  DC-D11
&lt;/em&gt;/
RTC_DS1307 RTC;//RTC 按照 IIC 接线
char monthString[37] =
{
  &#34;JanFebMarAprMayJunJulAugSepOctNovDec&#34;
}
;
int  monthIndex[122] =
{
  0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33
}
;
String thisMonth = &#34;&#34;;
String thisTime = &#34;&#34;;
String thisDay = &#34;&#34;;
//用于定义表盘的中心
int clockCentreX = 64;
int clockCentreY = 32;
void draw(void)
{
  u8g.setFont(u8g_font_profont15);
  DateTime now = RTC.now();
  //在底部显示日期
  thisDay = String(now.day(), DEC) + &#34;/&#34;;
  thisMonth = &#34;&#34;;
  for (int i = 0; i &amp;lt;= 2; i++)
  {
    thisMonth += monthString[monthIndex[now.month() - 1] + i];
  }
  thisDay = thisDay + thisMonth + &#34;/&#34;;
  thisDay = thisDay + String(now.year() , DEC);
  const char&lt;em&gt; newDay = (const char&lt;/em&gt;) thisDay.c_str();
  u8g.drawStr(32, 63, newDay);
  thisTime = &#34;&#34;;
  thisTime = String(now.hour()) + &#34;:&#34;;
  if (now.minute() &amp;lt; 10)
  {
    thisTime = thisTime + &#34;0&#34;;    // 在单数数字前头加个 0
  }
  //数字时间
  thisTime = thisTime + String(now.minute()) ;
  const char&lt;em&gt; newTime = (const char&lt;/em&gt;) thisTime.c_str();
  u8g.drawStr(10, 10, newTime);
  //画时钟盘面
  u8g.drawCircle(clockCentreX, clockCentreY, 20); // 外面的大圆
  u8g.drawCircle(clockCentreX, clockCentreY, 2);  // 里面的小圆
  //跳动显示
  for ( int z = 0; z &amp;lt; 360; z = z + 30 )
  {
    //始于 0°, 止于 360°
    float angle = z ;
    angle = (angle / 57.29577951) ;   //化度数为弧度
    int x2 = (clockCentreX + (sin(angle) * 20));
    int y2 = (clockCentreY - (cos(angle) * 20));
    int x3 = (clockCentreX + (sin(angle) * (20 - 5)));
    int y3 = (clockCentreY - (cos(angle) * (20 - 5)));
    u8g.drawLine(x2, y2, x3, y3);
  }
  // 秒针
  float angle = now.second() * 6 ;
  angle = (angle / 57.29577951) ; //化度数为弧度
  int x3 = (clockCentreX + (sin(angle) * (20)));
  int y3 = (clockCentreY - (cos(angle) * (20)));
  u8g.drawLine(clockCentreX, clockCentreY, x3, y3);
  // 分针
  angle = now.minute() * 6 ;
  angle = (angle / 57.29577951) ; //化度数为弧度
  x3 = (clockCentreX + (sin(angle) * (20 - 3)));
  y3 = (clockCentreY - (cos(angle) * (20 - 3)));
  u8g.drawLine(clockCentreX, clockCentreY, x3, y3);
  // 时针
  angle = now.hour() * 30 + int((now.minute() / 12) * 6 )   ;
  angle = (angle / 57.29577951) ; //化度数为弧度
  x3 = (clockCentreX + (sin(angle) * (20 - 11)));
  y3 = (clockCentreY - (cos(angle) * (20 - 11)));
  u8g.drawLine(clockCentreX, clockCentreY, x3, y3);
  //显示自己的定制字符
  u8g.setPrintPos(100, 10);
  u8g.print(&#34;Lin&#34;);
}
void setup(void)
{
  Serial.begin(9600);
  analogReference(EXTERNAL);
  Wire.begin();
  RTC.begin();
  if (! RTC.isrunning())
  {
    Serial.println(&#34;RTC is NOT running!&#34;);
    RTC.adjust(DateTime(&lt;strong&gt;DATE&lt;/strong&gt;, &lt;strong&gt;TIME&lt;/strong&gt;));
  }
}
void loop(void)
{
  u8g.firstPage();
  do
  {
    draw();
  }
  while ( u8g.nextPage() );
  delay(10);
}
```&lt;/p&gt;
&lt;p&gt;资料下载：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有文件（包含库文件）：&lt;a href=&#34;https://github.com/linyuxuanlin/My-Arduino-projects/tree/master/T-Clock&#34;&gt;https://github.com/linyuxuanlin/My-Arduino-projects/tree/master/T-Clock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/Tclock2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是它的背面，如果有好的设计，我将画个外壳给它装上。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shimo.im/doc/63ALdXdl3EUInWJO&#34;&gt;屏幕无法显示？先测试一下&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.sina.com.cn/s/blog_53f8d23d0102wv3m.html&#34;&gt;使用 Arduino UNO 为 Arduino Pro Mini 下载程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/olikraus/u8glib/wiki/device#ssd1306-128x64&#34;&gt;U8glib 用法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/T-Clock%E6%A1%8C%E4%B8%8A%E5%B0%8F%E9%92%9F%EF%BC%88%E6%97%A7%EF%BC%89/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/T-Clock%E6%A1%8C%E4%B8%8A%E5%B0%8F%E9%92%9F%EF%BC%88%E6%97%A7%EF%BC%89/</guid>
      
    </item>
    
    <item>
      <title>个人知识库极简搭建指南 - VuePress</title>
      
      
      
      
      <description>&lt;p&gt;我们所用到的技术栈：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架：VuePress&lt;/li&gt;
&lt;li&gt;托管及自动编译：GitHub&lt;/li&gt;
&lt;li&gt;部署：Vercel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了让不想折腾的小伙伴，能够快速搭起一个知识库，所以这篇教程顺时而生。&lt;br&gt;
至于某些详细步骤的操作，后续会慢慢补充完善，理解万岁！搭建知识库也就啪那一下，很快的！&lt;/p&gt;
&lt;h2&gt;第一步：配置域名&lt;/h2&gt;
&lt;p&gt;咱上 GoGaddy / 腾讯云 / 阿里云买个自己的域名，咱 &lt;strong&gt;假设&lt;/strong&gt; 你买的域名是 &lt;code&gt;xx.com&lt;/code&gt; , 记住它。&lt;br&gt;
（国内买的一般要提交实名信息，按着提示操作就行了）&lt;/p&gt;
&lt;p&gt;修改域名解析：&lt;/p&gt;
&lt;p&gt;| 主机记录 | 记录类型 |      记录值      | TTL（秒） |
| :------: | :------: | :--------------: | :-------: |
|    @     |  CNAME   | &lt;code&gt;alias.zeit.co.&lt;/code&gt; |    600    |&lt;/p&gt;
&lt;p&gt;没提到的项视为默认。&lt;/p&gt;
&lt;h2&gt;第二步：克隆仓库&lt;/h2&gt;
&lt;p&gt;（这里以我的知识库作为模板）打开链接：&lt;a href=&#34;https://github.com/linyuxuanlin/Wiki-book&#34;&gt;&lt;strong&gt;linyuxuanlin/Wiki-book&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
将仓库克隆到本地。咱 &lt;strong&gt;假设&lt;/strong&gt; 你的仓库名字为 &lt;code&gt;xxx/Wiki-book&lt;/code&gt;（其中 &lt;code&gt;xxx&lt;/code&gt; 是你的 GitHub 用户名），记住它。&lt;/p&gt;
&lt;h2&gt;第三步：修改变量&lt;/h2&gt;
&lt;p&gt;在克隆下来的仓库内，全局搜索以下变量，并把它们改掉：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wiki-power.com&lt;/code&gt;：替换为你的自定义域名 &lt;code&gt;xx.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linyuxuanlin/Wiki-book&lt;/code&gt;：替换为你的 GitHub 用户名和仓库名 &lt;code&gt;xxx/Wiki-book&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;（如果仓库名称不为 &lt;code&gt;Wiki-book&lt;/code&gt;，则需全局搜索并修改对应的仓库名）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt;：替换为 &lt;code&gt;main&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;第四步：配置部署&lt;/h2&gt;
&lt;p&gt;本来可以直接部署在 GitHub Pages 的，由于某些不可描述的原因，国内网络访问可能出问题，所以这里我们借助第三方部署工具 Vercel.&lt;/p&gt;
&lt;p&gt;点开 &lt;a href=&#34;https://vercel.com/&#34;&gt;&lt;strong&gt;vercel.com&lt;/strong&gt;&lt;/a&gt; , 直接使用 GitHub 账户完成注册。&lt;br&gt;
完成之后，在个人主页点击 &lt;code&gt;Import Project（导入项目）&lt;/code&gt; 按钮，把 GitHub 仓库的 &lt;strong&gt;完整链接&lt;/strong&gt; 粘贴进去：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201122232933.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来提示 &lt;code&gt;Please select the directory（请选择目录）&lt;/code&gt; ，直接点 &lt;code&gt;Continue&lt;/code&gt; 继续就行。&lt;/p&gt;
&lt;p&gt;在接下来的页面，我们只需在 &lt;code&gt;OUTPUT DIRECTORY（输出目录）&lt;/code&gt; 处，填入 &lt;code&gt;docs/.vuepress/dist&lt;/code&gt; 即可：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201122235715.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在提示 &lt;strong&gt;部署成功&lt;/strong&gt; 后，我们点击页面右上角的 &lt;code&gt;Settings（设置）&lt;/code&gt; , 切换到 &lt;code&gt;Domains（域名）&lt;/code&gt; 栏目，在输入框内填写你买的域名 &lt;code&gt;xx.com&lt;/code&gt; ，点击 &lt;code&gt;Add（添加）&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后我们切换到 &lt;code&gt;Git（没得翻译）&lt;/code&gt; 栏目，滚轮下滑到 &lt;code&gt;Production Branch（生产分支）&lt;/code&gt;，选择 &lt;code&gt;Custom&lt;/code&gt; , 填写 &lt;code&gt;gh-pages&lt;/code&gt; , 如下图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201122232843.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;Save&lt;/code&gt; 保存。&lt;/p&gt;
&lt;h2&gt;胜利在望！&lt;/h2&gt;
&lt;p&gt;在本地仓库随便做点改动（注意：Commit message 不要少于 4 个英文字符），&lt;code&gt;Push&lt;/code&gt; 到 GitHub（目的是生成一次 Commit 让 GitHub Action 重新编译到 gh-pages 分支，再让 Vercel 完成重新部署。&lt;/p&gt;
&lt;p&gt;等泡一杯茶的时间，访问你买的域名 &lt;code&gt;xx.com&lt;/code&gt; , 如果你能够顺利看到这个画面：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201122233838.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;恭喜你！拥有了一个属于自己的知识库！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97-VuePress/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97-VuePress/</guid>
      
    </item>
    
    <item>
      <title>乐谱 - Imagine</title>
      
      
      
      
      <description>&lt;p&gt;Main Riff :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cmaj7 -
  xA|---3-----3-----3-----2------0-----0-----0-----0-1-2-----|&lt;br&gt;
  xE|---0-----0-----0-----0------1-----1-----1-------------|&lt;br&gt;
  xC|------0-----0-----0-----0------0-----0-----0----------|&lt;br&gt;
  xG|------------------------------------------------------|&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Intro: main Riff - x2 -&lt;/p&gt;
&lt;p&gt;C - - C7 F - -
Imagine there&#39;s no heaven&lt;br&gt;
It&#39;s easy if you try&lt;br&gt;
No hell below us&lt;br&gt;
Above us only sky&lt;/p&gt;
&lt;p&gt;F - Am - Dm7&lt;br&gt;
Imagine all the people&lt;br&gt;
G ---- C -G7&lt;br&gt;
Living for today&lt;/p&gt;
&lt;p&gt;F - G - C - E&lt;br&gt;
You may say I&#39;m a dreamer&lt;br&gt;
F - G - C - E&lt;br&gt;
But I&#39;m not the only one&lt;br&gt;
F - G - C - E&lt;br&gt;
I hope someday you&#39;ll join us S
F - G - C&lt;br&gt;
And the world will live as one&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E4%B9%90%E8%B0%B1-Imagine/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E4%B9%90%E8%B0%B1-Imagine/</guid>
      
    </item>
    
    <item>
      <title>博客转至 GitBook</title>
      
      
      
      
      <description>&lt;p&gt;我一直用 Blog 的形式记录自己一些想法，后来逐渐发现，Blog 越来越不能满足我的需求了，正巧发现了 GitBook 这一 Wiki 类平台（本是用来写书的），于是便义无反顾地抛弃了 Blog :)&lt;/p&gt;
&lt;h2&gt;分析&lt;/h2&gt;
&lt;p&gt;Blog 的形式，更类似于微信公众号，是一种 &lt;strong&gt;信息流&lt;/strong&gt; ，时效性比较强，而且也不便于修改和归档，知识是要不断反刍，时而翻阅的，信息流给读者带来了便利，却不利于作者自身的提高。&lt;/p&gt;
&lt;p&gt;Wiki 的形式像 &lt;strong&gt;档案库 。&lt;/strong&gt;侧边栏目录分出不同的类别，以及所包含的文章。这样简洁明晰的结构很方便检索，也更像是在翻阅一本书的不同章节。&lt;/p&gt;
&lt;p&gt;更多的时候，博客作为一个比较正式的对外展示载体，一些琐碎而不可或缺的知识不适合单独成文，而体系化的知识，却又从这些零散的知识点积累而来，这时，用 Wiki 就很合适了。&lt;/p&gt;
&lt;p&gt;积土成山，风雨兴焉；积水成渊，蛟龙生焉。&lt;strong&gt;Blog 更像是对外展示的岩壁，锋芒毕现；而 Wiki 更像是知识沉淀的湖泊，深藏不露。&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;横向对比&lt;/h2&gt;
&lt;p&gt;GitBook 不仅在概念上深得我心，在参数配置上也是一流的：&lt;/p&gt;
&lt;p&gt;|            | GitBook         | Bitcron      | Hexo             |
| :--------- | :-------------- | :----------- | :--------------- |
| 在线编辑器 | 有              | 有，体验较差 | 有，需部署于 VPS |
| 价格       | 免费            | 60/年        | 免费             |
| 访问速度   | 中等            | 快           | 快               |
| 内容备份   | 可同步至 GitHub | 无           | 无               |
| 配置复杂度 | 简单            | 中等         | 中等偏复杂       |
| 可定制性   | 中等            | 高           | 高               |
| 个性域名   | 有              | 有，需改 DNS | 有，可多个域名   |
| 站点数量   | 无限            | 2            | 无限             |&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;在现实世界中与世纷争，而在虚拟的世界中，我更希望留有自己的一亩田地，精心耕种。&lt;/p&gt;
&lt;p&gt;相比于第三方平台哗众取宠式的写作，在独立博客下能更静下心来。相比于 Blog 的展示式写作，我更偏好于 Wiki 的收纳式写作。&lt;strong&gt;沉淀后吸收，厚积而薄发。&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.imshuai.com/why-wiki.html&#34;&gt;Why Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%8D%9A%E5%AE%A2%E8%BD%AC%E8%87%B3GitBook/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%8D%9A%E5%AE%A2%E8%BD%AC%E8%87%B3GitBook/</guid>
      
    </item>
    
    <item>
      <title>回归博客</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;总会有一些人，需要的是一个安静、内向与创作的互联网。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;平台的影响&lt;/strong&gt; 在知乎这类型的平台确实很方便，而且平台自带流量，每写一篇文章，都会引起众人的围观。但我发现，在这种平台写作，&lt;strong&gt;文章所有权并不完全归属于你&lt;/strong&gt;。且不说广告的烦扰，平台的兴衰，会影响到我写作的心情。平台的兴衰更替，加剧了个人知识网络的碎片化（你可以试试从知乎迁出自己的所有文章，这将是浩大的工程）。再有一点，刷知乎，大多是在茶饭消遣之时，很少有人能静下心阅读。有些深度的内容，若不细细品味，是会引发歧义的。我希望我的文章能引起思维的碰撞和交流，而非成为互喷的战场。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;技术类文章的存档&lt;/strong&gt; 好记性不如烂笔头。我接触的知识面很广，但并不深入。为了与遗忘做斗争，也为日后融汇贯通提供资本，有些开发的经历，不管成功还是失败，还是要记录下来，供日后查阅。 对社区而言，我的技术文章，也许也能为他人提供参考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;知识地图&lt;/strong&gt; 我希望把我所学的一切都记录下来，归档成为一个知识储备库，为日后的~~偷懒~~不重复劳动创造条件。&lt;/p&gt;
&lt;h2&gt;容器&lt;/h2&gt;
&lt;p&gt;对于装博客的容器，我的理念是简洁、美观、方便。如无必要，勿增实体。我不希望有不相关元素出现在我的文章页面上，所以基本可以排除非独立博客像 CSDN, Medium 了。 一开始我尝试了 WordPress, 后来我发现了 Markdown 语法，于是抛弃了用富文本编辑器的 WordPress. 中间经历了 Jekyll, Hexo 这些框架，甚至还用 Github Issues 这种过于硬核的方法。虽说简单、免费、强大，但「写一篇文章，调半天代码」这种体验并不好。开发归开发，写作归写作，我不想让这些繁琐的环节打断我的思路，我想更专注于内容的质量。 Bitcron 的宣传点正好解决了我的痛点：简洁、方便。&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：这个博客名字怎么来的？&lt;br&gt;
A：无实意，仅仅是显得极客而已，请自行挖掘深层含义。你也可以像备案时的网警一样，认为我是贩卖危险品的。&lt;/p&gt;
&lt;p&gt;Q：更换域名了吗？&lt;br&gt;
A：是的。原先的博客域名是 &lt;a href=&#34;https://radiastu.com/&#34;&gt;radiastu.com&lt;/a&gt; , 我决定另开门户。新的域名是 &lt;a href=&#34;https://wiki-power.com/&#34;&gt;wiki-power.com&lt;/a&gt; , 其中 yx 是我名字的缩写，rct 是 reactor 的缩写（虽然可能并不公认），这是我尝试了 n 多种组合后，找到既可用又简短又便宜的域名了，也算是一种妥协吧。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;好记性不如烂笔头。知识需要归纳、总结、沉淀，如果一人没有自己的个人知识管理系统，除了还在不断汲取的阶段外，倒不如说要开始进入被淘汰的阶段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输出总是比输入难的，但在这个过程中，也加深了对知识的掌握和理解。这是一个反刍，咀嚼和表达的过程。&lt;strong&gt;与其临渊羡鱼，不如退而结网&lt;/strong&gt;。先把地基打好，再去改变世界吧。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zoomyale.com/2016/why_blogging&#34;&gt;为什么要在老掉牙的独立博客上写东西？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ehippocampus.xyz/whyblog&#34;&gt;我为什么开这个博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yxrct.com/post/markdown/zhi-ding-pai-ban-biao-zhun&#34;&gt;制定排版标准&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yangzhiping.com/tech/anti-social-tools.html&#34;&gt;如何在云端搭建反社交 APP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%9B%9E%E5%BD%92%E5%8D%9A%E5%AE%A2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%9B%9E%E5%BD%92%E5%8D%9A%E5%AE%A2/</guid>
      
    </item>
    
    <item>
      <title>团队知识库搭建记录 - DokuWiki</title>
      
      
      
      
      <description>&lt;p&gt;对比：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MoinMoin Wiki&lt;/li&gt;
&lt;li&gt;FosWiki&lt;/li&gt;
&lt;li&gt;xwiki&lt;/li&gt;
&lt;li&gt;mm-wiki&lt;/li&gt;
&lt;li&gt;MinDoc&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章作者：&lt;strong&gt;Power Lin&lt;/strong&gt;
原文地址：&lt;a href=&#34;https://wiki-power.com&#34;&gt;https://wiki-power.com&lt;/a&gt;&lt;br&gt;
版权声明：文章采用 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;拓展&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;discussion plugin&lt;/li&gt;
&lt;li&gt;Markdowku&lt;/li&gt;
&lt;li&gt;MathJax plugin&lt;/li&gt;
&lt;li&gt;Pagelist Plugin&lt;/li&gt;
&lt;li&gt;simplenavi plugin&lt;/li&gt;
&lt;li&gt;Wrap Plugin&lt;/li&gt;
&lt;li&gt;Indexmenu Plugin：索引目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vector template&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;命名空间与文章&lt;/h2&gt;
&lt;p&gt;DokuWiki 的文章数据在 &lt;code&gt;dokuwiki/data/pages&lt;/code&gt; 目录下。命名空间相当于文件夹，&lt;code&gt;.txt&lt;/code&gt; 文件相当于单篇文章。&lt;/p&gt;
&lt;p&gt;中文目录不能正常显示的解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进入 &lt;code&gt;DokuWiki&lt;/code&gt; 目录下的 &lt;code&gt;/inc&lt;/code&gt; 文件夹，打开 &lt;code&gt;pageutils.php&lt;/code&gt; 文件，将如下两行注释：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;// $file = urlencode($file);
   // $file = str_replace(&#39;%2F&#39;,&#39;/&#39;,$file);&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将如下一行代码注释，并添加另外一行：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;// return urldecode($file);
   return $file;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;新增文章&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;搜索安装插件：&lt;code&gt;Add New Page Plugin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;网址后缀 id 改为 &lt;code&gt;sidebar&lt;/code&gt; 访问&lt;/li&gt;
&lt;li&gt;创建页面，写入 &lt;code&gt;{{NEWPAGE}}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;删除文章&lt;/h2&gt;
&lt;p&gt;把文章内容删空，页面就自动删除了。没有文章的命名空间也会被自动移除&lt;/p&gt;
&lt;h2&gt;移动文章 / 修改名字&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;搜索安装插件：&lt;code&gt;Move Plugin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在右侧工具栏 - &lt;code&gt;页面重命名&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;定制&lt;/h2&gt;
&lt;h3&gt;删除页面内的编辑按钮&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;inc/html.php&lt;/code&gt; 中搜索&lt;/p&gt;
&lt;p&gt;&lt;code&gt;return &#34;&amp;lt;div class=&#39;secedit editbutton_&#34; . $data[&#39;target&#39;] .
                   &#34; editbutton_&#34; . $secid . &#34;&#39;&amp;gt;&#34; .
       html_btn(&#39;secedit&#39;, $ID, &#39;&#39;,
                array_merge(array(&#39;do&#39;  =&amp;gt; &#39;edit&#39;,
                                  &#39;rev&#39; =&amp;gt; $INFO[&#39;lastmod&#39;],
                                  &#39;summary&#39; =&amp;gt; &#39;[&#39;.$name.&#39;] &#39;), $data),
                &#39;post&#39;, $name) . &#39;&amp;lt;/div&amp;gt;&#39;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注释掉。&lt;/p&gt;
&lt;h2&gt;问题及解决&lt;/h2&gt;
&lt;h3&gt;上传的文件与扩展名不符&lt;/h3&gt;
&lt;p&gt;修改 &lt;code&gt;inc/media.php&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;```
if(substr($mime,0,6) == &#39;image/&#39;){
$info = getimagesize($file);
if($mime == &#39;image/gif&#39; &amp;amp;&amp;amp; $info[2] != 1){
msg(sprintf(&#39;php function getimagesize(%s) does not think this is an image/gif file (info[2]=%d) even though %s is the mime type&#39;,$file,$info[2],$mime));
return 0;
}elseif($mime == &#39;image/jpeg&#39; &amp;amp;&amp;amp; $info[2] != 2){
msg(sprintf(&#39;php function getimagesize(%s) does not think this is an image/jpeg file (info[2]=%d) even though %s is the mime type&#39;,$file,$info[2],$mime));
return 0;
}elseif($mime == &#39;image/png&#39; &amp;amp;&amp;amp; $info[2] != 3){
msg(sprintf(&#39;php function getimagesize(%s) does not think this is an image/png file (info[2]=%d) even though %s is the mime type&#39;,$file,$info[2],$mime));
return 0;
}&lt;/p&gt;
&lt;p&gt;This function used to return -1 if the info[2] didn&#39;t return the right type. Now I just return 0 and show a msg. The debug messages printed out show&lt;/p&gt;
&lt;p&gt;php function getimagesize(/srv/www/www.ini.unizh.ch/tmp/phpQu74yf) does not think this is an image/jpeg file (info[2]=0) even though image/jpeg is the mime type
```&lt;/p&gt;
&lt;h3&gt;批量导入用户出现乱码&lt;/h3&gt;
&lt;p&gt;解决方法：使用 utf8 编码的 .csv 文件&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wszll_Alex/article/details/80246721&#34;&gt;dokuwiki 学习（一）—— 增加页面命名空间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wszll_Alex/article/details/80246836&#34;&gt;dokuwiki 学习（二）—— 新增页面（文章）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wszll_Alex/article/details/80252098&#34;&gt;dokuwiki 学习（三）—— 删除页面（文章）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wszll_Alex/article/details/80252132&#34;&gt;dokuwiki 学习（四）—— 移动页面（文章）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leekwen.blog.csdn.net/article/details/54907445?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&#34;&gt;dokuwiki 插件的常用配置及其他 Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gimo.me/wiki/customize&#34;&gt;自定义 DokuWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.dokuwiki.org/d/1297-upload-doesn-t-match-extension/3&#34;&gt;Upload doesn&#39;t match extension - DokuWiki User Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wszll_Alex/article/details/80252201&#34;&gt;dokuwiki 学习（六）—— 增加媒体命名空间&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%9B%A2%E9%98%9F%E7%9F%A5%E8%AF%86%E5%BA%93%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95-DokuWiki/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%9B%A2%E9%98%9F%E7%9F%A5%E8%AF%86%E5%BA%93%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95-DokuWiki/</guid>
      
    </item>
    
    <item>
      <title>基于 docsify 搭建个人 Wiki</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;笔者一直都有撰写博客的传统，自 2015 年以来，历经 Wordpress, Hexo, Jekyll, Bitcron ,GitBook 等博客工具，甚至尝试用 GitHub issues 直接撰写文章，效果始终不理想。而最近发现的 docsify 博客工具，辅以一系列非常规操作，似乎是博客撰写的最终归宿。&lt;/p&gt;
&lt;h2&gt;搭建 Wiki 的意义&lt;/h2&gt;
&lt;p&gt;假设你自古以来是本博客的读者，你会发现笔者每更换一次博客平台，都会重复念叨这个问题。&lt;/p&gt;
&lt;h3&gt;为什么我们需要一个博客&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;防止遗忘&lt;/li&gt;
&lt;li&gt;体系化归纳知识&lt;/li&gt;
&lt;li&gt;用输出倒逼输入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好记性不如烂笔头，知识需要归纳、总结、沉淀。而输出总是比输入难的，在这个过程中，也加深了对知识的掌握和理解。这是一个反刍，咀嚼和表达的过程。知识经历了这个过程，才能真正被我们所吸收。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;学习保持率金字塔图&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200128214300.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;什么是独立博客&lt;/h3&gt;
&lt;p&gt;独立博客的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据自由&lt;/li&gt;
&lt;li&gt;样式自由&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;非独立平台&lt;/strong&gt;：知乎、简书、CSDN、公众号、博客园等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;独立博客&lt;/strong&gt;：数据部署在自己服务器上 / 托管在开源代码仓库上。我的网站就算是独立博客。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;独立博客的弊端：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有一定的门槛&lt;/li&gt;
&lt;li&gt;流量获取渠道缺失&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;独立博客的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据完全由自己掌握&lt;/li&gt;
&lt;li&gt;样式完全由自己定义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然优势看上去平平无奇，但重要性显而易见。当我们在非独立平台上写作时，这几个问题可能时时困扰着你：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我辛辛苦苦写的回答怎么就被折叠了呢？我的文章怎么就被 &lt;code&gt;政治敏感&lt;/code&gt; 了呢？&lt;/li&gt;
&lt;li&gt;怎么会有如此多的广告，污染我的文章版面？&lt;/li&gt;
&lt;li&gt;我的读者大多是躲在被窝里阅读的，我想加一个暗色模式，保护读者的眼睛，平台却没有这个功能？（微信公众号）&lt;/li&gt;
&lt;li&gt;我想介绍一个不错的网站，却不允许我引用外部链接？（微信公众号）&lt;/li&gt;
&lt;li&gt;我想换个平台，可我的文章数据该如何完全导出呢？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于独立博客，则不存在以上的问题，数据牢牢掌握在自己手中。只要你妥善保管好数据（异地备份、托管于 GitHub、甚至把字刻在石头上），即使平台倒闭、天荒地老、太阳系被二向化，你辛辛苦苦写的文章都不会丢失。&lt;br&gt;
而至于门槛，虽然我们提倡自己动手，丰衣足食，但有了各路大神先行踩坑，总结出来的解决方案对零基础小白来说，门槛几乎为零。&lt;/p&gt;
&lt;p&gt;总会有一些人，需要的是一个安静、内向与创作的互联网。&lt;/p&gt;
&lt;h3&gt;Wiki 与 Blog 形式之争&lt;/h3&gt;
&lt;p&gt;关于这个问题，笔者先前用的是 Blog 的形式，可以参考一下之前的站点（如果它还活着）：https://yxrct.com/&lt;br&gt;
而现在这个站点，采用的是 Wiki 的形式。于我个人而言，Wiki 更有利于构建知识体系，本篇教程也着重于此。&lt;/p&gt;
&lt;p&gt;引用之前写过的文字：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blog 的形式，更类似于微信公众号，是一种信息流，时效性比较强，而且也不便于修改和归档，而我们知道，知识是要不断反刍，时而翻阅的，信息流给读者带来了便利，却不利于作者自身的提高。&lt;/p&gt;
&lt;p&gt;Wiki 的形式则像档案库。侧边栏目录分出不同的类别，以及所包含的文章。这样简洁明晰的结构很方便检索，也更像是在翻阅一本书的不同章节。&lt;/p&gt;
&lt;p&gt;更多的时候，博客作为一个比较正式的对外展示载体，一些琐碎而不可或缺的知识不适合单独成文，而体系化的知识，却又从这些零散的知识点积累而来，这时，用 Wiki 就很合适了。&lt;/p&gt;
&lt;p&gt;积土成山，风雨兴焉；积水成渊，蛟龙生焉。从某些角度来说，Blog 锋芒毕现，Wiki 厚积薄发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;docsify 的优势&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;不会将 &lt;code&gt;.md&lt;/code&gt; 转成 &lt;code&gt;.html&lt;/code&gt; 文件，所有转换工作都是在运行时进行&lt;/li&gt;
&lt;li&gt;容易使用并且轻量 (~19kB gzipped)&lt;/li&gt;
&lt;li&gt;主题样式简洁且可自定义&lt;/li&gt;
&lt;li&gt;丰富的插件及 API 支持&lt;/li&gt;
&lt;li&gt;可部署在服务器上，也可托管于 GitHub / Coding Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择 docsify，笔者主要是看中这几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以搭建 Wiki 形式的网站&lt;/li&gt;
&lt;li&gt;可托管在 GitHub Pages, 免费且数据永不丢失&lt;/li&gt;
&lt;li&gt;主题样式清爽&lt;/li&gt;
&lt;li&gt;丰富且实用的插件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;准备工作&lt;/h2&gt;
&lt;p&gt;工欲善其事，必先利其器。
本篇教程虽然面向零基础，但有些技能还是需要读者具备的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;英语不能太差&lt;/li&gt;
&lt;li&gt;Markdown 语法：我们用它来写文章，它有什么优势以及怎么用，请自行了解&lt;/li&gt;
&lt;li&gt;善用搜索引擎（最好是 Google）：难道你愿意接受百度上少得可怜的中文结果，并接受广告轰炸吗？&lt;/li&gt;
&lt;li&gt;Git / GitHub 基本使用：下文将会普及&lt;/li&gt;
&lt;li&gt;（非必须）前端语言（HTML / CSS / Javascript），基本的命令行操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;快速部署&lt;/h2&gt;
&lt;p&gt;如果你不想折腾，只想好好写文章，那么以下是捷径：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载软件：&lt;a href=&#34;https://desktop.github.com/&#34;&gt;&lt;strong&gt;GitHub Desktop&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 GitHub 上注册一个账户：https://github.com/&lt;/li&gt;
&lt;li&gt;直接搬走我网站的样式&lt;/li&gt;
&lt;li&gt;打开 https://github.com/linyuxuanlin/Wiki&lt;/li&gt;
&lt;li&gt;点击右上角 &lt;code&gt;Fork&lt;/code&gt; 按钮，待页面刷新后继续&lt;/li&gt;
&lt;li&gt;点击右上角小齿轮图标的 &lt;code&gt;Settings&lt;/code&gt; 按钮，将 &lt;code&gt;Repository name&lt;/code&gt; 从 &lt;code&gt;Wiki&lt;/code&gt; 改为 &lt;code&gt;你的 GitHub 用户名。github.io&lt;/code&gt;（如果忘了刚刚设置的用户名，可以看看页面左上角），然后点击 &lt;code&gt;Rename&lt;/code&gt; 按钮，待页面刷新后继续&lt;/li&gt;
&lt;li&gt;点击绿色按钮 &lt;code&gt;Clone or download&lt;/code&gt;, 然后选择 &lt;code&gt;Open in Desktop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在  GitHub Desktop  弹出的窗口内更改  &lt;code&gt;Local Path&lt;/code&gt;，选择你想保存的路径，点击确认&lt;/li&gt;
&lt;li&gt;打开文件 &lt;code&gt;你保存的路径/index.html&lt;/code&gt;（找个适合自己的编辑器例如 VScode），利用 &lt;code&gt;Ctrl + H&lt;/code&gt; 搜索替换：&lt;/li&gt;
&lt;li&gt;搜索 &lt;code&gt;Power&#39;s Wiki&lt;/code&gt;（包括下方的 &lt;code&gt;Power\&#39;s Wiki&lt;/code&gt;），改为你自己网站的名字（注意如果 Wiki 标题 &lt;code&gt;&#39;s&lt;/code&gt; ，需要加转义字符 &lt;code&gt;\&#39;s&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;删除 &lt;code&gt;你保存的路径/CNAME&lt;/code&gt; 文件&lt;/li&gt;
&lt;li&gt;其他设置项的更改稍后再说&lt;/li&gt;
&lt;li&gt;保存文档，打开 GitHub Desktop, 可以看到有修改记录。我们在下方的 &lt;code&gt;Summary&lt;/code&gt; 一栏里填写本次提交的摘要（填什么都行），点击最下方蓝色按钮 &lt;code&gt;Commit to master&lt;/code&gt;，然后点击右边蓝色按钮 &lt;code&gt;Push origin&lt;/code&gt;，等待提交完成&lt;/li&gt;
&lt;li&gt;我们回到刚才打开的网页，点击右上角小齿轮图标的 &lt;code&gt;Settings&lt;/code&gt; 按钮，滚动页面找到 &lt;code&gt;GitHub Pages&lt;/code&gt; 栏目，如果没问题的话，可以看到提示 &lt;code&gt;Your site is ready to be published at https://xxx.github.io/.&lt;/code&gt;，点击链接就可以访问你的网站了&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;写文章的流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;直接在相应目录创建 &lt;code&gt;文章标题。md&lt;/code&gt;（参照我网站的目录结构），用 Markdown 写作&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;siderbar.md&lt;/code&gt; 内更新这篇文章的路径&lt;/li&gt;
&lt;li&gt;在 GitHub Desktop 软件内进行 Commit &amp;amp; Push 操作，文章更新完成&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;拓展&lt;/h2&gt;
&lt;h3&gt;文档&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docsify.js.org/#/zh-cn/&#34;&gt;&lt;strong&gt;docsify 官方文档（中文）&lt;/strong&gt;&lt;/a&gt;：有问题多看官方文档&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jhildenbiddle.github.io/docsify-themeable/#/&#34;&gt;&lt;strong&gt;docsify-themeable&lt;/strong&gt;&lt;/a&gt;：一个主题插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;工具&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docsify.js.org/#/zh-cn/quickstart&#34;&gt;&lt;strong&gt;docsify-cli&lt;/strong&gt;&lt;/a&gt;（推荐使用）：用于本地预览文档网站&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;常用插件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全文搜索&lt;/strong&gt;：已默认配置并开启，详见文档&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;谷歌统计&lt;/strong&gt;：已默认配置并开启，需修改 &lt;code&gt;track id&lt;/code&gt; ，详见文档&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gitalk&lt;/strong&gt;：墙内可用且评论不受审查。已默认配置并开启，需以下操作：&lt;/li&gt;
&lt;li&gt;打开链接 &lt;a href=&#34;https://github.com/settings/applications/new&#34;&gt;&lt;strong&gt;Register a new OAuth application&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;填写信息。&lt;code&gt;Application name&lt;/code&gt; ,&lt;code&gt;Homepage URL&lt;/code&gt; 与 &lt;code&gt;Authorization callback URL&lt;/code&gt; 都填写 &lt;code&gt;你的用户名。github.io&lt;/code&gt;, 然后点击注册&lt;/li&gt;
&lt;li&gt;记下生成的 &lt;code&gt;clientID&lt;/code&gt; 和 &lt;code&gt;clientSecret&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开 &lt;code&gt;index.html&lt;/code&gt;, 搜索并更新 &lt;code&gt;clientID&lt;/code&gt; 与 &lt;code&gt;clientSecret&lt;/code&gt;, &lt;code&gt;repo&lt;/code&gt; 的参数改为 &lt;code&gt;你的用户名。github.io&lt;/code&gt;, &lt;code&gt;owner&lt;/code&gt; 与 &lt;code&gt;admin&lt;/code&gt; 内相应字符改为 &lt;code&gt;你的用户名&lt;/code&gt;.（注意冒号后保留一空格，且标点符号为英文字符）&lt;/li&gt;
&lt;li&gt;Commit &amp;amp; Push&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;图床&lt;/h3&gt;
&lt;p&gt;网站图片的解决方案参考 &lt;a href=&#34;https://www.itrhx.com/2019/08/01/A27-image-hosting/&#34;&gt;&lt;strong&gt;Github+jsDelivr+PicGo 打造稳定快速、高效免费图床&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;与其临渊羡鱼，不如退而结网。&lt;br&gt;
写作，是为了更好地思考。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docsify.js.org/#/zh-cn/&#34;&gt;docsify 官方文档（中文）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jhildenbiddle.github.io/docsify-themeable/#/&#34;&gt;docsify-themeable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://priesttomb.github.io/%E6%97%A5%E5%B8%B8/2018/02/12/%E5%A4%84%E7%90%86Gitalk%E4%B8%AD%E7%94%B1%E4%BA%8E%E6%96%87%E7%AB%A0URL%E8%BF%87%E9%95%BF%E5%AF%BC%E8%87%B4%E7%9A%84Validation-Failed(422)/&#34;&gt;处理 Gitalk 中由于文章 URL 过长导致的 Validation Failed (422)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itrhx.com/2019/08/01/A27-image-hosting/&#34;&gt;Github+jsDelivr+PicGo 打造稳定快速、高效免费图床&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bug-hunter.baklib.com/unclassified/863b&#34;&gt;教育杂想&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%9F%BA%E4%BA%8Edocsify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAWiki/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%9F%BA%E4%BA%8Edocsify%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAWiki/</guid>
      
    </item>
    
    <item>
      <title>如何用 LaTeX 写论文</title>
      
      
      
      
      <description>&lt;p&gt;使用的是 &lt;a href=&#34;https://github.com/sjtug/SJTUThesis&#34;&gt;&lt;strong&gt;sjtug/SJTUThesis&lt;/strong&gt;&lt;/a&gt; 提供的方法与模板（后期会修改为本校模板并更新文章）。&lt;/p&gt;
&lt;p&gt;简单体验请使用 &lt;strong&gt;在线编辑&lt;/strong&gt; 的方法，为了数据安全，更推荐 &lt;strong&gt;本地编译&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;在线编辑&lt;/h2&gt;
&lt;p&gt;点击进入项目仓库的 &lt;a href=&#34;https://github.com/sjtug/SJTUThesis/releases&#34;&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt; 页面，下载最新版本的 zip 包。&lt;/p&gt;
&lt;p&gt;打开 &lt;a href=&#34;https://www.overleaf.com/&#34;&gt;&lt;strong&gt;Overleaf&lt;/strong&gt;&lt;/a&gt; 网站，上传 zip 包，进入项目，点击左上角 &lt;code&gt;Menu&lt;/code&gt; 按钮，在菜单页面的 &lt;code&gt;Compiler&lt;/code&gt;（编译器）选择 &lt;code&gt;XeLaTeX&lt;/code&gt; 即可在线编辑编译。&lt;/p&gt;
&lt;h2&gt;本地编译&lt;/h2&gt;
&lt;p&gt;首先下载 TeX 发行版，这里我们选择 TeX Live。下载安装镜像：&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/texlive.iso&#34;&gt;&lt;strong&gt;texlive.iso&lt;/strong&gt;&lt;/a&gt;，用压缩软件解压，双击运行目录下的 &lt;code&gt;tl-install-windows.bat&lt;/code&gt; 安装（请耐心等候，安装时间大概要 40 分钟左右）。&lt;/p&gt;
&lt;p&gt;点击进入项目仓库的 &lt;a href=&#34;https://github.com/sjtug/SJTUThesis/releases&#34;&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt; 页面，下载最新版本的 zip 包并解压。&lt;/p&gt;
&lt;p&gt;双击目录下的 &lt;code&gt;Compile.bat&lt;/code&gt; 即可执行编译出 &lt;code&gt;main.pdf&lt;/code&gt; 论文文档。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sjtug/SJTUThesis&#34;&gt;sjtug/SJTUThesis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%A6%82%E4%BD%95%E7%94%A8LaTeX%E5%86%99%E8%AE%BA%E6%96%87/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E5%A6%82%E4%BD%95%E7%94%A8LaTeX%E5%86%99%E8%AE%BA%E6%96%87/</guid>
      
    </item>
    
    <item>
      <title>构建知识管理系统</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;知识需要归纳、总结、沉淀，如果一人不会管理自己的知识，除了还在不断汲取，倒不如说已经开始进入被淘汰的阶段。&lt;/p&gt;
&lt;h2&gt;原则&lt;/h2&gt;
&lt;p&gt;对于工具的选择，我尽可能遵循「如无必要，勿增实体」原则。摘自《黑客与画家》的一句话也有异曲同工之妙：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最纯粹、最抽象的设计难题之一，就是设计桥梁。你面对的问题，基本上就是如何使用最少的材料，跨越给定的距离。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这引申出一个观点：&lt;strong&gt;轻量化&lt;/strong&gt;。 一个软件，如果有提供网页版本，可直接生成桌面快捷方式使用。尽量避免安装桌面客户端，不仅减少了对磁盘空间的占用，也免去了安装卸载过程的麻烦。&lt;/p&gt;
&lt;p&gt;在读高三的时候，我曾设想的&lt;strong&gt;无纸化办公&lt;/strong&gt;，在大学终于可以尝试一下。 为什么选择无纸化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;笔记包含非文本内容（代码、视频、图片等）&lt;/li&gt;
&lt;li&gt;便于归档、检索&lt;/li&gt;
&lt;li&gt;环保&lt;/li&gt;
&lt;li&gt;~~字太丑不忍直视~~&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;利器分享&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;工欲善其事，必先利其器。这是我的知识管理系统，借助各种工具，处理各类输入，固化为自己的知识。&lt;/p&gt;
&lt;h3&gt;幕布&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://mubu.com/inv/24796&#34;&gt;mubu.com&lt;/a&gt; 在写文章之前，我会先构建总体的思路框架。幕布这个工具，可以通过&lt;strong&gt;无限层级大纲&lt;/strong&gt;的形式组织逻辑，也可以&lt;strong&gt;自动生成思维导图&lt;/strong&gt;。写这篇文章时，我用幕布整理思路：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/%E5%B9%95%E5%B8%83.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Typora&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://typora.io/&#34;&gt;typora.io&lt;/a&gt; Typora 是我用过大量 Markdown 编辑器中最纯粹的一个。极简的界面并不代表功能的缺失。Typora 基础功能很完善（基本写作、大纲、文件树、导出 PDF），对 Markdown 语法&lt;strong&gt;即使渲染&lt;/strong&gt;，高级功能（流程图、时序图、Mermaid 图、LaTeX）信手拈来。&lt;/p&gt;
&lt;p&gt;我特别制作了一个纯粹黑色的主题：&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software-development/pure-black.rar&#34;&gt;&lt;strong&gt;点击下载&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/Typora%20%E9%BB%91%E8%89%B2%E4%B8%BB%E9%A2%98.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载解压，丢到主题文件夹里即可。&lt;/p&gt;
&lt;h3&gt;Math Webdemo&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://webdemo.myscript.com/views/math/index.html#&#34;&gt;webdemo.myscript.com&lt;/a&gt; Markdown 下编辑数学工具一般用 LaTeX 语法。我用 Math Webdemo 识别手写输入，直接转化为 LaTeX.&lt;/p&gt;
&lt;h3&gt;坚果云&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianguoyun.com&#34;&gt;jianguoyun.com&lt;/a&gt; 国内的同步盘，只有坚果云是勉强合格的。代价是 ¥200/年。数据安全无价，我认为这笔钱该花。 坚果云的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任意文件夹增量同步&lt;/li&gt;
&lt;li&gt;文件有历史纪录&lt;/li&gt;
&lt;li&gt;安全性和稳定性较高&lt;/li&gt;
&lt;li&gt;不限速&lt;/li&gt;
&lt;li&gt;生成分享链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了同步盘，我抛弃了各类云笔记（印象笔记、有道云、Notion、Wiz），直接用&lt;strong&gt;文件夹形式&lt;/strong&gt;管理笔记本，因为笔记会包含各种类型（Office 文档、代码文档、PDF、视频等），用云笔记会受诸多限制。&lt;/p&gt;
&lt;h3&gt;腾讯文档&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.qq.com/desktop&#34;&gt;docs.qq.com&lt;/a&gt; 用途：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多人在线文档编辑&lt;/li&gt;
&lt;li&gt;创建收集表&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://shimo.im/desktop&#34;&gt;「石墨文档」&lt;/a&gt; 使用较人性化，但对于共享文档分享的便利性，腾讯文档更适配微信（小程序、可用微信号登录）。为了数据不过于分散，无奈只能选择腾讯文档。&lt;/p&gt;
&lt;h3&gt;Bitcron&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://bitcron.com/&#34;&gt;bitcron.com&lt;/a&gt; 搭建技术博客，在写文章之时加深自己对知识的理解。 写作其实就代表思考，你需要言之有物，需要架构需要梳理，要有开端有结尾有结论有主题，在写作过程中出现新的思想火花是常有的事。&lt;strong&gt;输出总是比输入难的，但在这个过程中，也加深了对知识的掌握和理解。&lt;/strong&gt;这是一个反刍，咀嚼和表达的过程。&lt;strong&gt;如果你不能把你的想法用文字清晰的表达出来，那只能说明你没想清楚。&lt;/strong&gt; 另外，对于一些「普遍型」的问题，你将它写成文章发表出来，实际上也是对自己的知识进行了一次备份。不妨给自己写一份说明书保存起来，需要的时候直接翻出来照做就行。&lt;/p&gt;
&lt;p&gt;关于博客平台的选择不再赘述，参考： &lt;a href=&#34;https://yxrct.com/markdown/hui-gui-bo-ke&#34;&gt;回归博客&lt;/a&gt; &lt;a href=&#34;https://yxrct.com/markdown/qian-tan-bitcron-bo-ke-ping-tai&#34;&gt;浅谈 Bitcron 博客平台&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;GraphvizOnline&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://dreampuf.github.io/GraphvizOnline/#digraph%20graph_name%20%7B%20%0D%0A%20%20A-%3EB%5Blabel%3D%22%E5%85%B3%E7%B3%BB%22%5D%20%0D%0A%7D&#34;&gt;dreampuf.github.io/GraphvizOnline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/%E5%85%B3%E7%B3%BB%E5%9B%BE%E7%BB%98%E5%88%B6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;本篇文章的关系图就是用 Graphviz 绘制的，代码见这里：&lt;a href=&#34;https://dreampuf.github.io/GraphvizOnline/#digraph%20%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%20%7B%20%0A%20%20%E6%95%B0%E5%AD%A6%E5%9B%BE%E5%83%8F%20-%3E%20%E5%9B%BE%E5%83%8F%E3%80%81%E6%96%87%E4%BB%B6%5Blabel%3D%22GeoGebra%22%5D%0A%20%20%E6%96%87%E7%AB%A0%E9%85%8D%E5%9B%BE%20-%3E%20%E5%9B%BE%E5%83%8F%E3%80%81%E6%96%87%E4%BB%B6%0A%20%20%E5%85%B3%E7%B3%BB%E5%9B%BE%20-%3E%20%E5%9B%BE%E5%83%8F%E3%80%81%E6%96%87%E4%BB%B6%5Blabel%3D%22Graphviz%22%5D%0A%20%20%E5%9B%BE%E5%83%8F%E3%80%81%E6%96%87%E4%BB%B6%20%20-%3E%20%20%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AF%B9%E8%B1%A1%E5%82%A8%E5%AD%98%5Blabel%3D%22PicGo%22%5D%0A%20%20%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AF%B9%E8%B1%A1%E5%82%A8%E5%AD%98%20%20-%3E%20%20Markdown%E6%96%87%E6%9C%AC%5Blabel%3D%22%E9%93%BE%E6%8E%A5%E5%BC%95%E7%94%A8%22%5D%0A%0A%20%20%E6%96%87%E5%AD%97%E3%80%81%E8%A1%A8%E6%A0%BC%E3%80%81%E5%88%97%E8%A1%A8%E3%80%81%E6%B5%81%E7%A8%8B%E5%9B%BE%E3%80%81%E5%BE%85%E5%8A%9E%E3%80%81%E4%BB%A3%E7%A0%81%E6%AE%B5%20-%3E%20Markdown%E6%96%87%E6%9C%AC%5Blabel%3D%22Markdown%20%E8%AF%AD%E6%B3%95%22%5D%0A%20%20%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%20-%3E%20MathWebdemo%5Blabel%3D%22%E6%89%8B%E5%86%99%E8%BE%93%E5%85%A5%22%5D%0A%20%20MathWebdemo%20-%3E%20Markdown%E6%96%87%E6%9C%AC%5Blabel%3D%22LaTeX%20%E8%AF%AD%E6%B3%95%22%5D%0A%20%20%0A%20%20Markdown%E6%96%87%E6%9C%AC%20-%3E%20%E6%88%90%E5%9E%8B%E7%9F%A5%E8%AF%86%5Blabel%3D%22Typora%22%5D%0A%20%20Markdown%E6%96%87%E6%9C%AC%20-%3E%20%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0%5Blabel%3D%22Typora%22%5D%0A%20%20Markdown%E6%96%87%E6%9C%AC%20-%3E%20%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%5Blabel%3D%22%E5%B9%95%E5%B8%83%22%5D%0A%20%20Markdown%E6%96%87%E6%9C%AC%20-%3E%20slide%5Blabel%3D%22%EF%BC%9F%22%5D%0A%20%20%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0%20-%3E%20%E7%AC%94%E8%AE%B0%E6%9C%AC%0A%0A%20%20Bitcron%20-%3E%20%E5%8D%9A%E5%AE%A2%0A%20%20Bitcron%20-%3E%20%E8%B5%84%E6%BA%90%E7%AB%99%0A%0A%20%20PDF%E3%80%81%E5%9B%BE%E5%83%8F%E3%80%81Office%E6%96%87%E4%BB%B6%E3%80%81%E4%BB%A3%E7%A0%81%E7%AD%89%20-%3E%20%E7%AC%94%E8%AE%B0%E6%9C%AC%0A%20%20%E6%94%B6%E4%BD%9C%E4%B8%9A%20-%3E%20%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%5Blabel%3D%22xzc.cn%22%5D%0A%20%20%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%20-%3E%20%E7%AC%94%E8%AE%B0%E6%9C%AC%5Blabel%3D%22%E4%B8%8B%E8%BD%BD%E5%AF%BC%E5%87%BA%22%5D%0A%20%20%E7%AC%94%E8%AE%B0%E6%9C%AC%20-%3E%20%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87%5Blabel%3D%22%E5%9D%9A%E6%9E%9C%E4%BA%91%22%5D%0A%0A%20%20%E5%85%B1%E4%BA%AB%E6%96%87%E6%A1%A3%E3%80%81%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%20-%3E%20%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%0A%20%20%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%20-%3E%20%E7%AC%94%E8%AE%B0%E6%9C%AC%5Blabel%3D%22%E4%B8%8B%E8%BD%BD%E5%AF%BC%E5%87%BA%22%5D%0A%0A%20%20%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%20-%3E%20Inoreader%5Blabel%3D%22RSS%E6%8E%A8%E9%80%81%22%5D%0A%20%20Inoreader%20-%3E%20Kindle%E9%98%85%E8%AF%BB%5Blabel%3D%22Reabble%22%5D%0A%20%20Kindle%E9%98%85%E8%AF%BB%20-%3E%20%E4%B9%A6%E6%91%98%5Blabel%3D%22%E5%AF%BC%E5%87%BA%22%5D%0A%20%20%E4%B9%A6%E6%91%98%20-%3E%20Bitcron%5Blabel%3D%22Typora%26Dropbox%22%5D%0A%20%20%E6%88%90%E5%9E%8B%E7%9F%A5%E8%AF%86%20-%3E%20Bitcron%5Blabel%3D%22Dropbox%20%E5%90%8C%E6%AD%A5%22%5D%0A%0A%0A%20%20%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB%20-%3E%20%E8%B5%84%E6%BA%90%E7%AB%99%5Blabel%3D%22%E5%9D%9A%E6%9E%9C%E4%BA%91%22%5D%0A%0A%7D&#34;&gt;&lt;strong&gt;点击查看&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于 Graphviz 的语法，我在一篇文章中有介绍：&lt;a href=&#34;https://yxrct.com/markdown/yong-graphviz-hui-zhi-guan-xi-tu&#34;&gt;用 Graphviz 绘制关系图&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Geogebra&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geogebra.org/&#34;&gt;geogebra.org&lt;/a&gt; 类似于「几何画板」，这是一个免费的在线数学工具，我用它绘制数学图像。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;借助框架与工具，形成对知识处理的高效工作流，框架需要在实际使用中不断改进。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://features.bitcron.com/read/tools/wiki&#34;&gt;搭建自己的个人 Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanrky.me/post/20181112&#34;&gt;如何知道那些你不知道的事儿？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
      
    </item>
    
    <item>
      <title>浅谈 Bitcron 博客平台</title>
      
      
      
      
      <description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;Bitcron 作为一个独立博客平台，网上的评价普遍不错。我也是看了这些文章之后入坑的，赞同它「人类创造内容，我们负责渲染」的理念。不过，使用了一段时间后，还是发现有一些不尽如人意的地方。&lt;/p&gt;
&lt;h2&gt;门槛&lt;/h2&gt;
&lt;p&gt;与我想象中的「上手即用」不同，Bitcron 有一定的技术门槛。或许是过于小众的原因，缺了很多博客基本的配置，需要自己根据 API 开发。并且对于有些基本问题，官方的文档描述并不详细，而在问答社区，也基本得不到技术支持。我搭建博客时出现了许多问题（其中有一些影响正常使用的，像域名配置，同步问题，网站无法访问），都没能及时从技术文档和社区得到支持（在这里也感谢 &lt;a href=&#34;https://zoomyale.com/&#34;&gt;也而&lt;/a&gt; ，送我邀请码还帮我解决了一些问题）。总体来说，不推荐没有技术基础的人使用 Bitcron.&lt;/p&gt;
&lt;p&gt;对了，这里还要提到最基本的博文写作功能。目前在 Bitcron 写文章的方式有三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网页文本编辑器：Markdown 编辑器并不好用&lt;/li&gt;
&lt;li&gt;Markeditor 同步：要钱，授权费 ¥128&lt;/li&gt;
&lt;li&gt;Dropbox 同步：需要搭梯子&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bitcron 的邀请制度很严格。每个用户每充值 50 元，可以邀请一个人。从一定角度来说，这保证了用户质量，毕竟一旦流量涌入，内容质量必然会下降（像豆瓣、知乎）。但这也是门槛，挡住了一部分优质用户。城外的人想进去，真进去了却发现并没有像大部分软文提及的一样好用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bitcron 的宣传点是「简单」，但种种操作从一开始就架高了用户门槛。&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;优点&lt;/h2&gt;
&lt;p&gt;于我而言，Bitcron 的使用体验还是优于 WordPress 和 Hexo 的。配置麻烦一些，但配置好了之后，用着还算方便，界面也足够干净简洁。&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：以后还会更换博客平台吗？&lt;br&gt;
A：~~在发现更适合自己的博客平台之前，是不会更换的。~~ 已经更换为 Gitbook 平台。&lt;/p&gt;
&lt;p&gt;Q：我想入坑 Bitcron ，可以给我一个邀请码吗？&lt;br&gt;
A：可以联系我拿邀请码。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;荷兰大贤伊拉斯谟一生反对狂热，我跟他是一伙的，都反对过激的正义、盲目的崇拜和无原则的忠诚。当满世热情高涨，我们就躲到一边儿凉快；当人们齐唱赞歌，我们就逃回自己的洞里翻白眼玩。我们知道，热情一旦超过限度，就会变成肆虐的毒火。 - 《中国，少了一味药》&lt;/p&gt;
&lt;p&gt;当我看到他人对某个平台只有赞美，没有批评；对该平台的某些问题只字不提，选择性失明，过分赞美某些长处；所有的赞美都是热血澎湃，丧失理性……我便提高警惕，强迫自己不被带动情绪，理性看待这个平台的一切东西。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;警惕那些洗脑于无形的软文，但这又似乎没有方法。摘录一段文字：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们以为的自由意志，其实是不存在的。社会科学就研究到群体和个体心理学，以及传播学，你会发现人就是个设计好输入输出的黑盒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linhai1990.com/archives/89.html&#34;&gt;简谈 Bitcron 与博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linhai1990.com/archives/103.html&#34;&gt;Bitcron 折腾小记（上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linhai1990.com/archives/104.html&#34;&gt;Bitcron 折腾小记（下）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cyhour.com/533/&#34;&gt;Bitcron 初体验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.liaoyuqin.com/post/help/pibitcron&#34;&gt;我把 pi.bitcron.com 全部看了一遍，整理出了这些有用的信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E6%B5%85%E8%B0%88Bitcron%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E6%B5%85%E8%B0%88Bitcron%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/</guid>
      
    </item>
    
    <item>
      <title>电源设计 - LDO 跳变抑制能力对比测试记录</title>
      
      
      
      
      <description>&lt;p&gt;如果缺少仪器对 LDO 的电源抑制比（PSRR）进行准确测量，那么可以使用以下的简单方法，对 LDO 的跳变抑制能力进行基本的测试。下文将展示三款高速 LDO 的对比测试过程与结果。&lt;/p&gt;
&lt;h2&gt;测试环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;测试 PCB 板&lt;/li&gt;
&lt;li&gt;输入 / 输出去耦电容：1uF&lt;/li&gt;
&lt;li&gt;电源&lt;/li&gt;
&lt;li&gt;供电：4.3V, 1A&lt;/li&gt;
&lt;li&gt;电子负载&lt;/li&gt;
&lt;li&gt;模式：CC&lt;/li&gt;
&lt;li&gt;跳变频率：1kHz&lt;/li&gt;
&lt;li&gt;跳变电流：30mA/0-30mA/30-100mA&lt;/li&gt;
&lt;li&gt;示波器&lt;/li&gt;
&lt;li&gt;探头：有源探头，缩短接地线长度，并联在输出电容上测量&lt;/li&gt;
&lt;li&gt;耦合：AC 耦合&lt;/li&gt;
&lt;li&gt;带宽：20MHz&lt;/li&gt;
&lt;li&gt;数字滤波器：开启 1Mhz 捕获与触发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141413.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141418.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141424.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;测试结果&lt;/h2&gt;
&lt;p&gt;|                   | AP7333-33SRG-7 | BCT2036EUR33-TR | CL9195A33L3M |
| ----------------- | -------------- | --------------- | ------------ |
| 30mA 稳定负载纹波 | 1.50mV         | 1.42mV          | 1.03mV       |
| 0-30mA 跳变纹波   | 7.98mV         | 11.78mV         | 1.74mV       |
| 30-100mA 跳变纹波 | 11.23mV        | 20.16mV         | 5.06mV       |
| 静态电流（空载）  | 0.040mA        | 0.016mA         | 0.058mA      |&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;综合看来，CL9195A33L3M 在各种情况下表现最优，比较符合高速开关的场景。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;详细纹波曲线如下：&lt;/p&gt;
&lt;h3&gt;AP7333-33SRG-7&lt;/h3&gt;
&lt;p&gt;30mA 稳定负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516140355.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;0-30mA 跳变负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516140747.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;30-100mA 跳变负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516140848.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;静态电流（空载）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516154859.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;BCT2036EUR33-TR&lt;/h3&gt;
&lt;p&gt;30mA 稳定负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141008.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;0-30mA 跳变负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141016.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;30-100mA 跳变负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141019.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;静态电流（空载）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516154913.jpg&#34;&gt;&lt;/p&gt;
&lt;h3&gt;CL9195A33L3M&lt;/h3&gt;
&lt;p&gt;30mA 稳定负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141024.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;0-30mA 跳变负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141028.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;30-100mA 跳变负载时的纹波曲线：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516141032.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;静态电流（空载）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20220516154925.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-LDO%E8%B7%B3%E5%8F%98%E6%8A%91%E5%88%B6%E8%83%BD%E5%8A%9B%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95%E8%AE%B0%E5%BD%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/unlist/%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1-LDO%E8%B7%B3%E5%8F%98%E6%8A%91%E5%88%B6%E8%83%BD%E5%8A%9B%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95%E8%AE%B0%E5%BD%95/</guid>
      
    </item>
    
    <item>
      <title>出展活动 - 经验总结</title>
      
      
      
      
      <description>&lt;h2&gt;注意事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;尽早发通知，保证出展物资不被占用&lt;/li&gt;
&lt;li&gt;机械和硬件上的问题必须至少提前一天，软件问题必须至少提前半天。平时保留稳定版本，可随时回滚&lt;/li&gt;
&lt;li&gt;接到活动通知后，要马上出活动策划，经管理层一致审核通过。策划应包含以下内容：&lt;/li&gt;
&lt;li&gt;具体时间安排&lt;ul&gt;
&lt;li&gt;向活动负责人员（如带队老师）索要完整活动流程 / 时间表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;人员安排&lt;ul&gt;
&lt;li&gt;选好机器人负责人员，一台机器人至少需要两个人负责&lt;/li&gt;
&lt;li&gt;先分好组（包括轮值的分组），确定出行负责人（负责打车、运货）&lt;/li&gt;
&lt;li&gt;一旦固定下来，就算顶替也尽量不要在名单上增减人员&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;出行安排&lt;ul&gt;
&lt;li&gt;上车地点、目的地都需提前列出纸面文件&lt;/li&gt;
&lt;li&gt;货物运输&lt;/li&gt;
&lt;li&gt;先估计货拉拉车车厢体积&lt;/li&gt;
&lt;li&gt;叫货拉拉的人要跟车，扎带剪线钳等工具跟车&lt;/li&gt;
&lt;li&gt;人员出行&lt;/li&gt;
&lt;li&gt;操作手和搬车负责先坐滴滴，去到达地接货&lt;/li&gt;
&lt;li&gt;其他人在货车之后打车&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;物资清单&lt;ul&gt;
&lt;li&gt;赛事物资：车、电池、充电器、电脑、下载器等，由赛事队长整理&lt;/li&gt;
&lt;li&gt;其他物资：扎带剪线钳等工具、口罩、药物、伞、手推车、航空箱、电工胶布、铁丝等，由杂物队长整理&lt;/li&gt;
&lt;li&gt;出行前照着清单清点&lt;/li&gt;
&lt;li&gt;行程中每转场就清点，物资分配到人（特殊：每台车两个人，一个拿遥控器一个搬车），转场过程中需要头尾负责防丢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;突发情况预案&lt;ul&gt;
&lt;li&gt;确定两三个负责人&lt;/li&gt;
&lt;li&gt;确定突发情况最终决定权&lt;/li&gt;
&lt;li&gt;出问题先想着解决，责任回来再定性并改进&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;模板&lt;/h2&gt;
&lt;h3&gt;物资准备及负责&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;电控工具：笔记本电脑、电源、烧录器&lt;/li&gt;
&lt;li&gt;基本工具：扎带、剪线钳、电烙铁、热熔胶枪、排插&lt;/li&gt;
&lt;li&gt;机器人物资：机器人本体、遥控器、电池与充电器&lt;/li&gt;
&lt;li&gt;宣传物料：展板、宣传单&lt;/li&gt;
&lt;li&gt;其他物资：雨伞、排插、手推车&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;人员安排及职责&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;xxx：负责 xxx&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;物资负责人：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xxx：负责 xxx 物资&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;时间地点安排&lt;/h3&gt;
&lt;p&gt;日期：xxxx 年 xx 月 xx 日&lt;/p&gt;
&lt;h4&gt;去程出发&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;出发时间：xx:xx&lt;/li&gt;
&lt;li&gt;出发地点：xx&lt;/li&gt;
&lt;li&gt;注意事项：&lt;/li&gt;
&lt;li&gt;提前预约货拉拉&lt;/li&gt;
&lt;li&gt;出行前照着清单清点&lt;/li&gt;
&lt;li&gt;跟车人到校门口，凭放行条带货拉拉到 B4 一楼装货&lt;/li&gt;
&lt;li&gt;机器人车轮需要用扎带固定，保证运输过程中的安全&lt;/li&gt;
&lt;li&gt;装货之后，剩余随行人员步行至校门口打车&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;去程到达&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;到达时间：预计 xx:xx&lt;/li&gt;
&lt;li&gt;到达地点：xx&lt;/li&gt;
&lt;li&gt;注意事项：&lt;/li&gt;
&lt;li&gt;到达目的地后，跟车人负责卸货，并将具体位置告知剩余随行人员&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;回程出发&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;出发时间：xx:xx&lt;/li&gt;
&lt;li&gt;出发地点：xx&lt;/li&gt;
&lt;li&gt;注意事项：&lt;/li&gt;
&lt;li&gt;提前预约货拉拉&lt;/li&gt;
&lt;li&gt;清点物资&lt;/li&gt;
&lt;li&gt;机器人车轮需要用扎带固定，保证运输过程中的安全&lt;/li&gt;
&lt;li&gt;装货之后，剩余随行人员打车&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;回程到达&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;到达时间：预计 xx:xx&lt;/li&gt;
&lt;li&gt;到达地点：xx&lt;/li&gt;
&lt;li&gt;注意事项：&lt;/li&gt;
&lt;li&gt;到校门口凭放行条带货拉拉到 B4 一楼卸货&lt;/li&gt;
&lt;li&gt;到达目的地后，跟车人负责卸货，并将具体位置告知剩余随行人员&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%87%BA%E5%B1%95%E6%B4%BB%E5%8A%A8-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%87%BA%E5%B1%95%E6%B4%BB%E5%8A%A8-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</guid>
      
    </item>
    
    <item>
      <title>动员大会 - 经验总结</title>
      
      
      
      
      <description>&lt;h2&gt;出现的问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;整场大会时间控制不合理，总时间过长&lt;/li&gt;
&lt;li&gt;演讲者没有事先打稿&lt;/li&gt;
&lt;li&gt;未能很好地调动气氛&lt;/li&gt;
&lt;li&gt;设备问题，未能正常投屏&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如何改进&lt;/h2&gt;
&lt;p&gt;【施工中】&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%8A%A8%E5%91%98%E5%A4%A7%E4%BC%9A-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%8A%A8%E5%91%98%E5%A4%A7%E4%BC%9A-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</guid>
      
    </item>
    
    <item>
      <title>参观实验室 - 经验模板</title>
      
      
      
      
      <description>&lt;p&gt;参观实验室是每年必备的活动，不管面向的对象是新生还是领导。其区别就是，对新生要很接地气，不要涉及太多理论知识，只需要讲机器人是什么、有什么功能，要让他们对实验室产生兴趣，从而加入我们，如果有感兴趣的再从专业用途上详细展开讲解；而对领导讲解，可以直接讲专业知识，因为要代表学校层面，展示我们所掌握的技术和专业领域。&lt;/p&gt;
&lt;p&gt;大多数人不会认真听讲解的，他们只想看到机器动起来。&lt;/p&gt;
&lt;p&gt;参观实验室，最主要有以下几个方面：&lt;/p&gt;
&lt;h2&gt;S1 展示&lt;/h2&gt;
&lt;p&gt;可选。因为不是我们自己的作品，所以不必讲解，只需开动起来吸引人就行了。&lt;/p&gt;
&lt;h2&gt;奖状区&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我们华广机器人·野狼队主要参加两个比赛，RoboMaster 机甲大师赛，和 ROBOCON 全国大学生机器人比赛。&lt;/p&gt;
&lt;p&gt;我们是一支有科研实力的队伍，这是我们近年来拿过的奖状，都是全国一等二等级别的。&lt;/p&gt;
&lt;p&gt;这是我们比赛的照片和团队的日常，大家可以看看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;步兵活动区&lt;/h2&gt;
&lt;p&gt;步兵活动区是沿着 B3-401 外墙的一个横向区域，主要演示步兵的全向运动、自瞄等功能，要拉警戒线。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家可以过来看看，这是我们的步兵机器人。它在比赛中的作用是发射弹丸、打到敌方装甲板上，击杀敌人。整场比赛就像打王者（引导看视频），摧毁敌方水晶，我们这里叫它基地，就能获得胜利。&lt;/p&gt;
&lt;p&gt;这是我们的两台步兵机器人，可以看到，这一台能够自动识别瞄准。这是我们视觉算法组的任务，相当于给机器人写自瞄外挂，在比赛的时候就能更好地锁定对方的机器人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;静态展示区&lt;/h2&gt;
&lt;p&gt;这个区域可以放往年的机器人（不能动的），无人机也可以放这儿。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家看，这是我们去年 ROBOCON 比赛的四足机器人。&lt;/p&gt;
&lt;p&gt;这是 RoboMaster 的英雄机器人，它跟步兵的区别是，它发射大弹丸（拿手上演示），伤害是步兵发射小弹丸的十倍。&lt;/p&gt;
&lt;p&gt;这是 RoboMaster 的无人机。它的作用，是给我们队伍提供上帝视角，然后也有打弹的功能，可以对敌方的机器人和基地造成伤害。&lt;/p&gt;
&lt;p&gt;大家可以看一下，这是我们打比赛时的第一人称视角，就像是打 FPS 游戏一样的，不过操控的是场上实体的机器人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;工程、大神符、哨兵区&lt;/h2&gt;
&lt;p&gt;这个纵深区域可以拿警戒线拉起来，里面展示外面看。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;到这边我们看看这个机器人，它叫工程机器人，作用就是夹取弹药箱，把大弹丸小弹丸分给步兵和英雄机器人。也可以在他们死了的时候复活他们。所以工程机器人主要后勤兵的作用。&lt;/p&gt;
&lt;p&gt;这边看过去，是我们比赛场上的一个道具，大神符每次只随机亮一个扇叶的灯，如果我们的步兵机器人击中亮灯的扇叶，就能获得一些 buff 像加攻击力之类的。&lt;/p&gt;
&lt;p&gt;在最左边的是我们的哨兵机器人，它的特点是全自动运行，不需要人为操控，就可以瞄准攻击敌方机器人。&lt;/p&gt;
&lt;p&gt;自动识别瞄准的功能，需要用到人工智能机器学习算法，包括刚刚大神符的识别（指一下），都是视觉算法组的职责。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;其他&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;关于我们内部的分组，大家可以看看墙上的壁画（明天我会贴出来）
机械组主要是把机器人给造出来；
电控组主要是编写并调试机器人的控制代码；
视觉组主要是写一些外挂；
硬件电路组主要是给机器人设计并制造电路板（给大家看看主控板）
还有软件组，是给队里写一些实用的软件的，像我们管理物资用的小程序，还有网站博客等等。&lt;/p&gt;
&lt;p&gt;行政组我们有宣传策划组和财务组，大家也可以扫码关注公众号了解一下。&lt;/p&gt;
&lt;p&gt;想要进实验室，我们不设门槛，只要你对我们感兴趣，有热情，就可以加入我们的。&lt;/p&gt;
&lt;p&gt;大家可以扫码关注我们，也可以扫墙上的二维码进行抽奖~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是可以参考的技术内容（不要照着念）：&lt;/p&gt;
&lt;p&gt;```markdown
S1 展示区
介绍内容：RoboMaster S1 小机器人简易移动
讲解文案：我们现在看到的这个机器人是 DJI 去年 6 月发布的教育机器人“机甲大师 RoboMasterS1“，相信大家都知道 Robomaster 机甲大师赛，S1 机器人就是源自于 Robomaster 赛事。DJI 基于这项赛事中的探索和积累，研发出 S1 并进行推广，让大家都能亲身体会到机器人的魅力。有兴趣的同学可以试着体验一下（手机 app 操控体验）&lt;/p&gt;
&lt;p&gt;奖状区
介绍内容：历年来获奖情况
讲解文案：这里是我们野狼队从三年前建队以来所获得的成绩，虽然建队时间不长，但是所获得的成就大家有目共睹。这里一二三等奖都有，说明了我们队伍具有一定科研实力，也期待你们的加入能为我们注入更多新的能量。（对着奖状解说）&lt;/p&gt;
&lt;p&gt;步兵区
介绍内容：全向移动 / 小陀螺 / 扭腰、视觉识别
讲解文案：这个是我们 Robomaster 赛事里面的步兵机器人，步兵的作用主要是通过发射小弹丸攻击敌方机器人，这个枪口就是发射小弹丸的地方（指着位置）。步兵具有高灵活度，是所有机器人中灵敏度最高的一个。他可以进行全方位的移动，现在看它来表演一个”小陀螺旋转“和扭腰……（演示）除此之外，步兵机器人还可以进行视觉识别，比如说自瞄，通俗来说就是能够自动瞄准某个物体而跟着他移动。&lt;/p&gt;
&lt;p&gt;静态区
介绍内容：狗 / 无人机 / 显示屏播放比赛视频
讲解文案：大家看看这个机器人像什么？是的有点像一只狗，这个是四足机器人的一种，是之前参加 robocon 赛事的参赛机器人。还有这个是 空中机器人，他也是机器人的一种。大家看了那么多机器人，是不是对机器人的形态认知又刷新了呢？这些机器人的功能，大家可以看看我们的比赛视频。&lt;/p&gt;
&lt;p&gt;工程夹取区
介绍内容：演示工程夹取弹药箱
讲解文案：&lt;/p&gt;
&lt;p&gt;这一台是 RoboMaster 比赛中的 2 号工程机器人，可以看到它与步兵相比，长得更方正。
虽然它不具备发射机构，但在赛场上会以各种特殊机构辅助其它机器人。
比如每颗伤害值 100 的大弹丸，需要由工程机器人的夹取机构获得赛场资源岛中的弹药箱，将大弹丸收集起来后，补给给英雄机器人。当我方的步兵机器人及其它地面机器人被伤害至战亡后，往往会停留在场地中央，这时工程机器人可以使用它的救援机构将步兵机器人拖回至我方的补给区进行复活。
像夹取这样一个动作，各个学校会使用不同的机构实现，这一台车使用一个叫做电机的装置进行翻转取弹的夹爪，以及一个气缸的执行元件实现夹紧弹药箱的动作。&lt;/p&gt;
&lt;p&gt;RM 剩余机器人
介绍内容：介绍哨兵、移动英雄和大神符
讲解文案：
英雄：（指着英雄）这个机器人是英雄机器人，他的作用主要是通过发射 35mm 的大弹丸（高尔夫球实物）攻击敌方机器人，这个枪口就是发射大弹丸的地方（指着位置），其和步兵机器人类似，但相比之下英雄机器人会比步兵机器人具有更高的伤害，同时血量也会略高于步兵，但灵活性以及射速都低于步兵机器人。如果把步兵看做能持续输出血量少的游击兵，那么英雄机器人就是既有爆发杀伤能力，又有一定坦度的战士，在比赛上经常和步兵机器人一起组织进攻。
大神符：在这边我们可以看到现在场上正在旋转发光的是大神符，20 赛季官方名字叫能量机关，由于大神符高难度的激活方式和过往赛季的名称，仍有多数 RM 参赛者称它为大神符。大神符在比赛中提供高额增益效果，需要我方步兵机器人通过特定方式激活大神符，直接提升步兵英雄攻击力和防御力。在比赛场中先激活大神符的一方往往拥有着巨大的优势，是拿下比赛胜利的重要因素（吹水的，觉得不合适可以改）。而激活大神符所需的关键算法，由我们视觉算法组成员负责，需要扎实的数学线代概率伦知识功底，对大神符或者是数学逻辑感兴趣的同学，可以扫描这边二维码观看视觉算法组教程，了解报名我们视觉算法组，谢谢大家！！接下来请大家继续往下参观，&lt;/p&gt;
&lt;p&gt;哨兵：
哨兵，是 ROBMASTER 机甲大师对抗赛中唯一的全自动机器人兵种。承担保卫基地以及在特定区域能掩护己方队友的职能。
在比赛中，哨兵机器人会被放置在基地与前哨战之间的固定轨道上，并在轨道上移动并寻找敌方地面机器人进行歼灭。尽管哨兵并没有配置操作手，但规则赋予了它比赛之中最高之一的血量与载弹量。同时区别与其他机器人，装备了双枪管，使哨兵拥有无与伦比的火力，成为了赛场上不可小觑的一股力量。而往届赛场上哨兵的数次拿下全场 MVP 的记录也在印证了这一点。作为比赛中体积最小最轻的机器人，却也是赛场上强有力的生力军。
而这么强大的兵种，想要完成它自然也是不小的挑战，机械组的成员需要思考如何在稳定的前提下将相当多的系统整合到那么小的体积内让它们工作时各司其职，互不干涉：电控组的成员则需要为其规划最优的运动方案，让它在那方寸的轨道上游走自如；视觉组的各位则要为它设计自动瞄准程序，让它在无人操作的情况下也能百发百中。那么，你想来挑战这项艰巨又充满乐趣的项目吗？&lt;/p&gt;
&lt;p&gt;参观实验室内部
介绍内容：引导人群选择继续参观（去车队）或者深入了解（进来实验室里面可以抽奖），分走人群
讲解文案：相信大家看了那么多机器人，也对我们实验室有一定的了解，感兴趣且想了解更多的同学可以进入实验室参与抽奖活动，或者参观下一个队伍。
```&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%8F%82%E8%A7%82%E5%AE%9E%E9%AA%8C%E5%AE%A4-%E7%BB%8F%E9%AA%8C%E6%A8%A1%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%8F%82%E8%A7%82%E5%AE%9E%E9%AA%8C%E5%AE%A4-%E7%BB%8F%E9%AA%8C%E6%A8%A1%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>四校交流 - 策划案 - 正式</title>
      
      
      
      
      <description>&lt;h2&gt;一、活动基本信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;日期&lt;/strong&gt;：2021 年 3 月 27 日（周六）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地点&lt;/strong&gt;：广州城市理工学院（原华南理工大学广州学院）B2B3 中间比赛场地&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;二、活动当日流程&lt;/h2&gt;
&lt;h3&gt;上午：修整调试&lt;/h3&gt;
&lt;p&gt;为了解决各参赛队伍「水土不服」的问题，我们计划在各参赛队伍抵达比赛场地之后，留出时间给大家稍作修整，并对各自的机器人进行调试。&lt;br&gt;
裁判组将对公用场地设备进行测试。&lt;/p&gt;
&lt;h3&gt;中午：午饭午休&lt;/h3&gt;
&lt;p&gt;中午我们计划到第二食堂用餐。为了避免人员过多聚集，我们将分三批带大家用餐，每个批次的时间安排如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;第一批&lt;/strong&gt;：11:30&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第二批&lt;/strong&gt;：11:50&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三批&lt;/strong&gt;：12:00&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;吃完午饭之后，我们计划的午休时间是 12:30 - 13:30。&lt;br&gt;
不午休的同学，可以在我们工作人员的带领下参观学校和实验室。&lt;/p&gt;
&lt;h3&gt;下午：正式比赛&lt;/h3&gt;
&lt;p&gt;我们计划在下午 14:30 开始正式比赛。在比赛开始前的半小时，裁判组将对各参赛队的机器人进行检录，模拟正式比赛流程。&lt;/p&gt;
&lt;p&gt;比赛项目如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3v3 （1h）：2:30 - 3:30&lt;/li&gt;
&lt;li&gt;攻防战（交替）&lt;/li&gt;
&lt;li&gt;红方基地（哨兵）&lt;/li&gt;
&lt;li&gt;蓝方基地（前哨站）&lt;/li&gt;
&lt;li&gt;2v2 （30 min）：3:30 - 4:00&lt;/li&gt;
&lt;li&gt;1v1 （30 min）：4:00 - 4:30&lt;/li&gt;
&lt;li&gt;趣味赛（30min）：4:30 - 5:00&lt;/li&gt;
&lt;li&gt;竞速&lt;/li&gt;
&lt;li&gt;定点完成任务计时&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下午 5 点的时候，比赛结束。我们将开展交流活动、交换礼物和微信。&lt;/p&gt;
&lt;h3&gt;傍晚：交流活动&lt;/h3&gt;
&lt;p&gt;我们暂定比赛结束于当天下午 17:00。比赛结束后各参赛队进入交流环节。&lt;br&gt;
我们将组织各参赛队展开友好、深入的交流，互相交换礼物纪念品，进行大合照。&lt;/p&gt;
&lt;p&gt;交流活动结束后，我们将在校内送各参赛队回家，当天交流圆满结束。&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%9B%E6%A0%A1%E4%BA%A4%E6%B5%81-%E7%AD%96%E5%88%92%E6%A1%88-%E6%AD%A3%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%9B%E6%A0%A1%E4%BA%A4%E6%B5%81-%E7%AD%96%E5%88%92%E6%A1%88-%E6%AD%A3%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>四校交流 - 策划案</title>
      
      
      
      
      <description>&lt;h2&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;210324&lt;/li&gt;
&lt;li&gt;规则部分&lt;ul&gt;
&lt;li&gt;修改准备时间、比赛时间、修正时间&lt;/li&gt;
&lt;li&gt;添加的弹丸量、升级机制、操作间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;更新赛务组的人员安排&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;提前问清事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;来的人数&lt;/li&gt;
&lt;li&gt;出行方式&lt;/li&gt;
&lt;li&gt;时间安排&lt;/li&gt;
&lt;li&gt;什么时候出发&lt;/li&gt;
&lt;li&gt;什么时候到&lt;/li&gt;
&lt;li&gt;大巴车牌及车型&lt;/li&gt;
&lt;li&gt;带什么兵种，多少部&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;基本流程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;抵达&lt;/li&gt;
&lt;li&gt;车辆出入放行条、进校门的方式（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;接待&lt;/li&gt;
&lt;li&gt;备场&lt;/li&gt;
&lt;li&gt;休整&lt;/li&gt;
&lt;li&gt;调试（宣策采访）&lt;/li&gt;
&lt;li&gt;调试场地设备&lt;/li&gt;
&lt;li&gt;吃饭&lt;/li&gt;
&lt;li&gt;地点：二饭&lt;/li&gt;
&lt;li&gt;时间&lt;ul&gt;
&lt;li&gt;第一批：11:30&lt;/li&gt;
&lt;li&gt;第二批：11:50&lt;/li&gt;
&lt;li&gt;第三批：12:00&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;饭后午休&lt;/li&gt;
&lt;li&gt;时间：12:30 - 1:30&lt;/li&gt;
&lt;li&gt;参观实验室&lt;/li&gt;
&lt;li&gt;正式比赛&lt;/li&gt;
&lt;li&gt;时间：2:00&lt;/li&gt;
&lt;li&gt;热场环节&lt;/li&gt;
&lt;li&gt;适应性训练 + 检录 （30 min）：2:00 - 2:30&lt;/li&gt;
&lt;li&gt;3v3 （1h）：2:30 - 3:30&lt;ul&gt;
&lt;li&gt;攻防战（交替）&lt;/li&gt;
&lt;li&gt;红方基地（哨兵）&lt;/li&gt;
&lt;li&gt;蓝方基地（前哨站）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2v2 （30 min）：3:30 - 4:00&lt;/li&gt;
&lt;li&gt;1v1 （30 min）：4:00 - 4:30&lt;/li&gt;
&lt;li&gt;（如果有剩余时间）趣味赛 （30min）：4:30 - 5:00&lt;ul&gt;
&lt;li&gt;竞速&lt;/li&gt;
&lt;li&gt;定点完成任务计时&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;宣策直播（考虑与其他学校联合直播）（&lt;strong&gt;负责人：锶淇、其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;按比赛规则进行比赛&lt;/li&gt;
&lt;li&gt;总结&lt;/li&gt;
&lt;li&gt;时间：5:00（暂定）&lt;/li&gt;
&lt;li&gt;围圈圈交流（放队旗合照）（&lt;strong&gt;负责人：晓柔&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;互相加微信&lt;/li&gt;
&lt;li&gt;礼物交换&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交流结束&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结束后的工作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;清点物资&lt;/li&gt;
&lt;li&gt;开总结会&lt;/li&gt;
&lt;li&gt;交报告&lt;/li&gt;
&lt;li&gt;交宣策新闻稿&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;场地&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210324145412.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;大棚（&lt;strong&gt;负责人：高佬、国熙&lt;/strong&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检录处&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;备场&lt;/li&gt;
&lt;li&gt;正式比赛场地&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;休息吹水区&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;规则&lt;/h2&gt;
&lt;h3&gt;比赛项目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;适应性训练：游走、补给、射击&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3v3&lt;/strong&gt;：死斗 或 攻防战&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2v2&lt;/strong&gt;：死斗或攻防战&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1v1&lt;/strong&gt;：死斗或攻防战&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定点任务&lt;/strong&gt;：【待编辑】&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;竞速&lt;/strong&gt;：路线如下图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210324151137.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;准备物资：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地胶（2 X 2）作为检查点（转角）&lt;/li&gt;
&lt;li&gt;终点处做缓冲处理&lt;/li&gt;
&lt;li&gt;终点在盲道过半&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;流程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;两分钟准备时间&lt;/li&gt;
&lt;li&gt;同正式比赛&lt;/li&gt;
&lt;li&gt;装填初始弹丸&lt;/li&gt;
&lt;li&gt;五分钟比赛时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;死斗&lt;/strong&gt; 或 &lt;strong&gt;攻防&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;步兵 5 秒后原地复活，需要撤离战场回到补给区进行回血和技能恢复&lt;/li&gt;
&lt;li&gt;英雄 10 秒后原地复活，需要撤离战场回到补给区进行回血和技能恢复&lt;ul&gt;
&lt;li&gt;由于服务器无法直接对机器人进行回血处理，所以需要服务器对机器人进行重置之后再重新给予经验值来进行恢复&lt;/li&gt;
&lt;li&gt;机器人复活后保持战亡前的等级、性能点与经验值，且血量恢复至上限血量的 20%。机器人复活后获得 100%防御增益，持续时间为 10 秒&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;获胜条件&lt;ol&gt;
&lt;li&gt;击败基地的一方胜&lt;/li&gt;
&lt;li&gt;基地剩余血量百分比高方胜&lt;/li&gt;
&lt;li&gt;百分比相同时，伤害量高的一方胜&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;两分钟休整时间&lt;/li&gt;
&lt;li&gt;清理场地&lt;/li&gt;
&lt;li&gt;障碍块重置&lt;/li&gt;
&lt;li&gt;清扫弹丸&lt;/li&gt;
&lt;li&gt;机器人回归补给区&lt;/li&gt;
&lt;li&gt;机器人退弹&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;装弹量&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210324150850.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一局比赛中，哨兵机器人可用 17mm 弹丸数量为 500 发。&lt;/p&gt;
&lt;h3&gt;升级机制&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210324150915.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;操作间&lt;/h3&gt;
&lt;p&gt;操作间位于战场外围附近，是比赛时操作手的活动区域。操作间配置对应数量的电脑，且每台电脑配备对应的显示器、鼠标、键盘、USB 集线器等官方设备。&lt;/p&gt;
&lt;h2&gt;物资准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;比赛物资&lt;/li&gt;
&lt;li&gt;[ ] 电池（&lt;strong&gt;负责人：正富&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 弹丸（&lt;strong&gt;负责人：徐玺&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 警戒线（&lt;strong&gt;负责人：湘杰&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 排插（&lt;strong&gt;负责人：正富&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 路由器、服务器准备及测试（&lt;strong&gt;负责人：健贤&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 护目镜、胸牌（&lt;strong&gt;负责人：高佬、国熙&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 三套完整机械工具（&lt;strong&gt;负责人：建勋&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 盲道的保护、随机障碍区的障碍、（哨兵的底盘以及保护）、前哨站的保护以及正常使用（&lt;strong&gt;负责人：高佬&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 硬件焊接工具（&lt;strong&gt;负责人：bobi&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 仙女棒、布袋、补给区的地胶提示区、标签旗（纸）（&lt;strong&gt;负责人：高佬&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;普通物资&lt;/li&gt;
&lt;li&gt;[ ] 队服（&lt;strong&gt;负责人：所有人&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 电工胶布（&lt;strong&gt;负责人：bobi&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[x] 桌子（&lt;strong&gt;负责人：高佬、宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[x] 风扇（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[x] 推车（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 音响（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[x] 水：矿泉水、大可乐、纸杯（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;礼物准备&lt;/li&gt;
&lt;li&gt;[ ] 明信片（&lt;strong&gt;负责人：锶淇&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 签名可乐（&lt;strong&gt;负责人：锶淇&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 七彩步兵贴纸（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 人物钥匙扣（&lt;strong&gt;负责人：其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 队旗（&lt;strong&gt;负责人：其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 合照（&lt;strong&gt;负责人：其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 野狼队 KT 板（&lt;strong&gt;负责人：其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;[ ] 操作间的布置&lt;/li&gt;
&lt;li&gt;[ ] 大电视、HDMI 等&lt;/li&gt;
&lt;li&gt;[ ] 教室卫生&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;面向对象&lt;/h2&gt;
&lt;p&gt;人太多了需要报备（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/p&gt;
&lt;h3&gt;参赛队员（&lt;strong&gt;负责人：高佬、国熙&lt;/strong&gt;）&lt;/h3&gt;
&lt;p&gt;|   组别   |        人员         |        职责        |                                                                                                                                                              补充                                                                                                                                                               |
| :------: | :-----------------: | :----------------: | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: |
|  电控组  |       谢正富        | 1 号步兵第一负责人 |                                                                                           1、检录阶段：携带电脑，配合操作手进行检录；2、三分钟准备阶段：上电、检查接线、提示操作手进行功能测试，自瞄测试；3、询问操作手有出现什么问题                                                                                           |
|  电控组  |       张誉升        | 2 号步兵第一负责人 |                                                                                           1、检录阶段：携带电脑，配合操作手进行检录；2、三分钟准备阶段：上电、检查接线、提示操作手进行功能测试，自瞄测试；3、询问操作手有出现什么问题                                                                                           |
|  机械组  |       黄永平        | 1 号步兵第二负责人 |                                                                                                                          1、在备场待命，随时进行维修；2、在进入检录区前先自行检查一遍机器人的健康状况                                                                                                                           |
|  机械组  |       钟晓雄        | 2 号步兵第二负责人 |                                                                                                                           1、在备场待命，随时进行维修;2、在进入检录区前先自行检查一遍机器人的健康状况                                                                                                                           |
| 操作手组 |       古炎坤        |   1 号步兵操作手   | 1、操作机器人进入检录区，并根据检录员的提示进行相关操作；2、三分钟准备阶段，进入比赛场地后，与电控负责人一起检查机器人，详细内容参考训练计划中的 &lt;a href=&#34;https://www.notion.so/a88d050973334eff8ca22e90addf9a76&#34;&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/a&gt;；3、比赛结束后：参考训练计划中的 &lt;a href=&#34;https://www.notion.so/a88d050973334eff8ca22e90addf9a76&#34;&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/a&gt; |
| 操作手组 | 伍晁均/徐玺（暂替） |   2 号步兵操作手   | 1、操作机器人进入检录区，并根据检录员的提示进行相关操作；2、三分钟准备阶段，进入比赛场地后，与电控负责人一起检查机器人，详细内容参考训练计划中的 &lt;a href=&#34;https://www.notion.so/a88d050973334eff8ca22e90addf9a76&#34;&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/a&gt;；3、比赛结束后：参考训练计划中的 &lt;a href=&#34;https://www.notion.so/a88d050973334eff8ca22e90addf9a76&#34;&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/a&gt; |&lt;/p&gt;
&lt;h3&gt;赛务组（&lt;strong&gt;负责人：高佬、国熙&lt;/strong&gt;）&lt;/h3&gt;
&lt;p&gt;|     人员      |                     职责                     |      组别      |   补充   |
| :-----------: | :------------------------------------------: | :------------: | :------: |
|     王崟      |   检录机器人的大小尺寸 + 机械结构坚固程度    |     检录组     |          |
|  蒙朝都/张阳  |        检录装甲板的使用情况（仙女棒）        |     检录组     | 轮班交替 |
|    丁雨欣     |                检录射速、热量                |     检录组     |          |
|    陈炽康     |             弹丸收集 + 障碍重置              |     场务组     | 轮班交替 |
| 陈佳锋/曾浩彬 |             弹丸收集 + 障碍重置              |     场务组     | 轮班交替 |
|    何庭辉     |             弹丸收集 + 障碍重置              |     场务组     | 轮班交替 |
|    何颖祺     |             弹丸收集 + 障碍重置              |     场务组     | 轮班交替 |
|    袁东青     |             弹丸收集 + 障碍重置              |     场务组     | 轮班交替 |
|    苏获霖     |                   弹丸分装                   |     场务组     |          |
|     李肃      |                   弹丸清洁                   |     场务组     |          |
|    沈明生     |                    补给站                    |     场务组     |          |
|    李嘉琦     |                    补给站                    |     场务组     |          |
|    黄健贤     |                    服务器                    | 裁判组（边裁） |          |
|    任创新     | 场地裁判 + 机器人裁判系统设置 + 基地血量恢复 | 裁判组（主裁） |          |
|    伍国熙     | 场地裁判 + 机器人裁判系统设置 + 基地血量恢复 | 裁判组（边裁） |          |
|    黄霆钰     |         管理各个出入口的人员（入口）         |    安保人员    |          |
|    吴焯钧     |         管理各个出入口的人员（出口）         |    安保人员    |          |
|    黎雪泳     |                 医护应急处理                 |    医护人员    |          |
|     张颖      |                 医护应急处理                 |    医护人员    |          |&lt;/p&gt;
&lt;p&gt;职责：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检录机器人的大小尺寸 + 机械结构坚固程度：&lt;/li&gt;
&lt;li&gt;利用电工胶布在地面粘贴出 3 种 Size （步兵、英雄、哨兵）的正投影矩形（长 X 宽），用于测量长宽，高度利用卷尺 + 木条标记进行测量&lt;/li&gt;
&lt;li&gt;坚固程度测试即让机器人抬起至 20cm 的高度自由下落，查看结构是否正常&lt;/li&gt;
&lt;li&gt;检录装甲板的使用情况（仙女棒）&lt;/li&gt;
&lt;li&gt;利用仙女棒对装甲板进行击打，查看装甲板是否正常&lt;/li&gt;
&lt;li&gt;检测射速、热量是否有正常限制&lt;/li&gt;
&lt;li&gt;给予机器人一些子弹，并利用一个布袋回收打出的弹丸，查看机器人的射速和热量是否做限制&lt;/li&gt;
&lt;li&gt;弹丸收集 + 障碍重置&lt;/li&gt;
&lt;li&gt;一场比赛结束后对场地进行弹丸的清理和回收（扫把 + 扫铲）&lt;/li&gt;
&lt;li&gt;对随机障碍块的位置重置&lt;/li&gt;
&lt;li&gt;弹丸清洁&lt;/li&gt;
&lt;li&gt;对回收完毕的弹丸进行清洁（干洗），去除表面灰尘和杂志&lt;/li&gt;
&lt;li&gt;弹丸分装&lt;/li&gt;
&lt;li&gt;对清洁完毕的弹丸进行分装，按 50 发一框来进行分配&lt;/li&gt;
&lt;li&gt;提前准备好三个框：收集框、清洁框、分装框&lt;/li&gt;
&lt;li&gt;补给站&lt;/li&gt;
&lt;li&gt;人工补给站。将分装好的弹药带至补给区附近，并对请求补给的机器人进行补给&lt;/li&gt;
&lt;li&gt;服务器&lt;/li&gt;
&lt;li&gt;配置并维护服务器，引导操作手连接服务器，确保服务器的正常使用，利用服务器对比赛进行管理，包括回血、复活等&lt;/li&gt;
&lt;li&gt;场地裁判 + 机器人裁判系统设置 + 基地血量恢复&lt;/li&gt;
&lt;li&gt;场地裁判。根据比赛规则对机器人予以警告、判罚处理，维持现场秩序，并通知服务器管理者对机器人进行判罚&lt;/li&gt;
&lt;li&gt;裁判系统的设置。根据特殊情况对机器人上的裁判系统进行相关的设置，在服务器出现无法正常运作时，对机器人进行离线模式的选择处理&lt;/li&gt;
&lt;li&gt;基地血量恢复。同理，需要人工对离线的基地进行手动的血量恢复&lt;/li&gt;
&lt;li&gt;管理各个出入口&lt;ul&gt;
&lt;li&gt;对各出入口进行人员进出的管理，对未携带吊牌人员进行拦截处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;医护应急处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准备好医药箱，对现场出现的应急情况做出行动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;导播组（&lt;strong&gt;负责人：锶淇、其森&lt;/strong&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;直播人员&lt;/li&gt;
&lt;li&gt;拍摄人员&lt;/li&gt;
&lt;li&gt;战地记者&lt;/li&gt;
&lt;li&gt;邀请老师（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;吃瓜群众&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;宣策任务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;比赛直播&lt;/li&gt;
&lt;li&gt;机位设置&lt;ul&gt;
&lt;li&gt;静止机位：大神符、监控摄像头&lt;/li&gt;
&lt;li&gt;移动机位：手持手机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;采访问题（&lt;strong&gt;负责人：锶淇、宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;赛事预告海报推文（&lt;strong&gt;负责人：锶淇&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;让邓老师帮转学院群（&lt;strong&gt;负责人：宇轩&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;找服帮推（&lt;strong&gt;负责人：晓柔&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;招新&lt;/li&gt;
&lt;li&gt;招募操作手和宣策组员的详情（&lt;strong&gt;负责人：锶淇、其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;新闻稿（&lt;strong&gt;负责人：锶淇、其森&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;Vlog（&lt;strong&gt;负责人：其森&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;彩排&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;周四下午进行预彩排&lt;/li&gt;
&lt;li&gt;周五进行彩排&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.qq.com/doc/DUklKQUVhU2hldG9z&#34;&gt;华工华广一家亲友谊赛具体比赛日程与方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.notion.so/210327-a2aae7b712a54998961b4502aaae6c4a&#34;&gt;210327 - 高校联盟赛热身友谊赛&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%9B%E6%A0%A1%E4%BA%A4%E6%B5%81-%E7%AD%96%E5%88%92%E6%A1%88/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%9B%E6%A0%A1%E4%BA%A4%E6%B5%81-%E7%AD%96%E5%88%92%E6%A1%88/</guid>
      
    </item>
    
    <item>
      <title>团队影像资源管理</title>
      
      
      
      
      <description>&lt;p&gt;本篇内容以机器人队的影像资料管理作为实例展开叙述。机器人队用群晖 NAS 做资料存储，相比于传统的文件夹管理方法，用这种方法更方便管理影像资源、更好地管理用户读写权限、搭建各类智能相册（时间线、人脸识别、标签、位置等功能）。&lt;/p&gt;
&lt;h2&gt;基本操作方法&lt;/h2&gt;
&lt;p&gt;打开 Synology Photos，接下来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;以活动划分的相册&lt;/strong&gt;：请在右上角点击 &lt;code&gt;切换到文件夹模式&lt;/code&gt;，打开 &lt;code&gt;2021 赛季&lt;/code&gt; 文件夹，新建名为 &lt;code&gt;日期 + 活动名称&lt;/code&gt; 的文件夹（例如 &lt;code&gt;201108 换届大会&lt;/code&gt;，数字和中文之间要加空格保证美观），将照片上传至文件夹内。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不以活动划分的相册&lt;/strong&gt;（如日常拍摄的照片）：请切换到时间线模式，直接拖动照片或视频到界面中进行上传。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;技术原理&lt;/h2&gt;
&lt;p&gt;因为 Synology Photos 默认会创建 &lt;code&gt;/photo&lt;/code&gt; 文件夹，并将在 Photos 面板内上传的照片，按年月的方式归档到 &lt;code&gt;/photo/PhotoLibrary&lt;/code&gt; 文件夹内。所以，我们可以将自定义的相册放至 &lt;code&gt;/photo&lt;/code&gt; 目录下，方便在 Synology Photos 上查看影像。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210425111203.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，我们在 &lt;code&gt;/photo&lt;/code&gt; 目录下创建了 &lt;code&gt;2021 赛季&lt;/code&gt; 文件夹，以活动为单位存放映像资源。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210425111429.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;以活动为单位，我们可以使用 &lt;code&gt;日期 + 活动名称&lt;/code&gt; 的方式，来命名每次活动的文件夹，例如 &lt;code&gt;201108 换届大会&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;为什么要使用文件夹归档相册，而不用 Synology Photos 内的相册呢？这是因为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Synology Photos 无法导出相册信息，一旦需要更换磁盘或迁移，那么所有相册信息将会丢失。&lt;/li&gt;
&lt;li&gt;无法细分层级。例如在某些活动的相册文件夹中，需要进一步细分摄影师的文件夹，那么 Synology Photos 无法做到。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将以活动为单位的影响资源放入 &lt;code&gt;/photo&lt;/code&gt; 目录后，打开 Synology Photos，即可以瀑布流的形式浏览了：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210425112459.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，与主流的智能相册一样，Synology Photos 也有人脸识别的功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210425112813.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于不按活动划分的影像资源（比如日常拍摄），可以打开 Synology Photos，切换到时间线模式，在本地拖动上传照片。这样的话，上传的照片会自动按拍摄日期归档到 &lt;code&gt;/photo/PhotoLibrary&lt;/code&gt; 文件夹内，方便收纳整理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%A2%E9%98%9F%E5%BD%B1%E5%83%8F%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%A2%E9%98%9F%E5%BD%B1%E5%83%8F%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/</guid>
      
    </item>
    
    <item>
      <title>团队知识库的搭建</title>
      
      
      
      
      <description>&lt;h2&gt;前情提要&lt;/h2&gt;
&lt;p&gt;本篇文章以机器人队的知识库管理为实例。此前，机器人队使用有道云笔记作团队知识积累。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201203152655.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;其作为一个团队知识库，使用无门槛，但缺点十分明显：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全队使用的是一个公用的笔记账号，无内部权限管理，每个人都可以任意删改其他人的文章&lt;/li&gt;
&lt;li&gt;文章内容格式不规范，甚至有人通篇文章用 H1 标题来写，增加了阅读障碍&lt;/li&gt;
&lt;li&gt;没有版本管理，一旦错删内容，无可挽回&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;团队知识库的意义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;降低知识传授方面的时间成本、人力成本、边际成本。&lt;/strong&gt; 降低知识的耦合度，提升知识的复用率，让后人避开前人踩过的坑；形成网状知识结构，达到 1+1&amp;gt;2 的效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;规避知识断层、遗失的风险。&lt;/strong&gt; 团队每年人员更替程度较大，知识容易随着人员流动造成断层，不利于传承&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;知识的积累&lt;/h2&gt;
&lt;p&gt;知识库平台建立完毕后，就到了知识积累的阶段了，这个是全员参与的阶段。组织中的每个人都是知识库的贡献者。但事前最好制定一些知识积累的简要规程，比如规范知识提交的格式，规范主题的命名，段落格式等。知识积累阶段其实才是知识管理中最难的一个阶段，关键难在如何让组织内成员养成积极主动的进行知识积累的习惯。一些可供参考的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;宣传引导团队成员使用，让大家意识到知识积累的重要性&lt;/li&gt;
&lt;li&gt;针对知识库平台的使用，做适当的培训和交流&lt;/li&gt;
&lt;li&gt;将知识库平台打造得尽量易用，避免因复杂而导致排斥行为&lt;/li&gt;
&lt;li&gt;日常沟通多引用知识库中知识的位置，让大家在潜移默化中对知识库产生依赖&lt;/li&gt;
&lt;li&gt;引导关注。如果一个人贡献的知识受到大家的广泛关注，那么这个人将会有更大的热情贡献知识。组织内知识管理负责人可定期整理新增精品知识的简要并发给大家，吸引大家阅读知识，关注知识；通过展示知识关注度排名也可以激发大家的知识分享热情。&lt;/li&gt;
&lt;li&gt;发掘鼓励知识分享的头部人员&lt;/li&gt;
&lt;li&gt;将之前平台上的内容按规范格式迁移，并鼓励大家在知识库上查找以前积累的知识&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;知识的整理&lt;/h2&gt;
&lt;p&gt;由于知识库是组织内人员协同丰富的，新知识的提交带有一定随意性，点状分布，不成系统，所以这些知识需要专人定期整理，划入适当分类，赋予更加合理的标签，尽量使其系统化。这个工作十分必要，否则一旦长久，知识库内的知识就像一根根独木，独自生长，永远也成不了连片的树林。&lt;/p&gt;
&lt;h2&gt;团队现状&lt;/h2&gt;
&lt;p&gt;在用满 10 个 G 的储存空间以后，我们不打算开通会员继续使用了，于是寻找一款合适的团队知识库变得至关重要。&lt;/p&gt;
&lt;p&gt;一开始我考虑的是借助语雀、钉钉知识库、Teambition、GitBook、Confluence 等平台搭建，但问题出在价格、权限管理、不可描述的网络原因等无法避开的问题。也曾经想象过利用 VuePress，Docusaurus 等静态平台搭建，但没有在线编辑器、需要在 GitHub 提交 PR 等操作，无疑增加了一般队员的使用门槛。&lt;/p&gt;
&lt;p&gt;我对团队知识库的基本要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;权限管理&lt;/strong&gt; ：针对不同的用户，阅读权限应有所不同&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在线编辑&lt;/strong&gt; ：针对一般用户，降低操作门槛&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持 MarkDown 语法&lt;/strong&gt; ：提高写作效率，规范内容格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UI 简介&lt;/strong&gt; ：颜值即生产力&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本管理&lt;/strong&gt; ：利于定期备份，出问题时可溯回&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全文检索&lt;/strong&gt; ：降低查询复杂度&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20201203161132.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;恰巧机器人队添置了 NAS，于是我计划将其作为知识库的服务端，利用开源项目搭建动态知识库网站。经过两个月的选型及一星期的折腾，基于 DokuWik 的团队知识库终于搭建完毕。技术相关的内容，详见下一篇文章。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/chwkai/archive/2005/12/29/307761.html&#34;&gt;用 Blog 和 Wiki 搭建 IT 团队的知识库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tonybai.com/2011/11/23/those-things-about-knowledge-management/&#34;&gt;知识管理那些事儿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.davidrobot.com/2014/06/team_knowledge_management.html&#34;&gt;团队的知识管理系统 Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.davidrobot.com/2014/07/the_function_of_wiki.html&#34;&gt;Wiki 系统具体能做什么&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%A2%E9%98%9F%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%9B%A2%E9%98%9F%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA/</guid>
      
    </item>
    
    <item>
      <title>大扫除 - 经验模板</title>
      
      
      
      
      <description>&lt;p&gt;每次大扫除，我们队要负责的区域一般是 B3-401 室内、两个新生区域、B3-401 及 402 外侧通道、装配室、加工室材料室、大棚教室内外。&lt;br&gt;
大扫除内容一般是桌面整理（不能有塑料瓶、早餐袋、零食袋，个人物品整理整齐），地面清扫（扫地、拖地），奖状台清扫（清掉灰尘），有领导检查的时候要擦窗玻璃。&lt;br&gt;
大扫除前，一般要发布签到，务必让所有人到齐参与。&lt;/p&gt;
&lt;p&gt;以下是可参考的内容模板。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;流程安排&lt;/h2&gt;
&lt;p&gt;|     时间      |           任务           |
| :-----------: | :----------------------: |
| 14:00 ~ 14:30 |       打扫个人桌面       |
| 14:30 ~ 16:30 |       打扫公共区域       |
| 16:30 ~ 17:00 | 检查完成情况，不合格返工 |&lt;/p&gt;
&lt;h2&gt;本次大扫除需打扫区域&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;B3-401 室内&lt;/li&gt;
&lt;li&gt;B3-401 及 402 外侧通道&lt;/li&gt;
&lt;li&gt;两片新生座位区域&lt;/li&gt;
&lt;li&gt;装配室、加工室&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;各组职责&lt;/h2&gt;
&lt;p&gt;|    组别    |         负责人         |        负责清扫区域        |
| :--------: | :--------------------: | :------------------------: |
|   机械组   | 曾建勋、袁东青、江秉隽 |       装配室、加工室       |
|   电控组   |         谢正富         | 新生座位区域地面 |
| 硬件电路组 |         王赞誉         |       焊台区域      |
| 视觉算法组 |      徐玺、苏获霖      |   B3-401 及 402 外侧通道   |
|   软件组   |         程炜翔         |      新生座位区域地面      |
|   宣策组   |     罗锶淇、许其森     |        B3-401 室内         |
|   财务组   |     孙宇飞、陈佳茵     |        B3-401 室内         |&lt;/p&gt;
&lt;h2&gt;注意事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;签到时间为下午 2:00，可提前 15 分钟签到&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%A4%A7%E6%89%AB%E9%99%A4-%E7%BB%8F%E9%AA%8C%E6%A8%A1%E6%9D%BF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E5%A4%A7%E6%89%AB%E9%99%A4-%E7%BB%8F%E9%AA%8C%E6%A8%A1%E6%9D%BF/</guid>
      
    </item>
    
    <item>
      <title>换届大会 - 经验总结</title>
      
      
      
      
      <description>&lt;h2&gt;出现的问题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;工作人员职责不明确，通知不到位&lt;/li&gt;
&lt;li&gt;借不到大教室，借不到音箱，中教室没有胶凳，有的人站着没有座位&lt;/li&gt;
&lt;li&gt;KT 板和 logo 板出图时间太迟&lt;/li&gt;
&lt;li&gt;教室设备视频播放出现问题&lt;/li&gt;
&lt;li&gt;没有很好地引导参会人群入座&lt;/li&gt;
&lt;li&gt;主持人对整个大会的流程不熟悉；主持时照着稿子念，没有做到脱稿&lt;/li&gt;
&lt;li&gt;出问题的时候没有主负责人控场&lt;/li&gt;
&lt;li&gt;任命书的设计打印、颁布时的排序&lt;/li&gt;
&lt;li&gt;拍摄大合照时没有架好机位，未能把所有人拍进去&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;如何改进&lt;/h2&gt;
&lt;h3&gt;提前两周&lt;/h3&gt;
&lt;p&gt;换届大会属于比较重大的活动，需要至少提前两周召集工作人员，开一个方案策划会，商定以下策划：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;换届大会总流程&lt;/li&gt;
&lt;li&gt;确定主持人，写稿并训练脱稿&lt;/li&gt;
&lt;li&gt;确定需要发言的人员，通知提前写稿&lt;/li&gt;
&lt;li&gt;需要借 / 买的物资，如台签、任命书、音箱、KT 板、装饰品、相机等&lt;/li&gt;
&lt;li&gt;大致明确参会的人员，需要邀请的嘉宾（老师、上届队员）&lt;/li&gt;
&lt;li&gt;明确安排工作人员职责（记录纸面）&lt;/li&gt;
&lt;li&gt;借用教室，提交负责的老师审批（最好是 4 楼大教室，需要提前至少两周，否则可能已经被借走）&lt;/li&gt;
&lt;li&gt;明确活动总负责人，负责策划分歧敲定、突发事件的决策处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;提前一周&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;发布全员通知，并邀请嘉宾&lt;/li&gt;
&lt;li&gt;检查催促设计类与购买类物资签收情况&lt;/li&gt;
&lt;li&gt;任命书设计打印&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;活动总负责人要做到心中有数，具体是哪些因素拖慢了总体进程，提前一周要开始催了。&lt;/p&gt;
&lt;h3&gt;提前半天&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;工作人员集合&lt;/li&gt;
&lt;li&gt;场地布置工作&lt;/li&gt;
&lt;li&gt;检查记录物资情况&lt;/li&gt;
&lt;li&gt;检查教室设备&lt;/li&gt;
&lt;li&gt;架设拍摄机位&lt;/li&gt;
&lt;li&gt;大会流程与主持人彩排&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;千万不要等到大会快开始前，才匆忙地去教室准备。有些问题到了教室才会暴露出来，需要有充足的时间用于弥补。&lt;/p&gt;
&lt;h3&gt;大会进行&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;参会人员签到&lt;/li&gt;
&lt;li&gt;引导入座&lt;/li&gt;
&lt;li&gt;如果出现突发情况，由活动主负责人决策处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即使准备充分，在大会进行之时，也可能遇到很多没想到的情况，容易出现群龙无首的状况。此时需要有活动主负责人做出紧急决策，并拍板执行。虽然可能出现决策失误，但总比每个人都说一个方法，最终处理不了状况的好。&lt;/p&gt;
&lt;h3&gt;大会结束&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;工作人员集合&lt;/li&gt;
&lt;li&gt;清点并搬运物资&lt;/li&gt;
&lt;li&gt;后续写总结&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今年的换届大会相比去年的，人数多了很多，氛围和仪式感更加充足，但流程中所遇上的各种小问题，尤其是技术问题，确实让整个团队有失颜面。&lt;br&gt;
每一次活动遇到不少旧坑和新坑，只有善于总结，为下一次举办活动（也是为下一届）提供更多的经验教训可供参考，才能够有效避坑、更好控制风险。这样每次活动才能越办越好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E6%8D%A2%E5%B1%8A%E5%A4%A7%E4%BC%9A-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E6%8D%A2%E5%B1%8A%E5%A4%A7%E4%BC%9A-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</guid>
      
    </item>
    
    <item>
      <title>校门口车辆放行 - 流程</title>
      
      
      
      
      <description>&lt;p&gt;当遇上出展 / 外出交流 / 比赛时，可以让货车进学校接物资；或是其他学校来交流，想直接开车进来，也可以使用此放行条。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载文件 &lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/docs/校外人员进校审批表.docx&#34;&gt;&lt;strong&gt;【校外人员进校审批表.docx】&lt;/strong&gt;&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;修改表格内容。&lt;/li&gt;
&lt;li&gt;找指导老师签名（邓老师）。&lt;/li&gt;
&lt;li&gt;去学院办公室盖章。&lt;/li&gt;
&lt;li&gt;接人的时候，出示给校门口保安看。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/docs/校外人员进校审批表.docx&#34;&gt;&lt;strong&gt;【校外人员进校审批表.docx】&lt;/strong&gt;&lt;/a&gt; 预览：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210504212412.png&#34;&gt;&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E6%A0%A1%E9%97%A8%E5%8F%A3%E8%BD%A6%E8%BE%86%E6%94%BE%E8%A1%8C-%E6%B5%81%E7%A8%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E6%A0%A1%E9%97%A8%E5%8F%A3%E8%BD%A6%E8%BE%86%E6%94%BE%E8%A1%8C-%E6%B5%81%E7%A8%8B/</guid>
      
    </item>
    
    <item>
      <title>破冰活动 - 经验总结</title>
      
      
      
      
      <description>&lt;h2&gt;出现的问题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;规则制订不明确，测试游戏流程不充分、没有认真对待，导致出现临场修改规则的状况&lt;/li&gt;
&lt;li&gt;物资收货时间太晚，且缺少专门的管理人员&lt;/li&gt;
&lt;li&gt;安排工作人员、下发任务的时间过晚&lt;/li&gt;
&lt;li&gt;工作人员不清楚规则 / 未做好本职，缺少团队意识和时间观念&lt;/li&gt;
&lt;li&gt;某些游戏规则过于复杂，使气氛变得低落&lt;/li&gt;
&lt;li&gt;负责摄影者未经过培训，大合照拍摄未能把所有人都拍进去，活动摄像 / 摄影质量不佳，&lt;/li&gt;
&lt;li&gt;没有设置总决策人员负责突发情况拍板&lt;/li&gt;
&lt;li&gt;活动开始前，没有先准备道具&lt;/li&gt;
&lt;li&gt;每一组来参与活动的时候都需要重复一遍规则&lt;/li&gt;
&lt;li&gt;漏缺了总的计分人员&lt;/li&gt;
&lt;li&gt;活动后，场地上有很多用过乱扔的打印纸，但实际上垃圾袋就在一旁&lt;/li&gt;
&lt;li&gt;晚饭上菜顺序错误，使大家感觉饭菜量偏少&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;如何改进&lt;/h2&gt;
&lt;h3&gt;提前两周&lt;/h3&gt;
&lt;p&gt;至少提前两周，召集工作人员开方案策划会，商讨以下事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考往届资料，制订活动整体流程、初版游戏规则与计分规则（尽量简单易懂）&lt;/li&gt;
&lt;li&gt;物资借用 / 购买（活动摊位可以准备一些小零食防饿）&lt;/li&gt;
&lt;li&gt;安排工作人员分工，确定活动总负责人、物资管理人员、总计分负责人，有明确的奖惩制度&lt;/li&gt;
&lt;li&gt;不同状况的预案（雨天、准备药品）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;提前一周&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;测试游戏规则（不要只测试一回）&lt;/li&gt;
&lt;li&gt;验收物资，查漏补缺&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;提前一天&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;礼品分装&lt;/li&gt;
&lt;li&gt;准备活动时的 BGM（游戏、颁奖等）&lt;/li&gt;
&lt;li&gt;发布规则（工作人员只解答规则的疑问）&lt;/li&gt;
&lt;li&gt;架好拍合照机位，熟悉活动场地光线状况，准备多几块相机的电池&lt;/li&gt;
&lt;li&gt;场地道具能布置的先布置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;破冰进行&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;强调开始的时间，到点直接开始，不因为迟到的人耽误大部分人的时间&lt;/li&gt;
&lt;li&gt;工作人员&lt;/li&gt;
&lt;li&gt;要有责任心，将工作落实到位，不得擅自离开岗位&lt;/li&gt;
&lt;li&gt;在完成自己部分任务有余之后，再去帮助其他职位&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;破冰结束&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;组织清理场地&lt;/li&gt;
&lt;li&gt;清点物资，搬回实验室&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;聚餐&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;晚餐先上甜点 / 凉拌菜，这段时间老生做自我介绍&lt;/li&gt;
&lt;li&gt;饮料不要只有一瓶可乐，最好是可乐 + 橙汁&lt;/li&gt;
&lt;li&gt;饭要先上（管饱先），荤素要夹杂上菜&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E7%A0%B4%E5%86%B0%E6%B4%BB%E5%8A%A8-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%98%9F%E8%A1%8C%E6%94%BF/%E7%A0%B4%E5%86%B0%E6%B4%BB%E5%8A%A8-%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</guid>
      
    </item>
    
    <item>
      <title>BookJourney - 二手书商城小程序</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/书程小驿.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/BookJourney&#34;&gt;&lt;strong&gt;linyuxuanlin/BookJourney&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Demo（微信扫码体验）：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/1.jpg&#34;&gt;&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;朋友想搞些副业，做在微信朋友圈卖二手书，于是托我做一个微信小程序。正逢暑假闲着没事干，于是练练手。需求是搞一个商城类的小程序，定时上架新的书籍信息，让买家自行选购。&lt;/p&gt;
&lt;h2&gt;开发&lt;/h2&gt;
&lt;p&gt;不想自己造轮子，我发现了一个不错的商城类小程序的开源项目： &lt;a href=&#34;https://github.com/EastWorld/wechat-app-mall&#34;&gt;wechat-app-mall&lt;/a&gt; 于是在它的基础上，修改、添加自己想要的样式。（全局搜索很实用） 这个开源小程序原有的默认样式很不符合我的审美。我需要的效果，是能在简洁的页面上，把用户的专注聚焦在要展现的内容上。 后来，经过很多个版本的迭代，样式基本已经符合要求。&lt;/p&gt;
&lt;p&gt;功能上，我删去了与砍价、分享有赏有关的一系列乱七八糟的东西，只留下核心功能。&lt;/p&gt;
&lt;p&gt;因为后期商品上新不由我负责，所以后台商品编辑必须是图形化界面。BookJourney 用的是 &lt;a href=&#34;https://www.it120.cc/&#34;&gt;api 工厂&lt;/a&gt; 的后台，省去了自己搭建服务器的过程，也方便团队成员上架新的商品。相应地，免费用户有储存限制。&lt;/p&gt;
&lt;h2&gt;避坑&lt;/h2&gt;
&lt;p&gt;开发 BookJourney 的过程中，遇到的坑不少。 就比如支付的问题，常识告诉我应该接入微信支付，方便用户下单，但微信官方阉割掉了个人注册小程序的微信支付窗口。（虽说也考虑到用户的资金安全）唯一的方法是注册一个企业账户，但首先我得有个公司。 进一步了解，我发现注册一个公司似乎并不容易。找会计事务所代理，要有办公地址，红本合同，去银行被经理审核；申请时间接近两三个月；费用要近千元，还不包括各种杂七杂八的收费…… 解决方法是，把下单的按钮直接改为联系客服。此时，用户只需要在「购物车」页面截图，直接发给负责客服的团队成员，就能下单了。&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;Q：为什么叫 BookJourney?&lt;br&gt;
A：本来有个好听的中文名字叫「书程小驿」，但在注册小程序的时候发现已经被占用了，只好妥协。&lt;/p&gt;
&lt;p&gt;Q：赚到钱了吗？&lt;br&gt;
A：总利润收入：¥16.66……&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;经过了时间的证明，这是一个失败的项目。&lt;/p&gt;
&lt;p&gt;前期没有认真调研市场，没有理清用户的需求，而只是做出来一个自己认为很酷的产品。以后做项目要注意不能只专攻于技术，还要更多关注市场，知道市场需要一些什么样的产品。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EastWorld/wechat-app-mall&#34;&gt;EastWorld / wechat-app-mall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/BookJourney-%E4%BA%8C%E6%89%8B%E4%B9%A6%E5%95%86%E5%9F%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/BookJourney-%E4%BA%8C%E6%89%8B%E4%B9%A6%E5%95%86%E5%9F%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      
    </item>
    
    <item>
      <title>CSS 学习笔记</title>
      
      
      
      
      <description>&lt;h2&gt;调用&lt;/h2&gt;
&lt;p&gt;在 HTML 的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 下添加外部样式表：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;xxx.css&#34;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;xxx.css&lt;/code&gt; 为同目录下的 CSS 文件。&lt;br&gt;
注意：尽量使用 &lt;strong&gt;链接式的外部样式表&lt;/strong&gt;（如上）&lt;/p&gt;
&lt;h2&gt;选择器&lt;/h2&gt;
&lt;h3&gt;基本语法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;css
selector {
  prpperty: value;
}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;几种选择器对比&lt;/h3&gt;
&lt;p&gt;| 选择器     | 定义                           | 调用                     | 优先级 |
| :--------- | :----------------------------- | :----------------------- | :----- |
| 标签选择器 | p {...}                        | &amp;lt;p&amp;gt; ... &amp;lt;/p&amp;gt; | 低     |
| 类选择器   | .carrot {...} / p.carrot {...} | class = &#34;carrot&#34;         | 中     |
| ID 选择器  | #first {...}                  | id = &#34;first&#34;             | 高     |&lt;/p&gt;
&lt;h3&gt;选择器组&lt;/h3&gt;
&lt;p&gt;用相同样式定义不同元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;css
h1,
h2,
h3 {
  color: navy;
}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;颜色&lt;/h2&gt;
&lt;p&gt;```css
/&lt;em&gt;字体颜色&lt;/em&gt;/
color: #56a455;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;背景色&lt;/em&gt;/
background-color: blue;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;透明度&lt;/em&gt;/
/&lt;em&gt;取值 0.0 ~ 1.0&lt;/em&gt;/
opacity: 0.5;
```&lt;/p&gt;
&lt;h2&gt;文本&lt;/h2&gt;
&lt;h3&gt;字体大小&lt;/h3&gt;
&lt;p&gt;| 样式 | 百分比 | EM 值   |
| :--- | :----- | :------ |
| h1   | 200%   | 2em     |
| h2   | 150%   | 1.5em   |
| h3   | 133%   | 1.125em |
| body | 100%   | 1em     |&lt;/p&gt;
&lt;p&gt;&lt;code&gt;css
/*字体大小*/
font-size: 200%;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;字体选用&lt;/h3&gt;
&lt;p&gt;注：多单词组成的字体名称，要放引号，eg. &#39;Courier New&#39;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;css
/*字体选用*/
/*本地*/
font-family: &#34;Courier New&#34;, Courier, monospace, 外链字体名称；
/*外链*/
@font-face {
  font-family: 外链字体名称；
  src: url(&#34;外链地址&#34;);
}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;文本格式化&lt;/h3&gt;
&lt;p&gt;默认值为 &lt;code&gt;normal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```css
/&lt;em&gt;粗体&lt;/em&gt;/
font-weight: bold;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;斜体&lt;/em&gt;/
font-style: italic;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;大小写&lt;/em&gt;/
/&lt;em&gt;uppercase，lowercase，capitalize（首字母大写）&lt;/em&gt;/
text-transform: uppercase;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;下划线&lt;/em&gt;/
text-decoration: underline;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;删除线&lt;/em&gt;/
text-decoration: line-through;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;行间距&lt;/em&gt;/
line-height: 1.4em;&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;对齐&lt;/em&gt;/
/&lt;em&gt;left,right,center,justify（两端对齐）&lt;/em&gt;/
text-align: left;
```&lt;/p&gt;
&lt;h3&gt;伪类&lt;/h3&gt;
&lt;p&gt;```css
/&lt;em&gt; 未访问的链接 &lt;/em&gt;/
a:link {
  color: #ff0000;
}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; 已访问的链接 &lt;/em&gt;/
a:visited {
  color: #00ff00;
}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; 鼠标划过链接 &lt;/em&gt;/
a:hover {
  color: #ff00ff;
}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; 已选中的链接 &lt;/em&gt;/
a:active {
  color: #0000ff;
}
```&lt;/p&gt;
&lt;h2&gt;盒子&lt;/h2&gt;
&lt;h2&gt;列表，表格与表单&lt;/h2&gt;
&lt;p&gt;待补充&lt;/p&gt;
&lt;h2&gt;布局&lt;/h2&gt;
&lt;p&gt;待补充&lt;/p&gt;
&lt;h2&gt;规范&lt;/h2&gt;
&lt;h3&gt;属性分类顺序&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;显示方法 &amp;amp; 布局&lt;/li&gt;
&lt;li&gt;定位&lt;/li&gt;
&lt;li&gt;盒模型框&lt;/li&gt;
&lt;li&gt;外边距&lt;/li&gt;
&lt;li&gt;边框&lt;/li&gt;
&lt;li&gt;内边距&lt;/li&gt;
&lt;li&gt;尺寸&lt;/li&gt;
&lt;li&gt;文本样式&lt;/li&gt;
&lt;li&gt;字体&lt;/li&gt;
&lt;li&gt;文本&lt;/li&gt;
&lt;li&gt;文字颜色&lt;/li&gt;
&lt;li&gt;背景&lt;/li&gt;
&lt;li&gt;轮廓&lt;/li&gt;
&lt;li&gt;透明度 &amp;amp; 阴影&lt;/li&gt;
&lt;li&gt;动效&lt;/li&gt;
&lt;li&gt;过渡&lt;/li&gt;
&lt;li&gt;转换变形&lt;/li&gt;
&lt;li&gt;动画&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;li&gt;伪类 &amp;amp; 伪元素&lt;/li&gt;
&lt;li&gt;引用&lt;/li&gt;
&lt;li&gt;媒体查询&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;属性顺序列表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;css
[
  [
    &#34;display&#34;,
    &#34;visibility&#34;,
    &#34;float&#34;,
    &#34;clear&#34;,
    &#34;overflow&#34;,
    &#34;overflow-x&#34;,
    &#34;overflow-y&#34;,
    &#34;clip&#34;,
    &#34;zoom&#34;
  ],
  [
    &#34;table-layout&#34;,
    &#34;empty-cells&#34;,
    &#34;caption-side&#34;,
    &#34;border-spacing&#34;,
    &#34;border-collapse&#34;,
    &#34;list-style&#34;,
    &#34;list-style-position&#34;,
    &#34;list-style-type&#34;,
    &#34;list-style-image&#34;
  ],
  [
    &#34;position&#34;,
    &#34;top&#34;,
    &#34;right&#34;,
    &#34;bottom&#34;,
    &#34;left&#34;,
    &#34;z-index&#34;
  ],
  [
    &#34;margin&#34;,
    &#34;margin-top&#34;,
    &#34;margin-right&#34;,
    &#34;margin-bottom&#34;,
    &#34;margin-left&#34;,
    &#34;box-sizing&#34;,
    &#34;border&#34;,
    &#34;border-width&#34;,
    &#34;border-style&#34;,
    &#34;border-color&#34;,
    &#34;border-top&#34;,
    &#34;border-top-width&#34;,
    &#34;border-top-style&#34;,
    &#34;border-top-color&#34;,
    &#34;border-right&#34;,
    &#34;border-right-width&#34;,
    &#34;border-right-style&#34;,
    &#34;border-right-color&#34;,
    &#34;border-bottom&#34;,
    &#34;border-bottom-width&#34;,
    &#34;border-bottom-style&#34;,
    &#34;border-bottom-color&#34;,
    &#34;border-left&#34;,
    &#34;border-left-width&#34;,
    &#34;border-left-style&#34;,
    &#34;border-left-color&#34;,
    &#34;border-radius&#34;,
    &#34;border-top-left-radius&#34;,
    &#34;border-top-right-radius&#34;,
    &#34;border-bottom-right-radius&#34;,
    &#34;border-bottom-left-radius&#34;,
    &#34;border-image&#34;,
    &#34;border-image-source&#34;,
    &#34;border-image-slice&#34;,
    &#34;border-image-width&#34;,
    &#34;border-image-outset&#34;,
    &#34;border-image-repeat&#34;,
    &#34;padding&#34;,
    &#34;padding-top&#34;,
    &#34;padding-right&#34;,
    &#34;padding-bottom&#34;,
    &#34;padding-left&#34;,
    &#34;width&#34;,
    &#34;min-width&#34;,
    &#34;max-width&#34;,
    &#34;height&#34;,
    &#34;min-height&#34;,
    &#34;max-height&#34;
  ],
  [
    &#34;font&#34;,
    &#34;font-family&#34;,
    &#34;font-size&#34;,
    &#34;font-weight&#34;,
    &#34;font-style&#34;,
    &#34;font-variant&#34;,
    &#34;font-size-adjust&#34;,
    &#34;font-stretch&#34;,
    &#34;font-effect&#34;,
    &#34;font-emphasize&#34;,
    &#34;font-emphasize-position&#34;,
    &#34;font-emphasize-style&#34;,
    &#34;font-smooth&#34;,
    &#34;line-height&#34;,
    &#34;text-align&#34;,
    &#34;text-align-last&#34;,
    &#34;vertical-align&#34;,
    &#34;white-space&#34;,
    &#34;text-decoration&#34;,
    &#34;text-emphasis&#34;,
    &#34;text-emphasis-color&#34;,
    &#34;text-emphasis-style&#34;,
    &#34;text-emphasis-position&#34;,
    &#34;text-indent&#34;,
    &#34;text-justify&#34;,
    &#34;letter-spacing&#34;,
    &#34;word-spacing&#34;,
    &#34;text-outline&#34;,
    &#34;text-transform&#34;,
    &#34;text-wrap&#34;,
    &#34;text-overflow&#34;,
    &#34;text-overflow-ellipsis&#34;,
    &#34;text-overflow-mode&#34;,
    &#34;word-wrap&#34;,
    &#34;word-break&#34;
  ],
  [
    &#34;color&#34;,
    &#34;background&#34;,
    &#34;background-color&#34;,
    &#34;background-image&#34;,
    &#34;background-repeat&#34;,
    &#34;background-attachment&#34;,
    &#34;background-position&#34;,
    &#34;background-position-x&#34;,
    &#34;background-position-y&#34;,
    &#34;background-clip&#34;,
    &#34;background-origin&#34;,
    &#34;background-size&#34;
  ],
  [
    &#34;outline&#34;,
    &#34;outline-width&#34;,
    &#34;outline-style&#34;,
    &#34;outline-color&#34;,
    &#34;outline-offset&#34;,
    &#34;opacity&#34;,
    &#34;box-shadow&#34;,
    &#34;text-shadow&#34;
  ],
  [
    &#34;transition&#34;,
    &#34;transition-delay&#34;,
    &#34;transition-timing-function&#34;,
    &#34;transition-duration&#34;,
    &#34;transition-property&#34;,
    &#34;transform&#34;,
    &#34;transform-origin&#34;,
    &#34;animation&#34;,
    &#34;animation-name&#34;,
    &#34;animation-duration&#34;,
    &#34;animation-play-state&#34;,
    &#34;animation-timing-function&#34;,
    &#34;animation-delay&#34;,
    &#34;animation-iteration-count&#34;,
    &#34;animation-direction&#34;
  ],
  [
    &#34;content&#34;,
    &#34;quotes&#34;,
    &#34;counter-reset&#34;,
    &#34;counter-increment&#34;,
    &#34;resize&#34;,
    &#34;cursor&#34;,
    &#34;user-select&#34;,
    &#34;nav-index&#34;,
    &#34;nav-up&#34;,
    &#34;nav-right&#34;,
    &#34;nav-down&#34;,
    &#34;nav-left&#34;,
    &#34;tab-size&#34;,
    &#34;hyphens&#34;,
    &#34;pointer-events&#34;
  ]
]&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Getting_started&#34;&gt;CSS 入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://waylau.gitbooks.io/css3-tutorial/content/&#34;&gt;CSS3 Tutorial 《CSS3 教程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.zthxxx.me/wiki/程序语言/CSS/CSS%20 属性声明顺序规范/&#34;&gt;CSS 属性声明顺序规范&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>Docker Compose - 更优雅的打开方式</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210117130925.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Docker Compose 是一种对 Docker 镜像的编排方式，解决了传统命令行 Docker 运行多镜像的麻烦。&lt;/p&gt;
&lt;p&gt;Docker 的思想是解耦，即一个镜像一个进程，提高复用率，而不是把多个服务封装成一个镜像。但像一个典型的 web 应用，至少需要服务端和数据库配合，这样至少需要两条以上的 Docker 命令；甚至有些服务需要按一定先后顺序启动，这样一来，需要的镜像和操作步骤会很复杂。&lt;/p&gt;
&lt;p&gt;Docker Compose 把所需要调用的镜像（包括各种参数）和顺序等，全部写在一个 &lt;code&gt;yaml&lt;/code&gt; 文件里，直接运行这个配置文件，就可以 &lt;strong&gt;按照你所需的方法和步骤运行容器&lt;/strong&gt; 。所以称 Docker Compose 为一种 &lt;strong&gt;镜像编排的方式&lt;/strong&gt; 。一个 web 应用的例子：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
version: &#34;3&#34;
services:
  web:
    image: beginor/geoserver:2.11.1
    container_name: geoserver-web
    hostname: geoserver-web
    ports:
      - 8080:8080
    volumes:
      - ./web/data_dir:/geoserver/data_dir
      - ./web/logs:/geoserver/logs
    restart: unless-stopped
    links:
      - database:database
  database:
    image: beginor/postgis:9.3
    container_name: postgis
    hostname: postgis
    ports:
      - 5432:5432
    volumes:
      - ./database/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 1q2w3e4R
    restart: unless-stopped&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在这个 &lt;code&gt;yaml&lt;/code&gt; 文件中，定义了两个服务：&lt;code&gt;web&lt;/code&gt; 和 &lt;code&gt;database&lt;/code&gt;，一个服务在运行时对应一个容器的实例， 上面的文件表示要启动两个实例。&lt;/p&gt;
&lt;h2&gt;安装 Docker Compose&lt;/h2&gt;
&lt;p&gt;Docker Compose 依赖 Docker Engine，所以请先确保你已经安装了 Docker Engine 环境。如果你还没安装，可以参考上一篇教程：&lt;a href=&#34;https://wiki-power.com/Docker%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97&#34;&gt;&lt;strong&gt;Docker 简易指南&lt;/strong&gt;&lt;/a&gt; 安装 Docker Engine.&lt;/p&gt;
&lt;p&gt;如果你用的是 Windows 和 MacOS 的桌面客户端，那就不用另外安装 Docker Compose 了，因为已经包含在 Docker Desktop 内了。接下来将详细讲解 Linux 下的 Docker Compose 安装。&lt;/p&gt;
&lt;p&gt;```shell&lt;/p&gt;
&lt;h1&gt;下载 Docker Compose&lt;/h1&gt;
&lt;p&gt;sudo curl -L &#34;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)&#34; -o /usr/local/bin/docker-compose&lt;/p&gt;
&lt;h1&gt;如果你在中国大陆，可以通过国内的镜像下载：&lt;/h1&gt;
&lt;p&gt;curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-&lt;code&gt;uname -s&lt;/code&gt;-&lt;code&gt;uname -m&lt;/code&gt;  &amp;gt; /usr/local/bin/docker-compose&lt;/p&gt;
&lt;p&gt;sudo chmod +x /usr/local/bin/docker-compose # 添加权限
docker-compose --version # 测试是否安装成功&lt;/p&gt;
&lt;h1&gt;更多操作命令&lt;/h1&gt;
&lt;p&gt;docker-compose migrate-to-labels # 更新 docker-compose 的版本
sudo rm /usr/local/bin/docker-compose # 卸载 docker-compose
```&lt;/p&gt;
&lt;h2&gt;如何使用 Docker Compose&lt;/h2&gt;
&lt;p&gt;通常我们将 &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件放到一个目录，表示一个应用。&lt;/p&gt;
&lt;p&gt;要运行这个程序，只要在这个目录下执行 &lt;code&gt;docker-compose up&lt;/code&gt; 命令，即可按 &lt;code&gt;yaml&lt;/code&gt; 文件中的配置启动服务。（加参数 &lt;code&gt;-d&lt;/code&gt; 可以后台运行）&lt;/p&gt;
&lt;p&gt;要停止服务的运行，用 &lt;code&gt;docker-compose down&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;h2&gt;Docker Compose 文件的写法&lt;/h2&gt;
&lt;p&gt;Docker Compose 默认的模板文件名称为 &lt;code&gt;docker-compose.yml&lt;/code&gt;，为 &lt;code&gt;yaml&lt;/code&gt; 格式，内容如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
version: &#34;3&#34;
services:
  webapp:
    image: examples/web
    ports:
      - &#34;80:80&#34;
    volumes:
      - &#34;/data&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般来说，&lt;code&gt;docker-compose.yml&lt;/code&gt; 在所需项目的简介中会提供。通常会有以下的参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;：定义 Compose 文件格式，版本号与 Docker 引擎相关，为固定格式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;services&lt;/code&gt;：表示此 &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件中包含的所有服务，为固定格式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;image&lt;/code&gt;：表示用于启动容器的镜像，可以是存储仓库、标签或本地的 Dockerfile 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;container_name&lt;/code&gt;：容器名称，非必须，但不能出现重名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ports&lt;/code&gt;：端口映射（即 Docker CLI 的 &lt;code&gt;-p&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;depends_on&lt;/code&gt;：服务之间的依赖关系。在运行 &lt;code&gt;docker compose up -d&lt;/code&gt; 命令后，只有当 A 成功启动，B 才会启动。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;volumes&lt;/code&gt;：挂载一个新的或已存在的目录，即 Docker CLI 的 &lt;code&gt;-v&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;environment&lt;/code&gt;：容器所需的环境变量，即 Docker CLI 的 &lt;code&gt;-e&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;restart&lt;/code&gt;：重启策略，一般使用 &lt;code&gt;always&lt;/code&gt; 或 &lt;code&gt;unless-stopped&lt;/code&gt;，即 Docker CLI 的 &lt;code&gt;--restart&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;一些常用的命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;前台启动（退出终端即停止）&lt;/strong&gt;：docker compose up&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后台启动&lt;/strong&gt;：docker compose up -d&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拉取容器&lt;/strong&gt;：docker compose pull&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拉取（更新）指定容器&lt;/strong&gt;：docker compose pull xxx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;停止 up 命令所启动的容器，并移除其网络&lt;/strong&gt;：docker compose down&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;停止指定容器&lt;/strong&gt;：docker compose stop xx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查看日志&lt;/strong&gt;：docker compose logs xx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检查 Compose 文件格式是否正确&lt;/strong&gt;：docker compose config -q&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;更多技巧&lt;/h2&gt;
&lt;p&gt;将 Docker CLI 转换为 &lt;code&gt;docker-compose.yml&lt;/code&gt; 的网站：&lt;a href=&#34;https://www.composerize.com/&#34;&gt;&lt;strong&gt;composerize&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;访问容器：&lt;code&gt;docker exec -it [compose-name] /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://beginor.github.io/2017/06/08/use-compose-instead-of-run.html&#34;&gt;使用 docker-compose 替代 docker run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/#prerequisites&#34;&gt;Install Docker Compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.51cto.com/14154700/2466054&#34;&gt;Docker-Compose 模板文件参数详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.himiku.com/archives/docker-compose-for-synology-nas.html&#34;&gt;原来，群晖也能用 Docker Compose！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docker-practice.github.io/zh-cn/&#34;&gt;Docker — 从入门到实践&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/DockerCompose-%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/DockerCompose-%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</guid>
      
    </item>
    
    <item>
      <title>Docker 简易指南</title>
      
      
      
      
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210116153041.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;通常我们都知道，软件开发中最麻烦的就是配环境。运行环境的差异，可能导致意想不到的结果，而使用 Docker 可以避免这样的问题。&lt;/p&gt;
&lt;h2&gt;Docker 是什么&lt;/h2&gt;
&lt;p&gt;Docker 把软件本身和它所需的运行环境打包起来，你用的时候就不需要再去配环境了（环境都在包里），这样就能确保你的环境和开发者的一模一样，杜绝因运行环境而出现的错误。&lt;/p&gt;
&lt;p&gt;说起来，虚拟机也是这个原理，但虚拟机的缺点是相对庞大、占用资源也多。简而言之，就是可以，但没必要。Docker 相比虚拟机，不是模拟一个完整的操作系统，而是对进程进行隔离，占用少、启动快、体积小。&lt;/p&gt;
&lt;p&gt;Docker 有三要素，分别是 image，container，repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;image（镜像）&lt;/strong&gt;：一个包含完整的软件运行环境的可执行文件，其中包含代码、运行时、系统工具、库文件和配置等，可以看作是一个模板。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;container（容器）&lt;/strong&gt;：根据 image 创建的并运行在其中的一个进程，把 image 实例化，相当于把模板拿来用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;repository（仓库）&lt;/strong&gt;：存储 Docker image 的地方，可以下载、上传、分享 image。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;image 与 container 是一对多的关系，就是同一个模子印多个饼，每个饼可以加不一样的佐料调味。&lt;/p&gt;
&lt;h2&gt;Docker 安装配置&lt;/h2&gt;
&lt;p&gt;各版本系统的下载安装详见 &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;&lt;strong&gt;Install Docker Engine&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki-power.com/unlist/CentOS%E5%AE%89%E8%A3%85Docker&#34;&gt;&lt;strong&gt;CentOS 安装 Docker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;验证是否安装成功：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker version&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;配置权限&lt;/h3&gt;
&lt;p&gt;Docker 需要 &lt;code&gt;sudo&lt;/code&gt; 权限。为了避免每次使用都要获取权限，可以把用户加入 Docker 用户组：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo usermod -aG docker $USER&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;启动 Docker&lt;/h3&gt;
&lt;p&gt;按如下命令启动 Docker：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo systemctl start docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（也可以使用 &lt;code&gt;sudo service docker start&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;配置开机自启动（可选）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo systemctl enable docker&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;换源&lt;/h3&gt;
&lt;p&gt;因为 Docker 的官方源地址在国外，所以有时候下载缓慢，我们通过更换国内镜像源来解决：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo vi /etc/default/docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;按 &lt;code&gt;a&lt;/code&gt; 进入编辑模式，在尾部添加一行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DOCKER_OPTS=&#34;--registry-mirror=https://registry.docker-cn.com&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;按 &lt;code&gt;ESC&lt;/code&gt; 推出编辑后按 &lt;code&gt;:wq&lt;/code&gt; 保存退出。&lt;br&gt;
重启 Docker 服务：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo service docker restart&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Docker 基本操作&lt;/h2&gt;
&lt;h3&gt;image 操作&lt;/h3&gt;
&lt;h4&gt;列出本地所有 image&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker image ls&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;删除 image&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker image rm [imageName]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;虽然 image 可以自己造，但我们推荐直接用别人的，既省时省力，又有利于维护环境统一。&lt;br&gt;
你可以在 &lt;a href=&#34;https://hub.docker.com/&#34;&gt;&lt;strong&gt;Docker Hub&lt;/strong&gt;&lt;/a&gt; 搜索并下载 image 文件，拣下载量较多的用。&lt;/p&gt;
&lt;h3&gt;container 操作&lt;/h3&gt;
&lt;h4&gt;列出正在运行的容器&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container ls&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以加上 &lt;code&gt;--all&lt;/code&gt; 参数，列出所有（包括已经停止的）容器。&lt;/p&gt;
&lt;p&gt;列出容器时，能看到容器对应的 ID，这个 ID 在很多地方会用到。&lt;/p&gt;
&lt;h4&gt;新建并运行容器&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container run [imageName]&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;运行已经存在的容器&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container start [containerID]&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;停止容器的运行&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container stop [containerID]&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;删除容器&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container rm [containerID]&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;查看容器的输出&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container logs [containerID]&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;操作容器&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;shell
docker container exec -it [containerID] /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;实例：Hello World&lt;/h2&gt;
&lt;p&gt;下面将用官方 hello-world 例子来演示 Docker。&lt;/p&gt;
&lt;p&gt;首先，将 image 拉拉取到本地：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker image pull library/hello-world&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;拉取后，使用 ls 命令检查是否已经下载：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker image ls&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;生成容器并运行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker container run hello-world&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为这个 hello-world 只运行一次，所以不用手动去停止。&lt;br&gt;
对于持续运行的容器，如果需要停止，就用以下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
docker container kill [containID]&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html&#34;&gt;Docker 入门教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/Docker%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/Docker%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>Git 学习笔记</title>
      
      
      
      
      <description>&lt;h2&gt;安装与配置&lt;/h2&gt;
&lt;p&gt;下载安装包：&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;strong&gt;git-scm.com/downloads&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;配置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
git config --global user.name &#34;username&#34;
git config --global user.email &#34;email@example.com&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;基础语句&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200216204934.png&#34;&gt;&lt;/p&gt;
&lt;h3&gt;基本流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;切换到指定的路径下：&lt;code&gt;cd git-learning&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;初始化 Git 仓库：&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将已存在 / 新增的文件，由 &lt;strong&gt;工作区&lt;/strong&gt; 转移至 &lt;strong&gt;暂存区&lt;/strong&gt; ：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; ：添加工作区的所有文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add xxx.xx&lt;/code&gt; ：添加单个文件&lt;/li&gt;
&lt;li&gt;提交更新至 &lt;strong&gt;暂存区分支&lt;/strong&gt; ：&lt;code&gt;git commit -m &#34;description&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换至某一个版本：&lt;code&gt;git reset --hard commit_id&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;常用语句&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看修改（仅文件在工作区时可以使用）：&lt;code&gt;git diff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看仓库状态：&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看提交历史（按照提交顺序）：&lt;code&gt;git log&lt;/code&gt; ，按 &lt;code&gt;q&lt;/code&gt; 退出&lt;/li&gt;
&lt;li&gt;查看命令历史（所有提交记录）：&lt;code&gt;git reflog&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;远程仓库&lt;/h2&gt;
&lt;h3&gt;本地项目远程化&lt;/h3&gt;
&lt;p&gt;适用于本地已有项目文件的情况。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 SSH Key：&lt;code&gt;ssh-keygen -t rsa -C &#34;youremail@example.com&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;更换为你的邮箱，一路回车即可&lt;/li&gt;
&lt;li&gt;点开 GitHub &lt;a href=&#34;https://github.com/settings/keys&#34;&gt;&lt;strong&gt;个人设置 - SSH and GPG keys&lt;/strong&gt;&lt;/a&gt;，添加新的 SSH key&lt;/li&gt;
&lt;li&gt;Title 任意，Key 为 &lt;code&gt;id_rsa.pub&lt;/code&gt; 文件中的内容&lt;/li&gt;
&lt;li&gt;在 GitHub 新建仓库，不要勾选 &lt;code&gt;Initialize this repository with a README&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果不小心初始化了仓库，则要先 pull 下来：&lt;code&gt;git pull origin master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;复制 SSH 地址（示例：&lt;code&gt;git@github.com:linyuxuanlin/git-learning.git&lt;/code&gt;），在本地 Git 仓库下运行命令：&lt;code&gt;git remote add origin git@server-name:user/repo-name.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将本地内容推送到远程仓库：&lt;code&gt;git push -u origin master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在出现提示信息时输入 &lt;code&gt;yes&lt;/code&gt; 并回车继续&lt;/li&gt;
&lt;li&gt;由于远程库是空的，我们第一次推送 master 分支时，加上了 &lt;code&gt;-u&lt;/code&gt; 参数，Git 不但会把本地的 master 分支内容推送的远程新的 master 分支，还会把本地的 master 分支和远程的 master 分支关联起来，在以后的推送或者拉取时就可以简化命令&lt;/li&gt;
&lt;li&gt;未来每一次提交：&lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;远程项目本地化&lt;/h3&gt;
&lt;p&gt;适用于从零开始，或基于别人的项目开发的情况。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将远程仓库克隆下来：&lt;code&gt;git clone git@server-name:user/repo-name.git&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;分支管理&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200217195056.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习 Git 的时候，另一个你正在另一个平行宇宙里努力学习 SVN。&lt;br&gt;
如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了 Git 又学会了 SVN!&lt;/p&gt;
&lt;p&gt;分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了 50% 的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。&lt;br&gt;
现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20200217202649.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建并切换至新分支：&lt;code&gt;git switch -c branch_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; 代表创建并切换分支&lt;/li&gt;
&lt;li&gt;查看当前分支：&lt;code&gt;git branch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将新分支内容合并到 master 上：&lt;code&gt;git merge branch_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;先切换到待合并的分支，再使用合并命令（示例：先切换到 master，再执行以上命令）&lt;/li&gt;
&lt;li&gt;当 Git 无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成&lt;/li&gt;
&lt;li&gt;解决冲突就是把 Git 合并失败的文件手动编辑为我们希望的内容，再提交&lt;/li&gt;
&lt;li&gt;删除某个分支：&lt;code&gt;git branch -d dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;禁用 Fast forward 合并分支：&lt;code&gt;git merge --no-ff -m &#34;commit text&#34; branch_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;因为本次合并要创建一个新的 commit，所以加上 &lt;code&gt;-m&lt;/code&gt; 参数，把 commit 描述写进去&lt;/li&gt;
&lt;li&gt;Fast forward 模式下，删除分支后，会丢掉分支信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;GitHub 漫游指南&lt;/h2&gt;
&lt;p&gt;借助 GitHub 平台，我们可以发现丰富多彩的开源项目，并于全世界的开发者一起搭建开源世界。&lt;br&gt;
当我们发现了一个优秀的开源项目，可以先 Fork 到自己的 GitHub 账户下（这样才拥有读写权限），然后再通过 SSH 克隆到本地进行开发。&lt;br&gt;
开发完成后，可以在 GitHub 上发起一个 pull request，如果原项目所有者觉得你的修改合适，那么将并入原有的开源项目中。&lt;/p&gt;
&lt;h3&gt;GitHub CLI&lt;/h3&gt;
&lt;p&gt;GitHub CLI 是 GitHub 的命令行工具，将 pull requests，issues 等功能搬到命令行使用。&lt;br&gt;
下载地址：&lt;a href=&#34;https://cli.github.com/&#34;&gt;&lt;strong&gt;cli.github.com&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
GitHub CLI 目前正处于 Beta 版本，值得一试。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600&#34;&gt;Git 教程 - 廖雪峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/ShuSheng0007/article/details/80791849&#34;&gt;实际项目中如何使用 Git 做分支管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;A successful Git branching model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/File-host/blob/main/software-development/git-cheatsheet.pdf&#34;&gt;git-cheatsheet.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2&#34;&gt;Pro Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cli.github.com/manual/&#34;&gt;GitHub CLI - Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/oTtMQFEI9J5ymqt6SQ0PFg&#34;&gt;20 多张精美图带你进入 Git 大门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>HTML 学习笔记</title>
      
      
      
      
      <description>&lt;h2&gt;基本框架&lt;/h2&gt;
&lt;p&gt;```markup&lt;/p&gt;
&lt;!DOCTYPE html&gt;
&lt;p&gt;&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&gt;
    &lt;title&gt;标题&lt;/title&gt;
&lt;/head&gt;&lt;/p&gt;
&lt;body&gt;

&lt;/body&gt;
&lt;p&gt;&lt;/html&gt;
```&lt;/p&gt;
&lt;p&gt;可打开 &lt;code&gt;.html&lt;/code&gt; 文件，直接输入 &lt;code&gt;html:5&lt;/code&gt; 调出&lt;/p&gt;
&lt;h2&gt;语句&lt;/h2&gt;
&lt;p&gt;一些规范：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标签使用小写，元素必须闭合&lt;/li&gt;
&lt;li&gt;空元素要加斜杠以闭合 eg. &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不使用语义化，所有样式都存放于 CSS 中，内容与样式分离&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```markup&lt;/p&gt;
&lt;!DOCTYPE html&gt;
&lt;p&gt;&lt;html lang=&#34;en&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&gt;
    &lt;title&gt;标题&lt;/title&gt;
&lt;/head&gt;&lt;/p&gt;
&lt;body&gt;
    &lt;h1&gt;一级标题&lt;/h1&gt;
    &lt;h2&gt;二级标题&lt;/h2&gt;
    &lt;p&gt;段落&lt;/p&gt;

    &lt;!--换行符--&gt;
    &lt;br /&gt;
    &lt;!--分割线--&gt;
    &lt;hr /&gt;

    &lt;!--列表，可嵌套--&gt;
    &lt;!--有序列表--&gt;
    &lt;ol&gt;
        &lt;li&gt;第一项&lt;/li&gt;
        &lt;li&gt;第二项&lt;/li&gt;
    &lt;/ol&gt;
    &lt;!--无序列表--&gt;
    &lt;ul&gt;
        &lt;li&gt;第一项&lt;/li&gt;
        &lt;li&gt;第二项&lt;/li&gt;
    &lt;/ul&gt;

    &lt;!--链接--&gt;
    &lt;a href=&#34;https://www.google.com/&#34;&gt;链接显示的文本&lt;/a&gt;
    &lt;!--链接到页面特定位置，使用 ID 特性--&gt;
    &lt;a href=&#34;#top&#34;&gt;回到顶部&lt;/a&gt;
    &lt;p id=&#34;top&#34;&gt;顶部&lt;/p&gt;
    &lt;!--链接到其他页面的特定位置--&gt;
    &lt;a href=&#34;http://wiki-power.com/#top&#34;&gt;跳转到站外页面的某个位置&lt;/a&gt;

    &lt;!--图像--&gt;
    &lt;img src=&#34;/xx.png&#34; alt=&#34;无法加载时的文字说明&#34; /&gt;

    &lt;!--表格--&gt;
    &lt;table&gt;
        &lt;!--第一行--&gt;
        &lt;tr&gt;
            &lt;!--第一列--&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;!--第二列--&gt;
            &lt;th scope=&#34;col&#34;&gt;周六&lt;/th&gt;
            &lt;!--第三列--&gt;
            &lt;th scope=&#34;col&#34;&gt;周日&lt;/th&gt;
        &lt;/tr&gt;
        &lt;!--第二行--&gt;
        &lt;tr&gt;
            &lt;th scope=&#34;row&#34;&gt;数量&lt;/th&gt;
            &lt;td&gt;120&lt;/td&gt;
            &lt;td&gt;135&lt;/td&gt;
        &lt;/tr&gt;
        &lt;!--第三行--&gt;
        &lt;tr&gt;
            &lt;th scope=&#34;row&#34;&gt;收益&lt;/th&gt;
            &lt;!--跨列 colspan，跨行 rowspan--&gt;
            &lt;td colspan=&#34;2&#34;&gt;500&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;

    &lt;!--表单，待补充--&gt;
    &lt;!--iframe，待补充--&gt;
    &lt;!--flash/视频/音频，待补充--&gt;

&lt;/body&gt;

&lt;p&gt;&lt;/html&gt;
```&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.runoob.com/html/html-tutorial.html&#34;&gt;HTML 教程 | 菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deerchao.net/tutorials/html/html.htm&#34;&gt;HTML 30 分钟入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tielemao.com/831.html&#34;&gt;HTML - head 头部浅析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>JavaScript 学习笔记</title>
      
      
      
      
      <description>&lt;h2&gt;调用外部 JS&lt;/h2&gt;
&lt;p&gt;```markup&lt;/p&gt;
&lt;!DOCTYPE html&gt;
&lt;p&gt;&lt;html&gt;
    &lt;head&gt;
        &lt;script src=&#34;xx1.js&#34;&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;script src=&#34;xx2.js&#34;&gt;&lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
```&lt;/p&gt;
&lt;h2&gt;输出&lt;/h2&gt;
&lt;h3&gt;弹出警告框&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;javascript
window.alert(&#34;Hello&#34;);&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;操作 HTML 元素&lt;/h3&gt;
&lt;p&gt;```markup&lt;/p&gt;
&lt;!DOCTYPE html&gt;
&lt;p&gt;&lt;html&gt;
    &lt;body&gt;
        &lt;h1&gt; 我的第一个 Web 页面 &lt;/h1&gt;
        &lt;p id=&#34;demo&#34;&gt; 我的第一个段落 &lt;/p&gt;
        &lt;script&gt;
            document.getElementById (&#34;demo&#34;).innerHTML = &#34;段落已修改。&#34;;
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
```&lt;/p&gt;
&lt;h2&gt;数据类型&lt;/h2&gt;
&lt;p&gt;创建变量：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;javascript
var carname = &#34;Volvo&#34;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;值类型 \（基本类型、)&lt;/strong&gt;：字符串（String）、数字 (Number)、布尔 (Boolean)、对空（Null）、未定义（Undefined）、Symbol。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;引用数据类型&lt;/strong&gt;：对象 (Object)、数组 (Array)、函数 (Function)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>ROS入门笔记</title>
      
      
      
      
      <description>&lt;p&gt;本教程基于 ROS2 Foxy，Ubuntu20.04。&lt;/p&gt;
&lt;h2&gt;ROS 环境安装&lt;/h2&gt;
&lt;h3&gt;设置 UTF-8 编码&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;设置软件源&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt update &amp;amp;&amp;amp; sudo apt install curl gnupg2 lsb-release
curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
sudo sh -c &#39;echo &#34;deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main&#34; &amp;gt; /etc/apt/sources.list.d/ros2-latest.list&#39;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;安装 ROS2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt update
sudo apt install ros-foxy-desktop&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;设置环境变量&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
source /opt/ros/foxy/setup.bash&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;安装自动补全工具&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt install python3-argcomplete&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;安装成功后的测试&lt;/h3&gt;
&lt;p&gt;运行 Talker：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
source /opt/ros/foxy/setup.bash
ros2 run demo_nodes_cpp talker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开一个新的命令行窗口，运行 Listener：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
source /opt/ros/foxy/setup.bash
ros2 run demo_nodes_py listener&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;如果想卸载 ROS&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt remove ros-foxy-* &amp;amp;&amp;amp; sudo apt autoremove&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;随后检查～/.bashrc 　以及／opt / 目录是否有 ros 文件夹存在。&lt;/p&gt;
&lt;h2&gt;ROS2 环境配置&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shell
source /opt/ros/foxy/setup.bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置完成后的检查：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
printenv | grep -i ROS&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;小海龟仿真器&lt;/h2&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt update
sudo apt install ros-foxy-turtlesim&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;检查是否安装成功：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
ros2 pkg executables turtlesim&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;启动海龟模拟器&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
ros2 run turtlesim turtlesim_node&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;想要让小海龟动起来，可以打开一个新的命令行窗口，输入命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
ros2 run turtlesim turtle_teleop_key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;按命令行中的提示即可实现操控。&lt;/p&gt;
&lt;h3&gt;安装 rqt 工具&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;shell
sudo apt update
sudo apt install ~nros-foxy-rqt*&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;启动 rqt 工具&lt;/h3&gt;
&lt;p&gt;首先，要确保有一只小海龟在后台运行。在命令行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
rqt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;唤醒 rqt 工具，依次打开 &lt;code&gt;Plugins &amp;gt; Services &amp;gt; Service Caller&lt;/code&gt;，点击刷新按钮，即可看到所有服务。&lt;/p&gt;
&lt;p&gt;选择 &lt;code&gt;/spawn&lt;/code&gt; 服务，填写小海龟的名字（例如 &lt;code&gt;&#39;GuaiGuai&#39;&lt;/code&gt;）和位置，就可以多生成一只海龟。如果要修改其轨迹的颜色形状，可以修改 &lt;code&gt;/set_pen&lt;/code&gt; 服务的内容。&lt;/p&gt;
&lt;p&gt;控制新生成海龟的运动，可以通过以下命令（注意海龟的名字）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
ros2 run turtlesim turtle_teleop_key --ros-args --remap turtle1/cmd_vel:=guaiguai/cmd_vel&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.guyuehome.com/10226&#34;&gt;ROS2 入门教程 ——2. Ubuntu20.04 安装 ROS2 Foxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.guyuehome.com/10243&#34;&gt;ROS2 入门教程 ——3. ROS2 环境配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.guyuehome.com/10386&#34;&gt;ROS2 入门教程 ——4. 小海龟仿真器基础使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/ROS%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/ROS%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>Ubuntu 配置笔记</title>
      
      
      
      
      <description>&lt;h2&gt;双系统时间问题&lt;/h2&gt;
&lt;p&gt;装完双系统，会出现时间问题（Windows 与 Ubuntu 时间不同步），使用下面命令可解决：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
timedatectl set-local-rtc 1 --adjust-system-clock&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;安装软件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;VS Code&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qv2ray.net/&#34;&gt;&lt;strong&gt;Qv2ray&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt install git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name &#34;John Doe&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.email johndoe@example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;技巧&lt;/h2&gt;
&lt;h3&gt;查看隐藏文件&lt;/h3&gt;
&lt;p&gt;使用快捷键：&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;H&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;打开终端&lt;/h3&gt;
&lt;p&gt;使用快捷键：&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;T&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;命令&lt;/h3&gt;
&lt;p&gt;注： &lt;code&gt;&amp;lt;xx&amp;gt;&lt;/code&gt; 表示必须， &lt;code&gt;(xx)&lt;/code&gt; 表示可选&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cd&lt;/li&gt;
&lt;li&gt;切换工作目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd &amp;lt;目录路径&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pwd&lt;/li&gt;
&lt;li&gt;查看当前绝对路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;mkdir&lt;/li&gt;
&lt;li&gt;创建目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir （选项） &amp;lt;目录名称&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ls&lt;/li&gt;
&lt;li&gt;列出目录下的内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls （选项） （目录名称）&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;touch&lt;/li&gt;
&lt;li&gt;改变文件 / 目录时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch （选项） &amp;lt;文件名称&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;mv&lt;/li&gt;
&lt;li&gt;剪切&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv （选项） （源文件/目录） &amp;lt;目的地文件/目录&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cp&lt;/li&gt;
&lt;li&gt;复制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp （选项） （源文件名/目录名） &amp;lt;目的地文件名/目录名&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;rm&lt;/li&gt;
&lt;li&gt;删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm （选项） &amp;lt;文件名/目录名&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU4Mzc1NDA5Mw==&amp;amp;mid=2247486645&amp;amp;idx=1&amp;amp;sn=8ba442af57060b4d608d4c24d4307921&amp;amp;chksm=fda504b7cad28da11a2dd782b60dce466d53ad8e260f161b1e47f24423cc1e9f9aabc486c7f3&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=1125YhpxcX5as5se6rsek2IS&amp;amp;sharer_sharetime=1606233866320&amp;amp;sharer_shareid=57baeb2b96d0cff9b17ac2c15b36602b&amp;amp;key=a402d93e91746f46ae3228f3f1014e2c74a235c331168642475573a82dabce23902b3593a2a240439e9e37cd9b2ceaeab2b3b2130d952ee61260b30c6cad24ab3f1907dd57abfae9934d0c9487ddc4364b41261c6fb7277d94de784fa9718f9f60712a15b25f505ab7105346330f16f4b659970a5143e8aa882da96dc76c0100&amp;amp;ascene=1&amp;amp;uin=MTk5MDUwOTA0Mg%3D%3D&amp;amp;devicetype=Windows+10+x64&amp;amp;version=6300002f&amp;amp;lang=zh_CN&amp;amp;exportkey=A0ZOktA1B68GOdT4vmLQPxA%3D&amp;amp;pass_ticket=b2tffRx7FG4vxDxfZxW7b9rGQf%2FK8YGbZtslM9VWUgnItoiwUPJYOD8ciwJbwx%2BC&amp;amp;wx_header=0&#34;&gt;ROS 安装教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/Ubuntu%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/Ubuntu%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</guid>
      
    </item>
    
    <item>
      <title>使用 R 语言进行数据分析</title>
      
      
      
      
      <description>&lt;h2&gt;软件安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/&#34;&gt;&lt;strong&gt;R-software&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果是在 Windows 上使用，请在网站主页点击 &lt;code&gt;Download R for Windows&lt;/code&gt;，然后点击 &lt;code&gt;install R for the first time&lt;/code&gt;，最后点击 &lt;code&gt;Download R 4.0.4 for Windows&lt;/code&gt;，下载软件后请自行完成安装。&lt;/li&gt;
&lt;li&gt;R 语言支持软件仅在后台运行，没有图形化界面。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.com/products/rstudio/download/#download&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;直接点击蓝色的 &lt;code&gt;Download&lt;/code&gt; 按钮，或者在页面下方选择其他系统版本下载。下载软件后请自行完成安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;教学资源&lt;/h2&gt;
&lt;h3&gt;在线资源（推荐）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-tutor.com/r-introduction&#34;&gt;R-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/qiyuandong/intro_r/&#34;&gt;零基础学 R 语言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;书籍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cs.upc.edu/~robert/teaching/estadistica/TheRBook.pdf&#34;&gt;The R-book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://r4ds.had.co.nz/index.html&#34;&gt;R for Data Science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;基本数据类型&lt;/h2&gt;
&lt;p&gt;R 语言的数据类型，主要有以下这几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数值型（numerics）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;整数型（integer）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复数型（complex）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑型（logical）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字符型（characters）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;数值型（numerics）&lt;/h3&gt;
&lt;p&gt;数值型是 R 语言中最基本的数据类型。当我们把一个数字值赋给变量，那变量的类型就是数值型：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x = 11.15       # 把 11.15 这个数值赋给变量 x
x              # 输出出 x 的值
[1] 11.15
class(x)       # 输出 x 的类型
[1] &#34;numeric&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;整数或小数都可以是数值型变量。但如果按照以上的方法创建，那么整数变量也会被视为小数变量。&lt;/p&gt;
&lt;h3&gt;整数型（integer）&lt;/h3&gt;
&lt;p&gt;如果要创建整数型变量，就得使用函数 &lt;code&gt;is.integer&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;y = as.integer(3)
y              # 输出 y 的值
[1] 3
class(y)       # 输出 y 的类型
[1] &#34;integer&#34;
is.integer(y)  # y 是否为整数？
[1] TRUE
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;除了使用 &lt;code&gt;is.integer&lt;/code&gt; 函数，你也可以附加 &lt;code&gt;L&lt;/code&gt; 后缀来实现：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;y = 3L
is.integer(y)  # y 是否为整数？
[1] TRUE
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果要对小数进行取整，我们可以使用函数 &lt;code&gt;as.integer&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;as.integer(3.14)    # 对变量进行强制数值转换
[1] 3
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也可以对字符串类型进行解析并取整：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;as.integer(&#34;5.27&#34;)  # 对变量进行强制数值转换
[1] 5
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但如果解析的字符串不是数值，那就会出错：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;as.integer(&#34;Joe&#34;)   # 解析一个非数值型的字符串
[1] NA
Warning message:
NAs introduced by coercion
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;R 语言像 C 语言一样，把整数 &lt;code&gt;1&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; 与逻辑 &lt;code&gt;TRUE&lt;/code&gt; &lt;code&gt;FALSE&lt;/code&gt;对应了起来：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;as.integer(TRUE)    # TRUE 的数值型变量
[1] 1
as.integer(FALSE)   # FALSE 的数值型变量
[1] 0
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;复数型（complex）&lt;/h3&gt;
&lt;p&gt;在 R 语言中，复数变量通过 &lt;code&gt;i&lt;/code&gt; 来定义：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;z = 1 + 2i     # 创建一个复数变量 z
z              # 输出 z 的值
[1] 1+2i
class(z)       # 输出 z 的类型
[1] &#34;complex&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果我们单纯对 &lt;code&gt;-1&lt;/code&gt; 开方，那将会出错：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sqrt(−1)       # 对 -1 开方
[1] NaN
Warning message:
In sqrt(−1) : NaNs produced
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是对复数 &lt;code&gt;−1+0i&lt;/code&gt; 开方，那就没问题：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sqrt(−1+0i)    # 对 −1+0i 开方
[1] 0+1i
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也可以用强制类型转换来进行运算：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sqrt(as.complex(−1))
[1] 0+1i
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;逻辑型（logical）&lt;/h3&gt;
&lt;p&gt;逻辑型通常通过比较变量而产生：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x = 1; y = 2   # 样本变量
z = x &amp;gt; y      # x 比 y 大吗？
z              # 输出逻辑变量
[1] FALSE
class(z)       # 输出 z 的类型
[1] &#34;logical&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本逻辑操作有 &lt;code&gt;&amp;amp;&lt;/code&gt;（与），&lt;code&gt;|&lt;/code&gt;（或）, &lt;code&gt;!&lt;/code&gt;（非）：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;u = TRUE; v = FALSE
u &amp;amp; v          # 对 u，v 进行 &#34;与&#34; 运算
[1] FALSE
u | v          # 对 u，v 进行 &#34;或&#34; 运算
[1] TRUE
!u             # 对 u 进行 &#34;非&#34; 运算
[1] FALSE
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;字符型（character）&lt;/h3&gt;
&lt;p&gt;字符型可通过函数 &lt;code&gt;as.character&lt;/code&gt; 进行强制类型转换得到：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x = as.character(3.14)
x              # 输出字符串
[1] &#34;3.14&#34;
class(x)       # 输出 x 的类型
[1] &#34;character&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要合并两个字符型变量，可以使用函数 &lt;code&gt;paste&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;fname = &#34;Joe&#34;; lname =&#34;Smith&#34;
paste(fname, lname)
[1] &#34;Joe Smith&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;像 C 语法一样，可以用格式输出以增加可读性，用函数 &lt;code&gt;sprintf&lt;/code&gt; 即可：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sprintf(&#34;%s has %d dollars&#34;, &#34;Sam&#34;, 100)
[1] &#34;Sam has 100 dollars&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果要从字符串中提取子串，可以使用函数 &lt;code&gt;substr&lt;/code&gt;（示例中把第 &lt;code&gt;3&lt;/code&gt; 到第 &lt;code&gt;12&lt;/code&gt; 个字符之间的字符截取了下来）：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;substr(&#34;Mary has a little lamb.&#34;, start=3, stop=12)
[1] &#34;ry has a l&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果要把第一个遇见的字符替换成另外一个，可以使用函数 &lt;code&gt;sub&lt;/code&gt;（示例中把 &lt;code&gt;little&lt;/code&gt; 替换成了 &lt;code&gt;big&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sub(&#34;little&#34;, &#34;big&#34;, &#34;Mary has a little lamb.&#34;)
[1] &#34;Mary has a big lamb.&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;向量&lt;/h2&gt;
&lt;h3&gt;R 语言中的向量&lt;/h3&gt;
&lt;p&gt;向量是一个包含相同类型元素的数组，向量中的成员被官方称为 components。&lt;/p&gt;
&lt;p&gt;以下是一个示例向量（包含三个数值变量 &lt;code&gt;2&lt;/code&gt; &lt;code&gt;3&lt;/code&gt; &lt;code&gt;5&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;c(2, 3, 5)
[1] 2 3 5
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也可以全部由逻辑型构成：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;c(TRUE, FALSE, TRUE, FALSE, FALSE)
[1] TRUE FALSE TRUE FALSE FALSE
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也可以由字符型构成：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;c(&#34;aa&#34;, &#34;bb&#34;, &#34;cc&#34;, &#34;dd&#34;, &#34;ee&#34;)
[1] &#34;aa&#34; &#34;bb&#34; &#34;cc&#34; &#34;dd&#34; &#34;ee&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果想知道一个向量内有多少个成员，可以使用函数 &lt;code&gt;length&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;length(c(&#34;aa&#34;, &#34;bb&#34;, &#34;cc&#34;, &#34;dd&#34;, &#34;ee&#34;))
[1] 5
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;合并向量&lt;/h3&gt;
&lt;p&gt;如果要合并两个向量，可以使用函数 &lt;code&gt;c&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;n = c(2, 3, 5)
s = c(&#34;aa&#34;, &#34;bb&#34;, &#34;cc&#34;, &#34;dd&#34;, &#34;ee&#34;)
c(n, s)
[1] &#34;2&#34;  &#34;3&#34;  &#34;5&#34;  &#34;aa&#34; &#34;bb&#34; &#34;cc&#34; &#34;dd&#34; &#34;ee&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意在上面的例子中，如果合并两个不同数据类型的向量，那合并后的类型将会是向下兼容的（即将比较严格的类型，进行强制类型转换为比较宽松的类型，例如将数值型变成字符型）&lt;/p&gt;
&lt;h3&gt;向量基本运算&lt;/h3&gt;
&lt;p&gt;我们先假定两个向量 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;b&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a = c(1, 3, 5, 7)
b = c(1, 2, 4, 8)
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下就是向量的基本运算：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a + b
[1] 2 5 9 15&lt;/p&gt;
&lt;p&gt;a - b
[1] 0 1 1 -1&lt;/p&gt;
&lt;p&gt;5 * a
[1] 5 15 25 35&lt;/p&gt;
&lt;p&gt;a * b
[1] 1 6 20 56&lt;/p&gt;
&lt;p&gt;a / b
[1] 1.000 1.500 1.250 0.875
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果相加的两个向量成员数量不一致，那么结果将会向下兼容，即输出变量的长度取决于较长的那个：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;u = c(10, 20, 30)
v = c(1, 2, 3, 4, 5, 6, 7, 8, 9)
u + v
[1] 11 22 33 14 25 36 17 28 39
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;检索向量&lt;/h3&gt;
&lt;p&gt;如果要从向量中取出成员，可以使用在 &lt;code&gt;[ ]&lt;/code&gt; 中声明索引的方法，也就是 &lt;code&gt;[第几个成员]&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;s = c(&#34;aa&#34;, &#34;bb&#34;, &#34;cc&#34;, &#34;dd&#34;, &#34;ee&#34;)
s[3]  # 取出第三个成员的值并输出
[1] &#34;cc&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果索引前加一个负号，比如 &lt;code&gt;[-3]&lt;/code&gt;，就意味着取出除第三个成员外的其他成员：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;s[-3]
[1] &#34;aa&#34; &#34;bb&#34; &#34;dd&#34; &#34;ee&#34;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果索引超出了向量的长度，那就会报错：&lt;/p&gt;
&lt;p&gt;```r&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;s[10]
[1] NA
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;【更新中】&lt;/p&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E4%BD%BF%E7%94%A8R%E8%AF%AD%E8%A8%80%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E4%BD%BF%E7%94%A8R%E8%AF%AD%E8%A8%80%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</guid>
      
    </item>
    
    <item>
      <title>前端开发 - 环境搭建</title>
      
      
      
      
      <description>&lt;h2&gt;编辑器&lt;/h2&gt;
&lt;p&gt;编辑器我用的是 VS Code，推荐一些扩展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&#34;&gt;Live Server&lt;/a&gt; - 实时重载静态和动态页面（甚至支持 PHP）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      
    </item>
    
    <item>
      <title>双系统极简安装指南</title>
      
      
      
      
      <description>&lt;h2&gt;下载 Ubuntu 系统镜像&lt;/h2&gt;
&lt;p&gt;直接前往 &lt;a href=&#34;https://cn.ubuntu.com/download&#34;&gt;https://cn.ubuntu.com/download&lt;/a&gt; 下载所需镜像。&lt;br&gt;
一般我们下载 LTS 版本（长期支持版），相对稳定。&lt;/p&gt;
&lt;h2&gt;制作启动 U 盘&lt;/h2&gt;
&lt;p&gt;下载启动盘制作工具：&lt;a href=&#34;http://rufus.ie/&#34;&gt;&lt;strong&gt;Rufus&lt;/strong&gt;&lt;/a&gt;，准备一个容量 4GB 及以上的 U 盘。&lt;/p&gt;
&lt;p&gt;选择启动 U 盘及要烧录的镜像，其他配置按照下图选择：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210323163003.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果有后续弹出的步骤，按默认选择就行。&lt;/p&gt;
&lt;h2&gt;分磁盘空间给 Ubuntu&lt;/h2&gt;
&lt;p&gt;右键 &lt;code&gt;此电脑&lt;/code&gt; - &lt;code&gt;管理&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210323163446.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择需要分出空间给 Ubuntu 的磁盘，鼠标右键后选择 &lt;code&gt;压缩卷&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://wiki-media-1253965369.cos.ap-guangzhou.myqcloud.com/img/20210323164043.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般来说，我们分 50 GB ~ 100 GB 容量给 Ubuntu 就够了，换算为 MB 就是 56325 MB ~ 102400 MB。在 &lt;code&gt;输入压缩空间量&lt;/code&gt; 内填入设定的容量，点击确定，分出来的空间会呈现黑色，并显示状态为 &lt;code&gt;未分配&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;安装系统&lt;/h2&gt;
&lt;p&gt;插入 U 盘并重启，在启动期间进入 BIOS（各品牌电脑进入 BIOS 的操作不一样，例如我的是按 &lt;code&gt;F12&lt;/code&gt;），选择 &lt;code&gt;安装 Ubuntu&lt;/code&gt; 选项。&lt;/p&gt;
&lt;p&gt;建议在安装过程中不联网，取消勾选 &lt;code&gt;安装 Ubuntu 时下载更新&lt;/code&gt;，等系统安装完成后再更新，避免拖慢安装进度。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;安装类型&lt;/code&gt; 页面，选择 &lt;code&gt;其他选项&lt;/code&gt;，接下来选择 &lt;code&gt;空闲&lt;/code&gt; 且空间最大的磁盘，点击 &lt;code&gt;+&lt;/code&gt; 创建分区。&lt;/p&gt;
&lt;p&gt;我们首先创建 /boot 分区。/boot 分区用于存放系统内核，一般给预留 1 GB 以上空间。所以我们在 &lt;code&gt;大小&lt;/code&gt; 一栏填入 &lt;code&gt;1024&lt;/code&gt; MB，&lt;code&gt;挂载点&lt;/code&gt; 内填写 &lt;code&gt;/boot&lt;/code&gt;，点击确定。&lt;/p&gt;
&lt;p&gt;接下来创建 &lt;code&gt;/&lt;/code&gt; 分区。跟上面一样，先选择空闲磁盘，创建分区，大小默认为剩下空间即可，&lt;code&gt;挂载点&lt;/code&gt; 填写 &lt;code&gt;/&lt;/code&gt;，点击确定。&lt;/p&gt;
&lt;p&gt;接下来最重要的一步，在 &lt;code&gt;安装启动引导器的设备&lt;/code&gt; 内选择 &lt;code&gt;/boot&lt;/code&gt; 分区对应的设备。这样 Windows 和 Ubuntu 的启动引导就互不冲突了。&lt;/p&gt;
&lt;p&gt;接下来选择时区，默认即可。在 &lt;code&gt;您是谁&lt;/code&gt; 的页面，设置个人信息，注意用户名和密码尽量设置得比较简单。&lt;/p&gt;
&lt;p&gt;拔掉U盘后重启，进入 BIOS 并选择 Ubuntu 启动。&lt;/p&gt;
&lt;p&gt;安装完成后的操作，可以参考 &lt;a href=&#34;https://wiki-power.com/Ubuntu%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0&#34;&gt;&lt;strong&gt;Ubuntu 配置笔记&lt;/strong&gt;&lt;/a&gt; 这篇文章。&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://regulus.cc/2019/10/05/Windows10+Ubuntu18.04%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85%E6%8C%87%E5%8C%97/&#34;&gt;Windows10+Ubuntu18.04 双系统快速简单安装指北&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%9E%81%E7%AE%80%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%9E%81%E7%AE%80%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</guid>
      
    </item>
    
    <item>
      <title>机器视觉入门</title>
      
      
      
      
      <description>&lt;h2&gt;环境配置&lt;/h2&gt;
&lt;p&gt;首先，我们需要安装相关的软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;：下载 Python 最新版本。在安装的时候要注意勾选 &lt;code&gt;安装到 path&lt;/code&gt; 选项，这样可以省去环境的配置&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/a&gt;：下载 VS Code，可跳转文章 &lt;a href=&#34;https://wiki-power.com/VSCode%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8C%87%E5%8D%97-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&#34;&gt;&lt;strong&gt;VS Code 生产力指南 - 环境配置&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-python.python&#34;&gt;&lt;strong&gt;Python 插件&lt;/strong&gt;&lt;/a&gt;：VS Code 插件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来安装包文件。我们在 VS Code 点击菜单栏 &lt;code&gt;查看&lt;/code&gt; - &lt;code&gt;终端&lt;/code&gt;，调出终端，输入以下命令：&lt;/p&gt;
&lt;p&gt;安装 opencv-contrib-python：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install opencv-contrib-python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 Matplotlib：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install matplotlib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 scikit-image：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install scikit-image&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 dlib。因为直接安装会出错，我们需要先下载 .whl 文件：&lt;a href=&#34;https://cdn.jsdelivr.net/gh/linyuxuanlin/File-host/software-development/dlib-19.21.1-cp39-cp39-win_amd64.whl&#34;&gt;&lt;strong&gt;下载链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;切换到文件所在的目录，运行命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install dlib-19.21.1-cp39-cp39-win_amd64.whl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 face-recognition：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install face-recognition&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 cvlib：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install cvlib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 keras：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install keras&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 tensorflow：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install tensorflow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果上一条命令出错，可以试试这条的命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python -m pip install --upgrade https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.12.0-py3-none-any.whl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 flask：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
pip install flask&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;至此，机器视觉相关的环境就配置好了。&lt;/p&gt;
&lt;h2&gt;注意事项&lt;/h2&gt;
&lt;p&gt;解决相对路径报错的问题，加上以下语句：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
import os
dirname, filename = os.path.split(os.path.abspath( __file__))
os.chdir(dirname)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/linyuxuanlin/Learning_OpenCV4_with_Python&#34;&gt;linyuxuanlin/Learning_OpenCV4_with_Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PacktPublishing/Mastering-OpenCV-4-with-Python&#34;&gt;PacktPublishing/Mastering-OpenCV-4-with-Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E5%85%A5%E9%97%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E5%85%A5%E9%97%A8/</guid>
      
    </item>
    
    <item>
      <title>网页版串口助手的开发</title>
      
      
      
      
      <description>&lt;p&gt;Demo：&lt;strong&gt;&lt;a href=&#34;https://serial.wiki-power.com/&#34;&gt;https://serial.wiki-power.com/&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
项目仓库：&lt;a href=&#34;https://github.com/linyuxuanlin/Serial_on_Web&#34;&gt;&lt;strong&gt;linyuxuanlin/Serial_on_Web&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本项目是在 &lt;a href=&#34;https://github.com/rafaelaroca/web-serial-terminal&#34;&gt;&lt;strong&gt;web-serial-terminal&lt;/strong&gt;&lt;/a&gt; 的基础上增添 &lt;a href=&#34;https://github.com/inorganik/debugout.js&#34;&gt;&lt;strong&gt;debugout.js&lt;/strong&gt;&lt;/a&gt;，实现打印日志及导出的功能。以下是详细的步骤：&lt;/p&gt;
&lt;h3&gt;添加 &lt;code&gt;debug.js&lt;/code&gt; 代码&lt;/h3&gt;
&lt;p&gt;```js
// save all the console.logs
function debugout() {
  var self = this;&lt;/p&gt;
&lt;p&gt;// OPTIONS
  self.realTimeLoggingOn = true; // log in real time (forwards to console.log)
  self.useTimestamps = false; // insert a timestamp in front of each log
  self.useLocalStorage = false; // store the output using window.localStorage() and continuously add to the same log each session
  self.recordLogs = true; // set to false after you&#39;re done debugging to avoid the log eating up memory
  self.autoTrim = true; // to avoid the log eating up potentially endless memory
  self.maxLines = 2500; // if autoTrim is true, this many most recent lines are saved
  self.tailNumLines = 100; // how many lines tail() will retrieve
  self.logFilename = &#34;log.txt&#34;; // filename of log downloaded with downloadLog()
  self.maxDepth = 25; // max recursion depth for logged objects&lt;/p&gt;
&lt;p&gt;// vars
  self.depth = 0;
  self.parentSizes = [0];
  self.currentResult = &#34;&#34;;
  self.startTime = new Date();
  self.output = &#34;&#34;;&lt;/p&gt;
&lt;p&gt;this.version = function () {
    return &#34;0.5.0&#34;;
  };&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;
        USER METHODS
    &lt;/em&gt;/
  this.getLog = function () {
    var retrievalTime = new Date();
    // if recording is off, so dev knows why they don&#39;t have any logs
    if (!self.recordLogs) {
      self.log(&#34;[debugout.js] log recording is off.&#34;);
    }
    // if using local storage, get values
    if (self.useLocalStorage) {
      var saved = window.localStorage.getItem(&#34;debugout.js&#34;);
      if (saved) {
        saved = JSON.parse(saved);
        self.startTime = new Date(saved.startTime);
        self.output = saved.log;
        retrievalTime = new Date(saved.lastLog);
      }
    }
    return (
      self.output +
      &#34;\n---- Log retrieved: &#34; +
      retrievalTime +
      &#34; ----\n&#34; +
      self.formatSessionDuration(self.startTime, retrievalTime)
    );
  };
  // accepts optional number or uses the default for number of lines
  this.tail = function (numLines) {
    var numLines = numLines || self.tailLines;
    return self.trimLog(self.getLog(), numLines);
  };
  // accepts a string to search for
  this.search = function (string) {
    var lines = self.output.split(&#34;\n&#34;);
    var rgx = new RegExp(string);
    var matched = [];
    // can&#39;t use a simple Array.prototype.filter() here
    // because we need to add the line number
    for (var i = 0; i &amp;lt; lines.length; i++) {
      var addr = &#34;[&#34; + i + &#34;] &#34;;
      if (lines[i].match(rgx)) {
        matched.push(addr + lines[i]);
      }
    }
    var result = matched.join(&#34;\n&#34;);
    if (result.length == 0) result = &#39;Nothing found for &#34;&#39; + string + &#39;&#34;.&#39;;
    return result;
  };
  // accepts the starting line and how many lines after the starting line you want
  this.getSlice = function (lineNumber, numLines) {
    var lines = self.output.split(&#34;\n&#34;);
    var segment = lines.slice(lineNumber, lineNumber + numLines);
    return segment.join(&#34;\n&#34;);
  };
  // immediately downloads the log - for desktop browser use
  this.downloadLog = function () {
    var file = &#34;data:text/plain;charset=utf-8,&#34;;
    var logFile = self.getLog();
    var encoded = encodeURIComponent(logFile);
    file += encoded;
    var a = document.createElement(&#34;a&#34;);
    a.href = file;
    a.target = &#34;_blank&#34;;
    a.download = self.logFilename;
    document.body.appendChild(a);
    a.click();
    a.remove();
  };
  // clears the log
  this.clear = function () {
    var clearTime = new Date();
    self.output = &#34;---- Log cleared: &#34; + clearTime + &#34; ----\n&#34;;
    if (self.useLocalStorage) {
      // local storage
      var saveObject = {
        startTime: self.startTime,
        log: self.output,
        lastLog: clearTime,
      };
      saveObject = JSON.stringify(saveObject);
      window.localStorage.setItem(&#34;debugout.js&#34;, saveObject);
    }
    if (self.realTimeLoggingOn) console.log(&#34;[debugout.js] clear()&#34;);
  };
  // records a log
  this.log = function (obj) {
    // log in real time
    if (self.realTimeLoggingOn) console.log(obj);
    // record log
    var type = self.determineType(obj);
    if (type != null &amp;amp;&amp;amp; self.recordLogs) {
      var addition = self.formatType(type, obj);
      // timestamp, formatted for brevity
      if (self.useTimestamps) {
        var logTime = new Date();
        self.output += self.formatTimestamp(logTime);
      }
      self.output += addition;
      if (self.autoTrim) self.output = self.trimLog(self.output, self.maxLines);
      // local storage
      if (self.useLocalStorage) {
        var last = new Date();
        var saveObject = {
          startTime: self.startTime,
          log: self.output,
          lastLog: last,
        };
        saveObject = JSON.stringify(saveObject);
        window.localStorage.setItem(&#34;debugout.js&#34;, saveObject);
      }
    }
    self.depth = 0;
    self.parentSizes = [0];
    self.currentResult = &#34;&#34;;
  };
  /&lt;em&gt;
        METHODS FOR CONSTRUCTING THE LOG
    &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;// like typeof but classifies objects of type &#39;object&#39;
  // kept separate from formatType() so you can use at your convenience!
  this.determineType = function (object) {
    if (object != null) {
      var typeResult;
      var type = typeof object;
      if (type == &#34;object&#34;) {
        var len = object.length;
        if (len == null) {
          if (typeof object.getTime == &#34;function&#34;) {
            typeResult = &#34;Date&#34;;
          } else if (typeof object.test == &#34;function&#34;) {
            typeResult = &#34;RegExp&#34;;
          } else {
            typeResult = &#34;Object&#34;;
          }
        } else {
          typeResult = &#34;Array&#34;;
        }
      } else {
        typeResult = type;
      }
      return typeResult;
    } else {
      return null;
    }
  };
  // format type accordingly, recursively if necessary
  this.formatType = function (type, obj) {
    if (self.maxDepth &amp;amp;&amp;amp; self.depth &amp;gt;= self.maxDepth) {
      return &#34;... (max-depth reached)&#34;;
    }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;switch (type) {
  case &#34;Object&#34;:
    self.currentResult += &#34;{\n&#34;;
    self.depth++;
    self.parentSizes.push(self.objectSize(obj));
    var i = 0;
    for (var prop in obj) {
      self.currentResult += self.indentsForDepth(self.depth);
      self.currentResult += prop + &#34;: &#34;;
      var subtype = self.determineType(obj[prop]);
      var subresult = self.formatType(subtype, obj[prop]);
      if (subresult) {
        self.currentResult += subresult;
        if (i != self.parentSizes[self.depth] - 1)
          self.currentResult += &#34;,&#34;;
        self.currentResult += &#34;\n&#34;;
      } else {
        if (i != self.parentSizes[self.depth] - 1)
          self.currentResult += &#34;,&#34;;
        self.currentResult += &#34;\n&#34;;
      }
      i++;
    }
    self.depth--;
    self.parentSizes.pop();
    self.currentResult += self.indentsForDepth(self.depth);
    self.currentResult += &#34;}&#34;;
    if (self.depth == 0) return self.currentResult;
    break;
  case &#34;Array&#34;:
    self.currentResult += &#34;[&#34;;
    self.depth++;
    self.parentSizes.push(obj.length);
    for (var i = 0; i &amp;lt; obj.length; i++) {
      var subtype = self.determineType(obj[i]);
      if (subtype == &#34;Object&#34; || subtype == &#34;Array&#34;)
        self.currentResult += &#34;\n&#34; + self.indentsForDepth(self.depth);
      var subresult = self.formatType(subtype, obj[i]);
      if (subresult) {
        self.currentResult += subresult;
        if (i != self.parentSizes[self.depth] - 1)
          self.currentResult += &#34;, &#34;;
        if (subtype == &#34;Array&#34;) self.currentResult += &#34;\n&#34;;
      } else {
        if (i != self.parentSizes[self.depth] - 1)
          self.currentResult += &#34;, &#34;;
        if (subtype != &#34;Object&#34;) self.currentResult += &#34;\n&#34;;
        else if (i == self.parentSizes[self.depth] - 1)
          self.currentResult += &#34;\n&#34;;
      }
    }
    self.depth--;
    self.parentSizes.pop();
    self.currentResult += &#34;]&#34;;
    if (self.depth == 0) return self.currentResult;
    break;
  case &#34;function&#34;:
    obj += &#34;&#34;;
    var lines = obj.split(&#34;\n&#34;);
    for (var i = 0; i &amp;lt; lines.length; i++) {
      if (lines[i].match(/\}/)) self.depth--;
      self.currentResult += self.indentsForDepth(self.depth);
      if (lines[i].match(/\{/)) self.depth++;
      self.currentResult += lines[i] + &#34;\n&#34;;
    }
    return self.currentResult;
    break;
  case &#34;RegExp&#34;:
    return &#34;/&#34; + obj.source + &#34;/&#34;;
    break;
  case &#34;Date&#34;:
  case &#34;string&#34;:
    if (self.depth &amp;gt; 0 || obj.length == 0) {
      return &#39;&#34;&#39; + obj + &#39;&#34;&#39;;
    } else {
      return obj;
    }
  case &#34;boolean&#34;:
    if (obj) return &#34;true&#34;;
    else return &#34;false&#34;;
  case &#34;number&#34;:
    return obj + &#34;&#34;;
    break;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;};
  this.indentsForDepth = function (depth) {
    var str = &#34;&#34;;
    for (var i = 0; i &amp;lt; depth; i++) {
      str += &#34;\t&#34;;
    }
    return str;
  };
  this.trimLog = function (log, maxLines) {
    var lines = log.split(&#34;\n&#34;);
    if (lines.length &amp;gt; maxLines) {
      lines = lines.slice(lines.length - maxLines);
    }
    return lines.join(&#34;\n&#34;);
  };
  this.lines = function () {
    return self.output.split(&#34;\n&#34;).length;
  };
  // calculate testing time
  this.formatSessionDuration = function (startTime, endTime) {
    var msec = endTime - startTime;
    var hh = Math.floor(msec / 1000 / 60 / 60);
    var hrs = (&#34;0&#34; + hh).slice(-2);
    msec -= hh * 1000 * 60 * 60;
    var mm = Math.floor(msec / 1000 / 60);
    var mins = (&#34;0&#34; + mm).slice(-2);
    msec -= mm * 1000 * 60;
    var ss = Math.floor(msec / 1000);
    var secs = (&#34;0&#34; + ss).slice(-2);
    msec -= ss * 1000;
    return &#34;---- Session duration: &#34; + hrs + &#34;:&#34; + mins + &#34;:&#34; + secs + &#34; ----&#34;;
  };
  this.formatTimestamp = function (timestamp) {
    var year = timestamp.getFullYear();
    var date = timestamp.getDate();
    var month = (&#34;0&#34; + (timestamp.getMonth() + 1)).slice(-2);
    var hrs = Number(timestamp.getHours());
    var mins = (&#34;0&#34; + timestamp.getMinutes()).slice(-2);
    var secs = (&#34;0&#34; + timestamp.getSeconds()).slice(-2);
    return (
      &#34;[&#34; +
      year +
      &#34;-&#34; +
      month +
      &#34;-&#34; +
      date +
      &#34; &#34; +
      hrs +
      &#34;:&#34; +
      mins +
      &#34;:&#34; +
      secs +
      &#34;]: &#34;
    );
  };
  this.objectSize = function (obj) {
    var size = 0,
      key;
    for (key in obj) {
      if (obj.hasOwnProperty(key)) size++;
    }
    return size;
  };&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;
        START/RESUME LOG
    &lt;/em&gt;/
  if (self.useLocalStorage) {
    var saved = window.localStorage.getItem(&#34;debugout.js&#34;);
    if (saved) {
      saved = JSON.parse(saved);
      self.output = saved.log;
      var start = new Date(saved.startTime);
      var end = new Date(saved.lastLog);
      self.output += &#34;\n---- Session end: &#34; + saved.lastLog + &#34; ----\n&#34;;
      self.output += self.formatSessionDuration(start, end);
      self.output += &#34;\n\n&#34;;
    }
  }
  self.output += &#34;---- Session started: &#34; + self.startTime + &#34; ----\n\n&#34;;
}
```&lt;/p&gt;
&lt;h3&gt;添加下载日志的按钮&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;button id=&#34;SerialConnectButton&#34; type=&#34;button&#34; disabled&amp;gt;Connect&amp;lt;/button&amp;gt;&lt;/code&gt; 语句后加上：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
&amp;lt;button onclick=&#34;bugout.downloadLog();&#34;&amp;gt;下载日志&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;调用对象&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 中加入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
var bugout = new debugout();&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;输出日志&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;term.write(chunk);&lt;/code&gt; 后加入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
bugout.log(chunk);&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rafaelaroca/web-serial-terminal&#34;&gt;rafaelaroca/web-serial-terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/inorganik/debugout.js&#34;&gt;inorganik/debugout.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3school.com.cn/jsref/event_onclick.asp&#34;&gt;onclick 事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/simuhunluo/p/8109429.html&#34;&gt;js 如何读写 txt 文件？（曲线救国篇）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000009426931&#34;&gt;终于找到你！如何将前端 console.log 的日志保存成文件?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E7%BD%91%E9%A1%B5%E7%89%88%E4%B8%B2%E5%8F%A3%E5%8A%A9%E6%89%8B%E7%9A%84%E5%BC%80%E5%8F%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E7%BD%91%E9%A1%B5%E7%89%88%E4%B8%B2%E5%8F%A3%E5%8A%A9%E6%89%8B%E7%9A%84%E5%BC%80%E5%8F%91/</guid>
      
    </item>
    
    <item>
      <title>自适应网页设计</title>
      
      
      
      
      <description>&lt;h2&gt;思想&lt;/h2&gt;
&lt;p&gt;一次设计，普遍适用。&lt;/p&gt;
&lt;h2&gt;方法&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;允许网页宽度自动调整&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在网页代码头部加入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这行代码包含在自动生成的 HTML5 框架内。&lt;/p&gt;
&lt;h3&gt;不使用绝对宽度&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;width: xx%;&lt;/code&gt; 或 &lt;code&gt;width: auto;&lt;/code&gt; ，替代 &lt;code&gt;width: xxx px;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;使用相对大小的字体&lt;/h3&gt;
&lt;p&gt;指定字体大小为页面默认大小的 100%，即 16 像素：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;body { font: normal 100% Helvetica, Arial, sans-serif; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再指定 h1 大小为默认的 1.5 倍，即 24 像素：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;h1 { font-size: 1.5em; }&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;流动布局（fluid grid）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;各个区块的位置都是浮动的，而非固定不变的。&lt;/p&gt;
&lt;p&gt;```
.main {
    float: right;
    width: 70%;
}&lt;/p&gt;
&lt;p&gt;.leftBar {
    float: left;
    width: 25%;
}
```&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://designshack.net/articles/css/everything-you-never-knew-about-css-floats/&#34;&gt;float&lt;/a&gt; 的好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向 overflow（溢出），避免了水平滚动条的出现。&lt;/p&gt;
&lt;p&gt;尽量不要出现 &lt;strong&gt;绝对定位（position: absolute）&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;选择加载 CSS&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;如果屏幕宽度小于 400 像素（max-device-width: 400px），就加载 tinyScreen.css 文件&lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34;
　　　　media=&#34;screen and (max-device-width: 400px)&#34;
　　　　href=&#34;tinyScreen.css&#34; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果屏幕宽度在 400 像素到 600 像素之间，则加载 smallScreen.css 文件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34;
　　　　media=&#34;screen and (min-width: 400px) and (max-device-width: 600px)&#34;
　　　　href=&#34;smallScreen.css&#34; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;图片的自适应（fluid image）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;img { max-width: 100%;}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考与致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/05/responsive_web_design.html&#34;&gt;自适应网页设计（Responsive Web Design）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://wiki-power.com/&#34;&gt;https://wiki-power.com/&lt;/a&gt;&lt;br&gt;
本篇文章受 &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.zh&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt; 协议保护，转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <link>https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E8%87%AA%E9%80%82%E5%BA%94%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link>
      <pubDate>Mon, 29 May 2023 07:39:54 +0000</pubDate>
      <source url="https://b2.wangbin.org/feed_rss_updated.xml">Bin's Wiki</source>
      
      <guid isPermaLink="true">https://b2.wangbin.org/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E8%87%AA%E9%80%82%E5%BA%94%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/</guid>
      
    </item>
    
  </channel>
</rss>